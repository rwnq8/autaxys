{"mappings":"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,IAAI,CAAC8sE,iBAAiB;QACnC,MAAMv/D,QAAQ,IAAI,CAAC4+D,kBAAkB;QACrC,IAAInsE,KAAK9N,MAAM,IAAIqb,MAAMrb,MAAM,EAG7Bi5E,aAAa,IAAI,CAAC4C,SAAS,CAAC/tE,KAAKlL,MAAM,CAACyY;aAExC49D,aAAanrE,KAAK9N,MAAM,GAAG8N,OAAOuN;QAEpC49D,aAAa,IAAI,CAACplD,MAAM,CAAC7O,GAAG,GAAGi0D;QAE/B,OAAOA;IACT;IAMAuB,mBAAmB35E,KAAK,EAAE;QACxB,OAAO,AAAC22D,CAAAA,YAAY,IAAI,CAAC6kB,MAAM,EAAEx7E,SAAS,IAAI,CAACy7E,OAAM,AAANA,IAAW,IAAI,CAACC,WAAW;IAC5E;IAMA5iD,iBAAiBqhB,KAAK,EAAE;QACtB,MAAMogC,UAAU,IAAI,CAACxB,QAAQ;QAC7B,MAAM3+B,UAAU,IAAI,CAACG,kBAAkB,CAACJ,SAASogC,QAAQh6D,MAAM,GAAGg6D,QAAQ91D,GAAG;QAC7E,OAAOkyC,YAAY,IAAI,CAAC6kB,MAAM,EAAEphC,UAAU,IAAI,CAACshC,WAAW,GAAG,IAAI,CAACD,OAAO,EAAE;IAC7E;AACF;A,I,S,W,G,O,M,C;I,W;I,e;I,a;I,kB;I,mB;I,W;I,iB;A;AC3JaI,MAAAA,gBAAgB;IAC3Bz6B;IACAzxB;IACAmM;IACAlT;C;;;A;;;;;C;;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,uC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC;A,wC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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-c22072d8324109f1.js","main.ts","mvu1.ts","node_modules/graphology/dist/graphology.umd.min.js","node_modules/graphology/src/utils.js","node_modules/events/events.js","node_modules/obliterator/iterator.js","node_modules/obliterator/support.js","node_modules/obliterator/iter.js","node_modules/obliterator/take.js","node_modules/graphology/src/errors.js","node_modules/graphology/src/data.js","node_modules/graphology/src/attributes/nodes.js","node_modules/graphology/src/attributes/edges.js","node_modules/obliterator/chain.js","node_modules/graphology/src/iteration/edges.js","node_modules/graphology/src/iteration/neighbors.js","node_modules/graphology/src/iteration/adjacency.js","node_modules/graphology/src/serialization.js","node_modules/graphology/src/graph.js","node_modules/graphology/src/classes.js","precision.ts","node_modules/decimal.js/decimal.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/papaparse/papaparse.min.js","node_modules/chart.js/auto/auto.js","node_modules/chart.js/dist/chart.js","node_modules/chart.js/src/core/core.animator.js","node_modules/chart.js/src/core/core.animation.js","node_modules/chart.js/src/core/core.animations.js","node_modules/chart.js/src/core/core.datasetController.js","node_modules/chart.js/src/controllers/controller.bar.js","node_modules/chart.js/src/controllers/controller.bubble.js","node_modules/chart.js/src/controllers/controller.doughnut.js","node_modules/chart.js/src/controllers/controller.line.js","node_modules/chart.js/src/controllers/controller.polarArea.js","node_modules/chart.js/src/controllers/controller.pie.js","node_modules/chart.js/src/controllers/controller.radar.js","node_modules/chart.js/src/controllers/controller.scatter.js","node_modules/chart.js/src/core/core.adapters.ts","node_modules/chart.js/src/core/core.interaction.js","node_modules/chart.js/src/core/core.layouts.js","node_modules/chart.js/src/platform/platform.base.js","node_modules/chart.js/src/platform/platform.basic.js","node_modules/chart.js/src/platform/platform.dom.js","node_modules/chart.js/src/platform/index.js","node_modules/chart.js/src/core/core.element.ts","node_modules/chart.js/src/core/core.scale.autoskip.js","node_modules/chart.js/src/core/core.scale.js","node_modules/chart.js/src/core/core.typedRegistry.js","node_modules/chart.js/src/core/core.registry.js","node_modules/chart.js/src/core/core.plugins.js","node_modules/chart.js/src/core/core.config.js","node_modules/chart.js/src/core/core.controller.js","node_modules/chart.js/src/elements/element.arc.ts","node_modules/chart.js/src/elements/element.line.js","node_modules/chart.js/src/elements/element.point.ts","node_modules/chart.js/src/elements/element.bar.js","node_modules/chart.js/src/plugins/plugin.colors.ts","node_modules/chart.js/src/plugins/plugin.decimation.js","node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","node_modules/chart.js/src/plugins/plugin.filler/index.js","node_modules/chart.js/src/plugins/plugin.legend.js","node_modules/chart.js/src/plugins/plugin.title.js","node_modules/chart.js/src/plugins/plugin.subtitle.js","node_modules/chart.js/src/plugins/plugin.tooltip.js","node_modules/chart.js/src/scales/scale.category.js","node_modules/chart.js/src/scales/scale.linearbase.js","node_modules/chart.js/src/scales/scale.linear.js","node_modules/chart.js/src/scales/scale.logarithmic.js","node_modules/chart.js/src/scales/scale.radialLinear.js","node_modules/chart.js/src/scales/scale.time.js","node_modules/chart.js/src/scales/scale.timeseries.js","node_modules/chart.js/src/index.ts","node_modules/chart.js/dist/chunks/helpers.dataset.js","node_modules/chart.js/src/helpers/helpers.core.ts","node_modules/chart.js/src/helpers/helpers.math.ts","node_modules/chart.js/src/helpers/helpers.collection.ts","node_modules/chart.js/src/helpers/helpers.extras.ts","node_modules/chart.js/src/helpers/helpers.easing.ts","node_modules/chart.js/src/helpers/helpers.color.ts","node_modules/chart.js/src/core/core.animations.defaults.js","node_modules/chart.js/src/core/core.layouts.defaults.js","node_modules/chart.js/src/helpers/helpers.intl.ts","node_modules/chart.js/src/core/core.ticks.js","node_modules/chart.js/src/core/core.scale.defaults.js","node_modules/chart.js/src/core/core.defaults.js","node_modules/chart.js/src/helpers/helpers.canvas.ts","node_modules/chart.js/src/helpers/helpers.options.ts","node_modules/chart.js/src/helpers/helpers.config.ts","node_modules/chart.js/src/helpers/helpers.curve.ts","node_modules/chart.js/src/helpers/helpers.dom.ts","node_modules/chart.js/src/helpers/helpers.interpolation.ts","node_modules/chart.js/src/helpers/helpers.rtl.ts","node_modules/chart.js/src/helpers/helpers.segment.js","node_modules/chart.js/src/helpers/helpers.dataset.ts","node_modules/@kurkle/color/dist/color.esm.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SERVER_PORT = 1234;var HMR_SECURE = false;var HMR_ENV_HASH = \"439701173a9199ea\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"26b064e28ed14f75\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_SERVER_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_SERVER_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */,\n  disposedAssets /*: {|[string]: boolean|} */,\n  assetsToDispose /*: Array<[ParcelRequire, string]> */,\n  assetsToAccept /*: Array<[ParcelRequire, string]> */,\n  bundleNotFound = false;\nfunction getHostname() {\n  return HMR_HOST || (typeof location !== 'undefined' && location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || (typeof location !== 'undefined' ? location.port : HMR_SERVER_PORT);\n}\n\n// eslint-disable-next-line no-redeclare\nlet WebSocket = globalThis.WebSocket;\nif (!WebSocket && typeof module.bundle.root === 'function') {\n  try {\n    // eslint-disable-next-line no-global-assign\n    WebSocket = module.bundle.root('ws');\n  } catch {\n    // ignore.\n  }\n}\nvar hostname = getHostname();\nvar port = getPort();\nvar protocol = HMR_SECURE || typeof location !== 'undefined' && location.protocol === 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif (!parent || !parent.isParcelRequire) {\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      // If we're running in the dev server's node runner, listen for messages on the parent port.\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.on('message', async message => {\n          try {\n            await handleMessage(message);\n            parentPort.postMessage('updated');\n          } catch {\n            parentPort.postMessage('restart');\n          }\n        });\n\n        // After the bundle has finished running, notify the dev server that the HMR update is complete.\n        queueMicrotask(() => parentPort.postMessage('ready'));\n      }\n    } catch {\n      if (typeof WebSocket !== 'undefined') {\n        try {\n          ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n        } catch (err) {\n          // Ignore cloudflare workers error.\n          if (err.message && !err.message.includes('Disallowed operation called within global scope')) {\n            console.error(err.message);\n          }\n        }\n      }\n    }\n  }\n  if (ws) {\n    // $FlowFixMe\n    ws.onmessage = async function (event /*: {data: string, ...} */) {\n      var data /*: HMRMessage */ = JSON.parse(event.data);\n      await handleMessage(data);\n    };\n    if (ws instanceof WebSocket) {\n      ws.onerror = function (e) {\n        if (e.message) {\n          console.error(e.message);\n        }\n      };\n      ws.onclose = function () {\n        console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n      };\n    }\n  }\n}\nasync function handleMessage(data /*: HMRMessage */) {\n  checkedAssets = {} /*: {|[string]: boolean|} */;\n  disposedAssets = {} /*: {|[string]: boolean|} */;\n  assetsToAccept = [];\n  assetsToDispose = [];\n  bundleNotFound = false;\n  if (data.type === 'reload') {\n    fullReload();\n  } else if (data.type === 'update') {\n    // Remove error overlay if there is one\n    if (typeof document !== 'undefined') {\n      removeErrorOverlay();\n    }\n    let assets = data.assets;\n\n    // Handle HMR Update\n    let handled = assets.every(asset => {\n      return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n    });\n\n    // Dispatch a custom event in case a bundle was not found. This might mean\n    // an asset on the server changed and we should reload the page. This event\n    // gives the client an opportunity to refresh without losing state\n    // (e.g. via React Server Components). If e.preventDefault() is not called,\n    // we will trigger a full page reload.\n    if (handled && bundleNotFound && assets.some(a => a.envHash !== HMR_ENV_HASH) && typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n      handled = !window.dispatchEvent(new CustomEvent('parcelhmrreload', {\n        cancelable: true\n      }));\n    }\n    if (handled) {\n      console.clear();\n\n      // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n      if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n        window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n      }\n      await hmrApplyUpdates(assets);\n      hmrDisposeQueue();\n\n      // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n      let processedAssets = {};\n      for (let i = 0; i < assetsToAccept.length; i++) {\n        let id = assetsToAccept[i][1];\n        if (!processedAssets[id]) {\n          hmrAccept(assetsToAccept[i][0], id);\n          processedAssets[id] = true;\n        }\n      }\n    } else fullReload();\n  }\n  if (data.type === 'error') {\n    // Log parcel errors to console\n    for (let ansiDiagnostic of data.diagnostics.ansi) {\n      let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n      console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n    }\n    if (typeof document !== 'undefined') {\n      // Render the fancy html overlay\n      removeErrorOverlay();\n      var overlay = createErrorOverlay(data.diagnostics.html);\n      // $FlowFixMe\n      document.body.appendChild(overlay);\n    }\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"${protocol === 'wss' ? 'https' : 'http'}://${hostname}:${port}/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if (typeof location !== 'undefined' && 'reload' in location) {\n    location.reload();\n  } else if (typeof extCtx !== 'undefined' && extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  } else {\n    try {\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.postMessage('restart');\n      }\n    } catch (err) {\n      console.error('[parcel] ⚠️ An HMR update was not accepted. Please restart the process.');\n    }\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout || typeof document === 'undefined') {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    }\n\n    // Always traverse to the parent bundle, even if we already replaced the asset in this bundle.\n    // This is required in case modules are duplicated. We need to ensure all instances have the updated code.\n    if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  checkedAssets = {};\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else if (a !== null) {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      bundleNotFound = true;\n      return true;\n    }\n    return hmrAcceptCheckOne(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return null;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  if (!cached) {\n    return true;\n  }\n  assetsToDispose.push([bundle, id]);\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n  return false;\n}\nfunction hmrDisposeQueue() {\n  // Dispose all old assets.\n  for (let i = 0; i < assetsToDispose.length; i++) {\n    let id = assetsToDispose[i][1];\n    if (!disposedAssets[id]) {\n      hmrDispose(assetsToDispose[i][0], id);\n      disposedAssets[id] = true;\n    }\n  }\n  assetsToDispose = [];\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    let assetsToAlsoAccept = [];\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      let additionalAssets = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (Array.isArray(additionalAssets) && additionalAssets.length) {\n        assetsToAlsoAccept.push(...additionalAssets);\n      }\n    });\n    if (assetsToAlsoAccept.length) {\n      let handled = assetsToAlsoAccept.every(function (a) {\n        return hmrAcceptCheck(a[0], a[1]);\n      });\n      if (!handled) {\n        return fullReload();\n      }\n      hmrDisposeQueue();\n    }\n  }\n}","import { MVU1_Simulator, SimConfig, LogEntry, PatternDescriptor, S_Level, ProtoType } from './mvu1';\nimport Papa from 'papaparse';\nimport Chart from 'chart.js/auto';\n\n// --- Scientific Analysis Parameters ---\nconst BATCH_INCREMENT_SIZE = 10;\nconst MIN_TOTAL_RUNS = 30;\nconst CONFIDENCE_THRESHOLD = 0.05;\nconst MAX_TOTAL_RUNS = 200;\n\n// --- Global State ---\nlet analysisIsRunning = false;\nlet batchPlotChart: Chart | null = null;\nlet allRawLogs: any[][] = [];\nlet allRunsData: { log: LogEntry[], graph: any }[] = [];\n\n// --- UI Element References ---\nconst uiElements = {\n    startFullAnalysisButton: null as HTMLButtonElement | null,\n    stopFullAnalysisButton: null as HTMLButtonElement | null,\n    fullAnalysisStatus: null as HTMLElement | null,\n    resultsContainer: null as HTMLElement | null,\n    deterministicLogOutput: null as HTMLElement | null,\n    batchAnalysisText: null as HTMLElement | null,\n    batchPlotCanvas: null as HTMLCanvasElement | null,\n    downloadAllDataButton: null as HTMLButtonElement | null,\n    batchStatusLine: null as HTMLElement | null,\n};\n\nfunction initializeUIElements() {\n    uiElements.startFullAnalysisButton = document.getElementById('start-full-analysis-button') as HTMLButtonElement;\n    uiElements.stopFullAnalysisButton = document.getElementById('stop-full-analysis-button') as HTMLButtonElement;\n    uiElements.fullAnalysisStatus = document.getElementById('full-analysis-status') as HTMLElement;\n    uiElements.resultsContainer = document.getElementById('results-container') as HTMLElement;\n    uiElements.deterministicLogOutput = document.getElementById('deterministic-log-output') as HTMLElement;\n    uiElements.batchAnalysisText = document.getElementById('batch-analysis-text') as HTMLElement;\n    uiElements.batchPlotCanvas = document.getElementById('batch-plot-canvas') as HTMLCanvasElement;\n    uiElements.downloadAllDataButton = document.getElementById('download-all-data-button') as HTMLButtonElement;\n    uiElements.batchStatusLine = document.getElementById('batch-status-line') as HTMLElement;\n\n    if (uiElements.startFullAnalysisButton) uiElements.startFullAnalysisButton.addEventListener('click', handleStartFullAnalysis);\n    if (uiElements.stopFullAnalysisButton) uiElements.stopFullAnalysisButton.addEventListener('click', handleStopFullAnalysis);\n}\n\nfunction cyrb53(str: string, seed = 0): number {\n    let h1 = 0xdeadbeef ^ seed, h2 = 0x41c6ce57 ^ seed;\n    for (let i = 0, ch; i < str.length; i++) {\n        ch = str.charCodeAt(i);\n        h1 = Math.imul(h1 ^ ch, 2654435761);\n        h2 = Math.imul(h2 ^ ch, 1597334677);\n    }\n    h1 = Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^ Math.imul(h2 ^ (h2 >>> 13), 3266489909);\n    h2 = Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^ Math.imul(h1 ^ (h1 >>> 13), 3266489909);\n    return 4294967296 * (2097151 & h2) + (h1 >>> 0);\n}\n\nfunction handleStopFullAnalysis() {\n    analysisIsRunning = false;\n    setControlsState(false);\n    if (uiElements.fullAnalysisStatus) uiElements.fullAnalysisStatus.textContent = \"Analysis stopped by user.\";\n}\n\nfunction setControlsState(running: boolean) {\n    if (uiElements.startFullAnalysisButton) uiElements.startFullAnalysisButton.disabled = running;\n    if (uiElements.stopFullAnalysisButton) uiElements.stopFullAnalysisButton.disabled = !running;\n}\n\nfunction updateLog(logArea: HTMLElement | null, message: string, isError: boolean = false) {\n    if (!logArea) return;\n    const timestamp = new Date().toLocaleTimeString();\n    logArea.innerHTML += `<div ${isError ? 'style=\"color: #ff7675;\"' : ''}>[${timestamp}] ${message}</div>`;\n    logArea.scrollTop = logArea.scrollHeight;\n}\n\nfunction resetUIForNewAnalysis() {\n    if (uiElements.resultsContainer) uiElements.resultsContainer.classList.add('hidden');\n    if (uiElements.deterministicLogOutput) uiElements.deterministicLogOutput.innerHTML = '';\n    if (uiElements.batchAnalysisText) uiElements.batchAnalysisText.innerHTML = '';\n    if (batchPlotChart) batchPlotChart.destroy();\n    batchPlotChart = null;\n    if (uiElements.downloadAllDataButton) uiElements.downloadAllDataButton.onclick = null;\n    allRawLogs = [];\n    allRunsData = [];\n}\n\nconst getMean = (arr: number[]) => arr.length > 0 ? arr.reduce((a, b) => a + b) / arr.length : 0;\nconst getStdDev = (arr: number[]) => {\n    if (arr.length < 2) return 0;\n    const mean = getMean(arr);\n    return Math.sqrt(getMean(arr.map(v => (v - mean) ** 2)));\n};\n\nfunction generateAnalysisText(finalLogs: LogEntry[], totalRuns: number): string {\n    const highestSLevel = Math.max(...finalLogs.map(d => d.s_level));\n    const meanFinalRobustness = getMean(finalLogs.map(d => d.robustness));\n    const meanFinalComplexity = getMean(finalLogs.map(d => d.complexity));\n\n    const finalGraphs = allRunsData.map(r => r.graph);\n    const typeCounts = finalGraphs.reduce((acc, g) => {\n        g.forEachNode((_n: any, attrs: any) => {\n            const typeName = ProtoType[attrs.protoType];\n            acc[typeName] = (acc[typeName] || 0) + 1;\n        });\n        return acc;\n    }, {} as {[key: string]: number});\n    const totalNodes = Object.values(typeCounts).reduce((a,b)=>a+b,0) || 1;\n    const typeDistribution = Object.entries(typeCounts).map(([type, count]) => `${type}: ${((count / totalNodes) * 100).toFixed(1)}%`).join(', ');\n\n    return `SCIENTIFIC ANALYSIS REPORT\n--------------------------------------------------\nMethodology:\n  - Model:                          Autaxys Generative Engine (S-Level Maximization, Law-Emergent)\n  - Halting Condition:              Natural stability (Stable State, Limit Cycle) or Pathological Failure.\n  - Batch Size:                     Dynamically determined by running increments of ${BATCH_INCREMENT_SIZE} until statistical confidence was met.\n  - Total Simulations Run:          ${totalRuns}\n\nKey Findings:\n  - Highest S-Level Achieved:       S${highestSLevel} (${S_Level[highestSLevel]})\n  - Mean Final Robustness (L_A):    ${meanFinalRobustness.toFixed(8)}\n  - Mean Final Complexity (C):      ${meanFinalComplexity.toFixed(2)}\n  - Emergent Particle Distribution: ${typeDistribution || 'N/A'}\n\nConclusion:\nThe system demonstrated a capacity to spontaneously organize from a true void. The highest level of ontological closure consistently achieved was S${highestSLevel}. The simulation showed the emergence of distinct particle proto-types and a primitive form of rule-based learning. This provides robust evidence that the principle of maximizing coherence can lead to the emergence of not just structure, but the very laws that govern that structure.\n--------------------------------------------------\nThe plot below visualizes the weighted average trajectory of system robustness (L_A), giving more significance to runs that achieved higher complexity and stability.`;\n}\n\nfunction renderBatchPlot(allRuns: { log: LogEntry[] }[]) {\n    if (batchPlotChart) batchPlotChart.destroy();\n    const ctx = uiElements.batchPlotCanvas?.getContext('2d');\n    if (!ctx) return;\n\n    const maxSteps = allRuns.reduce((max, run) => Math.max(max, run.log.length), 0);\n    const aggregatedData = [];\n\n    for (let step = 0; step < maxSteps; step++) {\n        let weightedSum = 0;\n        let totalWeight = 0;\n        const valuesAtStep: number[] = [];\n\n        for (const run of allRuns) {\n            const finalLog = run.log[run.log.length - 1];\n            const weight = finalLog.s_level * Math.log(Math.max(2, run.log.length));\n            const logEntry = (step < run.log.length) ? run.log[step] : finalLog;\n            const robustness = logEntry.robustness;\n            weightedSum += robustness * weight;\n            totalWeight += weight;\n            valuesAtStep.push(robustness);\n        }\n        \n        const mean = totalWeight > 0 ? weightedSum / totalWeight : 0;\n        aggregatedData.push({ step, mean_L_A: mean, std_dev_L_A: getStdDev(valuesAtStep) });\n    }\n    \n    batchPlotChart = new Chart(ctx, {\n        type: 'line',\n        data: {\n            labels: aggregatedData.map(d => d.step),\n            datasets: [\n                { label: 'Weighted Mean Robustness (L_A)', data: aggregatedData.map(d => d.mean_L_A), borderColor: 'blue', tension: 0.1, pointRadius: 0 },\n                {\n                    label: '1 Standard Deviation', data: aggregatedData.map(d => d.mean_L_A + d.std_dev_L_A),\n                    fill: '+1', backgroundColor: 'rgba(0, 0, 255, 0.15)',\n                    borderColor: 'transparent', pointRadius: 0,\n                },\n                {\n                    label: 'Lower Band', data: aggregatedData.map(d => d.mean_L_A - d.std_dev_L_A),\n                    fill: false, borderColor: 'transparent', pointRadius: 0\n                }\n            ]\n        },\n        options: {\n            responsive: true, maintainAspectRatio: true,\n            plugins: { legend: { labels: { filter: item => item.text !== 'Lower Band' } } },\n            scales: {\n                y: { beginAtZero: true, title: { display: true, text: 'System Robustness (L_A Proxy)' } },\n                x: { title: { display: true, text: 'Simulation Step' } }\n            }\n        }\n    });\n}\n\nasync function handleStartFullAnalysis() {\n    analysisIsRunning = true;\n    setControlsState(true);\n    resetUIForNewAnalysis();\n    if (uiElements.fullAnalysisStatus) uiElements.fullAnalysisStatus.textContent = \"Starting full analysis workflow...\";\n    if (uiElements.resultsContainer) uiElements.resultsContainer.classList.remove('hidden');\n\n    try {\n        if (uiElements.fullAnalysisStatus) uiElements.fullAnalysisStatus.textContent = \"Phase 1/2: Running Definitive Deterministic Simulation...\";\n        const deterministicSim = new MVU1_Simulator({ precision: 'high', tieBreaking: 'deterministic', seed: cyrb53('autaxys_max_seed') });\n        while (analysisIsRunning && deterministicSim.step()) {\n            const lastLog = deterministicSim.log[deterministicSim.log.length - 1];\n            updateLog(uiElements.deterministicLogOutput, `Step ${lastLog.step} | S-Level: ${lastLog.s_level} | Robustness: ${lastLog.robustness.toFixed(4)} | Complexity: ${lastLog.complexity} | Rule: ${lastLog.rule_applied}`);\n            await new Promise(resolve => setTimeout(resolve, 0));\n        }\n        updateLog(uiElements.deterministicLogOutput, `Deterministic run finished at step ${deterministicSim.step_counter}. Reason: ${deterministicSim.log[deterministicSim.log.length-1]?.halt_reason || 'Completed'}`);\n        allRawLogs.push(deterministicSim.log);\n\n        if (!analysisIsRunning) throw new Error(\"Analysis stopped by user.\");\n\n        if (uiElements.fullAnalysisStatus) uiElements.fullAnalysisStatus.textContent = \"Phase 2/2: Running Dynamic Scientific Batch Analysis...\";\n        \n        let totalRuns = 0;\n        let meanFinalSLevel = 0;\n        let confidenceInterval = Infinity;\n\n        while (analysisIsRunning && (totalRuns < MIN_TOTAL_RUNS || (confidenceInterval > CONFIDENCE_THRESHOLD * meanFinalSLevel && totalRuns < MAX_TOTAL_RUNS))) {\n            if (uiElements.batchStatusLine) uiElements.batchStatusLine.textContent = `Running batch ${Math.floor(totalRuns / BATCH_INCREMENT_SIZE) + 1}... (Total Runs: ${totalRuns}, Confidence Target: ${(CONFIDENCE_THRESHOLD * meanFinalSLevel).toFixed(3)})`;\n            \n            for (let i = 0; i < BATCH_INCREMENT_SIZE; i++) {\n                const simulator = new MVU1_Simulator({ precision: 'high', tieBreaking: 'stochastic', seed: Date.now() + totalRuns + i });\n                while (simulator.step());\n                allRunsData.push({ log: simulator.log, graph: simulator.graph });\n                allRawLogs.push(simulator.log);\n                totalRuns++;\n            }\n\n            const finalSLevels = allRunsData.map(run => run.log[run.log.length - 1].s_level);\n            meanFinalSLevel = getMean(finalSLevels);\n            const stdDevFinalSLevel = getStdDev(finalSLevels);\n            confidenceInterval = 1.96 * (stdDevFinalSLevel / Math.sqrt(totalRuns));\n        }\n\n        analysisIsRunning = false;\n        setControlsState(false);\n        if (uiElements.fullAnalysisStatus) uiElements.fullAnalysisStatus.textContent = `Full analysis complete.`;\n        if (uiElements.batchStatusLine) uiElements.batchStatusLine.textContent = `Batch analysis complete after ${totalRuns} runs.`;\n        \n        if (uiElements.downloadAllDataButton) {\n            const csvData = Papa.unparse(allRawLogs.flat());\n            const blob = new Blob([csvData], { type: 'text/csv;charset=utf-8;' });\n            const a = document.createElement('a');\n            a.href = URL.createObjectURL(blob);\n            a.download = `autaxys_max_raw_data.csv`;\n            a.click();\n        };\n\n        const finalLogs = allRunsData.map(r => r.log[r.log.length - 1]);\n        if (uiElements.batchAnalysisText) uiElements.batchAnalysisText.innerHTML = generateAnalysisText(finalLogs, totalRuns);\n        renderBatchPlot(allRunsData);\n\n    } catch (error) {\n        console.error(\"Critical error during analysis:\", error);\n        if (uiElements.fullAnalysisStatus) uiElements.fullAnalysisStatus.innerHTML = `<strong style=\"color: #c0392b;\">ANALYSIS FAILED:</strong> ${(error as Error).message}`;\n        setControlsState(false);\n        analysisIsRunning = false;\n    }\n}\n\ndocument.addEventListener('DOMContentLoaded', initializeUIElements);","import Graph from 'graphology';\nimport { PrecisionNumber, PrecisionMode } from './precision';\nimport dijkstra from 'graphology-shortest-path/dijkstra';\n\n/**\n * Defines the stability level (S-Level) of a pattern.\n */\nexport enum S_Level {\n    S0_Vacuum = 0,\n    S1_SimpleFixedPoint = 1,\n    S2_RecursiveStructure = 2,\n    S3_DynamicEquilibrium = 3,\n    S4_CompositeStability = 4,\n}\n\n/**\n * The fundamental \"flavors\" of matter that can emerge dynamically.\n */\nexport enum ProtoType {\n    Standard = 0,\n    Leptonic = 1,\n    Quarkic = 2,\n}\n\n/**\n * The Autaxic Quantum Numbers (AQNs) describing a pattern.\n */\nexport interface PatternDescriptor {\n    C: PrecisionNumber;\n    S: {\n        level: S_Level;\n        robustness: PrecisionNumber;\n    };\n}\n\n/** Represents a potential move and its resulting pattern descriptor. */\ntype Move = {\n    rule: string;\n    nodes?: string[];\n    descriptor: PatternDescriptor;\n};\n\n/** The attributes of a Distinction. */\ninterface DistinctionAttrs {\n    polarity: 1 | -1;\n    protoType: ProtoType;\n    valence: number;\n    stress: number;\n    sLevel: S_Level;\n}\n\n/** The attributes of a Relation. */\ninterface RelationAttrs {\n    cost: number;\n}\n\n/** Log entry for a single simulation step. */\nexport interface LogEntry {\n    step: number;\n    rule_applied: string;\n    s_level: S_Level;\n    robustness: number;\n    complexity: number;\n    halt_reason?: 'STABLE_STATE' | 'LIMIT_CYCLE' | 'UNBOUNDED_GROWTH';\n}\n\n/** Configuration for a single simulation run. */\nexport interface SimConfig {\n    precision: PrecisionMode;\n    tieBreaking: TieBreakingMode;\n    seed?: number;\n}\n\nexport class MVU1_Simulator {\n    public config: SimConfig;\n    public graph: Graph<DistinctionAttrs, RelationAttrs, {}>;\n    public log: LogEntry[] = [];\n    public step_counter = 0;\n    private lcg_seed: number;\n    private _next_node_id = 0;\n\n    private readonly UNBOUNDED_NODE_LIMIT = 2000;\n    private readonly LIMIT_CYCLE_HISTORY_WINDOW = 500;\n    private graph_state_history: Map<string, number> = new Map();\n\n    constructor(config: SimConfig) {\n        this.config = config;\n        this.graph = new Graph<DistinctionAttrs, RelationAttrs, {}>({ multi: false, allowSelfLoops: false });\n        this.lcg_seed = config.seed ?? Date.now();\n        this.logState(0, 'initial_state');\n    }\n\n    private random = (): number => {\n        this.lcg_seed = (this.lcg_seed * 1664525 + 1013904223) % 4294967296;\n        return this.lcg_seed / 4294967296;\n    };\n\n    private *_getCombinations<T>(array: T[], k: number): Generator<T[]> {\n        if (k === 0) { yield []; return; }\n        for (let i = 0; i <= array.length - k; i++) {\n            for (const combination of this._getCombinations(array.slice(i + 1), k - 1)) {\n                yield [array[i], ...combination];\n            }\n        }\n    }\n\n    private getGraphHash = (g: Graph<DistinctionAttrs, RelationAttrs, {}>): string => {\n        const nodes = g.nodes().sort((a, b) => parseInt(a.split('_')[1]) - parseInt(b.split('_')[1]))\n            .map(node => {\n                const attrs = g.getNodeAttributes(node);\n                return `${node}:${attrs.polarity}:${attrs.protoType}:${attrs.valence}:${attrs.stress.toFixed(2)}:${attrs.sLevel}`;\n            }).join('|');\n        const edges = g.edges().map(edge => g.extremities(edge).sort().join('->')).sort().join('|');\n        return `${nodes};${edges}`;\n    };\n\n    private calculatePatternDescriptor(g: Graph<DistinctionAttrs, RelationAttrs, {}>): PatternDescriptor {\n        const order = g.order;\n        const size = g.size;\n        const C = new PrecisionNumber(order + size, this.config.precision);\n\n        const bondedPairs = g.edges().reduce((acc, edge) => {\n            const [src, tgt] = g.extremities(edge);\n            if (g.getNodeAttribute(src, 'polarity') !== g.getNodeAttribute(tgt, 'polarity')) acc++;\n            return acc;\n        }, 0);\n        const robustness = (order > 0) ? PrecisionNumber.divide(bondedPairs, order + size, this.config.precision) : new PrecisionNumber(0, this.config.precision);\n\n        let maxSLevel: S_Level = S_Level.S0_Vacuum;\n        if (order > 0) maxSLevel = S_Level.S1_SimpleFixedPoint;\n        g.forEachNode((_node, attrs) => {\n            if (attrs.sLevel > maxSLevel) maxSLevel = attrs.sLevel;\n        });\n        if (this.graph_state_history.has(this.getGraphHash(g))) {\n            maxSLevel = Math.max(maxSLevel, S_Level.S3_DynamicEquilibrium) as S_Level;\n        }\n\n        return { C, S: { level: maxSLevel, robustness } };\n    }\n\n    public step(): boolean {\n        if (this.graph.order > this.UNBOUNDED_NODE_LIMIT) {\n            this.logState(this.step_counter, 'halt', 'UNBOUNDED_GROWTH');\n            return false;\n        }\n        const currentGraphHash = this.getGraphHash(this.graph);\n        if (this.graph_state_history.has(currentGraphHash)) {\n            this.logState(this.step_counter, 'halt', 'LIMIT_CYCLE');\n            return false;\n        }\n        this.graph_state_history.set(currentGraphHash, this.step_counter);\n        if (this.graph_state_history.size > this.LIMIT_CYCLE_HISTORY_WINDOW) {\n            this.graph_state_history.delete(this.graph_state_history.keys().next().value);\n        }\n\n        if (this.graph.order === 0) {\n            this.graph.addNode(`d_${this._next_node_id++}`, { polarity: (this.random() < 0.5) ? 1 : -1, protoType: ProtoType.Standard, valence: 0, stress: 0, sLevel: S_Level.S1_SimpleFixedPoint });\n            this.step_counter++;\n            this.logState(this.step_counter, 'genesis_ignition');\n            return true;\n        }\n\n        const currentDescriptor = this.calculatePatternDescriptor(this.graph);\n        const possibleFutures: { move: Move, resultingGraph: Graph }[] = [];\n\n        this.generateGenesisFutures(possibleFutures);\n        this.generateStructuralFutures(possibleFutures);\n        this.generateAdaptationFutures(possibleFutures);\n\n        if (possibleFutures.length === 0) {\n            this.logState(this.step_counter, 'halt', 'STABLE_STATE');\n            return false;\n        }\n\n        const chosenFuture = this.selectNextMove(possibleFutures, currentDescriptor);\n\n        if (!chosenFuture) {\n            this.logState(this.step_counter, 'halt', 'STABLE_STATE');\n            return false;\n        }\n\n        this.graph = chosenFuture.resultingGraph;\n\n        if (chosenFuture.move.rule === 'genesis') {\n            this._next_node_id++;\n        }\n\n        if (this.graph.order === 0) {\n            this._next_node_id = 0;\n            this.graph_state_history.clear();\n        }\n\n        this.step_counter++;\n        this.logState(this.step_counter, chosenFuture.move.rule);\n        return true;\n    }\n\n    private selectNextMove(possibleFutures: { move: Move, resultingGraph: Graph }[], currentDescriptor: PatternDescriptor): { move: Move, resultingGraph: Graph } | null {\n        let bestDescriptor = currentDescriptor;\n        let bestMoves: { move: Move, resultingGraph: Graph }[] = [];\n        let neutralMoves: { move: Move, resultingGraph: Graph }[] = [];\n\n        for (const future of possibleFutures) {\n            const futureDescriptor = future.move.descriptor;\n            const sLevelComparison = futureDescriptor.S.level - bestDescriptor.S.level;\n\n            if (sLevelComparison > 0) {\n                bestDescriptor = futureDescriptor;\n                bestMoves = [future];\n            } else if (sLevelComparison === 0) {\n                const robustnessComparison = futureDescriptor.S.robustness.compareTo(bestDescriptor.S.robustness);\n                if (robustnessComparison > 0) {\n                    bestDescriptor = futureDescriptor;\n                    bestMoves = [future];\n                } else if (robustnessComparison === 0) {\n                    if (futureDescriptor.C.compareTo(bestDescriptor.C) < 0) {\n                        bestDescriptor = futureDescriptor;\n                        bestMoves = [future];\n                    } else if (futureDescriptor.C.compareTo(bestDescriptor.C) === 0) {\n                        if (bestDescriptor === currentDescriptor) {\n                            neutralMoves.push(future);\n                        } else {\n                            bestMoves.push(future);\n                        }\n                    }\n                }\n            }\n        }\n\n        if (bestMoves.length > 0) {\n            return this.deterministicTieBreak(bestMoves);\n        }\n\n        const explorationPressure = 1.0 - (currentDescriptor.S.robustness.toNumber() * 0.5 + Math.min(1.0, currentDescriptor.C.toNumber() / 50) * 0.5);\n        if (this.random() < explorationPressure) {\n            const viableFutures = possibleFutures.filter(f => f.move.descriptor.S.robustness.toNumber() > 0 || f.move.rule === 'genesis');\n            if (viableFutures.length > 0) {\n                return viableFutures[Math.floor(this.random() * viableFutures.length)];\n            }\n        }\n\n        if (neutralMoves.length > 0) {\n            return this.deterministicTieBreak(neutralMoves);\n        }\n\n        return null;\n    }\n\n    private generateGenesisFutures(futures: { move: Move, resultingGraph: Graph }[]) {\n        const tempGraph = this.graph.copy();\n        const newType = this.random() < 0.8 ? ProtoType.Standard : ProtoType.Leptonic;\n        tempGraph.addNode(`d_${this._next_node_id}`, { polarity: (this.random() < 0.5) ? 1 : -1, protoType: newType, valence: 0, stress: 0, sLevel: S_Level.S1_SimpleFixedPoint });\n        futures.push({ move: { rule: 'genesis', descriptor: this.calculatePatternDescriptor(tempGraph) }, resultingGraph: tempGraph });\n    }\n\n    private generateStructuralFutures(futures: { move: Move, resultingGraph: Graph }[]) {\n        const nodes = this.graph.nodes();\n        const pos: string[] = [], neg: string[] = [];\n        nodes.forEach(node => this.graph.getNodeAttribute(node, 'polarity') === 1 ? pos.push(node) : neg.push(node));\n\n        for (const p of pos) {\n            for (const n of neg) {\n                const attrsP = this.graph.getNodeAttributes(p);\n                const attrsN = this.graph.getNodeAttributes(n);\n                if (!this.graph.hasEdge(p, n) && attrsP.valence > this.graph.degree(p) && attrsN.valence > this.graph.degree(n)) {\n                    const tempGraph = this.graph.copy();\n                    const cost = 1.0 + (attrsP.stress + attrsN.stress);\n                    tempGraph.addEdge(p, n, { cost });\n                    futures.push({ move: { rule: 'bonding', nodes: [p, n], descriptor: this.calculatePatternDescriptor(tempGraph) }, resultingGraph: tempGraph });\n                }\n            }\n        }\n\n        this.graph.forEachEdge((_e, _a, src, tgt) => {\n            if (this.graph.getNodeAttribute(src, 'polarity') !== this.graph.getNodeAttribute(tgt, 'polarity') && this.graph.degree(src) === 1 && this.graph.degree(tgt) === 1) {\n                const tempGraph = this.graph.copy();\n                tempGraph.dropNode(src);\n                tempGraph.dropNode(tgt);\n                futures.push({ move: { rule: 'annihilation', nodes: [src, tgt], descriptor: this.calculatePatternDescriptor(tempGraph) }, resultingGraph: tempGraph });\n            }\n        });\n    }\n\n    private generateAdaptationFutures(futures: { move: Move, resultingGraph: Graph }[]) {\n        this.graph.forEachNode((node, attrs) => {\n            if (this.graph.degree(node) === 0) {\n                const tempGraph = this.graph.copy();\n                tempGraph.setNodeAttribute(node, 'stress', attrs.stress + 0.1);\n                futures.push({ move: { rule: 'stress_increase', nodes: [node], descriptor: this.calculatePatternDescriptor(tempGraph) }, resultingGraph: tempGraph });\n            }\n            if (attrs.stress > 1.0 && attrs.valence === 0) {\n                const tempGraph = this.graph.copy();\n                tempGraph.setNodeAttribute(node, 'valence', 1);\n                tempGraph.setNodeAttribute(node, 'stress', 0);\n                futures.push({ move: { rule: 'valence_emergence', nodes: [node], descriptor: this.calculatePatternDescriptor(tempGraph) }, resultingGraph: tempGraph });\n            }\n        });\n    }\n\n    private deterministicTieBreak(futures: { move: Move, resultingGraph: Graph }[]): { move: Move, resultingGraph: Graph } {\n        return futures.sort((a, b) => {\n            const nodesA = (a.move.nodes || []).join('');\n            const nodesB = (b.move.nodes || []).join('');\n            if (nodesA < nodesB) return -1;\n            if (nodesA > nodesB) return 1;\n            return 0;\n        })[0];\n    }\n\n    private logState(step: number, rule: string, halt_reason?: LogEntry['halt_reason']): void {\n        const descriptor = this.calculatePatternDescriptor(this.graph);\n        this.log.push({\n            step,\n            rule_applied: rule,\n            s_level: descriptor.S.level,\n            robustness: descriptor.S.robustness.toNumber(),\n            complexity: descriptor.C.toNumber(),\n            halt_reason\n        });\n    }\n}",null,"/**\n * Graphology Utilities\n * =====================\n *\n * Collection of helpful functions used by the implementation.\n */\n\n/**\n * Object.assign-like polyfill.\n *\n * @param  {object} target       - First object.\n * @param  {object} [...objects] - Objects to merge.\n * @return {object}\n */\nfunction assignPolyfill() {\n  const target = arguments[0];\n\n  for (let i = 1, l = arguments.length; i < l; i++) {\n    if (!arguments[i]) continue;\n\n    for (const k in arguments[i]) target[k] = arguments[i][k];\n  }\n\n  return target;\n}\n\nlet assign = assignPolyfill;\n\nif (typeof Object.assign === 'function') assign = Object.assign;\n\nexport {assign};\n\n/**\n * Function returning the first matching edge for given path.\n * Note: this function does not check the existence of source & target. This\n * must be performed by the caller.\n *\n * @param  {Graph}  graph  - Target graph.\n * @param  {any}    source - Source node.\n * @param  {any}    target - Target node.\n * @param  {string} type   - Type of the edge (mixed, directed or undirected).\n * @return {string|null}\n */\nexport function getMatchingEdge(graph, source, target, type) {\n  const sourceData = graph._nodes.get(source);\n\n  let edge = null;\n\n  if (!sourceData) return edge;\n\n  if (type === 'mixed') {\n    edge =\n      (sourceData.out && sourceData.out[target]) ||\n      (sourceData.undirected && sourceData.undirected[target]);\n  } else if (type === 'directed') {\n    edge = sourceData.out && sourceData.out[target];\n  } else {\n    edge = sourceData.undirected && sourceData.undirected[target];\n  }\n\n  return edge;\n}\n\n/**\n * Checks whether the given value is a plain object.\n *\n * @param  {mixed}   value - Target value.\n * @return {boolean}\n */\nexport function isPlainObject(value) {\n  // NOTE: as per https://github.com/graphology/graphology/issues/149\n  // this function has been loosened not to reject object instances\n  // coming from other JavaScript contexts. It has also been chosen\n  // not to improve it to avoid obvious false positives and avoid\n  // taking a performance hit. People should really use TypeScript\n  // if they want to avoid feeding subtly irrelvant attribute objects.\n  return typeof value === 'object' && value !== null;\n}\n\n/**\n * Checks whether the given object is empty.\n *\n * @param  {object}  o - Target Object.\n * @return {boolean}\n */\nexport function isEmpty(o) {\n  let k;\n\n  for (k in o) return false;\n\n  return true;\n}\n\n/**\n * Creates a \"private\" property for the given member name by concealing it\n * using the `enumerable` option.\n *\n * @param {object} target - Target object.\n * @param {string} name   - Member name.\n */\nexport function privateProperty(target, name, value) {\n  Object.defineProperty(target, name, {\n    enumerable: false,\n    configurable: false,\n    writable: true,\n    value\n  });\n}\n\n/**\n * Creates a read-only property for the given member name & the given getter.\n *\n * @param {object}   target - Target object.\n * @param {string}   name   - Member name.\n * @param {mixed}    value  - The attached getter or fixed value.\n */\nexport function readOnlyProperty(target, name, value) {\n  const descriptor = {\n    enumerable: true,\n    configurable: true\n  };\n\n  if (typeof value === 'function') {\n    descriptor.get = value;\n  } else {\n    descriptor.value = value;\n    descriptor.writable = false;\n  }\n\n  Object.defineProperty(target, name, descriptor);\n}\n\n/**\n * Returns whether the given object constitute valid hints.\n *\n * @param {object} hints - Target object.\n */\nexport function validateHints(hints) {\n  if (!isPlainObject(hints)) return false;\n\n  if (hints.attributes && !Array.isArray(hints.attributes)) return false;\n\n  return true;\n}\n\n/**\n * Creates a function generating incremental ids for edges.\n *\n * @return {function}\n */\nexport function incrementalIdStartingFromRandomByte() {\n  let i = Math.floor(Math.random() * 256) & 0xff;\n\n  return () => {\n    return i++;\n  };\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/**\n * Obliterator Iterator Class\n * ===========================\n *\n * Simple class representing the library's iterators.\n */\n\n/**\n * Iterator class.\n *\n * @constructor\n * @param {function} next - Next function.\n */\nfunction Iterator(next) {\n  if (typeof next !== 'function')\n    throw new Error('obliterator/iterator: expecting a function!');\n\n  this.next = next;\n}\n\n/**\n * If symbols are supported, we add `next` to `Symbol.iterator`.\n */\nif (typeof Symbol !== 'undefined')\n  Iterator.prototype[Symbol.iterator] = function () {\n    return this;\n  };\n\n/**\n * Returning an iterator of the given values.\n *\n * @param  {any...} values - Values.\n * @return {Iterator}\n */\nIterator.of = function () {\n  var args = arguments,\n    l = args.length,\n    i = 0;\n\n  return new Iterator(function () {\n    if (i >= l) return {done: true};\n\n    return {done: false, value: args[i++]};\n  });\n};\n\n/**\n * Returning an empty iterator.\n *\n * @return {Iterator}\n */\nIterator.empty = function () {\n  var iterator = new Iterator(function () {\n    return {done: true};\n  });\n\n  return iterator;\n};\n\n/**\n * Returning an iterator over the given indexed sequence.\n *\n * @param  {string|Array} sequence - Target sequence.\n * @return {Iterator}\n */\nIterator.fromSequence = function (sequence) {\n  var i = 0,\n    l = sequence.length;\n\n  return new Iterator(function () {\n    if (i >= l) return {done: true};\n\n    return {done: false, value: sequence[i++]};\n  });\n};\n\n/**\n * Returning whether the given value is an iterator.\n *\n * @param  {any} value - Value.\n * @return {boolean}\n */\nIterator.is = function (value) {\n  if (value instanceof Iterator) return true;\n\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    typeof value.next === 'function'\n  );\n};\n\n/**\n * Exporting.\n */\nmodule.exports = Iterator;\n","exports.ARRAY_BUFFER_SUPPORT = typeof ArrayBuffer !== 'undefined';\nexports.SYMBOL_SUPPORT = typeof Symbol !== 'undefined';\n","/**\n * Obliterator Iter Function\n * ==========================\n *\n * Function coercing values to an iterator. It can be quite useful when needing\n * to handle iterables and iterators the same way.\n */\nvar Iterator = require('./iterator.js');\nvar support = require('./support.js');\n\nvar ARRAY_BUFFER_SUPPORT = support.ARRAY_BUFFER_SUPPORT;\nvar SYMBOL_SUPPORT = support.SYMBOL_SUPPORT;\n\nfunction iterOrNull(target) {\n  // Indexed sequence\n  if (\n    typeof target === 'string' ||\n    Array.isArray(target) ||\n    (ARRAY_BUFFER_SUPPORT && ArrayBuffer.isView(target))\n  )\n    return Iterator.fromSequence(target);\n\n  // Invalid value\n  if (typeof target !== 'object' || target === null) return null;\n\n  // Iterable\n  if (SYMBOL_SUPPORT && typeof target[Symbol.iterator] === 'function')\n    return target[Symbol.iterator]();\n\n  // Iterator duck-typing\n  if (typeof target.next === 'function') return target;\n\n  // Invalid object\n  return null;\n}\n\nmodule.exports = function iter(target) {\n  var iterator = iterOrNull(target);\n\n  if (!iterator)\n    throw new Error(\n      'obliterator: target is not iterable nor a valid iterator.'\n    );\n\n  return iterator;\n};\n","/* eslint no-constant-condition: 0 */\n/**\n * Obliterator Take Function\n * ==========================\n *\n * Function taking n or every value of the given iterator and returns them\n * into an array.\n */\nvar iter = require('./iter.js');\n\n/**\n * Take.\n *\n * @param  {Iterable} iterable - Target iterable.\n * @param  {number}   [n]      - Optional number of items to take.\n * @return {array}\n */\nmodule.exports = function take(iterable, n) {\n  var l = arguments.length > 1 ? n : Infinity,\n    array = l !== Infinity ? new Array(l) : [],\n    step,\n    i = 0;\n\n  var iterator = iter(iterable);\n\n  while (true) {\n    if (i === l) return array;\n\n    step = iterator.next();\n\n    if (step.done) {\n      if (i !== n) array.length = i;\n\n      return array;\n    }\n\n    array[i++] = step.value;\n  }\n};\n","/**\n * Graphology Custom Errors\n * =========================\n *\n * Defining custom errors for ease of use & easy unit tests across\n * implementations (normalized typology rather than relying on error\n * messages to check whether the correct error was found).\n */\nexport class GraphError extends Error {\n  constructor(message) {\n    super();\n    this.name = 'GraphError';\n    this.message = message;\n  }\n}\n\nexport class InvalidArgumentsGraphError extends GraphError {\n  constructor(message) {\n    super(message);\n    this.name = 'InvalidArgumentsGraphError';\n\n    // This is V8 specific to enhance stack readability\n    if (typeof Error.captureStackTrace === 'function')\n      Error.captureStackTrace(\n        this,\n        InvalidArgumentsGraphError.prototype.constructor\n      );\n  }\n}\n\nexport class NotFoundGraphError extends GraphError {\n  constructor(message) {\n    super(message);\n    this.name = 'NotFoundGraphError';\n\n    // This is V8 specific to enhance stack readability\n    if (typeof Error.captureStackTrace === 'function')\n      Error.captureStackTrace(this, NotFoundGraphError.prototype.constructor);\n  }\n}\n\nexport class UsageGraphError extends GraphError {\n  constructor(message) {\n    super(message);\n    this.name = 'UsageGraphError';\n\n    // This is V8 specific to enhance stack readability\n    if (typeof Error.captureStackTrace === 'function')\n      Error.captureStackTrace(this, UsageGraphError.prototype.constructor);\n  }\n}\n","/**\n * Graphology Internal Data Classes\n * =================================\n *\n * Internal classes hopefully reduced to structs by engines & storing\n * necessary information for nodes & edges.\n *\n * Note that those classes don't rely on the `class` keyword to avoid some\n * cruft introduced by most of ES2015 transpilers.\n */\n\n/**\n * MixedNodeData class.\n *\n * @constructor\n * @param {string} string     - The node's key.\n * @param {object} attributes - Node's attributes.\n */\nexport function MixedNodeData(key, attributes) {\n  // Attributes\n  this.key = key;\n  this.attributes = attributes;\n\n  this.clear();\n}\n\nMixedNodeData.prototype.clear = function () {\n  // Degrees\n  this.inDegree = 0;\n  this.outDegree = 0;\n  this.undirectedDegree = 0;\n  this.undirectedLoops = 0;\n  this.directedLoops = 0;\n\n  // Indices\n  this.in = {};\n  this.out = {};\n  this.undirected = {};\n};\n\n/**\n * DirectedNodeData class.\n *\n * @constructor\n * @param {string} string     - The node's key.\n * @param {object} attributes - Node's attributes.\n */\nexport function DirectedNodeData(key, attributes) {\n  // Attributes\n  this.key = key;\n  this.attributes = attributes;\n\n  this.clear();\n}\n\nDirectedNodeData.prototype.clear = function () {\n  // Degrees\n  this.inDegree = 0;\n  this.outDegree = 0;\n  this.directedLoops = 0;\n\n  // Indices\n  this.in = {};\n  this.out = {};\n};\n\n/**\n * UndirectedNodeData class.\n *\n * @constructor\n * @param {string} string     - The node's key.\n * @param {object} attributes - Node's attributes.\n */\nexport function UndirectedNodeData(key, attributes) {\n  // Attributes\n  this.key = key;\n  this.attributes = attributes;\n\n  this.clear();\n}\n\nUndirectedNodeData.prototype.clear = function () {\n  // Degrees\n  this.undirectedDegree = 0;\n  this.undirectedLoops = 0;\n\n  // Indices\n  this.undirected = {};\n};\n\n/**\n * EdgeData class.\n *\n * @constructor\n * @param {boolean} undirected   - Whether the edge is undirected.\n * @param {string}  string       - The edge's key.\n * @param {string}  source       - Source of the edge.\n * @param {string}  target       - Target of the edge.\n * @param {object}  attributes   - Edge's attributes.\n */\nexport function EdgeData(undirected, key, source, target, attributes) {\n  // Attributes\n  this.key = key;\n  this.attributes = attributes;\n  this.undirected = undirected;\n\n  // Extremities\n  this.source = source;\n  this.target = target;\n}\n\nEdgeData.prototype.attach = function () {\n  let outKey = 'out';\n  let inKey = 'in';\n\n  if (this.undirected) outKey = inKey = 'undirected';\n\n  const source = this.source.key;\n  const target = this.target.key;\n\n  // Handling source\n  this.source[outKey][target] = this;\n\n  if (this.undirected && source === target) return;\n\n  // Handling target\n  this.target[inKey][source] = this;\n};\n\nEdgeData.prototype.attachMulti = function () {\n  let outKey = 'out';\n  let inKey = 'in';\n\n  const source = this.source.key;\n  const target = this.target.key;\n\n  if (this.undirected) outKey = inKey = 'undirected';\n\n  // Handling source\n  const adj = this.source[outKey];\n  const head = adj[target];\n\n  if (typeof head === 'undefined') {\n    adj[target] = this;\n\n    // Self-loop optimization\n    if (!(this.undirected && source === target)) {\n      // Handling target\n      this.target[inKey][source] = this;\n    }\n\n    return;\n  }\n\n  // Prepending to doubly-linked list\n  head.previous = this;\n  this.next = head;\n\n  // Pointing to new head\n  // NOTE: use mutating swap later to avoid lookup?\n  adj[target] = this;\n  this.target[inKey][source] = this;\n};\n\nEdgeData.prototype.detach = function () {\n  const source = this.source.key;\n  const target = this.target.key;\n\n  let outKey = 'out';\n  let inKey = 'in';\n\n  if (this.undirected) outKey = inKey = 'undirected';\n\n  delete this.source[outKey][target];\n\n  // No-op delete in case of undirected self-loop\n  delete this.target[inKey][source];\n};\n\nEdgeData.prototype.detachMulti = function () {\n  const source = this.source.key;\n  const target = this.target.key;\n\n  let outKey = 'out';\n  let inKey = 'in';\n\n  if (this.undirected) outKey = inKey = 'undirected';\n\n  // Deleting from doubly-linked list\n  if (this.previous === undefined) {\n    // We are dealing with the head\n\n    // Should we delete the adjacency entry because it is now empty?\n    if (this.next === undefined) {\n      delete this.source[outKey][target];\n\n      // No-op delete in case of undirected self-loop\n      delete this.target[inKey][source];\n    } else {\n      // Detaching\n      this.next.previous = undefined;\n\n      // NOTE: could avoid the lookups by creating a #.become mutating method\n      this.source[outKey][target] = this.next;\n\n      // No-op delete in case of undirected self-loop\n      this.target[inKey][source] = this.next;\n    }\n  } else {\n    // We are dealing with another list node\n    this.previous.next = this.next;\n\n    // If not last\n    if (this.next !== undefined) {\n      this.next.previous = this.previous;\n    }\n  }\n};\n","/**\n * Graphology Node Attributes methods\n * ===================================\n */\nimport {assign, isPlainObject} from '../utils';\n\nimport {InvalidArgumentsGraphError, NotFoundGraphError} from '../errors';\n\nconst NODE = 0;\nconst SOURCE = 1;\nconst TARGET = 2;\nconst OPPOSITE = 3;\n\nfunction findRelevantNodeData(\n  graph,\n  method,\n  mode,\n  nodeOrEdge,\n  nameOrEdge,\n  add1,\n  add2\n) {\n  let nodeData, edgeData, arg1, arg2;\n\n  nodeOrEdge = '' + nodeOrEdge;\n\n  if (mode === NODE) {\n    nodeData = graph._nodes.get(nodeOrEdge);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.${method}: could not find the \"${nodeOrEdge}\" node in the graph.`\n      );\n\n    arg1 = nameOrEdge;\n    arg2 = add1;\n  } else if (mode === OPPOSITE) {\n    nameOrEdge = '' + nameOrEdge;\n\n    edgeData = graph._edges.get(nameOrEdge);\n\n    if (!edgeData)\n      throw new NotFoundGraphError(\n        `Graph.${method}: could not find the \"${nameOrEdge}\" edge in the graph.`\n      );\n\n    const source = edgeData.source.key;\n    const target = edgeData.target.key;\n\n    if (nodeOrEdge === source) {\n      nodeData = edgeData.target;\n    } else if (nodeOrEdge === target) {\n      nodeData = edgeData.source;\n    } else {\n      throw new NotFoundGraphError(\n        `Graph.${method}: the \"${nodeOrEdge}\" node is not attached to the \"${nameOrEdge}\" edge (${source}, ${target}).`\n      );\n    }\n\n    arg1 = add1;\n    arg2 = add2;\n  } else {\n    edgeData = graph._edges.get(nodeOrEdge);\n\n    if (!edgeData)\n      throw new NotFoundGraphError(\n        `Graph.${method}: could not find the \"${nodeOrEdge}\" edge in the graph.`\n      );\n\n    if (mode === SOURCE) {\n      nodeData = edgeData.source;\n    } else {\n      nodeData = edgeData.target;\n    }\n\n    arg1 = nameOrEdge;\n    arg2 = add1;\n  }\n\n  return [nodeData, arg1, arg2];\n}\n\nfunction attachNodeAttributeGetter(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1) {\n    const [data, name] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1\n    );\n\n    return data.attributes[name];\n  };\n}\n\nfunction attachNodeAttributesGetter(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge) {\n    const [data] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge\n    );\n\n    return data.attributes;\n  };\n}\n\nfunction attachNodeAttributeChecker(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1) {\n    const [data, name] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1\n    );\n\n    return data.attributes.hasOwnProperty(name);\n  };\n}\n\nfunction attachNodeAttributeSetter(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1, add2) {\n    const [data, name, value] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1,\n      add2\n    );\n\n    data.attributes[name] = value;\n\n    // Emitting\n    this.emit('nodeAttributesUpdated', {\n      key: data.key,\n      type: 'set',\n      attributes: data.attributes,\n      name\n    });\n\n    return this;\n  };\n}\n\nfunction attachNodeAttributeUpdater(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1, add2) {\n    const [data, name, updater] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1,\n      add2\n    );\n\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: updater should be a function.`\n      );\n\n    const attributes = data.attributes;\n    const value = updater(attributes[name]);\n\n    attributes[name] = value;\n\n    // Emitting\n    this.emit('nodeAttributesUpdated', {\n      key: data.key,\n      type: 'set',\n      attributes: data.attributes,\n      name\n    });\n\n    return this;\n  };\n}\n\nfunction attachNodeAttributeRemover(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1) {\n    const [data, name] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1\n    );\n\n    delete data.attributes[name];\n\n    // Emitting\n    this.emit('nodeAttributesUpdated', {\n      key: data.key,\n      type: 'remove',\n      attributes: data.attributes,\n      name\n    });\n\n    return this;\n  };\n}\n\nfunction attachNodeAttributesReplacer(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1) {\n    const [data, attributes] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1\n    );\n\n    if (!isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: provided attributes are not a plain object.`\n      );\n\n    data.attributes = attributes;\n\n    // Emitting\n    this.emit('nodeAttributesUpdated', {\n      key: data.key,\n      type: 'replace',\n      attributes: data.attributes\n    });\n\n    return this;\n  };\n}\n\nfunction attachNodeAttributesMerger(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1) {\n    const [data, attributes] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1\n    );\n\n    if (!isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: provided attributes are not a plain object.`\n      );\n\n    assign(data.attributes, attributes);\n\n    // Emitting\n    this.emit('nodeAttributesUpdated', {\n      key: data.key,\n      type: 'merge',\n      attributes: data.attributes,\n      data: attributes\n    });\n\n    return this;\n  };\n}\n\nfunction attachNodeAttributesUpdater(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1) {\n    const [data, updater] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1\n    );\n\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: provided updater is not a function.`\n      );\n\n    data.attributes = updater(data.attributes);\n\n    // Emitting\n    this.emit('nodeAttributesUpdated', {\n      key: data.key,\n      type: 'update',\n      attributes: data.attributes\n    });\n\n    return this;\n  };\n}\n\n/**\n * List of methods to attach.\n */\nconst NODE_ATTRIBUTES_METHODS = [\n  {\n    name: element => `get${element}Attribute`,\n    attacher: attachNodeAttributeGetter\n  },\n  {\n    name: element => `get${element}Attributes`,\n    attacher: attachNodeAttributesGetter\n  },\n  {\n    name: element => `has${element}Attribute`,\n    attacher: attachNodeAttributeChecker\n  },\n  {\n    name: element => `set${element}Attribute`,\n    attacher: attachNodeAttributeSetter\n  },\n  {\n    name: element => `update${element}Attribute`,\n    attacher: attachNodeAttributeUpdater\n  },\n  {\n    name: element => `remove${element}Attribute`,\n    attacher: attachNodeAttributeRemover\n  },\n  {\n    name: element => `replace${element}Attributes`,\n    attacher: attachNodeAttributesReplacer\n  },\n  {\n    name: element => `merge${element}Attributes`,\n    attacher: attachNodeAttributesMerger\n  },\n  {\n    name: element => `update${element}Attributes`,\n    attacher: attachNodeAttributesUpdater\n  }\n];\n\n/**\n * Attach every attributes-related methods to a Graph class.\n *\n * @param {function} Graph - Target class.\n */\nexport default function attachNodeAttributesMethods(Graph) {\n  NODE_ATTRIBUTES_METHODS.forEach(function ({name, attacher}) {\n    // For nodes\n    attacher(Graph, name('Node'), NODE);\n\n    // For sources\n    attacher(Graph, name('Source'), SOURCE);\n\n    // For targets\n    attacher(Graph, name('Target'), TARGET);\n\n    // For opposites\n    attacher(Graph, name('Opposite'), OPPOSITE);\n  });\n}\n","/**\n * Graphology Edge Attributes methods\n * ===================================\n */\nimport {assign, isPlainObject, getMatchingEdge} from '../utils';\n\nimport {\n  InvalidArgumentsGraphError,\n  NotFoundGraphError,\n  UsageGraphError\n} from '../errors';\n\n/**\n * Attach an attribute getter method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributeGetter(Class, method, type) {\n  /**\n   * Get the desired attribute for the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}    element - Target element.\n   * @param  {string} name    - Attribute's name.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source - Source element.\n   * @param  {any}     target - Target element.\n   * @param  {string}  name   - Attribute's name.\n   *\n   * @return {mixed}          - The attribute's value.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, name) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 2) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element;\n      const target = '' + name;\n\n      name = arguments[2];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    return data.attributes[name];\n  };\n}\n\n/**\n * Attach an attributes getter method onto the provided class.\n *\n * @param {function} Class       - Target class.\n * @param {string}   method      - Method name.\n * @param {string}   type        - Type of the edge to find.\n */\nfunction attachEdgeAttributesGetter(Class, method, type) {\n  /**\n   * Retrieves all the target element's attributes.\n   *\n   * Arity 2:\n   * @param  {any}    element - Target element.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source - Source element.\n   * @param  {any}     target - Target element.\n   *\n   * @return {object}          - The element's attributes.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 1) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element,\n        target = '' + arguments[1];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    return data.attributes;\n  };\n}\n\n/**\n * Attach an attribute checker method onto the provided class.\n *\n * @param {function} Class       - Target class.\n * @param {string}   method      - Method name.\n * @param {string}   type        - Type of the edge to find.\n */\nfunction attachEdgeAttributeChecker(Class, method, type) {\n  /**\n   * Checks whether the desired attribute is set for the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}    element - Target element.\n   * @param  {string} name    - Attribute's name.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source - Source element.\n   * @param  {any}     target - Target element.\n   * @param  {string}  name   - Attribute's name.\n   *\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, name) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 2) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element;\n      const target = '' + name;\n\n      name = arguments[2];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    return data.attributes.hasOwnProperty(name);\n  };\n}\n\n/**\n * Attach an attribute setter method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributeSetter(Class, method, type) {\n  /**\n   * Set the desired attribute for the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}    element - Target element.\n   * @param  {string} name    - Attribute's name.\n   * @param  {mixed}  value   - New attribute value.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source - Source element.\n   * @param  {any}     target - Target element.\n   * @param  {string}  name   - Attribute's name.\n   * @param  {mixed}  value   - New attribute value.\n   *\n   * @return {Graph}          - Returns itself for chaining.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, name, value) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 3) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element;\n      const target = '' + name;\n\n      name = arguments[2];\n      value = arguments[3];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    data.attributes[name] = value;\n\n    // Emitting\n    this.emit('edgeAttributesUpdated', {\n      key: data.key,\n      type: 'set',\n      attributes: data.attributes,\n      name\n    });\n\n    return this;\n  };\n}\n\n/**\n * Attach an attribute updater method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributeUpdater(Class, method, type) {\n  /**\n   * Update the desired attribute for the given element (node or edge) using\n   * the provided function.\n   *\n   * Arity 2:\n   * @param  {any}      element - Target element.\n   * @param  {string}   name    - Attribute's name.\n   * @param  {function} updater - Updater function.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}      source  - Source element.\n   * @param  {any}      target  - Target element.\n   * @param  {string}   name    - Attribute's name.\n   * @param  {function} updater - Updater function.\n   *\n   * @return {Graph}            - Returns itself for chaining.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, name, updater) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 3) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element;\n      const target = '' + name;\n\n      name = arguments[2];\n      updater = arguments[3];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: updater should be a function.`\n      );\n\n    data.attributes[name] = updater(data.attributes[name]);\n\n    // Emitting\n    this.emit('edgeAttributesUpdated', {\n      key: data.key,\n      type: 'set',\n      attributes: data.attributes,\n      name\n    });\n\n    return this;\n  };\n}\n\n/**\n * Attach an attribute remover method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributeRemover(Class, method, type) {\n  /**\n   * Remove the desired attribute for the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}    element - Target element.\n   * @param  {string} name    - Attribute's name.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source - Source element.\n   * @param  {any}     target - Target element.\n   * @param  {string}  name   - Attribute's name.\n   *\n   * @return {Graph}          - Returns itself for chaining.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, name) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 2) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element;\n      const target = '' + name;\n\n      name = arguments[2];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    delete data.attributes[name];\n\n    // Emitting\n    this.emit('edgeAttributesUpdated', {\n      key: data.key,\n      type: 'remove',\n      attributes: data.attributes,\n      name\n    });\n\n    return this;\n  };\n}\n\n/**\n * Attach an attribute replacer method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributesReplacer(Class, method, type) {\n  /**\n   * Replace the attributes for the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}    element    - Target element.\n   * @param  {object} attributes - New attributes.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source     - Source element.\n   * @param  {any}     target     - Target element.\n   * @param  {object}  attributes - New attributes.\n   *\n   * @return {Graph}              - Returns itself for chaining.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, attributes) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 2) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element,\n        target = '' + attributes;\n\n      attributes = arguments[2];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    if (!isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: provided attributes are not a plain object.`\n      );\n\n    data.attributes = attributes;\n\n    // Emitting\n    this.emit('edgeAttributesUpdated', {\n      key: data.key,\n      type: 'replace',\n      attributes: data.attributes\n    });\n\n    return this;\n  };\n}\n\n/**\n * Attach an attribute merger method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributesMerger(Class, method, type) {\n  /**\n   * Merge the attributes for the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}    element    - Target element.\n   * @param  {object} attributes - Attributes to merge.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source     - Source element.\n   * @param  {any}     target     - Target element.\n   * @param  {object}  attributes - Attributes to merge.\n   *\n   * @return {Graph}              - Returns itself for chaining.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, attributes) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 2) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element,\n        target = '' + attributes;\n\n      attributes = arguments[2];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    if (!isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: provided attributes are not a plain object.`\n      );\n\n    assign(data.attributes, attributes);\n\n    // Emitting\n    this.emit('edgeAttributesUpdated', {\n      key: data.key,\n      type: 'merge',\n      attributes: data.attributes,\n      data: attributes\n    });\n\n    return this;\n  };\n}\n\n/**\n * Attach an attribute updater method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributesUpdater(Class, method, type) {\n  /**\n   * Update the attributes of the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}      element - Target element.\n   * @param  {function} updater - Updater function.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}      source  - Source element.\n   * @param  {any}      target  - Target element.\n   * @param  {function} updater - Updater function.\n   *\n   * @return {Graph}            - Returns itself for chaining.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, updater) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 2) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element,\n        target = '' + updater;\n\n      updater = arguments[2];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: provided updater is not a function.`\n      );\n\n    data.attributes = updater(data.attributes);\n\n    // Emitting\n    this.emit('edgeAttributesUpdated', {\n      key: data.key,\n      type: 'update',\n      attributes: data.attributes\n    });\n\n    return this;\n  };\n}\n\n/**\n * List of methods to attach.\n */\nconst EDGE_ATTRIBUTES_METHODS = [\n  {\n    name: element => `get${element}Attribute`,\n    attacher: attachEdgeAttributeGetter\n  },\n  {\n    name: element => `get${element}Attributes`,\n    attacher: attachEdgeAttributesGetter\n  },\n  {\n    name: element => `has${element}Attribute`,\n    attacher: attachEdgeAttributeChecker\n  },\n  {\n    name: element => `set${element}Attribute`,\n    attacher: attachEdgeAttributeSetter\n  },\n  {\n    name: element => `update${element}Attribute`,\n    attacher: attachEdgeAttributeUpdater\n  },\n  {\n    name: element => `remove${element}Attribute`,\n    attacher: attachEdgeAttributeRemover\n  },\n  {\n    name: element => `replace${element}Attributes`,\n    attacher: attachEdgeAttributesReplacer\n  },\n  {\n    name: element => `merge${element}Attributes`,\n    attacher: attachEdgeAttributesMerger\n  },\n  {\n    name: element => `update${element}Attributes`,\n    attacher: attachEdgeAttributesUpdater\n  }\n];\n\n/**\n * Attach every attributes-related methods to a Graph class.\n *\n * @param {function} Graph - Target class.\n */\nexport default function attachEdgeAttributesMethods(Graph) {\n  EDGE_ATTRIBUTES_METHODS.forEach(function ({name, attacher}) {\n    // For edges\n    attacher(Graph, name('Edge'), 'mixed');\n\n    // For directed edges\n    attacher(Graph, name('DirectedEdge'), 'directed');\n\n    // For undirected edges\n    attacher(Graph, name('UndirectedEdge'), 'undirected');\n  });\n}\n","/**\n * Obliterator Chain Function\n * ===========================\n *\n * Variadic function combining the given iterables.\n */\nvar Iterator = require('./iterator.js');\nvar iter = require('./iter.js');\n\n/**\n * Chain.\n *\n * @param  {...Iterator} iterables - Target iterables.\n * @return {Iterator}\n */\nmodule.exports = function chain() {\n  var iterables = arguments;\n  var current = null;\n  var i = -1;\n\n  /* eslint-disable no-constant-condition */\n  return new Iterator(function next() {\n    var step = null;\n\n    do {\n      if (current === null) {\n        i++;\n\n        if (i >= iterables.length) return {done: true};\n\n        current = iter(iterables[i]);\n      }\n\n      step = current.next();\n\n      if (step.done === true) {\n        current = null;\n        continue;\n      }\n\n      break;\n    } while (true);\n\n    return step;\n  });\n};\n","/**\n * Graphology Edge Iteration\n * ==========================\n *\n * Attaching some methods to the Graph class to be able to iterate over a\n * graph's edges.\n */\nimport Iterator from 'obliterator/iterator';\nimport chain from 'obliterator/chain';\nimport take from 'obliterator/take';\n\nimport {InvalidArgumentsGraphError, NotFoundGraphError} from '../errors';\n\n/**\n * Definitions.\n */\nconst EDGES_ITERATION = [\n  {\n    name: 'edges',\n    type: 'mixed'\n  },\n  {\n    name: 'inEdges',\n    type: 'directed',\n    direction: 'in'\n  },\n  {\n    name: 'outEdges',\n    type: 'directed',\n    direction: 'out'\n  },\n  {\n    name: 'inboundEdges',\n    type: 'mixed',\n    direction: 'in'\n  },\n  {\n    name: 'outboundEdges',\n    type: 'mixed',\n    direction: 'out'\n  },\n  {\n    name: 'directedEdges',\n    type: 'directed'\n  },\n  {\n    name: 'undirectedEdges',\n    type: 'undirected'\n  }\n];\n\n/**\n * Function iterating over edges from the given object to match one of them.\n *\n * @param {object}   object   - Target object.\n * @param {function} callback - Function to call.\n */\nfunction forEachSimple(breakable, object, callback, avoid) {\n  let shouldBreak = false;\n\n  for (const k in object) {\n    if (k === avoid) continue;\n\n    const edgeData = object[k];\n\n    shouldBreak = callback(\n      edgeData.key,\n      edgeData.attributes,\n      edgeData.source.key,\n      edgeData.target.key,\n      edgeData.source.attributes,\n      edgeData.target.attributes,\n      edgeData.undirected\n    );\n\n    if (breakable && shouldBreak) return edgeData.key;\n  }\n\n  return;\n}\n\nfunction forEachMulti(breakable, object, callback, avoid) {\n  let edgeData, source, target;\n\n  let shouldBreak = false;\n\n  for (const k in object) {\n    if (k === avoid) continue;\n\n    edgeData = object[k];\n\n    do {\n      source = edgeData.source;\n      target = edgeData.target;\n\n      shouldBreak = callback(\n        edgeData.key,\n        edgeData.attributes,\n        source.key,\n        target.key,\n        source.attributes,\n        target.attributes,\n        edgeData.undirected\n      );\n\n      if (breakable && shouldBreak) return edgeData.key;\n\n      edgeData = edgeData.next;\n    } while (edgeData !== undefined);\n  }\n\n  return;\n}\n\n/**\n * Function returning an iterator over edges from the given object.\n *\n * @param  {object}   object - Target object.\n * @return {Iterator}\n */\nfunction createIterator(object, avoid) {\n  const keys = Object.keys(object);\n  const l = keys.length;\n\n  let edgeData;\n  let i = 0;\n\n  return new Iterator(function next() {\n    do {\n      if (!edgeData) {\n        if (i >= l) return {done: true};\n\n        const k = keys[i++];\n\n        if (k === avoid) {\n          edgeData = undefined;\n          continue;\n        }\n\n        edgeData = object[k];\n      } else {\n        edgeData = edgeData.next;\n      }\n    } while (!edgeData);\n\n    return {\n      done: false,\n      value: {\n        edge: edgeData.key,\n        attributes: edgeData.attributes,\n        source: edgeData.source.key,\n        target: edgeData.target.key,\n        sourceAttributes: edgeData.source.attributes,\n        targetAttributes: edgeData.target.attributes,\n        undirected: edgeData.undirected\n      }\n    };\n  });\n}\n\n/**\n * Function iterating over the egdes from the object at given key to match\n * one of them.\n *\n * @param {object}   object   - Target object.\n * @param {mixed}    k        - Neighbor key.\n * @param {function} callback - Callback to use.\n */\nfunction forEachForKeySimple(breakable, object, k, callback) {\n  const edgeData = object[k];\n\n  if (!edgeData) return;\n\n  const sourceData = edgeData.source;\n  const targetData = edgeData.target;\n\n  if (\n    callback(\n      edgeData.key,\n      edgeData.attributes,\n      sourceData.key,\n      targetData.key,\n      sourceData.attributes,\n      targetData.attributes,\n      edgeData.undirected\n    ) &&\n    breakable\n  )\n    return edgeData.key;\n}\n\nfunction forEachForKeyMulti(breakable, object, k, callback) {\n  let edgeData = object[k];\n\n  if (!edgeData) return;\n\n  let shouldBreak = false;\n\n  do {\n    shouldBreak = callback(\n      edgeData.key,\n      edgeData.attributes,\n      edgeData.source.key,\n      edgeData.target.key,\n      edgeData.source.attributes,\n      edgeData.target.attributes,\n      edgeData.undirected\n    );\n\n    if (breakable && shouldBreak) return edgeData.key;\n\n    edgeData = edgeData.next;\n  } while (edgeData !== undefined);\n\n  return;\n}\n\n/**\n * Function returning an iterator over the egdes from the object at given key.\n *\n * @param  {object}   object   - Target object.\n * @param  {mixed}    k        - Neighbor key.\n * @return {Iterator}\n */\nfunction createIteratorForKey(object, k) {\n  let edgeData = object[k];\n\n  if (edgeData.next !== undefined) {\n    return new Iterator(function () {\n      if (!edgeData) return {done: true};\n\n      const value = {\n        edge: edgeData.key,\n        attributes: edgeData.attributes,\n        source: edgeData.source.key,\n        target: edgeData.target.key,\n        sourceAttributes: edgeData.source.attributes,\n        targetAttributes: edgeData.target.attributes,\n        undirected: edgeData.undirected\n      };\n\n      edgeData = edgeData.next;\n\n      return {\n        done: false,\n        value\n      };\n    });\n  }\n\n  return Iterator.of({\n    edge: edgeData.key,\n    attributes: edgeData.attributes,\n    source: edgeData.source.key,\n    target: edgeData.target.key,\n    sourceAttributes: edgeData.source.attributes,\n    targetAttributes: edgeData.target.attributes,\n    undirected: edgeData.undirected\n  });\n}\n\n/**\n * Function creating an array of edges for the given type.\n *\n * @param  {Graph}   graph - Target Graph instance.\n * @param  {string}  type  - Type of edges to retrieve.\n * @return {array}         - Array of edges.\n */\nfunction createEdgeArray(graph, type) {\n  if (graph.size === 0) return [];\n\n  if (type === 'mixed' || type === graph.type) {\n    if (typeof Array.from === 'function')\n      return Array.from(graph._edges.keys());\n\n    return take(graph._edges.keys(), graph._edges.size);\n  }\n\n  const size =\n    type === 'undirected' ? graph.undirectedSize : graph.directedSize;\n\n  const list = new Array(size),\n    mask = type === 'undirected';\n\n  const iterator = graph._edges.values();\n\n  let i = 0;\n  let step, data;\n\n  while (((step = iterator.next()), step.done !== true)) {\n    data = step.value;\n\n    if (data.undirected === mask) list[i++] = data.key;\n  }\n\n  return list;\n}\n\n/**\n * Function iterating over a graph's edges using a callback to match one of\n * them.\n *\n * @param  {Graph}    graph    - Target Graph instance.\n * @param  {string}   type     - Type of edges to retrieve.\n * @param  {function} callback - Function to call.\n */\nfunction forEachEdge(breakable, graph, type, callback) {\n  if (graph.size === 0) return;\n\n  const shouldFilter = type !== 'mixed' && type !== graph.type;\n  const mask = type === 'undirected';\n\n  let step, data;\n  let shouldBreak = false;\n  const iterator = graph._edges.values();\n\n  while (((step = iterator.next()), step.done !== true)) {\n    data = step.value;\n\n    if (shouldFilter && data.undirected !== mask) continue;\n\n    const {key, attributes, source, target} = data;\n\n    shouldBreak = callback(\n      key,\n      attributes,\n      source.key,\n      target.key,\n      source.attributes,\n      target.attributes,\n      data.undirected\n    );\n\n    if (breakable && shouldBreak) return key;\n  }\n\n  return;\n}\n\n/**\n * Function creating an iterator of edges for the given type.\n *\n * @param  {Graph}    graph - Target Graph instance.\n * @param  {string}   type  - Type of edges to retrieve.\n * @return {Iterator}\n */\nfunction createEdgeIterator(graph, type) {\n  if (graph.size === 0) return Iterator.empty();\n\n  const shouldFilter = type !== 'mixed' && type !== graph.type;\n  const mask = type === 'undirected';\n\n  const iterator = graph._edges.values();\n\n  return new Iterator(function next() {\n    let step, data;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      step = iterator.next();\n\n      if (step.done) return step;\n\n      data = step.value;\n\n      if (shouldFilter && data.undirected !== mask) continue;\n\n      break;\n    }\n\n    const value = {\n      edge: data.key,\n      attributes: data.attributes,\n      source: data.source.key,\n      target: data.target.key,\n      sourceAttributes: data.source.attributes,\n      targetAttributes: data.target.attributes,\n      undirected: data.undirected\n    };\n\n    return {value, done: false};\n  });\n}\n\n/**\n * Function iterating over a node's edges using a callback to match one of them.\n *\n * @param  {boolean}  multi     - Whether the graph is multi or not.\n * @param  {string}   type      - Type of edges to retrieve.\n * @param  {string}   direction - In or out?\n * @param  {any}      nodeData  - Target node's data.\n * @param  {function} callback  - Function to call.\n */\nfunction forEachEdgeForNode(\n  breakable,\n  multi,\n  type,\n  direction,\n  nodeData,\n  callback\n) {\n  const fn = multi ? forEachMulti : forEachSimple;\n\n  let found;\n\n  if (type !== 'undirected') {\n    if (direction !== 'out') {\n      found = fn(breakable, nodeData.in, callback);\n\n      if (breakable && found) return found;\n    }\n    if (direction !== 'in') {\n      found = fn(\n        breakable,\n        nodeData.out,\n        callback,\n        !direction ? nodeData.key : undefined\n      );\n\n      if (breakable && found) return found;\n    }\n  }\n\n  if (type !== 'directed') {\n    found = fn(breakable, nodeData.undirected, callback);\n\n    if (breakable && found) return found;\n  }\n\n  return;\n}\n\n/**\n * Function creating an array of edges for the given type & the given node.\n *\n * @param  {boolean} multi     - Whether the graph is multi or not.\n * @param  {string}  type      - Type of edges to retrieve.\n * @param  {string}  direction - In or out?\n * @param  {any}     nodeData  - Target node's data.\n * @return {array}             - Array of edges.\n */\nfunction createEdgeArrayForNode(multi, type, direction, nodeData) {\n  const edges = []; // TODO: possibility to know size beforehand or factorize with map\n\n  forEachEdgeForNode(false, multi, type, direction, nodeData, function (key) {\n    edges.push(key);\n  });\n\n  return edges;\n}\n\n/**\n * Function iterating over a node's edges using a callback.\n *\n * @param  {string}   type      - Type of edges to retrieve.\n * @param  {string}   direction - In or out?\n * @param  {any}      nodeData  - Target node's data.\n * @return {Iterator}\n */\nfunction createEdgeIteratorForNode(type, direction, nodeData) {\n  let iterator = Iterator.empty();\n\n  if (type !== 'undirected') {\n    if (direction !== 'out' && typeof nodeData.in !== 'undefined')\n      iterator = chain(iterator, createIterator(nodeData.in));\n    if (direction !== 'in' && typeof nodeData.out !== 'undefined')\n      iterator = chain(\n        iterator,\n        createIterator(nodeData.out, !direction ? nodeData.key : undefined)\n      );\n  }\n\n  if (type !== 'directed' && typeof nodeData.undirected !== 'undefined') {\n    iterator = chain(iterator, createIterator(nodeData.undirected));\n  }\n\n  return iterator;\n}\n\n/**\n * Function iterating over edges for the given path using a callback to match\n * one of them.\n *\n * @param  {string}   type       - Type of edges to retrieve.\n * @param  {boolean}  multi      - Whether the graph is multi.\n * @param  {string}   direction  - In or out?\n * @param  {NodeData} sourceData - Source node's data.\n * @param  {string}   target     - Target node.\n * @param  {function} callback   - Function to call.\n */\nfunction forEachEdgeForPath(\n  breakable,\n  type,\n  multi,\n  direction,\n  sourceData,\n  target,\n  callback\n) {\n  const fn = multi ? forEachForKeyMulti : forEachForKeySimple;\n\n  let found;\n\n  if (type !== 'undirected') {\n    if (typeof sourceData.in !== 'undefined' && direction !== 'out') {\n      found = fn(breakable, sourceData.in, target, callback);\n\n      if (breakable && found) return found;\n    }\n\n    if (\n      typeof sourceData.out !== 'undefined' &&\n      direction !== 'in' &&\n      (direction || sourceData.key !== target)\n    ) {\n      found = fn(breakable, sourceData.out, target, callback);\n\n      if (breakable && found) return found;\n    }\n  }\n\n  if (type !== 'directed') {\n    if (typeof sourceData.undirected !== 'undefined') {\n      found = fn(breakable, sourceData.undirected, target, callback);\n\n      if (breakable && found) return found;\n    }\n  }\n\n  return;\n}\n\n/**\n * Function creating an array of edges for the given path.\n *\n * @param  {string}   type       - Type of edges to retrieve.\n * @param  {boolean}  multi      - Whether the graph is multi.\n * @param  {string}   direction  - In or out?\n * @param  {NodeData} sourceData - Source node's data.\n * @param  {any}      target     - Target node.\n * @return {array}               - Array of edges.\n */\nfunction createEdgeArrayForPath(type, multi, direction, sourceData, target) {\n  const edges = []; // TODO: possibility to know size beforehand or factorize with map\n\n  forEachEdgeForPath(\n    false,\n    type,\n    multi,\n    direction,\n    sourceData,\n    target,\n    function (key) {\n      edges.push(key);\n    }\n  );\n\n  return edges;\n}\n\n/**\n * Function returning an iterator over edges for the given path.\n *\n * @param  {string}   type       - Type of edges to retrieve.\n * @param  {string}   direction  - In or out?\n * @param  {NodeData} sourceData - Source node's data.\n * @param  {string}   target     - Target node.\n * @param  {function} callback   - Function to call.\n */\nfunction createEdgeIteratorForPath(type, direction, sourceData, target) {\n  let iterator = Iterator.empty();\n\n  if (type !== 'undirected') {\n    if (\n      typeof sourceData.in !== 'undefined' &&\n      direction !== 'out' &&\n      target in sourceData.in\n    )\n      iterator = chain(iterator, createIteratorForKey(sourceData.in, target));\n\n    if (\n      typeof sourceData.out !== 'undefined' &&\n      direction !== 'in' &&\n      target in sourceData.out &&\n      (direction || sourceData.key !== target)\n    )\n      iterator = chain(iterator, createIteratorForKey(sourceData.out, target));\n  }\n\n  if (type !== 'directed') {\n    if (\n      typeof sourceData.undirected !== 'undefined' &&\n      target in sourceData.undirected\n    )\n      iterator = chain(\n        iterator,\n        createIteratorForKey(sourceData.undirected, target)\n      );\n  }\n\n  return iterator;\n}\n\n/**\n * Function attaching an edge array creator method to the Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachEdgeArrayCreator(Class, description) {\n  const {name, type, direction} = description;\n\n  /**\n   * Function returning an array of certain edges.\n   *\n   * Arity 0: Return all the relevant edges.\n   *\n   * Arity 1: Return all of a node's relevant edges.\n   * @param  {any}   node   - Target node.\n   *\n   * Arity 2: Return the relevant edges across the given path.\n   * @param  {any}   source - Source node.\n   * @param  {any}   target - Target node.\n   *\n   * @return {array|number} - The edges or the number of edges.\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[name] = function (source, target) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type)\n      return [];\n\n    if (!arguments.length) return createEdgeArray(this, type);\n\n    if (arguments.length === 1) {\n      source = '' + source;\n\n      const nodeData = this._nodes.get(source);\n\n      if (typeof nodeData === 'undefined')\n        throw new NotFoundGraphError(\n          `Graph.${name}: could not find the \"${source}\" node in the graph.`\n        );\n\n      // Iterating over a node's edges\n      return createEdgeArrayForNode(\n        this.multi,\n        type === 'mixed' ? this.type : type,\n        direction,\n        nodeData\n      );\n    }\n\n    if (arguments.length === 2) {\n      source = '' + source;\n      target = '' + target;\n\n      const sourceData = this._nodes.get(source);\n\n      if (!sourceData)\n        throw new NotFoundGraphError(\n          `Graph.${name}:  could not find the \"${source}\" source node in the graph.`\n        );\n\n      if (!this._nodes.has(target))\n        throw new NotFoundGraphError(\n          `Graph.${name}:  could not find the \"${target}\" target node in the graph.`\n        );\n\n      // Iterating over the edges between source & target\n      return createEdgeArrayForPath(\n        type,\n        this.multi,\n        direction,\n        sourceData,\n        target\n      );\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.${name}: too many arguments (expecting 0, 1 or 2 and got ${arguments.length}).`\n    );\n  };\n}\n\n/**\n * Function attaching a edge callback iterator method to the Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachForEachEdge(Class, description) {\n  const {name, type, direction} = description;\n\n  const forEachName = 'forEach' + name[0].toUpperCase() + name.slice(1, -1);\n\n  /**\n   * Function iterating over the graph's relevant edges by applying the given\n   * callback.\n   *\n   * Arity 1: Iterate over all the relevant edges.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 2: Iterate over all of a node's relevant edges.\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 3: Iterate over the relevant edges across the given path.\n   * @param  {any}      source   - Source node.\n   * @param  {any}      target   - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[forEachName] = function (source, target, callback) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type) return;\n\n    if (arguments.length === 1) {\n      callback = source;\n      return forEachEdge(false, this, type, callback);\n    }\n\n    if (arguments.length === 2) {\n      source = '' + source;\n      callback = target;\n\n      const nodeData = this._nodes.get(source);\n\n      if (typeof nodeData === 'undefined')\n        throw new NotFoundGraphError(\n          `Graph.${forEachName}: could not find the \"${source}\" node in the graph.`\n        );\n\n      // Iterating over a node's edges\n      // TODO: maybe attach the sub method to the instance dynamically?\n      return forEachEdgeForNode(\n        false,\n        this.multi,\n        type === 'mixed' ? this.type : type,\n        direction,\n        nodeData,\n        callback\n      );\n    }\n\n    if (arguments.length === 3) {\n      source = '' + source;\n      target = '' + target;\n\n      const sourceData = this._nodes.get(source);\n\n      if (!sourceData)\n        throw new NotFoundGraphError(\n          `Graph.${forEachName}:  could not find the \"${source}\" source node in the graph.`\n        );\n\n      if (!this._nodes.has(target))\n        throw new NotFoundGraphError(\n          `Graph.${forEachName}:  could not find the \"${target}\" target node in the graph.`\n        );\n\n      // Iterating over the edges between source & target\n      return forEachEdgeForPath(\n        false,\n        type,\n        this.multi,\n        direction,\n        sourceData,\n        target,\n        callback\n      );\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.${forEachName}: too many arguments (expecting 1, 2 or 3 and got ${arguments.length}).`\n    );\n  };\n\n  /**\n   * Function mapping the graph's relevant edges by applying the given\n   * callback.\n   *\n   * Arity 1: Map all the relevant edges.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 2: Map all of a node's relevant edges.\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 3: Map the relevant edges across the given path.\n   * @param  {any}      source   - Source node.\n   * @param  {any}      target   - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const mapName = 'map' + name[0].toUpperCase() + name.slice(1);\n\n  Class.prototype[mapName] = function () {\n    const args = Array.prototype.slice.call(arguments);\n    const callback = args.pop();\n\n    let result;\n\n    // We know the result length beforehand\n    if (args.length === 0) {\n      let length = 0;\n\n      if (type !== 'directed') length += this.undirectedSize;\n      if (type !== 'undirected') length += this.directedSize;\n\n      result = new Array(length);\n\n      let i = 0;\n\n      args.push((e, ea, s, t, sa, ta, u) => {\n        result[i++] = callback(e, ea, s, t, sa, ta, u);\n      });\n    }\n\n    // We don't know the result length beforehand\n    // TODO: we can in some instances of simple graphs, knowing degree\n    else {\n      result = [];\n\n      args.push((e, ea, s, t, sa, ta, u) => {\n        result.push(callback(e, ea, s, t, sa, ta, u));\n      });\n    }\n\n    this[forEachName].apply(this, args);\n\n    return result;\n  };\n\n  /**\n   * Function filtering the graph's relevant edges using the provided predicate\n   * function.\n   *\n   * Arity 1: Filter all the relevant edges.\n   * @param  {function} predicate - Predicate to use.\n   *\n   * Arity 2: Filter all of a node's relevant edges.\n   * @param  {any}      node      - Target node.\n   * @param  {function} predicate - Predicate to use.\n   *\n   * Arity 3: Filter the relevant edges across the given path.\n   * @param  {any}      source    - Source node.\n   * @param  {any}      target    - Target node.\n   * @param  {function} predicate - Predicate to use.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const filterName = 'filter' + name[0].toUpperCase() + name.slice(1);\n\n  Class.prototype[filterName] = function () {\n    const args = Array.prototype.slice.call(arguments);\n    const callback = args.pop();\n\n    const result = [];\n\n    args.push((e, ea, s, t, sa, ta, u) => {\n      if (callback(e, ea, s, t, sa, ta, u)) result.push(e);\n    });\n\n    this[forEachName].apply(this, args);\n\n    return result;\n  };\n\n  /**\n   * Function reducing the graph's relevant edges using the provided accumulator\n   * function.\n   *\n   * Arity 1: Reduce all the relevant edges.\n   * @param  {function} accumulator  - Accumulator to use.\n   * @param  {any}      initialValue - Initial value.\n   *\n   * Arity 2: Reduce all of a node's relevant edges.\n   * @param  {any}      node         - Target node.\n   * @param  {function} accumulator  - Accumulator to use.\n   * @param  {any}      initialValue - Initial value.\n   *\n   * Arity 3: Reduce the relevant edges across the given path.\n   * @param  {any}      source       - Source node.\n   * @param  {any}      target       - Target node.\n   * @param  {function} accumulator  - Accumulator to use.\n   * @param  {any}      initialValue - Initial value.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const reduceName = 'reduce' + name[0].toUpperCase() + name.slice(1);\n\n  Class.prototype[reduceName] = function () {\n    let args = Array.prototype.slice.call(arguments);\n\n    if (args.length < 2 || args.length > 4) {\n      throw new InvalidArgumentsGraphError(\n        `Graph.${reduceName}: invalid number of arguments (expecting 2, 3 or 4 and got ${args.length}).`\n      );\n    }\n\n    if (\n      typeof args[args.length - 1] === 'function' &&\n      typeof args[args.length - 2] !== 'function'\n    ) {\n      throw new InvalidArgumentsGraphError(\n        `Graph.${reduceName}: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.`\n      );\n    }\n\n    let callback;\n    let initialValue;\n\n    if (args.length === 2) {\n      callback = args[0];\n      initialValue = args[1];\n      args = [];\n    } else if (args.length === 3) {\n      callback = args[1];\n      initialValue = args[2];\n      args = [args[0]];\n    } else if (args.length === 4) {\n      callback = args[2];\n      initialValue = args[3];\n      args = [args[0], args[1]];\n    }\n\n    let accumulator = initialValue;\n\n    args.push((e, ea, s, t, sa, ta, u) => {\n      accumulator = callback(accumulator, e, ea, s, t, sa, ta, u);\n    });\n\n    this[forEachName].apply(this, args);\n\n    return accumulator;\n  };\n}\n\n/**\n * Function attaching a breakable edge callback iterator method to the Graph\n * prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachFindEdge(Class, description) {\n  const {name, type, direction} = description;\n\n  const findEdgeName = 'find' + name[0].toUpperCase() + name.slice(1, -1);\n\n  /**\n   * Function iterating over the graph's relevant edges in order to match\n   * one of them using the provided predicate function.\n   *\n   * Arity 1: Iterate over all the relevant edges.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 2: Iterate over all of a node's relevant edges.\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 3: Iterate over the relevant edges across the given path.\n   * @param  {any}      source   - Source node.\n   * @param  {any}      target   - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[findEdgeName] = function (source, target, callback) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type)\n      return false;\n\n    if (arguments.length === 1) {\n      callback = source;\n      return forEachEdge(true, this, type, callback);\n    }\n\n    if (arguments.length === 2) {\n      source = '' + source;\n      callback = target;\n\n      const nodeData = this._nodes.get(source);\n\n      if (typeof nodeData === 'undefined')\n        throw new NotFoundGraphError(\n          `Graph.${findEdgeName}: could not find the \"${source}\" node in the graph.`\n        );\n\n      // Iterating over a node's edges\n      // TODO: maybe attach the sub method to the instance dynamically?\n      return forEachEdgeForNode(\n        true,\n        this.multi,\n        type === 'mixed' ? this.type : type,\n        direction,\n        nodeData,\n        callback\n      );\n    }\n\n    if (arguments.length === 3) {\n      source = '' + source;\n      target = '' + target;\n\n      const sourceData = this._nodes.get(source);\n\n      if (!sourceData)\n        throw new NotFoundGraphError(\n          `Graph.${findEdgeName}:  could not find the \"${source}\" source node in the graph.`\n        );\n\n      if (!this._nodes.has(target))\n        throw new NotFoundGraphError(\n          `Graph.${findEdgeName}:  could not find the \"${target}\" target node in the graph.`\n        );\n\n      // Iterating over the edges between source & target\n      return forEachEdgeForPath(\n        true,\n        type,\n        this.multi,\n        direction,\n        sourceData,\n        target,\n        callback\n      );\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.${findEdgeName}: too many arguments (expecting 1, 2 or 3 and got ${arguments.length}).`\n    );\n  };\n\n  /**\n   * Function iterating over the graph's relevant edges in order to assert\n   * whether any one of them matches the provided predicate function.\n   *\n   * Arity 1: Iterate over all the relevant edges.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 2: Iterate over all of a node's relevant edges.\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 3: Iterate over the relevant edges across the given path.\n   * @param  {any}      source   - Source node.\n   * @param  {any}      target   - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const someName = 'some' + name[0].toUpperCase() + name.slice(1, -1);\n\n  Class.prototype[someName] = function () {\n    const args = Array.prototype.slice.call(arguments);\n    const callback = args.pop();\n\n    args.push((e, ea, s, t, sa, ta, u) => {\n      return callback(e, ea, s, t, sa, ta, u);\n    });\n\n    const found = this[findEdgeName].apply(this, args);\n\n    if (found) return true;\n\n    return false;\n  };\n\n  /**\n   * Function iterating over the graph's relevant edges in order to assert\n   * whether all of them matche the provided predicate function.\n   *\n   * Arity 1: Iterate over all the relevant edges.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 2: Iterate over all of a node's relevant edges.\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 3: Iterate over the relevant edges across the given path.\n   * @param  {any}      source   - Source node.\n   * @param  {any}      target   - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const everyName = 'every' + name[0].toUpperCase() + name.slice(1, -1);\n\n  Class.prototype[everyName] = function () {\n    const args = Array.prototype.slice.call(arguments);\n    const callback = args.pop();\n\n    args.push((e, ea, s, t, sa, ta, u) => {\n      return !callback(e, ea, s, t, sa, ta, u);\n    });\n\n    const found = this[findEdgeName].apply(this, args);\n\n    if (found) return false;\n\n    return true;\n  };\n}\n\n/**\n * Function attaching an edge iterator method to the Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachEdgeIteratorCreator(Class, description) {\n  const {name: originalName, type, direction} = description;\n\n  const name = originalName.slice(0, -1) + 'Entries';\n\n  /**\n   * Function returning an iterator over the graph's edges.\n   *\n   * Arity 0: Iterate over all the relevant edges.\n   *\n   * Arity 1: Iterate over all of a node's relevant edges.\n   * @param  {any}   node   - Target node.\n   *\n   * Arity 2: Iterate over the relevant edges across the given path.\n   * @param  {any}   source - Source node.\n   * @param  {any}   target - Target node.\n   *\n   * @return {array|number} - The edges or the number of edges.\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[name] = function (source, target) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type)\n      return Iterator.empty();\n\n    if (!arguments.length) return createEdgeIterator(this, type);\n\n    if (arguments.length === 1) {\n      source = '' + source;\n\n      const sourceData = this._nodes.get(source);\n\n      if (!sourceData)\n        throw new NotFoundGraphError(\n          `Graph.${name}: could not find the \"${source}\" node in the graph.`\n        );\n\n      // Iterating over a node's edges\n      return createEdgeIteratorForNode(type, direction, sourceData);\n    }\n\n    if (arguments.length === 2) {\n      source = '' + source;\n      target = '' + target;\n\n      const sourceData = this._nodes.get(source);\n\n      if (!sourceData)\n        throw new NotFoundGraphError(\n          `Graph.${name}:  could not find the \"${source}\" source node in the graph.`\n        );\n\n      if (!this._nodes.has(target))\n        throw new NotFoundGraphError(\n          `Graph.${name}:  could not find the \"${target}\" target node in the graph.`\n        );\n\n      // Iterating over the edges between source & target\n      return createEdgeIteratorForPath(type, direction, sourceData, target);\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.${name}: too many arguments (expecting 0, 1 or 2 and got ${arguments.length}).`\n    );\n  };\n}\n\n/**\n * Function attaching every edge iteration method to the Graph class.\n *\n * @param {function} Graph - Graph class.\n */\nexport default function attachEdgeIterationMethods(Graph) {\n  EDGES_ITERATION.forEach(description => {\n    attachEdgeArrayCreator(Graph, description);\n    attachForEachEdge(Graph, description);\n    attachFindEdge(Graph, description);\n    attachEdgeIteratorCreator(Graph, description);\n  });\n}\n","/**\n * Graphology Neighbor Iteration\n * ==============================\n *\n * Attaching some methods to the Graph class to be able to iterate over\n * neighbors.\n */\nimport Iterator from 'obliterator/iterator';\nimport chain from 'obliterator/chain';\n\nimport {NotFoundGraphError, InvalidArgumentsGraphError} from '../errors';\n\n/**\n * Definitions.\n */\nconst NEIGHBORS_ITERATION = [\n  {\n    name: 'neighbors',\n    type: 'mixed'\n  },\n  {\n    name: 'inNeighbors',\n    type: 'directed',\n    direction: 'in'\n  },\n  {\n    name: 'outNeighbors',\n    type: 'directed',\n    direction: 'out'\n  },\n  {\n    name: 'inboundNeighbors',\n    type: 'mixed',\n    direction: 'in'\n  },\n  {\n    name: 'outboundNeighbors',\n    type: 'mixed',\n    direction: 'out'\n  },\n  {\n    name: 'directedNeighbors',\n    type: 'directed'\n  },\n  {\n    name: 'undirectedNeighbors',\n    type: 'undirected'\n  }\n];\n\n/**\n * Helpers.\n */\nfunction CompositeSetWrapper() {\n  this.A = null;\n  this.B = null;\n}\n\nCompositeSetWrapper.prototype.wrap = function (set) {\n  if (this.A === null) this.A = set;\n  else if (this.B === null) this.B = set;\n};\n\nCompositeSetWrapper.prototype.has = function (key) {\n  if (this.A !== null && key in this.A) return true;\n  if (this.B !== null && key in this.B) return true;\n  return false;\n};\n\n/**\n * Function iterating over the given node's relevant neighbors to match\n * one of them using a predicated function.\n *\n * @param  {string}   type      - Type of neighbors.\n * @param  {string}   direction - Direction.\n * @param  {any}      nodeData  - Target node's data.\n * @param  {function} callback  - Callback to use.\n */\nfunction forEachInObjectOnce(breakable, visited, nodeData, object, callback) {\n  for (const k in object) {\n    const edgeData = object[k];\n\n    const sourceData = edgeData.source;\n    const targetData = edgeData.target;\n\n    const neighborData = sourceData === nodeData ? targetData : sourceData;\n\n    if (visited && visited.has(neighborData.key)) continue;\n\n    const shouldBreak = callback(neighborData.key, neighborData.attributes);\n\n    if (breakable && shouldBreak) return neighborData.key;\n  }\n\n  return;\n}\n\nfunction forEachNeighbor(breakable, type, direction, nodeData, callback) {\n  // If we want only undirected or in or out, we can roll some optimizations\n  if (type !== 'mixed') {\n    if (type === 'undirected')\n      return forEachInObjectOnce(\n        breakable,\n        null,\n        nodeData,\n        nodeData.undirected,\n        callback\n      );\n\n    if (typeof direction === 'string')\n      return forEachInObjectOnce(\n        breakable,\n        null,\n        nodeData,\n        nodeData[direction],\n        callback\n      );\n  }\n\n  // Else we need to keep a set of neighbors not to return duplicates\n  // We cheat by querying the other adjacencies\n  const visited = new CompositeSetWrapper();\n\n  let found;\n\n  if (type !== 'undirected') {\n    if (direction !== 'out') {\n      found = forEachInObjectOnce(\n        breakable,\n        null,\n        nodeData,\n        nodeData.in,\n        callback\n      );\n\n      if (breakable && found) return found;\n\n      visited.wrap(nodeData.in);\n    }\n    if (direction !== 'in') {\n      found = forEachInObjectOnce(\n        breakable,\n        visited,\n        nodeData,\n        nodeData.out,\n        callback\n      );\n\n      if (breakable && found) return found;\n\n      visited.wrap(nodeData.out);\n    }\n  }\n\n  if (type !== 'directed') {\n    found = forEachInObjectOnce(\n      breakable,\n      visited,\n      nodeData,\n      nodeData.undirected,\n      callback\n    );\n\n    if (breakable && found) return found;\n  }\n\n  return;\n}\n\n/**\n * Function creating an array of relevant neighbors for the given node.\n *\n * @param  {string}       type      - Type of neighbors.\n * @param  {string}       direction - Direction.\n * @param  {any}          nodeData  - Target node's data.\n * @return {Array}                  - The list of neighbors.\n */\nfunction createNeighborArrayForNode(type, direction, nodeData) {\n  // If we want only undirected or in or out, we can roll some optimizations\n  if (type !== 'mixed') {\n    if (type === 'undirected') return Object.keys(nodeData.undirected);\n\n    if (typeof direction === 'string') return Object.keys(nodeData[direction]);\n  }\n\n  const neighbors = [];\n\n  forEachNeighbor(false, type, direction, nodeData, function (key) {\n    neighbors.push(key);\n  });\n\n  return neighbors;\n}\n\n/**\n * Function returning an iterator over the given node's relevant neighbors.\n *\n * @param  {string}   type      - Type of neighbors.\n * @param  {string}   direction - Direction.\n * @param  {any}      nodeData  - Target node's data.\n * @return {Iterator}\n */\nfunction createDedupedObjectIterator(visited, nodeData, object) {\n  const keys = Object.keys(object);\n  const l = keys.length;\n\n  let i = 0;\n\n  return new Iterator(function next() {\n    let neighborData = null;\n\n    do {\n      if (i >= l) {\n        if (visited) visited.wrap(object);\n        return {done: true};\n      }\n\n      const edgeData = object[keys[i++]];\n\n      const sourceData = edgeData.source;\n      const targetData = edgeData.target;\n\n      neighborData = sourceData === nodeData ? targetData : sourceData;\n\n      if (visited && visited.has(neighborData.key)) {\n        neighborData = null;\n        continue;\n      }\n    } while (neighborData === null);\n\n    return {\n      done: false,\n      value: {neighbor: neighborData.key, attributes: neighborData.attributes}\n    };\n  });\n}\n\nfunction createNeighborIterator(type, direction, nodeData) {\n  // If we want only undirected or in or out, we can roll some optimizations\n  if (type !== 'mixed') {\n    if (type === 'undirected')\n      return createDedupedObjectIterator(null, nodeData, nodeData.undirected);\n\n    if (typeof direction === 'string')\n      return createDedupedObjectIterator(null, nodeData, nodeData[direction]);\n  }\n\n  let iterator = Iterator.empty();\n\n  // Else we need to keep a set of neighbors not to return duplicates\n  // We cheat by querying the other adjacencies\n  const visited = new CompositeSetWrapper();\n\n  if (type !== 'undirected') {\n    if (direction !== 'out') {\n      iterator = chain(\n        iterator,\n        createDedupedObjectIterator(visited, nodeData, nodeData.in)\n      );\n    }\n    if (direction !== 'in') {\n      iterator = chain(\n        iterator,\n        createDedupedObjectIterator(visited, nodeData, nodeData.out)\n      );\n    }\n  }\n\n  if (type !== 'directed') {\n    iterator = chain(\n      iterator,\n      createDedupedObjectIterator(visited, nodeData, nodeData.undirected)\n    );\n  }\n\n  return iterator;\n}\n\n/**\n * Function attaching a neighbors array creator method to the Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachNeighborArrayCreator(Class, description) {\n  const {name, type, direction} = description;\n\n  /**\n   * Function returning an array of certain neighbors.\n   *\n   * @param  {any}   node   - Target node.\n   * @return {array} - The neighbors of neighbors.\n   *\n   * @throws {Error} - Will throw if node is not found in the graph.\n   */\n  Class.prototype[name] = function (node) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type)\n      return [];\n\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (typeof nodeData === 'undefined')\n      throw new NotFoundGraphError(\n        `Graph.${name}: could not find the \"${node}\" node in the graph.`\n      );\n\n    // Here, we want to iterate over a node's relevant neighbors\n    return createNeighborArrayForNode(\n      type === 'mixed' ? this.type : type,\n      direction,\n      nodeData\n    );\n  };\n}\n\n/**\n * Function attaching a neighbors callback iterator method to the Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachForEachNeighbor(Class, description) {\n  const {name, type, direction} = description;\n\n  const forEachName = 'forEach' + name[0].toUpperCase() + name.slice(1, -1);\n\n  /**\n   * Function iterating over all the relevant neighbors using a callback.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[forEachName] = function (node, callback) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type) return;\n\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (typeof nodeData === 'undefined')\n      throw new NotFoundGraphError(\n        `Graph.${forEachName}: could not find the \"${node}\" node in the graph.`\n      );\n\n    // Here, we want to iterate over a node's relevant neighbors\n    forEachNeighbor(\n      false,\n      type === 'mixed' ? this.type : type,\n      direction,\n      nodeData,\n      callback\n    );\n  };\n\n  /**\n   * Function mapping the relevant neighbors using a callback.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const mapName = 'map' + name[0].toUpperCase() + name.slice(1);\n\n  Class.prototype[mapName] = function (node, callback) {\n    // TODO: optimize when size is known beforehand\n    const result = [];\n\n    this[forEachName](node, (n, a) => {\n      result.push(callback(n, a));\n    });\n\n    return result;\n  };\n\n  /**\n   * Function filtering the relevant neighbors using a callback.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const filterName = 'filter' + name[0].toUpperCase() + name.slice(1);\n\n  Class.prototype[filterName] = function (node, callback) {\n    const result = [];\n\n    this[forEachName](node, (n, a) => {\n      if (callback(n, a)) result.push(n);\n    });\n\n    return result;\n  };\n\n  /**\n   * Function reducing the relevant neighbors using a callback.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const reduceName = 'reduce' + name[0].toUpperCase() + name.slice(1);\n\n  Class.prototype[reduceName] = function (node, callback, initialValue) {\n    if (arguments.length < 3)\n      throw new InvalidArgumentsGraphError(\n        `Graph.${reduceName}: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.`\n      );\n\n    let accumulator = initialValue;\n\n    this[forEachName](node, (n, a) => {\n      accumulator = callback(accumulator, n, a);\n    });\n\n    return accumulator;\n  };\n}\n\n/**\n * Function attaching a breakable neighbors callback iterator method to the\n * Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachFindNeighbor(Class, description) {\n  const {name, type, direction} = description;\n\n  const capitalizedSingular = name[0].toUpperCase() + name.slice(1, -1);\n\n  const findName = 'find' + capitalizedSingular;\n\n  /**\n   * Function iterating over all the relevant neighbors using a callback.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[findName] = function (node, callback) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type) return;\n\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (typeof nodeData === 'undefined')\n      throw new NotFoundGraphError(\n        `Graph.${findName}: could not find the \"${node}\" node in the graph.`\n      );\n\n    // Here, we want to iterate over a node's relevant neighbors\n    return forEachNeighbor(\n      true,\n      type === 'mixed' ? this.type : type,\n      direction,\n      nodeData,\n      callback\n    );\n  };\n\n  /**\n   * Function iterating over all the relevant neighbors to find if any of them\n   * matches the given predicate.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const someName = 'some' + capitalizedSingular;\n\n  Class.prototype[someName] = function (node, callback) {\n    const found = this[findName](node, callback);\n\n    if (found) return true;\n\n    return false;\n  };\n\n  /**\n   * Function iterating over all the relevant neighbors to find if all of them\n   * matche the given predicate.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const everyName = 'every' + capitalizedSingular;\n\n  Class.prototype[everyName] = function (node, callback) {\n    const found = this[findName](node, (n, a) => {\n      return !callback(n, a);\n    });\n\n    if (found) return false;\n\n    return true;\n  };\n}\n\n/**\n * Function attaching a neighbors callback iterator method to the Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachNeighborIteratorCreator(Class, description) {\n  const {name, type, direction} = description;\n\n  const iteratorName = name.slice(0, -1) + 'Entries';\n\n  /**\n   * Function returning an iterator over all the relevant neighbors.\n   *\n   * @param  {any}      node     - Target node.\n   * @return {Iterator}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[iteratorName] = function (node) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type)\n      return Iterator.empty();\n\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (typeof nodeData === 'undefined')\n      throw new NotFoundGraphError(\n        `Graph.${iteratorName}: could not find the \"${node}\" node in the graph.`\n      );\n\n    // Here, we want to iterate over a node's relevant neighbors\n    return createNeighborIterator(\n      type === 'mixed' ? this.type : type,\n      direction,\n      nodeData\n    );\n  };\n}\n\n/**\n * Function attaching every neighbor iteration method to the Graph class.\n *\n * @param {function} Graph - Graph class.\n */\nexport default function attachNeighborIterationMethods(Graph) {\n  NEIGHBORS_ITERATION.forEach(description => {\n    attachNeighborArrayCreator(Graph, description);\n    attachForEachNeighbor(Graph, description);\n    attachFindNeighbor(Graph, description);\n    attachNeighborIteratorCreator(Graph, description);\n  });\n}\n","/**\n * Graphology Adjacency Iteration\n * ===============================\n *\n * Attaching some methods to the Graph class to be able to iterate over a\n * graph's adjacency.\n */\n\n/**\n * Function iterating over a simple graph's adjacency using a callback.\n *\n * @param {boolean}  breakable         - Can we break?\n * @param {boolean}  assymetric        - Whether to emit undirected edges only once.\n * @param {boolean}  disconnectedNodes - Whether to emit disconnected nodes.\n * @param {Graph}    graph             - Target Graph instance.\n * @param {callback} function          - Iteration callback.\n */\nexport function forEachAdjacency(\n  breakable,\n  assymetric,\n  disconnectedNodes,\n  graph,\n  callback\n) {\n  const iterator = graph._nodes.values();\n\n  const type = graph.type;\n\n  let step, sourceData, neighbor, adj, edgeData, targetData, shouldBreak;\n\n  while (((step = iterator.next()), step.done !== true)) {\n    let hasEdges = false;\n\n    sourceData = step.value;\n\n    if (type !== 'undirected') {\n      adj = sourceData.out;\n\n      for (neighbor in adj) {\n        edgeData = adj[neighbor];\n\n        do {\n          targetData = edgeData.target;\n\n          hasEdges = true;\n          shouldBreak = callback(\n            sourceData.key,\n            targetData.key,\n            sourceData.attributes,\n            targetData.attributes,\n            edgeData.key,\n            edgeData.attributes,\n            edgeData.undirected\n          );\n\n          if (breakable && shouldBreak) return edgeData;\n\n          edgeData = edgeData.next;\n        } while (edgeData);\n      }\n    }\n\n    if (type !== 'directed') {\n      adj = sourceData.undirected;\n\n      for (neighbor in adj) {\n        if (assymetric && sourceData.key > neighbor) continue;\n\n        edgeData = adj[neighbor];\n\n        do {\n          targetData = edgeData.target;\n\n          if (targetData.key !== neighbor) targetData = edgeData.source;\n\n          hasEdges = true;\n          shouldBreak = callback(\n            sourceData.key,\n            targetData.key,\n            sourceData.attributes,\n            targetData.attributes,\n            edgeData.key,\n            edgeData.attributes,\n            edgeData.undirected\n          );\n\n          if (breakable && shouldBreak) return edgeData;\n\n          edgeData = edgeData.next;\n        } while (edgeData);\n      }\n    }\n\n    if (disconnectedNodes && !hasEdges) {\n      shouldBreak = callback(\n        sourceData.key,\n        null,\n        sourceData.attributes,\n        null,\n        null,\n        null,\n        null\n      );\n\n      if (breakable && shouldBreak) return null;\n    }\n  }\n\n  return;\n}\n","/**\n * Graphology Serialization Utilities\n * ===================================\n *\n * Collection of functions used by the graph serialization schemes.\n */\nimport {InvalidArgumentsGraphError} from './errors';\nimport {assign, isPlainObject, isEmpty} from './utils';\n\n/**\n * Formats internal node data into a serialized node.\n *\n * @param  {any}    key  - The node's key.\n * @param  {object} data - Internal node's data.\n * @return {array}       - The serialized node.\n */\nexport function serializeNode(key, data) {\n  const serialized = {key};\n\n  if (!isEmpty(data.attributes))\n    serialized.attributes = assign({}, data.attributes);\n\n  return serialized;\n}\n\n/**\n * Formats internal edge data into a serialized edge.\n *\n * @param  {string} type - The graph's type.\n * @param  {any}    key  - The edge's key.\n * @param  {object} data - Internal edge's data.\n * @return {array}       - The serialized edge.\n */\nexport function serializeEdge(type, key, data) {\n  const serialized = {\n    key,\n    source: data.source.key,\n    target: data.target.key\n  };\n\n  if (!isEmpty(data.attributes))\n    serialized.attributes = assign({}, data.attributes);\n\n  if (type === 'mixed' && data.undirected) serialized.undirected = true;\n\n  return serialized;\n}\n\n/**\n * Checks whether the given value is a serialized node.\n *\n * @param  {mixed} value - Target value.\n * @return {string|null}\n */\nexport function validateSerializedNode(value) {\n  if (!isPlainObject(value))\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: invalid serialized node. A serialized node should be a plain object with at least a \"key\" property.'\n    );\n\n  if (!('key' in value))\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: serialized node is missing its key.'\n    );\n\n  if (\n    'attributes' in value &&\n    (!isPlainObject(value.attributes) || value.attributes === null)\n  )\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: invalid attributes. Attributes should be a plain object, null or omitted.'\n    );\n}\n\n/**\n * Checks whether the given value is a serialized edge.\n *\n * @param  {mixed} value - Target value.\n * @return {string|null}\n */\nexport function validateSerializedEdge(value) {\n  if (!isPlainObject(value))\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: invalid serialized edge. A serialized edge should be a plain object with at least a \"source\" & \"target\" property.'\n    );\n\n  if (!('source' in value))\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: serialized edge is missing its source.'\n    );\n\n  if (!('target' in value))\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: serialized edge is missing its target.'\n    );\n\n  if (\n    'attributes' in value &&\n    (!isPlainObject(value.attributes) || value.attributes === null)\n  )\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: invalid attributes. Attributes should be a plain object, null or omitted.'\n    );\n\n  if ('undirected' in value && typeof value.undirected !== 'boolean')\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: invalid undirectedness information. Undirected should be boolean or omitted.'\n    );\n}\n","/* eslint no-nested-ternary: 0 */\n/**\n * Graphology Reference Implementation\n * ====================================\n *\n * Reference implementation of the graphology specs.\n */\nimport {EventEmitter} from 'events';\nimport Iterator from 'obliterator/iterator';\nimport take from 'obliterator/take';\n\nimport {\n  InvalidArgumentsGraphError,\n  NotFoundGraphError,\n  UsageGraphError\n} from './errors';\n\nimport {\n  MixedNodeData,\n  DirectedNodeData,\n  UndirectedNodeData,\n  EdgeData\n} from './data';\n\nimport attachNodeAttributesMethods from './attributes/nodes';\nimport attachEdgeAttributesMethods from './attributes/edges';\nimport attachEdgeIterationMethods from './iteration/edges';\nimport attachNeighborIterationMethods from './iteration/neighbors';\nimport {forEachAdjacency} from './iteration/adjacency';\n\nimport {\n  serializeNode,\n  serializeEdge,\n  validateSerializedNode,\n  validateSerializedEdge\n} from './serialization';\n\nimport {\n  assign,\n  getMatchingEdge,\n  isPlainObject,\n  privateProperty,\n  readOnlyProperty,\n  incrementalIdStartingFromRandomByte,\n  validateHints\n} from './utils';\n\n/**\n * Constants.\n */\nconst INSTANCE_ID = incrementalIdStartingFromRandomByte();\n\n/**\n * Enums.\n */\nconst TYPES = new Set(['directed', 'undirected', 'mixed']);\n\nconst EMITTER_PROPS = new Set([\n  'domain',\n  '_events',\n  '_eventsCount',\n  '_maxListeners'\n]);\n\nconst EDGE_ADD_METHODS = [\n  {\n    name: verb => `${verb}Edge`,\n    generateKey: true\n  },\n  {\n    name: verb => `${verb}DirectedEdge`,\n    generateKey: true,\n    type: 'directed'\n  },\n  {\n    name: verb => `${verb}UndirectedEdge`,\n    generateKey: true,\n    type: 'undirected'\n  },\n  {\n    name: verb => `${verb}EdgeWithKey`\n  },\n  {\n    name: verb => `${verb}DirectedEdgeWithKey`,\n    type: 'directed'\n  },\n  {\n    name: verb => `${verb}UndirectedEdgeWithKey`,\n    type: 'undirected'\n  }\n];\n\n/**\n * Default options.\n */\nconst DEFAULTS = {\n  allowSelfLoops: true,\n  multi: false,\n  type: 'mixed'\n};\n\n/**\n * Abstract functions used by the Graph class for various methods.\n */\n\n/**\n * Internal method used to add a node to the given graph\n *\n * @param  {Graph}   graph           - Target graph.\n * @param  {any}     node            - The node's key.\n * @param  {object}  [attributes]    - Optional attributes.\n * @return {NodeData}                - Created node data.\n */\nfunction addNode(graph, node, attributes) {\n  if (attributes && !isPlainObject(attributes))\n    throw new InvalidArgumentsGraphError(\n      `Graph.addNode: invalid attributes. Expecting an object but got \"${attributes}\"`\n    );\n\n  // String coercion\n  node = '' + node;\n  attributes = attributes || {};\n\n  if (graph._nodes.has(node))\n    throw new UsageGraphError(\n      `Graph.addNode: the \"${node}\" node already exist in the graph.`\n    );\n\n  const data = new graph.NodeDataClass(node, attributes);\n\n  // Adding the node to internal register\n  graph._nodes.set(node, data);\n\n  // Emitting\n  graph.emit('nodeAdded', {\n    key: node,\n    attributes\n  });\n\n  return data;\n}\n\n/**\n * Same as the above but without sanity checks because we call this in contexts\n * where necessary checks were already done.\n */\nfunction unsafeAddNode(graph, node, attributes) {\n  const data = new graph.NodeDataClass(node, attributes);\n\n  graph._nodes.set(node, data);\n\n  graph.emit('nodeAdded', {\n    key: node,\n    attributes\n  });\n\n  return data;\n}\n\n/**\n * Internal method used to add an arbitrary edge to the given graph.\n *\n * @param  {Graph}   graph           - Target graph.\n * @param  {string}  name            - Name of the child method for errors.\n * @param  {boolean} mustGenerateKey - Should the graph generate an id?\n * @param  {boolean} undirected      - Whether the edge is undirected.\n * @param  {any}     edge            - The edge's key.\n * @param  {any}     source          - The source node.\n * @param  {any}     target          - The target node.\n * @param  {object}  [attributes]    - Optional attributes.\n * @return {any}                     - The edge.\n *\n * @throws {Error} - Will throw if the graph is of the wrong type.\n * @throws {Error} - Will throw if the given attributes are not an object.\n * @throws {Error} - Will throw if source or target doesn't exist.\n * @throws {Error} - Will throw if the edge already exist.\n */\nfunction addEdge(\n  graph,\n  name,\n  mustGenerateKey,\n  undirected,\n  edge,\n  source,\n  target,\n  attributes\n) {\n  // Checking validity of operation\n  if (!undirected && graph.type === 'undirected')\n    throw new UsageGraphError(\n      `Graph.${name}: you cannot add a directed edge to an undirected graph. Use the #.addEdge or #.addUndirectedEdge instead.`\n    );\n\n  if (undirected && graph.type === 'directed')\n    throw new UsageGraphError(\n      `Graph.${name}: you cannot add an undirected edge to a directed graph. Use the #.addEdge or #.addDirectedEdge instead.`\n    );\n\n  if (attributes && !isPlainObject(attributes))\n    throw new InvalidArgumentsGraphError(\n      `Graph.${name}: invalid attributes. Expecting an object but got \"${attributes}\"`\n    );\n\n  // Coercion of source & target:\n  source = '' + source;\n  target = '' + target;\n  attributes = attributes || {};\n\n  if (!graph.allowSelfLoops && source === target)\n    throw new UsageGraphError(\n      `Graph.${name}: source & target are the same (\"${source}\"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false.`\n    );\n\n  const sourceData = graph._nodes.get(source),\n    targetData = graph._nodes.get(target);\n\n  if (!sourceData)\n    throw new NotFoundGraphError(\n      `Graph.${name}: source node \"${source}\" not found.`\n    );\n\n  if (!targetData)\n    throw new NotFoundGraphError(\n      `Graph.${name}: target node \"${target}\" not found.`\n    );\n\n  // Must the graph generate an id for this edge?\n  const eventData = {\n    key: null,\n    undirected,\n    source,\n    target,\n    attributes\n  };\n\n  if (mustGenerateKey) {\n    // NOTE: in this case we can guarantee that the key does not already\n    // exist and is already correctly casted as a string\n    edge = graph._edgeKeyGenerator();\n  } else {\n    // Coercion of edge key\n    edge = '' + edge;\n\n    // Here, we have a key collision\n    if (graph._edges.has(edge))\n      throw new UsageGraphError(\n        `Graph.${name}: the \"${edge}\" edge already exists in the graph.`\n      );\n  }\n\n  // Here, we might have a source / target collision\n  if (\n    !graph.multi &&\n    (undirected\n      ? typeof sourceData.undirected[target] !== 'undefined'\n      : typeof sourceData.out[target] !== 'undefined')\n  ) {\n    throw new UsageGraphError(\n      `Graph.${name}: an edge linking \"${source}\" to \"${target}\" already exists. If you really want to add multiple edges linking those nodes, you should create a multi graph by using the 'multi' option.`\n    );\n  }\n\n  // Storing some data\n  const edgeData = new EdgeData(\n    undirected,\n    edge,\n    sourceData,\n    targetData,\n    attributes\n  );\n\n  // Adding the edge to the internal register\n  graph._edges.set(edge, edgeData);\n\n  // Incrementing node degree counters\n  const isSelfLoop = source === target;\n\n  if (undirected) {\n    sourceData.undirectedDegree++;\n    targetData.undirectedDegree++;\n\n    if (isSelfLoop) {\n      sourceData.undirectedLoops++;\n      graph._undirectedSelfLoopCount++;\n    }\n  } else {\n    sourceData.outDegree++;\n    targetData.inDegree++;\n\n    if (isSelfLoop) {\n      sourceData.directedLoops++;\n      graph._directedSelfLoopCount++;\n    }\n  }\n\n  // Updating relevant index\n  if (graph.multi) edgeData.attachMulti();\n  else edgeData.attach();\n\n  if (undirected) graph._undirectedSize++;\n  else graph._directedSize++;\n\n  // Emitting\n  eventData.key = edge;\n\n  graph.emit('edgeAdded', eventData);\n\n  return edge;\n}\n\n/**\n * Internal method used to add an arbitrary edge to the given graph.\n *\n * @param  {Graph}   graph           - Target graph.\n * @param  {string}  name            - Name of the child method for errors.\n * @param  {boolean} mustGenerateKey - Should the graph generate an id?\n * @param  {boolean} undirected      - Whether the edge is undirected.\n * @param  {any}     edge            - The edge's key.\n * @param  {any}     source          - The source node.\n * @param  {any}     target          - The target node.\n * @param  {object}  [attributes]    - Optional attributes.\n * @param  {boolean} [asUpdater]       - Are we updating or merging?\n * @return {any}                     - The edge.\n *\n * @throws {Error} - Will throw if the graph is of the wrong type.\n * @throws {Error} - Will throw if the given attributes are not an object.\n * @throws {Error} - Will throw if source or target doesn't exist.\n * @throws {Error} - Will throw if the edge already exist.\n */\nfunction mergeEdge(\n  graph,\n  name,\n  mustGenerateKey,\n  undirected,\n  edge,\n  source,\n  target,\n  attributes,\n  asUpdater\n) {\n  // Checking validity of operation\n  if (!undirected && graph.type === 'undirected')\n    throw new UsageGraphError(\n      `Graph.${name}: you cannot merge/update a directed edge to an undirected graph. Use the #.mergeEdge/#.updateEdge or #.addUndirectedEdge instead.`\n    );\n\n  if (undirected && graph.type === 'directed')\n    throw new UsageGraphError(\n      `Graph.${name}: you cannot merge/update an undirected edge to a directed graph. Use the #.mergeEdge/#.updateEdge or #.addDirectedEdge instead.`\n    );\n\n  if (attributes) {\n    if (asUpdater) {\n      if (typeof attributes !== 'function')\n        throw new InvalidArgumentsGraphError(\n          `Graph.${name}: invalid updater function. Expecting a function but got \"${attributes}\"`\n        );\n    } else {\n      if (!isPlainObject(attributes))\n        throw new InvalidArgumentsGraphError(\n          `Graph.${name}: invalid attributes. Expecting an object but got \"${attributes}\"`\n        );\n    }\n  }\n\n  // Coercion of source & target:\n  source = '' + source;\n  target = '' + target;\n\n  let updater;\n\n  if (asUpdater) {\n    updater = attributes;\n    attributes = undefined;\n  }\n\n  if (!graph.allowSelfLoops && source === target)\n    throw new UsageGraphError(\n      `Graph.${name}: source & target are the same (\"${source}\"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false.`\n    );\n\n  let sourceData = graph._nodes.get(source);\n  let targetData = graph._nodes.get(target);\n  let edgeData;\n\n  // Do we need to handle duplicate?\n  let alreadyExistingEdgeData;\n\n  if (!mustGenerateKey) {\n    edgeData = graph._edges.get(edge);\n\n    if (edgeData) {\n      // Here, we need to ensure, if the user gave a key, that source & target\n      // are consistent\n      if (edgeData.source.key !== source || edgeData.target.key !== target) {\n        // If source or target inconsistent\n        if (\n          !undirected ||\n          edgeData.source.key !== target ||\n          edgeData.target.key !== source\n        ) {\n          // If directed, or source/target aren't flipped\n          throw new UsageGraphError(\n            `Graph.${name}: inconsistency detected when attempting to merge the \"${edge}\" edge with \"${source}\" source & \"${target}\" target vs. (\"${edgeData.source.key}\", \"${edgeData.target.key}\").`\n          );\n        }\n      }\n\n      alreadyExistingEdgeData = edgeData;\n    }\n  }\n\n  // Here, we might have a source / target collision\n  if (!alreadyExistingEdgeData && !graph.multi && sourceData) {\n    alreadyExistingEdgeData = undirected\n      ? sourceData.undirected[target]\n      : sourceData.out[target];\n  }\n\n  // Handling duplicates\n  if (alreadyExistingEdgeData) {\n    const info = [alreadyExistingEdgeData.key, false, false, false];\n\n    // We can skip the attribute merging part if the user did not provide them\n    if (asUpdater ? !updater : !attributes) return info;\n\n    // Updating the attributes\n    if (asUpdater) {\n      const oldAttributes = alreadyExistingEdgeData.attributes;\n      alreadyExistingEdgeData.attributes = updater(oldAttributes);\n\n      graph.emit('edgeAttributesUpdated', {\n        type: 'replace',\n        key: alreadyExistingEdgeData.key,\n        attributes: alreadyExistingEdgeData.attributes\n      });\n    }\n\n    // Merging the attributes\n    else {\n      assign(alreadyExistingEdgeData.attributes, attributes);\n\n      graph.emit('edgeAttributesUpdated', {\n        type: 'merge',\n        key: alreadyExistingEdgeData.key,\n        attributes: alreadyExistingEdgeData.attributes,\n        data: attributes\n      });\n    }\n\n    return info;\n  }\n\n  attributes = attributes || {};\n\n  if (asUpdater && updater) attributes = updater(attributes);\n\n  // Must the graph generate an id for this edge?\n  const eventData = {\n    key: null,\n    undirected,\n    source,\n    target,\n    attributes\n  };\n\n  if (mustGenerateKey) {\n    // NOTE: in this case we can guarantee that the key does not already\n    // exist and is already correctly casted as a string\n    edge = graph._edgeKeyGenerator();\n  } else {\n    // Coercion of edge key\n    edge = '' + edge;\n\n    // Here, we have a key collision\n    if (graph._edges.has(edge))\n      throw new UsageGraphError(\n        `Graph.${name}: the \"${edge}\" edge already exists in the graph.`\n      );\n  }\n\n  let sourceWasAdded = false;\n  let targetWasAdded = false;\n\n  if (!sourceData) {\n    sourceData = unsafeAddNode(graph, source, {});\n    sourceWasAdded = true;\n\n    if (source === target) {\n      targetData = sourceData;\n      targetWasAdded = true;\n    }\n  }\n  if (!targetData) {\n    targetData = unsafeAddNode(graph, target, {});\n    targetWasAdded = true;\n  }\n\n  // Storing some data\n  edgeData = new EdgeData(undirected, edge, sourceData, targetData, attributes);\n\n  // Adding the edge to the internal register\n  graph._edges.set(edge, edgeData);\n\n  // Incrementing node degree counters\n  const isSelfLoop = source === target;\n\n  if (undirected) {\n    sourceData.undirectedDegree++;\n    targetData.undirectedDegree++;\n\n    if (isSelfLoop) {\n      sourceData.undirectedLoops++;\n      graph._undirectedSelfLoopCount++;\n    }\n  } else {\n    sourceData.outDegree++;\n    targetData.inDegree++;\n\n    if (isSelfLoop) {\n      sourceData.directedLoops++;\n      graph._directedSelfLoopCount++;\n    }\n  }\n\n  // Updating relevant index\n  if (graph.multi) edgeData.attachMulti();\n  else edgeData.attach();\n\n  if (undirected) graph._undirectedSize++;\n  else graph._directedSize++;\n\n  // Emitting\n  eventData.key = edge;\n\n  graph.emit('edgeAdded', eventData);\n\n  return [edge, true, sourceWasAdded, targetWasAdded];\n}\n\n/**\n * Internal method used to drop an edge.\n *\n * @param  {Graph}    graph    - Target graph.\n * @param  {EdgeData} edgeData - Data of the edge to drop.\n */\nfunction dropEdgeFromData(graph, edgeData) {\n  // Dropping the edge from the register\n  graph._edges.delete(edgeData.key);\n\n  // Updating related degrees\n  const {source: sourceData, target: targetData, attributes} = edgeData;\n\n  const undirected = edgeData.undirected;\n\n  const isSelfLoop = sourceData === targetData;\n\n  if (undirected) {\n    sourceData.undirectedDegree--;\n    targetData.undirectedDegree--;\n\n    if (isSelfLoop) {\n      sourceData.undirectedLoops--;\n      graph._undirectedSelfLoopCount--;\n    }\n  } else {\n    sourceData.outDegree--;\n    targetData.inDegree--;\n\n    if (isSelfLoop) {\n      sourceData.directedLoops--;\n      graph._directedSelfLoopCount--;\n    }\n  }\n\n  // Clearing index\n  if (graph.multi) edgeData.detachMulti();\n  else edgeData.detach();\n\n  if (undirected) graph._undirectedSize--;\n  else graph._directedSize--;\n\n  // Emitting\n  graph.emit('edgeDropped', {\n    key: edgeData.key,\n    attributes,\n    source: sourceData.key,\n    target: targetData.key,\n    undirected\n  });\n}\n\n/**\n * Graph class\n *\n * @constructor\n * @param  {object}  [options] - Options:\n * @param  {boolean}   [allowSelfLoops] - Allow self loops?\n * @param  {string}    [type]           - Type of the graph.\n * @param  {boolean}   [map]            - Allow references as keys?\n * @param  {boolean}   [multi]          - Allow parallel edges?\n *\n * @throws {Error} - Will throw if the arguments are not valid.\n */\nexport default class Graph extends EventEmitter {\n  constructor(options) {\n    super();\n\n    //-- Solving options\n    options = assign({}, DEFAULTS, options);\n\n    // Enforcing options validity\n    if (typeof options.multi !== 'boolean')\n      throw new InvalidArgumentsGraphError(\n        `Graph.constructor: invalid 'multi' option. Expecting a boolean but got \"${options.multi}\".`\n      );\n\n    if (!TYPES.has(options.type))\n      throw new InvalidArgumentsGraphError(\n        `Graph.constructor: invalid 'type' option. Should be one of \"mixed\", \"directed\" or \"undirected\" but got \"${options.type}\".`\n      );\n\n    if (typeof options.allowSelfLoops !== 'boolean')\n      throw new InvalidArgumentsGraphError(\n        `Graph.constructor: invalid 'allowSelfLoops' option. Expecting a boolean but got \"${options.allowSelfLoops}\".`\n      );\n\n    //-- Private properties\n\n    // Utilities\n    const NodeDataClass =\n      options.type === 'mixed'\n        ? MixedNodeData\n        : options.type === 'directed'\n        ? DirectedNodeData\n        : UndirectedNodeData;\n\n    privateProperty(this, 'NodeDataClass', NodeDataClass);\n\n    // Internal edge key generator\n\n    // NOTE: this internal generator produce keys that are strings\n    // composed of a weird prefix, an incremental instance id starting from\n    // a random byte and finally an internal instance incremental id.\n    // All this to avoid intra-frame and cross-frame adversarial inputs\n    // that can force a single #.addEdge call to degenerate into a O(n)\n    // available key search loop.\n\n    // It also ensures that automatically generated edge keys are unlikely\n    // to produce collisions with arbitrary keys given by users.\n    const instancePrefix = 'geid_' + INSTANCE_ID() + '_';\n    let edgeId = 0;\n\n    const edgeKeyGenerator = () => {\n      let availableEdgeKey;\n\n      do {\n        availableEdgeKey = instancePrefix + edgeId++;\n      } while (this._edges.has(availableEdgeKey));\n\n      return availableEdgeKey;\n    };\n\n    // Indexes\n    privateProperty(this, '_attributes', {});\n    privateProperty(this, '_nodes', new Map());\n    privateProperty(this, '_edges', new Map());\n    privateProperty(this, '_directedSize', 0);\n    privateProperty(this, '_undirectedSize', 0);\n    privateProperty(this, '_directedSelfLoopCount', 0);\n    privateProperty(this, '_undirectedSelfLoopCount', 0);\n    privateProperty(this, '_edgeKeyGenerator', edgeKeyGenerator);\n\n    // Options\n    privateProperty(this, '_options', options);\n\n    // Emitter properties\n    EMITTER_PROPS.forEach(prop => privateProperty(this, prop, this[prop]));\n\n    //-- Properties readers\n    readOnlyProperty(this, 'order', () => this._nodes.size);\n    readOnlyProperty(this, 'size', () => this._edges.size);\n    readOnlyProperty(this, 'directedSize', () => this._directedSize);\n    readOnlyProperty(this, 'undirectedSize', () => this._undirectedSize);\n    readOnlyProperty(\n      this,\n      'selfLoopCount',\n      () => this._directedSelfLoopCount + this._undirectedSelfLoopCount\n    );\n    readOnlyProperty(\n      this,\n      'directedSelfLoopCount',\n      () => this._directedSelfLoopCount\n    );\n    readOnlyProperty(\n      this,\n      'undirectedSelfLoopCount',\n      () => this._undirectedSelfLoopCount\n    );\n    readOnlyProperty(this, 'multi', this._options.multi);\n    readOnlyProperty(this, 'type', this._options.type);\n    readOnlyProperty(this, 'allowSelfLoops', this._options.allowSelfLoops);\n    readOnlyProperty(this, 'implementation', () => 'graphology');\n  }\n\n  _resetInstanceCounters() {\n    this._directedSize = 0;\n    this._undirectedSize = 0;\n    this._directedSelfLoopCount = 0;\n    this._undirectedSelfLoopCount = 0;\n  }\n\n  /**---------------------------------------------------------------------------\n   * Read\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method returning whether the given node is found in the graph.\n   *\n   * @param  {any}     node - The node.\n   * @return {boolean}\n   */\n  hasNode(node) {\n    return this._nodes.has('' + node);\n  }\n\n  /**\n   * Method returning whether the given directed edge is found in the graph.\n   *\n   * Arity 1:\n   * @param  {any}     edge - The edge's key.\n   *\n   * Arity 2:\n   * @param  {any}     source - The edge's source.\n   * @param  {any}     target - The edge's target.\n   *\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the arguments are invalid.\n   */\n  hasDirectedEdge(source, target) {\n    // Early termination\n    if (this.type === 'undirected') return false;\n\n    if (arguments.length === 1) {\n      const edge = '' + source;\n\n      const edgeData = this._edges.get(edge);\n\n      return !!edgeData && !edgeData.undirected;\n    } else if (arguments.length === 2) {\n      source = '' + source;\n      target = '' + target;\n\n      // If the node source or the target is not in the graph we break\n      const nodeData = this._nodes.get(source);\n\n      if (!nodeData) return false;\n\n      // Is there a directed edge pointing toward target?\n      return nodeData.out.hasOwnProperty(target);\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.hasDirectedEdge: invalid arity (${arguments.length}, instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.`\n    );\n  }\n\n  /**\n   * Method returning whether the given undirected edge is found in the graph.\n   *\n   * Arity 1:\n   * @param  {any}     edge - The edge's key.\n   *\n   * Arity 2:\n   * @param  {any}     source - The edge's source.\n   * @param  {any}     target - The edge's target.\n   *\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the arguments are invalid.\n   */\n  hasUndirectedEdge(source, target) {\n    // Early termination\n    if (this.type === 'directed') return false;\n\n    if (arguments.length === 1) {\n      const edge = '' + source;\n\n      const edgeData = this._edges.get(edge);\n\n      return !!edgeData && edgeData.undirected;\n    } else if (arguments.length === 2) {\n      source = '' + source;\n      target = '' + target;\n\n      // If the node source or the target is not in the graph we break\n      const nodeData = this._nodes.get(source);\n\n      if (!nodeData) return false;\n\n      // Is there a directed edge pointing toward target?\n      return nodeData.undirected.hasOwnProperty(target);\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.hasDirectedEdge: invalid arity (${arguments.length}, instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.`\n    );\n  }\n\n  /**\n   * Method returning whether the given edge is found in the graph.\n   *\n   * Arity 1:\n   * @param  {any}     edge - The edge's key.\n   *\n   * Arity 2:\n   * @param  {any}     source - The edge's source.\n   * @param  {any}     target - The edge's target.\n   *\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the arguments are invalid.\n   */\n  hasEdge(source, target) {\n    if (arguments.length === 1) {\n      const edge = '' + source;\n\n      return this._edges.has(edge);\n    } else if (arguments.length === 2) {\n      source = '' + source;\n      target = '' + target;\n\n      // If the node source or the target is not in the graph we break\n      const nodeData = this._nodes.get(source);\n\n      if (!nodeData) return false;\n\n      // Is there a directed edge pointing toward target?\n      return (\n        (typeof nodeData.out !== 'undefined' &&\n          nodeData.out.hasOwnProperty(target)) ||\n        (typeof nodeData.undirected !== 'undefined' &&\n          nodeData.undirected.hasOwnProperty(target))\n      );\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.hasEdge: invalid arity (${arguments.length}, instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.`\n    );\n  }\n\n  /**\n   * Method returning the edge matching source & target in a directed fashion.\n   *\n   * @param  {any} source - The edge's source.\n   * @param  {any} target - The edge's target.\n   *\n   * @return {any|undefined}\n   *\n   * @throws {Error} - Will throw if the graph is multi.\n   * @throws {Error} - Will throw if source or target doesn't exist.\n   */\n  directedEdge(source, target) {\n    if (this.type === 'undirected') return;\n\n    source = '' + source;\n    target = '' + target;\n\n    if (this.multi)\n      throw new UsageGraphError(\n        'Graph.directedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.directedEdges instead.'\n      );\n\n    const sourceData = this._nodes.get(source);\n\n    if (!sourceData)\n      throw new NotFoundGraphError(\n        `Graph.directedEdge: could not find the \"${source}\" source node in the graph.`\n      );\n\n    if (!this._nodes.has(target))\n      throw new NotFoundGraphError(\n        `Graph.directedEdge: could not find the \"${target}\" target node in the graph.`\n      );\n\n    const edgeData = (sourceData.out && sourceData.out[target]) || undefined;\n\n    if (edgeData) return edgeData.key;\n  }\n\n  /**\n   * Method returning the edge matching source & target in a undirected fashion.\n   *\n   * @param  {any} source - The edge's source.\n   * @param  {any} target - The edge's target.\n   *\n   * @return {any|undefined}\n   *\n   * @throws {Error} - Will throw if the graph is multi.\n   * @throws {Error} - Will throw if source or target doesn't exist.\n   */\n  undirectedEdge(source, target) {\n    if (this.type === 'directed') return;\n\n    source = '' + source;\n    target = '' + target;\n\n    if (this.multi)\n      throw new UsageGraphError(\n        'Graph.undirectedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.undirectedEdges instead.'\n      );\n\n    const sourceData = this._nodes.get(source);\n\n    if (!sourceData)\n      throw new NotFoundGraphError(\n        `Graph.undirectedEdge: could not find the \"${source}\" source node in the graph.`\n      );\n\n    if (!this._nodes.has(target))\n      throw new NotFoundGraphError(\n        `Graph.undirectedEdge: could not find the \"${target}\" target node in the graph.`\n      );\n\n    const edgeData =\n      (sourceData.undirected && sourceData.undirected[target]) || undefined;\n\n    if (edgeData) return edgeData.key;\n  }\n\n  /**\n   * Method returning the edge matching source & target in a mixed fashion.\n   *\n   * @param  {any} source - The edge's source.\n   * @param  {any} target - The edge's target.\n   *\n   * @return {any|undefined}\n   *\n   * @throws {Error} - Will throw if the graph is multi.\n   * @throws {Error} - Will throw if source or target doesn't exist.\n   */\n  edge(source, target) {\n    if (this.multi)\n      throw new UsageGraphError(\n        'Graph.edge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.edges instead.'\n      );\n\n    source = '' + source;\n    target = '' + target;\n\n    const sourceData = this._nodes.get(source);\n\n    if (!sourceData)\n      throw new NotFoundGraphError(\n        `Graph.edge: could not find the \"${source}\" source node in the graph.`\n      );\n\n    if (!this._nodes.has(target))\n      throw new NotFoundGraphError(\n        `Graph.edge: could not find the \"${target}\" target node in the graph.`\n      );\n\n    const edgeData =\n      (sourceData.out && sourceData.out[target]) ||\n      (sourceData.undirected && sourceData.undirected[target]) ||\n      undefined;\n\n    if (edgeData) return edgeData.key;\n  }\n\n  /**\n   * Method returning whether two nodes are directed neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areDirectedNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areDirectedNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return false;\n\n    return neighbor in nodeData.in || neighbor in nodeData.out;\n  }\n\n  /**\n   * Method returning whether two nodes are out neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areOutNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areOutNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return false;\n\n    return neighbor in nodeData.out;\n  }\n\n  /**\n   * Method returning whether two nodes are in neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areInNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areInNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return false;\n\n    return neighbor in nodeData.in;\n  }\n\n  /**\n   * Method returning whether two nodes are undirected neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areUndirectedNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areUndirectedNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'directed') return false;\n\n    return neighbor in nodeData.undirected;\n  }\n\n  /**\n   * Method returning whether two nodes are neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type !== 'undirected') {\n      if (neighbor in nodeData.in || neighbor in nodeData.out) return true;\n    }\n\n    if (this.type !== 'directed') {\n      if (neighbor in nodeData.undirected) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Method returning whether two nodes are inbound neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areInboundNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areInboundNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type !== 'undirected') {\n      if (neighbor in nodeData.in) return true;\n    }\n\n    if (this.type !== 'directed') {\n      if (neighbor in nodeData.undirected) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Method returning whether two nodes are outbound neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areOutboundNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areOutboundNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type !== 'undirected') {\n      if (neighbor in nodeData.out) return true;\n    }\n\n    if (this.type !== 'directed') {\n      if (neighbor in nodeData.undirected) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Method returning the given node's in degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  inDegree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.inDegree: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return 0;\n\n    return nodeData.inDegree;\n  }\n\n  /**\n   * Method returning the given node's out degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  outDegree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.outDegree: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return 0;\n\n    return nodeData.outDegree;\n  }\n\n  /**\n   * Method returning the given node's directed degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  directedDegree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.directedDegree: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return 0;\n\n    return nodeData.inDegree + nodeData.outDegree;\n  }\n\n  /**\n   * Method returning the given node's undirected degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  undirectedDegree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.undirectedDegree: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'directed') return 0;\n\n    return nodeData.undirectedDegree;\n  }\n\n  /**\n   * Method returning the given node's inbound degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's inbound degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  inboundDegree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.inboundDegree: could not find the \"${node}\" node in the graph.`\n      );\n\n    let degree = 0;\n\n    if (this.type !== 'directed') {\n      degree += nodeData.undirectedDegree;\n    }\n\n    if (this.type !== 'undirected') {\n      degree += nodeData.inDegree;\n    }\n\n    return degree;\n  }\n\n  /**\n   * Method returning the given node's outbound degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's outbound degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  outboundDegree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.outboundDegree: could not find the \"${node}\" node in the graph.`\n      );\n\n    let degree = 0;\n\n    if (this.type !== 'directed') {\n      degree += nodeData.undirectedDegree;\n    }\n\n    if (this.type !== 'undirected') {\n      degree += nodeData.outDegree;\n    }\n\n    return degree;\n  }\n\n  /**\n   * Method returning the given node's directed degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  degree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.degree: could not find the \"${node}\" node in the graph.`\n      );\n\n    let degree = 0;\n\n    if (this.type !== 'directed') {\n      degree += nodeData.undirectedDegree;\n    }\n\n    if (this.type !== 'undirected') {\n      degree += nodeData.inDegree + nodeData.outDegree;\n    }\n\n    return degree;\n  }\n\n  /**\n   * Method returning the given node's in degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  inDegreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.inDegreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return 0;\n\n    return nodeData.inDegree - nodeData.directedLoops;\n  }\n\n  /**\n   * Method returning the given node's out degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  outDegreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.outDegreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return 0;\n\n    return nodeData.outDegree - nodeData.directedLoops;\n  }\n\n  /**\n   * Method returning the given node's directed degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  directedDegreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.directedDegreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return 0;\n\n    return nodeData.inDegree + nodeData.outDegree - nodeData.directedLoops * 2;\n  }\n\n  /**\n   * Method returning the given node's undirected degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  undirectedDegreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.undirectedDegreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'directed') return 0;\n\n    return nodeData.undirectedDegree - nodeData.undirectedLoops * 2;\n  }\n\n  /**\n   * Method returning the given node's inbound degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's inbound degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  inboundDegreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.inboundDegreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    let degree = 0;\n    let loops = 0;\n\n    if (this.type !== 'directed') {\n      degree += nodeData.undirectedDegree;\n      loops += nodeData.undirectedLoops * 2;\n    }\n\n    if (this.type !== 'undirected') {\n      degree += nodeData.inDegree;\n      loops += nodeData.directedLoops;\n    }\n\n    return degree - loops;\n  }\n\n  /**\n   * Method returning the given node's outbound degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's outbound degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  outboundDegreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.outboundDegreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    let degree = 0;\n    let loops = 0;\n\n    if (this.type !== 'directed') {\n      degree += nodeData.undirectedDegree;\n      loops += nodeData.undirectedLoops * 2;\n    }\n\n    if (this.type !== 'undirected') {\n      degree += nodeData.outDegree;\n      loops += nodeData.directedLoops;\n    }\n\n    return degree - loops;\n  }\n\n  /**\n   * Method returning the given node's directed degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  degreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.degreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    let degree = 0;\n    let loops = 0;\n\n    if (this.type !== 'directed') {\n      degree += nodeData.undirectedDegree;\n      loops += nodeData.undirectedLoops * 2;\n    }\n\n    if (this.type !== 'undirected') {\n      degree += nodeData.inDegree + nodeData.outDegree;\n      loops += nodeData.directedLoops * 2;\n    }\n\n    return degree - loops;\n  }\n\n  /**\n   * Method returning the given edge's source.\n   *\n   * @param  {any} edge - The edge's key.\n   * @return {any}      - The edge's source.\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph.\n   */\n  source(edge) {\n    edge = '' + edge;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.source: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return data.source.key;\n  }\n\n  /**\n   * Method returning the given edge's target.\n   *\n   * @param  {any} edge - The edge's key.\n   * @return {any}      - The edge's target.\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph.\n   */\n  target(edge) {\n    edge = '' + edge;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.target: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return data.target.key;\n  }\n\n  /**\n   * Method returning the given edge's extremities.\n   *\n   * @param  {any}   edge - The edge's key.\n   * @return {array}      - The edge's extremities.\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph.\n   */\n  extremities(edge) {\n    edge = '' + edge;\n\n    const edgeData = this._edges.get(edge);\n\n    if (!edgeData)\n      throw new NotFoundGraphError(\n        `Graph.extremities: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return [edgeData.source.key, edgeData.target.key];\n  }\n\n  /**\n   * Given a node & an edge, returns the other extremity of the edge.\n   *\n   * @param  {any}   node - The node's key.\n   * @param  {any}   edge - The edge's key.\n   * @return {any}        - The related node.\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph or if the\n   *                   edge & node are not related.\n   */\n  opposite(node, edge) {\n    node = '' + node;\n    edge = '' + edge;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.opposite: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    const source = data.source.key;\n    const target = data.target.key;\n\n    if (node === source) return target;\n    if (node === target) return source;\n\n    throw new NotFoundGraphError(\n      `Graph.opposite: the \"${node}\" node is not attached to the \"${edge}\" edge (${source}, ${target}).`\n    );\n  }\n\n  /**\n   * Returns whether the given edge has the given node as extremity.\n   *\n   * @param  {any}     edge - The edge's key.\n   * @param  {any}     node - The node's key.\n   * @return {boolean}      - The related node.\n   *\n   * @throws {Error} - Will throw if either the node or the edge isn't in the graph.\n   */\n  hasExtremity(edge, node) {\n    edge = '' + edge;\n    node = '' + node;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.hasExtremity: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return data.source.key === node || data.target.key === node;\n  }\n\n  /**\n   * Method returning whether the given edge is undirected.\n   *\n   * @param  {any}     edge - The edge's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph.\n   */\n  isUndirected(edge) {\n    edge = '' + edge;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.isUndirected: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return data.undirected;\n  }\n\n  /**\n   * Method returning whether the given edge is directed.\n   *\n   * @param  {any}     edge - The edge's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph.\n   */\n  isDirected(edge) {\n    edge = '' + edge;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.isDirected: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return !data.undirected;\n  }\n\n  /**\n   * Method returning whether the given edge is a self loop.\n   *\n   * @param  {any}     edge - The edge's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph.\n   */\n  isSelfLoop(edge) {\n    edge = '' + edge;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.isSelfLoop: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return data.source === data.target;\n  }\n\n  /**---------------------------------------------------------------------------\n   * Mutation\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method used to add a node to the graph.\n   *\n   * @param  {any}    node         - The node.\n   * @param  {object} [attributes] - Optional attributes.\n   * @return {any}                 - The node.\n   *\n   * @throws {Error} - Will throw if the given node already exist.\n   * @throws {Error} - Will throw if the given attributes are not an object.\n   */\n  addNode(node, attributes) {\n    const nodeData = addNode(this, node, attributes);\n\n    return nodeData.key;\n  }\n\n  /**\n   * Method used to merge a node into the graph.\n   *\n   * @param  {any}    node         - The node.\n   * @param  {object} [attributes] - Optional attributes.\n   * @return {any}                 - The node.\n   */\n  mergeNode(node, attributes) {\n    if (attributes && !isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        `Graph.mergeNode: invalid attributes. Expecting an object but got \"${attributes}\"`\n      );\n\n    // String coercion\n    node = '' + node;\n    attributes = attributes || {};\n\n    // If the node already exists, we merge the attributes\n    let data = this._nodes.get(node);\n\n    if (data) {\n      if (attributes) {\n        assign(data.attributes, attributes);\n\n        this.emit('nodeAttributesUpdated', {\n          type: 'merge',\n          key: node,\n          attributes: data.attributes,\n          data: attributes\n        });\n      }\n      return [node, false];\n    }\n\n    data = new this.NodeDataClass(node, attributes);\n\n    // Adding the node to internal register\n    this._nodes.set(node, data);\n\n    // Emitting\n    this.emit('nodeAdded', {\n      key: node,\n      attributes\n    });\n\n    return [node, true];\n  }\n\n  /**\n   * Method used to add a node if it does not exist in the graph or else to\n   * update its attributes using a function.\n   *\n   * @param  {any}      node      - The node.\n   * @param  {function} [updater] - Optional updater function.\n   * @return {any}                - The node.\n   */\n  updateNode(node, updater) {\n    if (updater && typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        `Graph.updateNode: invalid updater function. Expecting a function but got \"${updater}\"`\n      );\n\n    // String coercion\n    node = '' + node;\n\n    // If the node already exists, we update the attributes\n    let data = this._nodes.get(node);\n\n    if (data) {\n      if (updater) {\n        const oldAttributes = data.attributes;\n        data.attributes = updater(oldAttributes);\n\n        this.emit('nodeAttributesUpdated', {\n          type: 'replace',\n          key: node,\n          attributes: data.attributes\n        });\n      }\n      return [node, false];\n    }\n\n    const attributes = updater ? updater({}) : {};\n\n    data = new this.NodeDataClass(node, attributes);\n\n    // Adding the node to internal register\n    this._nodes.set(node, data);\n\n    // Emitting\n    this.emit('nodeAdded', {\n      key: node,\n      attributes\n    });\n\n    return [node, true];\n  }\n\n  /**\n   * Method used to drop a single node & all its attached edges from the graph.\n   *\n   * @param  {any}    node - The node.\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if the node doesn't exist.\n   */\n  dropNode(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.dropNode: could not find the \"${node}\" node in the graph.`\n      );\n\n    let edgeData;\n\n    // Removing attached edges\n    // NOTE: we could be faster here, but this is such a pain to maintain\n    if (this.type !== 'undirected') {\n      for (const neighbor in nodeData.out) {\n        edgeData = nodeData.out[neighbor];\n\n        do {\n          dropEdgeFromData(this, edgeData);\n          edgeData = edgeData.next;\n        } while (edgeData);\n      }\n\n      for (const neighbor in nodeData.in) {\n        edgeData = nodeData.in[neighbor];\n\n        do {\n          dropEdgeFromData(this, edgeData);\n          edgeData = edgeData.next;\n        } while (edgeData);\n      }\n    }\n\n    if (this.type !== 'directed') {\n      for (const neighbor in nodeData.undirected) {\n        edgeData = nodeData.undirected[neighbor];\n\n        do {\n          dropEdgeFromData(this, edgeData);\n          edgeData = edgeData.next;\n        } while (edgeData);\n      }\n    }\n\n    // Dropping the node from the register\n    this._nodes.delete(node);\n\n    // Emitting\n    this.emit('nodeDropped', {\n      key: node,\n      attributes: nodeData.attributes\n    });\n  }\n\n  /**\n   * Method used to drop a single edge from the graph.\n   *\n   * Arity 1:\n   * @param  {any}    edge - The edge.\n   *\n   * Arity 2:\n   * @param  {any}    source - Source node.\n   * @param  {any}    target - Target node.\n   *\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if the edge doesn't exist.\n   */\n  dropEdge(edge) {\n    let edgeData;\n\n    if (arguments.length > 1) {\n      const source = '' + arguments[0];\n      const target = '' + arguments[1];\n\n      edgeData = getMatchingEdge(this, source, target, this.type);\n\n      if (!edgeData)\n        throw new NotFoundGraphError(\n          `Graph.dropEdge: could not find the \"${source}\" -> \"${target}\" edge in the graph.`\n        );\n    } else {\n      edge = '' + edge;\n\n      edgeData = this._edges.get(edge);\n\n      if (!edgeData)\n        throw new NotFoundGraphError(\n          `Graph.dropEdge: could not find the \"${edge}\" edge in the graph.`\n        );\n    }\n\n    dropEdgeFromData(this, edgeData);\n\n    return this;\n  }\n\n  /**\n   * Method used to drop a single directed edge from the graph.\n   *\n   * @param  {any}    source - Source node.\n   * @param  {any}    target - Target node.\n   *\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if the edge doesn't exist.\n   */\n  dropDirectedEdge(source, target) {\n    if (arguments.length < 2)\n      throw new UsageGraphError(\n        'Graph.dropDirectedEdge: it does not make sense to try and drop a directed edge by key. What if the edge with this key is undirected? Use #.dropEdge for this purpose instead.'\n      );\n\n    if (this.multi)\n      throw new UsageGraphError(\n        'Graph.dropDirectedEdge: cannot use a {source,target} combo when dropping an edge in a MultiGraph since we cannot infer the one you want to delete as there could be multiple ones.'\n      );\n\n    source = '' + source;\n    target = '' + target;\n\n    const edgeData = getMatchingEdge(this, source, target, 'directed');\n\n    if (!edgeData)\n      throw new NotFoundGraphError(\n        `Graph.dropDirectedEdge: could not find a \"${source}\" -> \"${target}\" edge in the graph.`\n      );\n\n    dropEdgeFromData(this, edgeData);\n\n    return this;\n  }\n\n  /**\n   * Method used to drop a single undirected edge from the graph.\n   *\n   * @param  {any}    source - Source node.\n   * @param  {any}    target - Target node.\n   *\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if the edge doesn't exist.\n   */\n  dropUndirectedEdge(source, target) {\n    if (arguments.length < 2)\n      throw new UsageGraphError(\n        'Graph.dropUndirectedEdge: it does not make sense to drop a directed edge by key. What if the edge with this key is undirected? Use #.dropEdge for this purpose instead.'\n      );\n\n    if (this.multi)\n      throw new UsageGraphError(\n        'Graph.dropUndirectedEdge: cannot use a {source,target} combo when dropping an edge in a MultiGraph since we cannot infer the one you want to delete as there could be multiple ones.'\n      );\n\n    const edgeData = getMatchingEdge(this, source, target, 'undirected');\n\n    if (!edgeData)\n      throw new NotFoundGraphError(\n        `Graph.dropUndirectedEdge: could not find a \"${source}\" -> \"${target}\" edge in the graph.`\n      );\n\n    dropEdgeFromData(this, edgeData);\n\n    return this;\n  }\n\n  /**\n   * Method used to remove every edge & every node from the graph.\n   *\n   * @return {Graph}\n   */\n  clear() {\n    // Clearing edges\n    this._edges.clear();\n\n    // Clearing nodes\n    this._nodes.clear();\n\n    // Reset counters\n    this._resetInstanceCounters();\n\n    // Emitting\n    this.emit('cleared');\n  }\n\n  /**\n   * Method used to remove every edge from the graph.\n   *\n   * @return {Graph}\n   */\n  clearEdges() {\n    // Clearing structure index\n    const iterator = this._nodes.values();\n\n    let step;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      step.value.clear();\n    }\n\n    // Clearing edges\n    this._edges.clear();\n\n    // Reset counters\n    this._resetInstanceCounters();\n\n    // Emitting\n    this.emit('edgesCleared');\n  }\n\n  /**---------------------------------------------------------------------------\n   * Attributes-related methods\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method returning the desired graph's attribute.\n   *\n   * @param  {string} name - Name of the attribute.\n   * @return {any}\n   */\n  getAttribute(name) {\n    return this._attributes[name];\n  }\n\n  /**\n   * Method returning the graph's attributes.\n   *\n   * @return {object}\n   */\n  getAttributes() {\n    return this._attributes;\n  }\n\n  /**\n   * Method returning whether the graph has the desired attribute.\n   *\n   * @param  {string}  name - Name of the attribute.\n   * @return {boolean}\n   */\n  hasAttribute(name) {\n    return this._attributes.hasOwnProperty(name);\n  }\n\n  /**\n   * Method setting a value for the desired graph's attribute.\n   *\n   * @param  {string}  name  - Name of the attribute.\n   * @param  {any}     value - Value for the attribute.\n   * @return {Graph}\n   */\n  setAttribute(name, value) {\n    this._attributes[name] = value;\n\n    // Emitting\n    this.emit('attributesUpdated', {\n      type: 'set',\n      attributes: this._attributes,\n      name\n    });\n\n    return this;\n  }\n\n  /**\n   * Method using a function to update the desired graph's attribute's value.\n   *\n   * @param  {string}   name    - Name of the attribute.\n   * @param  {function} updater - Function use to update the attribute's value.\n   * @return {Graph}\n   */\n  updateAttribute(name, updater) {\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.updateAttribute: updater should be a function.'\n      );\n\n    const value = this._attributes[name];\n\n    this._attributes[name] = updater(value);\n\n    // Emitting\n    this.emit('attributesUpdated', {\n      type: 'set',\n      attributes: this._attributes,\n      name\n    });\n\n    return this;\n  }\n\n  /**\n   * Method removing the desired graph's attribute.\n   *\n   * @param  {string} name  - Name of the attribute.\n   * @return {Graph}\n   */\n  removeAttribute(name) {\n    delete this._attributes[name];\n\n    // Emitting\n    this.emit('attributesUpdated', {\n      type: 'remove',\n      attributes: this._attributes,\n      name\n    });\n\n    return this;\n  }\n\n  /**\n   * Method replacing the graph's attributes.\n   *\n   * @param  {object} attributes - New attributes.\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if given attributes are not a plain object.\n   */\n  replaceAttributes(attributes) {\n    if (!isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        'Graph.replaceAttributes: provided attributes are not a plain object.'\n      );\n\n    this._attributes = attributes;\n\n    // Emitting\n    this.emit('attributesUpdated', {\n      type: 'replace',\n      attributes: this._attributes\n    });\n\n    return this;\n  }\n\n  /**\n   * Method merging the graph's attributes.\n   *\n   * @param  {object} attributes - Attributes to merge.\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if given attributes are not a plain object.\n   */\n  mergeAttributes(attributes) {\n    if (!isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        'Graph.mergeAttributes: provided attributes are not a plain object.'\n      );\n\n    assign(this._attributes, attributes);\n\n    // Emitting\n    this.emit('attributesUpdated', {\n      type: 'merge',\n      attributes: this._attributes,\n      data: attributes\n    });\n\n    return this;\n  }\n\n  /**\n   * Method updating the graph's attributes.\n   *\n   * @param  {function} updater - Function used to update the attributes.\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if given updater is not a function.\n   */\n  updateAttributes(updater) {\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.updateAttributes: provided updater is not a function.'\n      );\n\n    this._attributes = updater(this._attributes);\n\n    // Emitting\n    this.emit('attributesUpdated', {\n      type: 'update',\n      attributes: this._attributes\n    });\n\n    return this;\n  }\n\n  /**\n   * Method used to update each node's attributes using the given function.\n   *\n   * @param {function}  updater - Updater function to use.\n   * @param {object}    [hints] - Optional hints.\n   */\n  updateEachNodeAttributes(updater, hints) {\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.updateEachNodeAttributes: expecting an updater function.'\n      );\n\n    if (hints && !validateHints(hints))\n      throw new InvalidArgumentsGraphError(\n        'Graph.updateEachNodeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n      nodeData.attributes = updater(nodeData.key, nodeData.attributes);\n    }\n\n    this.emit('eachNodeAttributesUpdated', {\n      hints: hints ? hints : null\n    });\n  }\n\n  /**\n   * Method used to update each edge's attributes using the given function.\n   *\n   * @param {function}  updater - Updater function to use.\n   * @param {object}    [hints] - Optional hints.\n   */\n  updateEachEdgeAttributes(updater, hints) {\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.updateEachEdgeAttributes: expecting an updater function.'\n      );\n\n    if (hints && !validateHints(hints))\n      throw new InvalidArgumentsGraphError(\n        'Graph.updateEachEdgeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}'\n      );\n\n    const iterator = this._edges.values();\n\n    let step, edgeData, sourceData, targetData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      edgeData = step.value;\n      sourceData = edgeData.source;\n      targetData = edgeData.target;\n\n      edgeData.attributes = updater(\n        edgeData.key,\n        edgeData.attributes,\n        sourceData.key,\n        targetData.key,\n        sourceData.attributes,\n        targetData.attributes,\n        edgeData.undirected\n      );\n    }\n\n    this.emit('eachEdgeAttributesUpdated', {\n      hints: hints ? hints : null\n    });\n  }\n\n  /**---------------------------------------------------------------------------\n   * Iteration-related methods\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method iterating over the graph's adjacency using the given callback.\n   *\n   * @param  {function}  callback - Callback to use.\n   */\n  forEachAdjacencyEntry(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.forEachAdjacencyEntry: expecting a callback.'\n      );\n\n    forEachAdjacency(false, false, false, this, callback);\n  }\n  forEachAdjacencyEntryWithOrphans(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.forEachAdjacencyEntryWithOrphans: expecting a callback.'\n      );\n\n    forEachAdjacency(false, false, true, this, callback);\n  }\n\n  /**\n   * Method iterating over the graph's assymetric adjacency using the given callback.\n   *\n   * @param  {function}  callback - Callback to use.\n   */\n  forEachAssymetricAdjacencyEntry(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.forEachAssymetricAdjacencyEntry: expecting a callback.'\n      );\n\n    forEachAdjacency(false, true, false, this, callback);\n  }\n  forEachAssymetricAdjacencyEntryWithOrphans(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.forEachAssymetricAdjacencyEntryWithOrphans: expecting a callback.'\n      );\n\n    forEachAdjacency(false, true, true, this, callback);\n  }\n\n  /**\n   * Method returning the list of the graph's nodes.\n   *\n   * @return {array} - The nodes.\n   */\n  nodes() {\n    if (typeof Array.from === 'function') return Array.from(this._nodes.keys());\n\n    return take(this._nodes.keys(), this._nodes.size);\n  }\n\n  /**\n   * Method iterating over the graph's nodes using the given callback.\n   *\n   * @param  {function}  callback - Callback (key, attributes, index).\n   */\n  forEachNode(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.forEachNode: expecting a callback.'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n      callback(nodeData.key, nodeData.attributes);\n    }\n  }\n\n  /**\n   * Method iterating attempting to find a node matching the given predicate\n   * function.\n   *\n   * @param  {function}  callback - Callback (key, attributes).\n   */\n  findNode(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.findNode: expecting a callback.'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n\n      if (callback(nodeData.key, nodeData.attributes)) return nodeData.key;\n    }\n\n    return;\n  }\n\n  /**\n   * Method mapping nodes.\n   *\n   * @param  {function}  callback - Callback (key, attributes).\n   */\n  mapNodes(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.mapNode: expecting a callback.'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    const result = new Array(this.order);\n    let i = 0;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n      result[i++] = callback(nodeData.key, nodeData.attributes);\n    }\n\n    return result;\n  }\n\n  /**\n   * Method returning whether some node verify the given predicate.\n   *\n   * @param  {function}  callback - Callback (key, attributes).\n   */\n  someNode(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.someNode: expecting a callback.'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n\n      if (callback(nodeData.key, nodeData.attributes)) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Method returning whether all node verify the given predicate.\n   *\n   * @param  {function}  callback - Callback (key, attributes).\n   */\n  everyNode(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.everyNode: expecting a callback.'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n\n      if (!callback(nodeData.key, nodeData.attributes)) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Method filtering nodes.\n   *\n   * @param  {function}  callback - Callback (key, attributes).\n   */\n  filterNodes(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.filterNodes: expecting a callback.'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    const result = [];\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n\n      if (callback(nodeData.key, nodeData.attributes))\n        result.push(nodeData.key);\n    }\n\n    return result;\n  }\n\n  /**\n   * Method reducing nodes.\n   *\n   * @param  {function}  callback - Callback (accumulator, key, attributes).\n   */\n  reduceNodes(callback, initialValue) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.reduceNodes: expecting a callback.'\n      );\n\n    if (arguments.length < 2)\n      throw new InvalidArgumentsGraphError(\n        'Graph.reduceNodes: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.'\n      );\n\n    let accumulator = initialValue;\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n      accumulator = callback(accumulator, nodeData.key, nodeData.attributes);\n    }\n\n    return accumulator;\n  }\n\n  /**\n   * Method returning an iterator over the graph's node entries.\n   *\n   * @return {Iterator}\n   */\n  nodeEntries() {\n    const iterator = this._nodes.values();\n\n    return new Iterator(() => {\n      const step = iterator.next();\n\n      if (step.done) return step;\n\n      const data = step.value;\n\n      return {\n        value: {node: data.key, attributes: data.attributes},\n        done: false\n      };\n    });\n  }\n\n  /**---------------------------------------------------------------------------\n   * Serialization\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method used to export the whole graph.\n   *\n   * @return {object} - The serialized graph.\n   */\n  export() {\n    const nodes = new Array(this._nodes.size);\n\n    let i = 0;\n\n    this._nodes.forEach((data, key) => {\n      nodes[i++] = serializeNode(key, data);\n    });\n\n    const edges = new Array(this._edges.size);\n\n    i = 0;\n\n    this._edges.forEach((data, key) => {\n      edges[i++] = serializeEdge(this.type, key, data);\n    });\n\n    return {\n      options: {\n        type: this.type,\n        multi: this.multi,\n        allowSelfLoops: this.allowSelfLoops\n      },\n      attributes: this.getAttributes(),\n      nodes,\n      edges\n    };\n  }\n\n  /**\n   * Method used to import a serialized graph.\n   *\n   * @param  {object|Graph} data  - The serialized graph.\n   * @param  {boolean}      merge - Whether to merge data.\n   * @return {Graph}              - Returns itself for chaining.\n   */\n  import(data, merge = false) {\n    // Importing a Graph instance directly\n    if (data instanceof Graph) {\n      // Nodes\n      data.forEachNode((n, a) => {\n        if (merge) this.mergeNode(n, a);\n        else this.addNode(n, a);\n      });\n\n      // Edges\n      data.forEachEdge((e, a, s, t, _sa, _ta, u) => {\n        if (merge) {\n          if (u) this.mergeUndirectedEdgeWithKey(e, s, t, a);\n          else this.mergeDirectedEdgeWithKey(e, s, t, a);\n        } else {\n          if (u) this.addUndirectedEdgeWithKey(e, s, t, a);\n          else this.addDirectedEdgeWithKey(e, s, t, a);\n        }\n      });\n\n      return this;\n    }\n\n    // Importing a serialized graph\n    if (!isPlainObject(data))\n      throw new InvalidArgumentsGraphError(\n        'Graph.import: invalid argument. Expecting a serialized graph or, alternatively, a Graph instance.'\n      );\n\n    if (data.attributes) {\n      if (!isPlainObject(data.attributes))\n        throw new InvalidArgumentsGraphError(\n          'Graph.import: invalid attributes. Expecting a plain object.'\n        );\n\n      if (merge) this.mergeAttributes(data.attributes);\n      else this.replaceAttributes(data.attributes);\n    }\n\n    let i, l, list, node, edge;\n\n    if (data.nodes) {\n      list = data.nodes;\n\n      if (!Array.isArray(list))\n        throw new InvalidArgumentsGraphError(\n          'Graph.import: invalid nodes. Expecting an array.'\n        );\n\n      for (i = 0, l = list.length; i < l; i++) {\n        node = list[i];\n\n        // Validating\n        validateSerializedNode(node);\n\n        // Adding the node\n        const {key, attributes} = node;\n\n        if (merge) this.mergeNode(key, attributes);\n        else this.addNode(key, attributes);\n      }\n    }\n\n    if (data.edges) {\n      let undirectedByDefault = false;\n\n      if (this.type === 'undirected') {\n        undirectedByDefault = true;\n      }\n\n      list = data.edges;\n\n      if (!Array.isArray(list))\n        throw new InvalidArgumentsGraphError(\n          'Graph.import: invalid edges. Expecting an array.'\n        );\n\n      for (i = 0, l = list.length; i < l; i++) {\n        edge = list[i];\n\n        // Validating\n        validateSerializedEdge(edge);\n\n        // Adding the edge\n        const {\n          source,\n          target,\n          attributes,\n          undirected = undirectedByDefault\n        } = edge;\n\n        let method;\n\n        if ('key' in edge) {\n          method = merge\n            ? undirected\n              ? this.mergeUndirectedEdgeWithKey\n              : this.mergeDirectedEdgeWithKey\n            : undirected\n            ? this.addUndirectedEdgeWithKey\n            : this.addDirectedEdgeWithKey;\n\n          method.call(this, edge.key, source, target, attributes);\n        } else {\n          method = merge\n            ? undirected\n              ? this.mergeUndirectedEdge\n              : this.mergeDirectedEdge\n            : undirected\n            ? this.addUndirectedEdge\n            : this.addDirectedEdge;\n\n          method.call(this, source, target, attributes);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  /**---------------------------------------------------------------------------\n   * Utils\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method returning a null copy of the graph, i.e. a graph without nodes\n   * & edges but with the exact same options.\n   *\n   * @param  {object} options - Options to merge with the current ones.\n   * @return {Graph}          - The null copy.\n   */\n  nullCopy(options) {\n    const graph = new Graph(assign({}, this._options, options));\n    graph.replaceAttributes(assign({}, this.getAttributes()));\n    return graph;\n  }\n\n  /**\n   * Method returning an empty copy of the graph, i.e. a graph without edges but\n   * with the exact same options.\n   *\n   * @param  {object} options - Options to merge with the current ones.\n   * @return {Graph}          - The empty copy.\n   */\n  emptyCopy(options) {\n    const graph = this.nullCopy(options);\n\n    this._nodes.forEach((nodeData, key) => {\n      const attributes = assign({}, nodeData.attributes);\n\n      // NOTE: no need to emit events since user cannot access the instance yet\n      nodeData = new graph.NodeDataClass(key, attributes);\n      graph._nodes.set(key, nodeData);\n    });\n\n    return graph;\n  }\n\n  /**\n   * Method returning an exact copy of the graph.\n   *\n   * @param  {object} options - Upgrade options.\n   * @return {Graph}          - The copy.\n   */\n  copy(options) {\n    options = options || {};\n\n    if (\n      typeof options.type === 'string' &&\n      options.type !== this.type &&\n      options.type !== 'mixed'\n    )\n      throw new UsageGraphError(\n        `Graph.copy: cannot create an incompatible copy from \"${this.type}\" type to \"${options.type}\" because this would mean losing information about the current graph.`\n      );\n\n    if (\n      typeof options.multi === 'boolean' &&\n      options.multi !== this.multi &&\n      options.multi !== true\n    )\n      throw new UsageGraphError(\n        'Graph.copy: cannot create an incompatible copy by downgrading a multi graph to a simple one because this would mean losing information about the current graph.'\n      );\n\n    if (\n      typeof options.allowSelfLoops === 'boolean' &&\n      options.allowSelfLoops !== this.allowSelfLoops &&\n      options.allowSelfLoops !== true\n    )\n      throw new UsageGraphError(\n        'Graph.copy: cannot create an incompatible copy from a graph allowing self loops to one that does not because this would mean losing information about the current graph.'\n      );\n\n    const graph = this.emptyCopy(options);\n\n    const iterator = this._edges.values();\n\n    let step, edgeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      edgeData = step.value;\n\n      // NOTE: no need to emit events since user cannot access the instance yet\n      addEdge(\n        graph,\n        'copy',\n        false,\n        edgeData.undirected,\n        edgeData.key,\n        edgeData.source.key,\n        edgeData.target.key,\n        assign({}, edgeData.attributes)\n      );\n    }\n\n    return graph;\n  }\n\n  /**---------------------------------------------------------------------------\n   * Known methods\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method used by JavaScript to perform JSON serialization.\n   *\n   * @return {object} - The serialized graph.\n   */\n  toJSON() {\n    return this.export();\n  }\n\n  /**\n   * Method returning [object Graph].\n   */\n  toString() {\n    return '[object Graph]';\n  }\n\n  /**\n   * Method used internally by node's console to display a custom object.\n   *\n   * @return {object} - Formatted object representation of the graph.\n   */\n  inspect() {\n    const nodes = {};\n    this._nodes.forEach((data, key) => {\n      nodes[key] = data.attributes;\n    });\n\n    const edges = {},\n      multiIndex = {};\n\n    this._edges.forEach((data, key) => {\n      const direction = data.undirected ? '--' : '->';\n\n      let label = '';\n\n      let source = data.source.key;\n      let target = data.target.key;\n      let tmp;\n\n      if (data.undirected && source > target) {\n        tmp = source;\n        source = target;\n        target = tmp;\n      }\n\n      const desc = `(${source})${direction}(${target})`;\n\n      if (!key.startsWith('geid_')) {\n        label += `[${key}]: `;\n      } else if (this.multi) {\n        if (typeof multiIndex[desc] === 'undefined') {\n          multiIndex[desc] = 0;\n        } else {\n          multiIndex[desc]++;\n        }\n\n        label += `${multiIndex[desc]}. `;\n      }\n\n      label += desc;\n\n      edges[label] = data.attributes;\n    });\n\n    const dummy = {};\n\n    for (const k in this) {\n      if (\n        this.hasOwnProperty(k) &&\n        !EMITTER_PROPS.has(k) &&\n        typeof this[k] !== 'function' &&\n        typeof k !== 'symbol'\n      )\n        dummy[k] = this[k];\n    }\n\n    dummy.attributes = this._attributes;\n    dummy.nodes = nodes;\n    dummy.edges = edges;\n\n    privateProperty(dummy, 'constructor', this.constructor);\n\n    return dummy;\n  }\n}\n\n/**\n * Attaching methods to the prototype.\n *\n * Here, we are attaching a wide variety of methods to the Graph class'\n * prototype when those are very numerous and when their creation is\n * abstracted.\n */\n\n/**\n * Attaching custom inspect method for node >= 10.\n */\nif (typeof Symbol !== 'undefined')\n  Graph.prototype[Symbol.for('nodejs.util.inspect.custom')] =\n    Graph.prototype.inspect;\n\n/**\n * Related to edge addition.\n */\nEDGE_ADD_METHODS.forEach(method => {\n  ['add', 'merge', 'update'].forEach(verb => {\n    const name = method.name(verb);\n    const fn = verb === 'add' ? addEdge : mergeEdge;\n\n    if (method.generateKey) {\n      Graph.prototype[name] = function (source, target, attributes) {\n        return fn(\n          this,\n          name,\n          true,\n          (method.type || this.type) === 'undirected',\n          null,\n          source,\n          target,\n          attributes,\n          verb === 'update'\n        );\n      };\n    } else {\n      Graph.prototype[name] = function (edge, source, target, attributes) {\n        return fn(\n          this,\n          name,\n          false,\n          (method.type || this.type) === 'undirected',\n          edge,\n          source,\n          target,\n          attributes,\n          verb === 'update'\n        );\n      };\n    }\n  });\n});\n\n/**\n * Attributes-related.\n */\nattachNodeAttributesMethods(Graph);\nattachEdgeAttributesMethods(Graph);\n\n/**\n * Edge iteration-related.\n */\nattachEdgeIterationMethods(Graph);\n\n/**\n * Neighbor iteration-related.\n */\nattachNeighborIterationMethods(Graph);\n","/**\n * Graphology Helper Classes\n * ==========================\n *\n * Building some higher-order classes instantiating the graph with\n * predefinite options.\n */\nimport {assign} from './utils';\nimport Graph from './graph';\n\nimport {\n  InvalidArgumentsGraphError,\n  NotFoundGraphError,\n  UsageGraphError\n} from './errors';\n\n/**\n * Alternative constructors.\n */\nclass DirectedGraph extends Graph {\n  constructor(options) {\n    const finalOptions = assign({type: 'directed'}, options);\n\n    if ('multi' in finalOptions && finalOptions.multi !== false)\n      throw new InvalidArgumentsGraphError(\n        'DirectedGraph.from: inconsistent indication that the graph should be multi in given options!'\n      );\n\n    if (finalOptions.type !== 'directed')\n      throw new InvalidArgumentsGraphError(\n        'DirectedGraph.from: inconsistent \"' +\n          finalOptions.type +\n          '\" type in given options!'\n      );\n\n    super(finalOptions);\n  }\n}\nclass UndirectedGraph extends Graph {\n  constructor(options) {\n    const finalOptions = assign({type: 'undirected'}, options);\n\n    if ('multi' in finalOptions && finalOptions.multi !== false)\n      throw new InvalidArgumentsGraphError(\n        'UndirectedGraph.from: inconsistent indication that the graph should be multi in given options!'\n      );\n\n    if (finalOptions.type !== 'undirected')\n      throw new InvalidArgumentsGraphError(\n        'UndirectedGraph.from: inconsistent \"' +\n          finalOptions.type +\n          '\" type in given options!'\n      );\n\n    super(finalOptions);\n  }\n}\nclass MultiGraph extends Graph {\n  constructor(options) {\n    const finalOptions = assign({multi: true}, options);\n\n    if ('multi' in finalOptions && finalOptions.multi !== true)\n      throw new InvalidArgumentsGraphError(\n        'MultiGraph.from: inconsistent indication that the graph should be simple in given options!'\n      );\n\n    super(finalOptions);\n  }\n}\nclass MultiDirectedGraph extends Graph {\n  constructor(options) {\n    const finalOptions = assign({type: 'directed', multi: true}, options);\n\n    if ('multi' in finalOptions && finalOptions.multi !== true)\n      throw new InvalidArgumentsGraphError(\n        'MultiDirectedGraph.from: inconsistent indication that the graph should be simple in given options!'\n      );\n\n    if (finalOptions.type !== 'directed')\n      throw new InvalidArgumentsGraphError(\n        'MultiDirectedGraph.from: inconsistent \"' +\n          finalOptions.type +\n          '\" type in given options!'\n      );\n\n    super(finalOptions);\n  }\n}\nclass MultiUndirectedGraph extends Graph {\n  constructor(options) {\n    const finalOptions = assign({type: 'undirected', multi: true}, options);\n\n    if ('multi' in finalOptions && finalOptions.multi !== true)\n      throw new InvalidArgumentsGraphError(\n        'MultiUndirectedGraph.from: inconsistent indication that the graph should be simple in given options!'\n      );\n\n    if (finalOptions.type !== 'undirected')\n      throw new InvalidArgumentsGraphError(\n        'MultiUndirectedGraph.from: inconsistent \"' +\n          finalOptions.type +\n          '\" type in given options!'\n      );\n\n    super(finalOptions);\n  }\n}\n\n/**\n * Attaching static #.from method to each of the constructors.\n */\nfunction attachStaticFromMethod(Class) {\n  /**\n   * Builds a graph from serialized data or another graph's data.\n   *\n   * @param  {Graph|SerializedGraph} data      - Hydratation data.\n   * @param  {object}                [options] - Options.\n   * @return {Class}\n   */\n  Class.from = function (data, options) {\n    // Merging given options with serialized ones\n    const finalOptions = assign({}, data.options, options);\n\n    const instance = new Class(finalOptions);\n    instance.import(data);\n\n    return instance;\n  };\n}\n\nattachStaticFromMethod(Graph);\nattachStaticFromMethod(DirectedGraph);\nattachStaticFromMethod(UndirectedGraph);\nattachStaticFromMethod(MultiGraph);\nattachStaticFromMethod(MultiDirectedGraph);\nattachStaticFromMethod(MultiUndirectedGraph);\n\nGraph.Graph = Graph;\nGraph.DirectedGraph = DirectedGraph;\nGraph.UndirectedGraph = UndirectedGraph;\nGraph.MultiGraph = MultiGraph;\nGraph.MultiDirectedGraph = MultiDirectedGraph;\nGraph.MultiUndirectedGraph = MultiUndirectedGraph;\n\nGraph.InvalidArgumentsGraphError = InvalidArgumentsGraphError;\nGraph.NotFoundGraphError = NotFoundGraphError;\nGraph.UsageGraphError = UsageGraphError;\n\nexport {\n  Graph,\n  DirectedGraph,\n  UndirectedGraph,\n  MultiGraph,\n  MultiDirectedGraph,\n  MultiUndirectedGraph\n};\n","/**\n * @file precision.ts\n * Provides a centralized module for handling high-precision arithmetic.\n * This abstracts away the complexity of using decimal.js and allows for\n * easy switching between high-precision and native float calculations,\n * which is critical for analyzing numerical stability and the \"butterfly effect.\"\n */\nimport { Decimal } from 'decimal.js';\n\n// Set a high default precision for all new Decimal instances.\n// 60 digits is more than sufficient to avoid any conceivable rounding errors in this simulation.\nDecimal.set({ precision: 60 });\n\nexport type PrecisionMode = 'high' | 'native';\n\n/**\n * A wrapper for a number that can be either a high-precision Decimal or a native number.\n * This class allows us to perform arithmetic without the calling code needing to know\n * the underlying type, making it easy to switch precision modes.\n */\nexport class PrecisionNumber {\n    private value: Decimal | number;\n    private mode: PrecisionMode;\n\n    constructor(initialValue: number | string | Decimal, mode: PrecisionMode) {\n        this.mode = mode;\n        // If initialValue is already a Decimal, use it directly. Otherwise, create a new Decimal.\n        if (this.mode === 'high') {\n             this.value = new Decimal(initialValue);\n        } else {\n             this.value = typeof initialValue === 'object' ? initialValue.toNumber() : Number(initialValue);\n        }\n    }\n    \n    /** Performs division using the specified calculation mode. */\n    static divide(a: number, b: number, mode: PrecisionMode): PrecisionNumber {\n        if (mode === 'high') {\n            // Decimal.js handles division by zero by returning Decimal(Infinity) or Decimal(NaN).\n            // We'll explicitly return Decimal(0) for a/0 to align with L_A definition for empty graph.\n            return new PrecisionNumber(b === 0 ? new Decimal(0) : new Decimal(a).dividedBy(b), mode);\n        }\n        // Native JavaScript number division by zero results in Infinity or NaN.\n        // Explicitly return 0 for a/0 to align with L_A definition.\n        return new PrecisionNumber(b === 0 ? 0 : a / b, mode);\n    }\n    \n    /** Compares this PrecisionNumber to another. Returns -1 (less than), 0 (equal), or 1 (greater than). */\n    compareTo(other: PrecisionNumber): number {\n        // Always perform comparison using high precision to ensure accuracy across modes.\n        const thisDecimal = this.value instanceof Decimal ? this.value : new Decimal(this.value);\n        const otherDecimal = other.value instanceof Decimal ? other.value : new Decimal(other.value);\n        return thisDecimal.comparedTo(otherDecimal);\n    }\n    \n    /** Returns the value as a standard JavaScript number (potential loss of precision for high-precision values). */\n    toNumber(): number {\n        return this.value instanceof Decimal ? this.value.toNumber() : this.value;\n    }\n    \n    /** Returns a string representation, crucial for displaying exact values. */\n    toString(precision: number = 25): string {\n        if (this.value instanceof Decimal) {\n            return this.value.toDecimalPlaces(precision).toString();\n        }\n        // For native numbers, toPrecision(17) provides maximum significant digits for double-precision floats.\n        return this.value.toPrecision(17);\n    }\n}",";(function (globalScope) {\r\n  'use strict';\r\n\r\n\r\n  /*!\r\n   *  decimal.js v10.5.0\r\n   *  An arbitrary-precision Decimal type for JavaScript.\r\n   *  https://github.com/MikeMcl/decimal.js\r\n   *  Copyright (c) 2025 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *  MIT Licence\r\n   */\r\n\r\n\r\n  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n    // The maximum exponent magnitude.\r\n    // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\r\n  var EXP_LIMIT = 9e15,                      // 0 to 9e15\r\n\r\n    // The limit on the value of `precision`, and on the value of the first argument to\r\n    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n    MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n    // Base conversion alphabet.\r\n    NUMERALS = '0123456789abcdef',\r\n\r\n    // The natural logarithm of 10 (1025 digits).\r\n    LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\r\n\r\n    // Pi (1025 digits).\r\n    PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\r\n\r\n\r\n    // The initial configuration properties of the Decimal constructor.\r\n    DEFAULTS = {\r\n\r\n      // These values must be integers within the stated ranges (inclusive).\r\n      // Most of these values can be changed at run-time using the `Decimal.config` method.\r\n\r\n      // The maximum number of significant digits of the result of a calculation or base conversion.\r\n      // E.g. `Decimal.config({ precision: 20 });`\r\n      precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n      // The rounding mode used when rounding to `precision`.\r\n      //\r\n      // ROUND_UP         0 Away from zero.\r\n      // ROUND_DOWN       1 Towards zero.\r\n      // ROUND_CEIL       2 Towards +Infinity.\r\n      // ROUND_FLOOR      3 Towards -Infinity.\r\n      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      //\r\n      // E.g.\r\n      // `Decimal.rounding = 4;`\r\n      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n      rounding: 4,                           // 0 to 8\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP         0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\r\n      // FLOOR      3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN  6 The IEEE 754 remainder function.\r\n      // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\r\n      //\r\n      // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\r\n      // division (9) are commonly used for the modulus operation. The other rounding modes can also\r\n      // be used, but they may not give useful results.\r\n      modulo: 1,                             // 0 to 9\r\n\r\n      // The exponent value at and beneath which `toString` returns exponential notation.\r\n      // JavaScript numbers: -7\r\n      toExpNeg: -7,                          // 0 to -EXP_LIMIT\r\n\r\n      // The exponent value at and above which `toString` returns exponential notation.\r\n      // JavaScript numbers: 21\r\n      toExpPos:  21,                         // 0 to EXP_LIMIT\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // JavaScript numbers: -324  (5e-324)\r\n      minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // JavaScript numbers: 308  (1.7976931348623157e+308)\r\n      maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      crypto: false                          // true/false\r\n    },\r\n\r\n\r\n  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n    Decimal, inexact, noConflict, quadrant,\r\n    external = true,\r\n\r\n    decimalError = '[DecimalError] ',\r\n    invalidArgument = decimalError + 'Invalid argument: ',\r\n    precisionLimitExceeded = decimalError + 'Precision limit exceeded',\r\n    cryptoUnavailable = decimalError + 'crypto unavailable',\r\n    tag = '[object Decimal]',\r\n\r\n    mathfloor = Math.floor,\r\n    mathpow = Math.pow,\r\n\r\n    isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\r\n    isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\r\n    isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\r\n    isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n    BASE = 1e7,\r\n    LOG_BASE = 7,\r\n    MAX_SAFE_INTEGER = 9007199254740991,\r\n\r\n    LN10_PRECISION = LN10.length - 1,\r\n    PI_PRECISION = PI.length - 1,\r\n\r\n    // Decimal.prototype object\r\n    P = { toStringTag: tag };\r\n\r\n\r\n  // Decimal prototype methods\r\n\r\n\r\n  /*\r\n   *  absoluteValue             abs\r\n   *  ceil\r\n   *  clampedTo                 clamp\r\n   *  comparedTo                cmp\r\n   *  cosine                    cos\r\n   *  cubeRoot                  cbrt\r\n   *  decimalPlaces             dp\r\n   *  dividedBy                 div\r\n   *  dividedToIntegerBy        divToInt\r\n   *  equals                    eq\r\n   *  floor\r\n   *  greaterThan               gt\r\n   *  greaterThanOrEqualTo      gte\r\n   *  hyperbolicCosine          cosh\r\n   *  hyperbolicSine            sinh\r\n   *  hyperbolicTangent         tanh\r\n   *  inverseCosine             acos\r\n   *  inverseHyperbolicCosine   acosh\r\n   *  inverseHyperbolicSine     asinh\r\n   *  inverseHyperbolicTangent  atanh\r\n   *  inverseSine               asin\r\n   *  inverseTangent            atan\r\n   *  isFinite\r\n   *  isInteger                 isInt\r\n   *  isNaN\r\n   *  isNegative                isNeg\r\n   *  isPositive                isPos\r\n   *  isZero\r\n   *  lessThan                  lt\r\n   *  lessThanOrEqualTo         lte\r\n   *  logarithm                 log\r\n   *  [maximum]                 [max]\r\n   *  [minimum]                 [min]\r\n   *  minus                     sub\r\n   *  modulo                    mod\r\n   *  naturalExponential        exp\r\n   *  naturalLogarithm          ln\r\n   *  negated                   neg\r\n   *  plus                      add\r\n   *  precision                 sd\r\n   *  round\r\n   *  sine                      sin\r\n   *  squareRoot                sqrt\r\n   *  tangent                   tan\r\n   *  times                     mul\r\n   *  toBinary\r\n   *  toDecimalPlaces           toDP\r\n   *  toExponential\r\n   *  toFixed\r\n   *  toFraction\r\n   *  toHexadecimal             toHex\r\n   *  toNearest\r\n   *  toNumber\r\n   *  toOctal\r\n   *  toPower                   pow\r\n   *  toPrecision\r\n   *  toSignificantDigits       toSD\r\n   *  toString\r\n   *  truncated                 trunc\r\n   *  valueOf                   toJSON\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of this Decimal.\r\n   *\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of positive Infinity.\r\n   *\r\n   */\r\n  P.ceil = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal clamped to the range\r\n   * delineated by `min` and `max`.\r\n   *\r\n   * min {number|string|bigint|Decimal}\r\n   * max {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  P.clampedTo = P.clamp = function (min, max) {\r\n    var k,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n    min = new Ctor(min);\r\n    max = new Ctor(max);\r\n    if (!min.s || !max.s) return new Ctor(NaN);\r\n    if (min.gt(max)) throw Error(invalidArgument + max);\r\n    k = x.cmp(min);\r\n    return k < 0 ? min : x.cmp(max) > 0 ? max : new Ctor(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if the value of this Decimal is greater than the value of `y`,\r\n   *  -1    if the value of this Decimal is less than the value of `y`,\r\n   *   0    if they have the same value,\r\n   *   NaN  if the value of either Decimal is NaN.\r\n   *\r\n   */\r\n  P.comparedTo = P.cmp = function (y) {\r\n    var i, j, xdL, ydL,\r\n      x = this,\r\n      xd = x.d,\r\n      yd = (y = new x.constructor(y)).d,\r\n      xs = x.s,\r\n      ys = y.s;\r\n\r\n    // Either NaN or ±Infinity?\r\n    if (!xd || !yd) {\r\n      return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Either zero?\r\n    if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\r\n\r\n    // Signs differ?\r\n    if (xs !== ys) return xs;\r\n\r\n    // Compare exponents.\r\n    if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\r\n\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n      if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * cos(0)         = 1\r\n   * cos(-0)        = 1\r\n   * cos(Infinity)  = NaN\r\n   * cos(-Infinity) = NaN\r\n   * cos(NaN)       = NaN\r\n   *\r\n   */\r\n  P.cosine = P.cos = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.d) return new Ctor(NaN);\r\n\r\n    // cos(0) = cos(-0) = 1\r\n    if (!x.d[0]) return new Ctor(1);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *\r\n   * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   *  cbrt(0)  =  0\r\n   *  cbrt(-0) = -0\r\n   *  cbrt(1)  =  1\r\n   *  cbrt(-1) = -1\r\n   *  cbrt(N)  =  N\r\n   *  cbrt(-I) = -I\r\n   *  cbrt(I)  =  I\r\n   *\r\n   * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\r\n   *\r\n   */\r\n  P.cubeRoot = P.cbrt = function () {\r\n    var e, m, n, r, rep, s, sd, t, t3, t3plusx,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = x.s * mathpow(x.s * x, 1 / 3);\r\n\r\n     // Math.cbrt underflow/overflow?\r\n     // Pass x to Math.pow as integer, then adjust the exponent of the result.\r\n    if (!s || Math.abs(s) == 1 / 0) {\r\n      n = digitsToString(x.d);\r\n      e = x.e;\r\n\r\n      // Adjust n exponent so it is a multiple of 3 away from x exponent.\r\n      if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\r\n      s = mathpow(n, 1 / 3);\r\n\r\n      // Rarely, e may be one less than the result exponent value.\r\n      e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n      r.s = x.s;\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Halley's method.\r\n    // TODO? Compare Newton's method.\r\n    for (;;) {\r\n      t = r;\r\n      t3 = t.times(t).times(t);\r\n      t3plusx = t3.plus(x);\r\n      r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\r\n        // , i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of decimal places of the value of this Decimal.\r\n   *\r\n   */\r\n  P.decimalPlaces = P.dp = function () {\r\n    var w,\r\n      d = this.d,\r\n      n = NaN;\r\n\r\n    if (d) {\r\n      w = d.length - 1;\r\n      n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      w = d[w];\r\n      if (w) for (; w % 10 == 0; w /= 10) n--;\r\n      if (n < 0) n = 0;\r\n    }\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedBy = P.div = function (y) {\r\n    return divide(this, new this.constructor(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n   * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedToIntegerBy = P.divToInt = function (y) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.equals = P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of negative Infinity.\r\n   *\r\n   */\r\n  P.floor = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 3);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n   * false.\r\n   *\r\n   */\r\n  P.greaterThan = P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  P.greaterThanOrEqualTo = P.gte = function (y) {\r\n    var k = this.cmp(y);\r\n    return k == 1 || k === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [1, Infinity]\r\n   *\r\n   * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\r\n   *\r\n   * cosh(0)         = 1\r\n   * cosh(-0)        = 1\r\n   * cosh(Infinity)  = Infinity\r\n   * cosh(-Infinity) = Infinity\r\n   * cosh(NaN)       = NaN\r\n   *\r\n   *  x        time taken (ms)   result\r\n   * 1000      9                 9.8503555700852349694e+433\r\n   * 10000     25                4.4034091128314607936e+4342\r\n   * 100000    171               1.4033316802130615897e+43429\r\n   * 1000000   3817              1.5166076984010437725e+434294\r\n   * 10000000  abandoned after 2 minute wait\r\n   *\r\n   * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicCosine = P.cosh = function () {\r\n    var k, n, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      one = new Ctor(1);\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\r\n    if (x.isZero()) return one;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\r\n    // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    // TODO? Estimation reused from cosine() and may not be optimal here.\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      n = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      n = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\r\n\r\n    // Reverse argument reduction\r\n    var cosh2_x,\r\n      i = k,\r\n      d8 = new Ctor(8);\r\n    for (; i--;) {\r\n      cosh2_x = x.times(x);\r\n      x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\r\n    }\r\n\r\n    return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\r\n   *\r\n   * sinh(0)         = 0\r\n   * sinh(-0)        = -0\r\n   * sinh(Infinity)  = Infinity\r\n   * sinh(-Infinity) = -Infinity\r\n   * sinh(NaN)       = NaN\r\n   *\r\n   * x        time taken (ms)\r\n   * 10       2 ms\r\n   * 100      5 ms\r\n   * 1000     14 ms\r\n   * 10000    82 ms\r\n   * 100000   886 ms            1.4033316802130615897e+43429\r\n   * 200000   2613 ms\r\n   * 300000   5407 ms\r\n   * 400000   8824 ms\r\n   * 500000   13026 ms          8.7080643612718084129e+217146\r\n   * 1000000  48543 ms\r\n   *\r\n   * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicSine = P.sinh = function () {\r\n    var k, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n    } else {\r\n\r\n      // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\r\n      // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\r\n      // 3 multiplications and 1 addition\r\n\r\n      // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\r\n      // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\r\n      // 4 multiplications and 2 additions\r\n\r\n      // Estimate the optimum number of times to use the argument reduction.\r\n      k = 1.4 * Math.sqrt(len);\r\n      k = k > 16 ? 16 : k | 0;\r\n\r\n      x = x.times(1 / tinyPow(5, k));\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n\r\n      // Reverse argument reduction\r\n      var sinh2_x,\r\n        d5 = new Ctor(5),\r\n        d16 = new Ctor(16),\r\n        d20 = new Ctor(20);\r\n      for (; k--;) {\r\n        sinh2_x = x.times(x);\r\n        x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\r\n      }\r\n    }\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * tanh(x) = sinh(x) / cosh(x)\r\n   *\r\n   * tanh(0)         = 0\r\n   * tanh(-0)        = -0\r\n   * tanh(Infinity)  = 1\r\n   * tanh(-Infinity) = -1\r\n   * tanh(NaN)       = NaN\r\n   *\r\n   */\r\n  P.hyperbolicTangent = P.tanh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 7;\r\n    Ctor.rounding = 1;\r\n\r\n    return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\r\n   * this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [0, pi]\r\n   *\r\n   * acos(x) = pi/2 - asin(x)\r\n   *\r\n   * acos(0)       = pi/2\r\n   * acos(-0)      = pi/2\r\n   * acos(1)       = 0\r\n   * acos(-1)      = pi\r\n   * acos(1/2)     = pi/3\r\n   * acos(-1/2)    = 2*pi/3\r\n   * acos(|x| > 1) = NaN\r\n   * acos(NaN)     = NaN\r\n   *\r\n   */\r\n  P.inverseCosine = P.acos = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      k = x.abs().cmp(1),\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n      return k === 0\r\n        // |x| is 1\r\n        ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\r\n        // |x| > 1 or x is NaN\r\n        : new Ctor(NaN);\r\n    }\r\n\r\n    if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    // See https://github.com/MikeMcl/decimal.js/pull/217\r\n    x = new Ctor(1).minus(x).div(x.plus(1)).sqrt().atan();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [1, Infinity]\r\n   * Range: [0, Infinity]\r\n   *\r\n   * acosh(x) = ln(x + sqrt(x^2 - 1))\r\n   *\r\n   * acosh(x < 1)     = NaN\r\n   * acosh(NaN)       = NaN\r\n   * acosh(Infinity)  = Infinity\r\n   * acosh(-Infinity) = NaN\r\n   * acosh(0)         = NaN\r\n   * acosh(-0)        = NaN\r\n   * acosh(1)         = 0\r\n   * acosh(-1)        = NaN\r\n   *\r\n   */\r\n  P.inverseHyperbolicCosine = P.acosh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\r\n    if (!x.isFinite()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).minus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * asinh(x) = ln(x + sqrt(x^2 + 1))\r\n   *\r\n   * asinh(NaN)       = NaN\r\n   * asinh(Infinity)  = Infinity\r\n   * asinh(-Infinity) = -Infinity\r\n   * asinh(0)         = 0\r\n   * asinh(-0)        = -0\r\n   *\r\n   */\r\n  P.inverseHyperbolicSine = P.asinh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).plus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\r\n   *\r\n   * atanh(|x| > 1)   = NaN\r\n   * atanh(NaN)       = NaN\r\n   * atanh(Infinity)  = NaN\r\n   * atanh(-Infinity) = NaN\r\n   * atanh(0)         = 0\r\n   * atanh(-0)        = -0\r\n   * atanh(1)         = Infinity\r\n   * atanh(-1)        = -Infinity\r\n   *\r\n   */\r\n  P.inverseHyperbolicTangent = P.atanh = function () {\r\n    var pr, rm, wpr, xsd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    xsd = x.sd();\r\n\r\n    if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\r\n\r\n    Ctor.precision = wpr = xsd - x.e;\r\n\r\n    x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\r\n\r\n    Ctor.precision = pr + 4;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.ln();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(0.5);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\r\n   *\r\n   * asin(0)       = 0\r\n   * asin(-0)      = -0\r\n   * asin(1/2)     = pi/6\r\n   * asin(-1/2)    = -pi/6\r\n   * asin(1)       = pi/2\r\n   * asin(-1)      = -pi/2\r\n   * asin(|x| > 1) = NaN\r\n   * asin(NaN)     = NaN\r\n   *\r\n   * TODO? Compare performance of Taylor series.\r\n   *\r\n   */\r\n  P.inverseSine = P.asin = function () {\r\n    var halfPi, k,\r\n      pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    k = x.abs().cmp(1);\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n\r\n      // |x| is 1\r\n      if (k === 0) {\r\n        halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        halfPi.s = x.s;\r\n        return halfPi;\r\n      }\r\n\r\n      // |x| > 1 or x is NaN\r\n      return new Ctor(NaN);\r\n    }\r\n\r\n    // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n   *\r\n   * atan(0)         = 0\r\n   * atan(-0)        = -0\r\n   * atan(1)         = pi/4\r\n   * atan(-1)        = -pi/4\r\n   * atan(Infinity)  = pi/2\r\n   * atan(-Infinity) = -pi/2\r\n   * atan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.inverseTangent = P.atan = function () {\r\n    var i, j, k, n, px, t, r, wpr, x2,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (!x.isFinite()) {\r\n      if (!x.s) return new Ctor(NaN);\r\n      if (pr + 4 <= PI_PRECISION) {\r\n        r = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        r.s = x.s;\r\n        return r;\r\n      }\r\n    } else if (x.isZero()) {\r\n      return new Ctor(x);\r\n    } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\r\n      r = getPi(Ctor, pr + 4, rm).times(0.25);\r\n      r.s = x.s;\r\n      return r;\r\n    }\r\n\r\n    Ctor.precision = wpr = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\r\n\r\n    // Argument reduction\r\n    // Ensure |x| < 0.42\r\n    // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\r\n\r\n    k = Math.min(28, wpr / LOG_BASE + 2 | 0);\r\n\r\n    for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\r\n\r\n    external = false;\r\n\r\n    j = Math.ceil(wpr / LOG_BASE);\r\n    n = 1;\r\n    x2 = x.times(x);\r\n    r = new Ctor(x);\r\n    px = x;\r\n\r\n    // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n    for (; i !== -1;) {\r\n      px = px.times(x2);\r\n      t = r.minus(px.div(n += 2));\r\n\r\n      px = px.times(x2);\r\n      r = t.plus(px.div(n += 2));\r\n\r\n      if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\r\n    }\r\n\r\n    if (k) r = r.times(2 << (k - 1));\r\n\r\n    external = true;\r\n\r\n    return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n   *\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.d;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is an integer, otherwise return false.\r\n   *\r\n   */\r\n  P.isInteger = P.isInt = function () {\r\n    return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is NaN, otherwise return false.\r\n   *\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is negative, otherwise return false.\r\n   *\r\n   */\r\n  P.isNegative = P.isNeg = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is positive, otherwise return false.\r\n   *\r\n   */\r\n  P.isPositive = P.isPos = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n   *\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.d && this.d[0] === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThan = P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThanOrEqualTo = P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * If no base is specified, return log[10](arg).\r\n   *\r\n   * log[base](arg) = ln(arg) / ln(base)\r\n   *\r\n   * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\r\n   * otherwise:\r\n   *\r\n   * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n   * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n   * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n   *\r\n   * log[-b](a)       = NaN\r\n   * log[0](a)        = NaN\r\n   * log[1](a)        = NaN\r\n   * log[NaN](a)      = NaN\r\n   * log[Infinity](a) = NaN\r\n   * log[b](0)        = -Infinity\r\n   * log[b](-0)       = -Infinity\r\n   * log[b](-a)       = NaN\r\n   * log[b](1)        = 0\r\n   * log[b](Infinity) = Infinity\r\n   * log[b](NaN)      = NaN\r\n   *\r\n   * [base] {number|string|bigint|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  P.logarithm = P.log = function (base) {\r\n    var isBase10, d, denominator, k, inf, num, sd, r,\r\n      arg = this,\r\n      Ctor = arg.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding,\r\n      guard = 5;\r\n\r\n    // Default base is 10.\r\n    if (base == null) {\r\n      base = new Ctor(10);\r\n      isBase10 = true;\r\n    } else {\r\n      base = new Ctor(base);\r\n      d = base.d;\r\n\r\n      // Return NaN if base is negative, or non-finite, or is 0 or 1.\r\n      if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\r\n\r\n      isBase10 = base.eq(10);\r\n    }\r\n\r\n    d = arg.d;\r\n\r\n    // Is arg negative, non-finite, 0 or 1?\r\n    if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\r\n      return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\r\n    }\r\n\r\n    // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\r\n    // integer power of 10.\r\n    if (isBase10) {\r\n      if (d.length > 1) {\r\n        inf = true;\r\n      } else {\r\n        for (k = d[0]; k % 10 === 0;) k /= 10;\r\n        inf = k !== 1;\r\n      }\r\n    }\r\n\r\n    external = false;\r\n    sd = pr + guard;\r\n    num = naturalLogarithm(arg, sd);\r\n    denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n\r\n    // The result will have 5 rounding digits.\r\n    r = divide(num, denominator, sd, 1);\r\n\r\n    // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\r\n    // calculate 10 further digits.\r\n    //\r\n    // If the result is known to have an infinite decimal expansion, repeat this until it is clear\r\n    // that the result is above or below the boundary. Otherwise, if after calculating the 10\r\n    // further digits, the last 14 are nines, round up and assume the result is exact.\r\n    // Also assume the result is exact if the last 14 are zero.\r\n    //\r\n    // Example of a result that will be incorrectly rounded:\r\n    // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\r\n    // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\r\n    // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\r\n    // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\r\n    // place is still 2.6.\r\n    if (checkRoundingDigits(r.d, k = pr, rm)) {\r\n\r\n      do {\r\n        sd += 10;\r\n        num = naturalLogarithm(arg, sd);\r\n        denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n        r = divide(num, denominator, sd, 1);\r\n\r\n        if (!inf) {\r\n\r\n          // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\r\n          if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\r\n            r = finalise(r, pr + 1, 0);\r\n          }\r\n\r\n          break;\r\n        }\r\n      } while (checkRoundingDigits(r.d, k += 10, rm));\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|bigint|Decimal}\r\n   *\r\n  P.max = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, -1);\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|bigint|Decimal}\r\n   *\r\n  P.min = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 1);\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return y negated if x is finite and y is ±Infinity.\r\n      else if (x.d) y.s = -y.s;\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with different signs.\r\n      // Return NaN if both are ±Infinity with the same sign.\r\n      else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n    // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.plus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return y negated if x is zero and y is non-zero.\r\n      if (yd[0]) y.s = -y.s;\r\n\r\n      // Return x if y is zero and x is non-zero.\r\n      else if (xd[0]) y = new Ctor(x);\r\n\r\n      // Return zero if both are zero.\r\n      // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\r\n      else return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    e = mathfloor(y.e / LOG_BASE);\r\n    xe = mathfloor(x.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    k = xe - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (k) {\r\n      xLTy = k < 0;\r\n\r\n      if (xLTy) {\r\n        d = xd;\r\n        k = -k;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = xe;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Numbers with massively different exponents would result in a very high number of\r\n      // zeros needing to be prepended, but this can be avoided while still ensuring correct\r\n      // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n      if (k > i) {\r\n        k = i;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      d.reverse();\r\n      for (i = k; i--;) d.push(0);\r\n      d.reverse();\r\n\r\n    // Base 1e7 exponents equal.\r\n    } else {\r\n\r\n      // Check digits to determine which is the bigger number.\r\n\r\n      i = xd.length;\r\n      len = yd.length;\r\n      xLTy = i < len;\r\n      if (xLTy) len = i;\r\n\r\n      for (i = 0; i < len; i++) {\r\n        if (xd[i] != yd[i]) {\r\n          xLTy = xd[i] < yd[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      k = 0;\r\n    }\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      xd = yd;\r\n      yd = d;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    len = xd.length;\r\n\r\n    // Append zeros to `xd` if shorter.\r\n    // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\r\n    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n    // Subtract yd from xd.\r\n    for (i = yd.length; i > k;) {\r\n\r\n      if (xd[--i] < yd[i]) {\r\n        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n        --xd[j];\r\n        xd[i] += BASE;\r\n      }\r\n\r\n      xd[i] -= yd[i];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] === 0;) xd.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n    // Zero?\r\n    if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * The result depends on the modulo mode.\r\n   *\r\n   */\r\n  P.modulo = P.mod = function (y) {\r\n    var q,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // Return NaN if x is ±Infinity or NaN, or y is NaN or ±0.\r\n    if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\r\n\r\n    // Return x if y is ±Infinity or x is ±0.\r\n    if (!y.d || x.d && !x.d[0]) {\r\n      return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\r\n    }\r\n\r\n    // Prevent rounding of intermediate calculations.\r\n    external = false;\r\n\r\n    if (Ctor.modulo == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // result = x - q * y    where  0 <= result < abs(y)\r\n      q = divide(x, y.abs(), 0, 3, 1);\r\n      q.s *= y.s;\r\n    } else {\r\n      q = divide(x, y, 0, Ctor.modulo, 1);\r\n    }\r\n\r\n    q = q.times(y);\r\n\r\n    external = true;\r\n\r\n    return x.minus(q);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n   * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalExponential = P.exp = function () {\r\n    return naturalExponential(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalLogarithm = P.ln = function () {\r\n    return naturalLogarithm(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n   * -1.\r\n   *\r\n   */\r\n  P.negated = P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var carry, d, e, i, k, len, pr, rm, xd, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with the same sign.\r\n      // Return NaN if both are ±Infinity with different signs.\r\n      // Return y if x is finite and y is ±Infinity.\r\n      else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n     // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return x if y is zero.\r\n      // Return y if y is non-zero.\r\n      if (!yd[0]) y = new Ctor(x);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    k = mathfloor(x.e / LOG_BASE);\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    i = k - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (i) {\r\n\r\n      if (i < 0) {\r\n        d = xd;\r\n        i = -i;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = k;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n      k = Math.ceil(pr / LOG_BASE);\r\n      len = k > len ? k + 1 : len + 1;\r\n\r\n      if (i > len) {\r\n        i = len;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n      d.reverse();\r\n      for (; i--;) d.push(0);\r\n      d.reverse();\r\n    }\r\n\r\n    len = xd.length;\r\n    i = yd.length;\r\n\r\n    // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n    if (len - i < 0) {\r\n      i = len;\r\n      d = yd;\r\n      yd = xd;\r\n      xd = d;\r\n    }\r\n\r\n    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n    for (carry = 0; i;) {\r\n      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n      xd[i] %= BASE;\r\n    }\r\n\r\n    if (carry) {\r\n      xd.unshift(carry);\r\n      ++e;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of significant digits of the value of this Decimal.\r\n   *\r\n   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n   *\r\n   */\r\n  P.precision = P.sd = function (z) {\r\n    var k,\r\n      x = this;\r\n\r\n    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n    if (x.d) {\r\n      k = getPrecision(x.d);\r\n      if (z && x.e + 1 > k) k = x.e + 1;\r\n    } else {\r\n      k = NaN;\r\n    }\r\n\r\n    return k;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n   * rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.round = function () {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   *\r\n   * sin(0)         = 0\r\n   * sin(-0)        = -0\r\n   * sin(Infinity)  = NaN\r\n   * sin(-Infinity) = NaN\r\n   * sin(NaN)       = NaN\r\n   *\r\n   */\r\n  P.sine = P.sin = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = sine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N)  =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I)  =  I\r\n   *  sqrt(0)  =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, sd, r, rep, t,\r\n      x = this,\r\n      d = x.d,\r\n      e = x.e,\r\n      s = x.s,\r\n      Ctor = x.constructor;\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !d || !d[0]) {\r\n      return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\r\n    }\r\n\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+x);\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = digitsToString(d);\r\n\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(n);\r\n      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Newton-Raphson iteration.\r\n    for (;;) {\r\n      t = r;\r\n      r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n        // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * tan(0)         = 0\r\n   * tan(-0)        = -0\r\n   * tan(Infinity)  = NaN\r\n   * tan(-Infinity) = NaN\r\n   * tan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.tangent = P.tan = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.sin();\r\n    x.s = 1;\r\n    x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var carry, e, i, k, r, rL, t, xdL, ydL,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      xd = x.d,\r\n      yd = (y = new Ctor(y)).d;\r\n\r\n    y.s *= x.s;\r\n\r\n     // If either is NaN, ±Infinity or ±0...\r\n    if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n      return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\r\n\r\n        // Return NaN if either is NaN.\r\n        // Return NaN if x is ±0 and y is ±Infinity, or y is ±0 and x is ±Infinity.\r\n        ? NaN\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        // Return ±0 if either is ±0.\r\n        : !xd || !yd ? y.s / 0 : y.s * 0);\r\n    }\r\n\r\n    e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Ensure xd points to the longer array.\r\n    if (xdL < ydL) {\r\n      r = xd;\r\n      xd = yd;\r\n      yd = r;\r\n      rL = xdL;\r\n      xdL = ydL;\r\n      ydL = rL;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    r = [];\r\n    rL = xdL + ydL;\r\n    for (i = rL; i--;) r.push(0);\r\n\r\n    // Multiply!\r\n    for (i = ydL; --i >= 0;) {\r\n      carry = 0;\r\n      for (k = xdL + i; k > i;) {\r\n        t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n        r[k--] = t % BASE | 0;\r\n        carry = t / BASE | 0;\r\n      }\r\n\r\n      r[k] = (r[k] + carry) % BASE | 0;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; !r[--rL];) r.pop();\r\n\r\n    if (carry) ++e;\r\n    else r.shift();\r\n\r\n    y.d = r;\r\n    y.e = getBase10Exponent(r, e);\r\n\r\n    return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 2, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toBinary = function (sd, rm) {\r\n    return toStringBinary(this, 2, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n   *\r\n   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toDecimalPlaces = P.toDP = function (dp, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n    if (dp === void 0) return x;\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    return finalise(x, dp + x.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in exponential notation rounded to\r\n   * `dp` fixed decimal places using rounding mode `rounding`.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x, true);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), dp + 1, rm);\r\n      str = finiteToString(x, true, dp + 1);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n   * omitted.\r\n   *\r\n   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   * (-0).toFixed(3) is '0.000'.\r\n   * (-0.5).toFixed(0) is '-0'.\r\n   *\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var str, y,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      y = finalise(new Ctor(x), dp + x.e + 1, rm);\r\n      str = finiteToString(y, false, dp + y.e + 1);\r\n    }\r\n\r\n    // To determine whether to add the minus sign look at the value before it was rounded,\r\n    // i.e. look at `x` rather than `y`.\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array representing the value of this Decimal as a simple fraction with an integer\r\n   * numerator and an integer denominator.\r\n   *\r\n   * The denominator will be a positive non-zero value less than or equal to the specified maximum\r\n   * denominator. If a maximum denominator is not specified, the denominator will be the lowest\r\n   * value necessary to represent the number exactly.\r\n   *\r\n   * [maxD] {number|string|bigint|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n   *\r\n   */\r\n  P.toFraction = function (maxD) {\r\n    var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\r\n      x = this,\r\n      xd = x.d,\r\n      Ctor = x.constructor;\r\n\r\n    if (!xd) return new Ctor(x);\r\n\r\n    n1 = d0 = new Ctor(1);\r\n    d1 = n0 = new Ctor(0);\r\n\r\n    d = new Ctor(d1);\r\n    e = d.e = getPrecision(xd) - x.e - 1;\r\n    k = e % LOG_BASE;\r\n    d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\r\n\r\n    if (maxD == null) {\r\n\r\n      // d is 10**e, the minimum max-denominator needed.\r\n      maxD = e > 0 ? d : n1;\r\n    } else {\r\n      n = new Ctor(maxD);\r\n      if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\r\n      maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\r\n    }\r\n\r\n    external = false;\r\n    n = new Ctor(digitsToString(xd));\r\n    pr = Ctor.precision;\r\n    Ctor.precision = e = xd.length * LOG_BASE * 2;\r\n\r\n    for (;;)  {\r\n      q = divide(n, d, 0, 1, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.cmp(maxD) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      d2 = n1;\r\n      n1 = n0.plus(q.times(d2));\r\n      n0 = d2;\r\n      d2 = d;\r\n      d = n.minus(q.times(d2));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1?\r\n    r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\r\n        ? [n1, d1] : [n0, d0];\r\n\r\n    Ctor.precision = pr;\r\n    external = true;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 16, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toHexadecimal = P.toHex = function (sd, rm) {\r\n    return toStringBinary(this, 16, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\r\n   * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\r\n   *\r\n   * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n   * or `y` is NaN, in which case the return value will be also be NaN.\r\n   *\r\n   * The return value is not affected by the value of `precision`.\r\n   *\r\n   * y {number|string|bigint|Decimal} The magnitude to round to a multiple of.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toNearest() rounding mode not an integer: {rm}'\r\n   * 'toNearest() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toNearest = function (y, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (y == null) {\r\n\r\n      // If x is not finite, return x.\r\n      if (!x.d) return x;\r\n\r\n      y = new Ctor(1);\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      y = new Ctor(y);\r\n      if (rm === void 0) {\r\n        rm = Ctor.rounding;\r\n      } else {\r\n        checkInt32(rm, 0, 8);\r\n      }\r\n\r\n      // If x is not finite, return x if y is not NaN, else NaN.\r\n      if (!x.d) return y.s ? x : y;\r\n\r\n      // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\r\n      if (!y.d) {\r\n        if (y.s) y.s = x.s;\r\n        return y;\r\n      }\r\n    }\r\n\r\n    // If y is not zero, calculate the nearest multiple of y to x.\r\n    if (y.d[0]) {\r\n      external = false;\r\n      x = divide(x, y, 0, rm, 1).times(y);\r\n      external = true;\r\n      finalise(x);\r\n\r\n    // If y is zero, return zero with the sign of x.\r\n    } else {\r\n      y.s = x.s;\r\n      x = y;\r\n    }\r\n\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Decimal converted to a number primitive.\r\n   * Zero keeps its sign.\r\n   *\r\n   */\r\n  P.toNumber = function () {\r\n    return +this;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 8, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toOctal = function (sd, rm) {\r\n    return toStringBinary(this, 8, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\r\n   * to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * ECMAScript compliant.\r\n   *\r\n   *   pow(x, NaN)                           = NaN\r\n   *   pow(x, ±0)                            = 1\r\n\r\n   *   pow(NaN, non-zero)                    = NaN\r\n   *   pow(abs(x) > 1, +Infinity)            = +Infinity\r\n   *   pow(abs(x) > 1, -Infinity)            = +0\r\n   *   pow(abs(x) == 1, ±Infinity)           = NaN\r\n   *   pow(abs(x) < 1, +Infinity)            = +0\r\n   *   pow(abs(x) < 1, -Infinity)            = +Infinity\r\n   *   pow(+Infinity, y > 0)                 = +Infinity\r\n   *   pow(+Infinity, y < 0)                 = +0\r\n   *   pow(-Infinity, odd integer > 0)       = -Infinity\r\n   *   pow(-Infinity, even integer > 0)      = +Infinity\r\n   *   pow(-Infinity, odd integer < 0)       = -0\r\n   *   pow(-Infinity, even integer < 0)      = +0\r\n   *   pow(+0, y > 0)                        = +0\r\n   *   pow(+0, y < 0)                        = +Infinity\r\n   *   pow(-0, odd integer > 0)              = -0\r\n   *   pow(-0, even integer > 0)             = +0\r\n   *   pow(-0, odd integer < 0)              = -Infinity\r\n   *   pow(-0, even integer < 0)             = +Infinity\r\n   *   pow(finite x < 0, finite non-integer) = NaN\r\n   *\r\n   * For non-integer or very large exponents pow(x, y) is calculated using\r\n   *\r\n   *   x^y = exp(y*ln(x))\r\n   *\r\n   * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n   * probability of an incorrectly rounded result\r\n   * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n   * i.e. 1 in 250,000,000,000,000\r\n   *\r\n   * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n   *\r\n   * y {number|string|bigint|Decimal} The power to which to raise this Decimal.\r\n   *\r\n   */\r\n  P.toPower = P.pow = function (y) {\r\n    var e, k, pr, r, rm, s,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      yn = +(y = new Ctor(y));\r\n\r\n    // Either ±Infinity, NaN or ±0?\r\n    if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (x.eq(1)) return x;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (y.eq(1)) return finalise(x, pr, rm);\r\n\r\n    // y exponent\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n    if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n      r = intPow(Ctor, x, k, pr);\r\n      return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\r\n    }\r\n\r\n    s = x.s;\r\n\r\n    // if x is negative\r\n    if (s < 0) {\r\n\r\n      // if y is not an integer\r\n      if (e < y.d.length - 1) return new Ctor(NaN);\r\n\r\n      // Result is positive if x is negative and the last digit of integer y is even.\r\n      if ((y.d[e] & 1) == 0) s = 1;\r\n\r\n      // if x.eq(-1)\r\n      if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\r\n        x.s = s;\r\n        return x;\r\n      }\r\n    }\r\n\r\n    // Estimate result exponent.\r\n    // x^y = 10^e,  where e = y * log10(x)\r\n    // log10(x) = log10(x_significand) + x_exponent\r\n    // log10(x_significand) = ln(x_significand) / ln(10)\r\n    k = mathpow(+x, yn);\r\n    e = k == 0 || !isFinite(k)\r\n      ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\r\n      : new Ctor(k + '').e;\r\n\r\n    // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\r\n\r\n    // Overflow/underflow?\r\n    if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\r\n\r\n    external = false;\r\n    Ctor.rounding = x.s = 1;\r\n\r\n    // Estimate the extra guard digits needed to ensure five correct rounding digits from\r\n    // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\r\n    // new Decimal(2.32456).pow('2087987436534566.46411')\r\n    // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\r\n    k = Math.min(12, (e + '').length);\r\n\r\n    // r = x^y = exp(y*ln(x))\r\n    r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\r\n\r\n    // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\r\n    if (r.d) {\r\n\r\n      // Truncate to the required precision plus five rounding digits.\r\n      r = finalise(r, pr + 5, 1);\r\n\r\n      // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\r\n      // the result.\r\n      if (checkRoundingDigits(r.d, pr, rm)) {\r\n        e = pr + 10;\r\n\r\n        // Truncate to the increased precision plus five rounding digits.\r\n        r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\r\n\r\n        // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\r\n        if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\r\n          r = finalise(r, pr + 1, 0);\r\n        }\r\n      }\r\n    }\r\n\r\n    r.s = s;\r\n    external = true;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), sd, rm);\r\n      str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n   * omitted.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toSD() digits out of range: {sd}'\r\n   * 'toSD() digits not an integer: {sd}'\r\n   * 'toSD() rounding mode not an integer: {rm}'\r\n   * 'toSD() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toSignificantDigits = P.toSD = function (sd, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    return finalise(new Ctor(x), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   *\r\n   * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n   *\r\n   */\r\n  P.toString = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n   *\r\n   */\r\n  P.truncated = P.trunc = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   * Unlike `toString`, negative zero will include the minus sign.\r\n   *\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n  /*\r\n   *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\r\n   *                           finiteToString, naturalExponential, naturalLogarithm\r\n   *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\r\n   *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\r\n   *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\r\n   *  convertBase              toStringBinary, parseOther\r\n   *  cos                      P.cos\r\n   *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\r\n   *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\r\n   *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\r\n   *                           taylorSeries, atan2, parseOther\r\n   *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\r\n   *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\r\n   *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\r\n   *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\r\n   *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\r\n   *                           P.truncated, divide, getLn10, getPi, naturalExponential,\r\n   *                           naturalLogarithm, ceil, floor, round, trunc\r\n   *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\r\n   *                           toStringBinary\r\n   *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\r\n   *  getLn10                  P.logarithm, naturalLogarithm\r\n   *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\r\n   *  getPrecision             P.precision, P.toFraction\r\n   *  getZeroString            digitsToString, finiteToString\r\n   *  intPow                   P.toPower, parseOther\r\n   *  isOdd                    toLessThanHalfPi\r\n   *  maxOrMin                 max, min\r\n   *  naturalExponential       P.naturalExponential, P.toPower\r\n   *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\r\n   *                           P.toPower, naturalExponential\r\n   *  nonFiniteToString        finiteToString, toStringBinary\r\n   *  parseDecimal             Decimal\r\n   *  parseOther               Decimal\r\n   *  sin                      P.sin\r\n   *  taylorSeries             P.cosh, P.sinh, cos, sin\r\n   *  toLessThanHalfPi         P.cos, P.sin\r\n   *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\r\n   *  truncate                 intPow\r\n   *\r\n   *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\r\n   *                           naturalLogarithm, config, parseOther, random, Decimal\r\n   */\r\n\r\n\r\n  function digitsToString(d) {\r\n    var i, k, ws,\r\n      indexOfLastWord = d.length - 1,\r\n      str = '',\r\n      w = d[0];\r\n\r\n    if (indexOfLastWord > 0) {\r\n      str += w;\r\n      for (i = 1; i < indexOfLastWord; i++) {\r\n        ws = d[i] + '';\r\n        k = LOG_BASE - ws.length;\r\n        if (k) str += getZeroString(k);\r\n        str += ws;\r\n      }\r\n\r\n      w = d[i];\r\n      ws = w + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n    } else if (w === 0) {\r\n      return '0';\r\n    }\r\n\r\n    // Remove trailing zeros of last w.\r\n    for (; w % 10 === 0;) w /= 10;\r\n\r\n    return str + w;\r\n  }\r\n\r\n\r\n  function checkInt32(i, min, max) {\r\n    if (i !== ~~i || i < min || i > max) {\r\n      throw Error(invalidArgument + i);\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Check 5 rounding digits if `repeating` is null, 4 otherwise.\r\n   * `repeating == null` if caller is `log` or `pow`,\r\n   * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\r\n   */\r\n  function checkRoundingDigits(d, i, rm, repeating) {\r\n    var di, k, r, rd;\r\n\r\n    // Get the length of the first word of the array d.\r\n    for (k = d[0]; k >= 10; k /= 10) --i;\r\n\r\n    // Is the rounding digit in the first word of d?\r\n    if (--i < 0) {\r\n      i += LOG_BASE;\r\n      di = 0;\r\n    } else {\r\n      di = Math.ceil((i + 1) / LOG_BASE);\r\n      i %= LOG_BASE;\r\n    }\r\n\r\n    // i is the index (0 - 6) of the rounding digit.\r\n    // E.g. if within the word 3487563 the first rounding digit is 5,\r\n    // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\r\n    k = mathpow(10, LOG_BASE - i);\r\n    rd = d[di] % k | 0;\r\n\r\n    if (repeating == null) {\r\n      if (i < 3) {\r\n        if (i == 0) rd = rd / 100 | 0;\r\n        else if (i == 1) rd = rd / 10 | 0;\r\n        r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\r\n      } else {\r\n        r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\r\n            (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\r\n      }\r\n    } else {\r\n      if (i < 4) {\r\n        if (i == 0) rd = rd / 1000 | 0;\r\n        else if (i == 1) rd = rd / 100 | 0;\r\n        else if (i == 2) rd = rd / 10 | 0;\r\n        r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\r\n      } else {\r\n        r = ((repeating || rm < 4) && rd + 1 == k ||\r\n        (!repeating && rm > 3) && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  // Convert string of `baseIn` to an array of numbers of `baseOut`.\r\n  // Eg. convertBase('255', 10, 16) returns [15, 15].\r\n  // Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\n  function convertBase(str, baseIn, baseOut) {\r\n    var j,\r\n      arr = [0],\r\n      arrL,\r\n      i = 0,\r\n      strL = str.length;\r\n\r\n    for (; i < strL;) {\r\n      for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\r\n      arr[0] += NUMERALS.indexOf(str.charAt(i++));\r\n      for (j = 0; j < arr.length; j++) {\r\n        if (arr[j] > baseOut - 1) {\r\n          if (arr[j + 1] === void 0) arr[j + 1] = 0;\r\n          arr[j + 1] += arr[j] / baseOut | 0;\r\n          arr[j] %= baseOut;\r\n        }\r\n      }\r\n    }\r\n\r\n    return arr.reverse();\r\n  }\r\n\r\n\r\n  /*\r\n   * cos(x) = 1 - x^2/2! + x^4/4! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function cosine(Ctor, x) {\r\n    var k, len, y;\r\n\r\n    if (x.isZero()) return x;\r\n\r\n    // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\r\n    // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    len = x.d.length;\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      y = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      y = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    Ctor.precision += k;\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\r\n\r\n    // Reverse argument reduction\r\n    for (var i = k; i--;) {\r\n      var cos2x = x.times(x);\r\n      x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\r\n    }\r\n\r\n    Ctor.precision -= k;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Perform division in the specified base.\r\n   */\r\n  var divide = (function () {\r\n\r\n    // Assumes non-zero x and k, and hence non-zero result.\r\n    function multiplyInteger(x, k, base) {\r\n      var temp,\r\n        carry = 0,\r\n        i = x.length;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        temp = x[i] * k + carry;\r\n        x[i] = temp % base | 0;\r\n        carry = temp / base | 0;\r\n      }\r\n\r\n      if (carry) x.unshift(carry);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, r;\r\n\r\n      if (aL != bL) {\r\n        r = aL > bL ? 1 : -1;\r\n      } else {\r\n        for (i = r = 0; i < aL; i++) {\r\n          if (a[i] != b[i]) {\r\n            r = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return r;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1;) a.shift();\r\n    }\r\n\r\n    return function (x, y, pr, rm, dp, base) {\r\n      var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\r\n        yL, yz,\r\n        Ctor = x.constructor,\r\n        sign = x.s == y.s ? 1 : -1,\r\n        xd = x.d,\r\n        yd = y.d;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n        return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\r\n          !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\r\n\r\n          // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.\r\n          xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\r\n      }\r\n\r\n      if (base) {\r\n        logBase = 1;\r\n        e = x.e - y.e;\r\n      } else {\r\n        base = BASE;\r\n        logBase = LOG_BASE;\r\n        e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\r\n      }\r\n\r\n      yL = yd.length;\r\n      xL = xd.length;\r\n      q = new Ctor(sign);\r\n      qd = q.d = [];\r\n\r\n      // Result exponent may be one less than e.\r\n      // The digit array of a Decimal from toStringBinary may have trailing zeros.\r\n      for (i = 0; yd[i] == (xd[i] || 0); i++);\r\n\r\n      if (yd[i] > (xd[i] || 0)) e--;\r\n\r\n      if (pr == null) {\r\n        sd = pr = Ctor.precision;\r\n        rm = Ctor.rounding;\r\n      } else if (dp) {\r\n        sd = pr + (x.e - y.e) + 1;\r\n      } else {\r\n        sd = pr;\r\n      }\r\n\r\n      if (sd < 0) {\r\n        qd.push(1);\r\n        more = true;\r\n      } else {\r\n\r\n        // Convert precision in number of base 10 digits to base 1e7 digits.\r\n        sd = sd / logBase + 2 | 0;\r\n        i = 0;\r\n\r\n        // divisor < 1e7\r\n        if (yL == 1) {\r\n          k = 0;\r\n          yd = yd[0];\r\n          sd++;\r\n\r\n          // k is the carry.\r\n          for (; (i < xL || k) && sd--; i++) {\r\n            t = k * base + (xd[i] || 0);\r\n            qd[i] = t / yd | 0;\r\n            k = t % yd | 0;\r\n          }\r\n\r\n          more = k || i < xL;\r\n\r\n        // divisor >= 1e7\r\n        } else {\r\n\r\n          // Normalise xd and yd so highest order digit of yd is >= base/2\r\n          k = base / (yd[0] + 1) | 0;\r\n\r\n          if (k > 1) {\r\n            yd = multiplyInteger(yd, k, base);\r\n            xd = multiplyInteger(xd, k, base);\r\n            yL = yd.length;\r\n            xL = xd.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xd.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL;) rem[remL++] = 0;\r\n\r\n          yz = yd.slice();\r\n          yz.unshift(0);\r\n          yd0 = yd[0];\r\n\r\n          if (yd[1] >= base / 2) ++yd0;\r\n\r\n          do {\r\n            k = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yd, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, k.\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // k will be how many times the divisor goes into the current remainder.\r\n              k = rem0 / yd0 | 0;\r\n\r\n              //  Algorithm:\r\n              //  1. product = divisor * trial digit (k)\r\n              //  2. if product > remainder: product -= divisor, k--\r\n              //  3. remainder -= product\r\n              //  4. if product was < remainder at 2:\r\n              //    5. compare new remainder and divisor\r\n              //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n              if (k > 1) {\r\n                if (k >= base) k = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiplyInteger(yd, k, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                cmp = compare(prod, rem, prodL, remL);\r\n\r\n                // product > remainder.\r\n                if (cmp == 1) {\r\n                  k--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yd, prodL, base);\r\n                }\r\n              } else {\r\n\r\n                // cmp is -1.\r\n                // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n                // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n                if (k == 0) cmp = k = 1;\r\n                prod = yd.slice();\r\n              }\r\n\r\n              prodL = prod.length;\r\n              if (prodL < remL) prod.unshift(0);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n\r\n              // If product was < previous remainder.\r\n              if (cmp == -1) {\r\n                remL = rem.length;\r\n\r\n                // Compare divisor and new remainder.\r\n                cmp = compare(yd, rem, yL, remL);\r\n\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                if (cmp < 1) {\r\n                  k++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yd, remL, base);\r\n                }\r\n              }\r\n\r\n              remL = rem.length;\r\n            } else if (cmp === 0) {\r\n              k++;\r\n              rem = [0];\r\n            }    // if cmp === 1, k will be 0\r\n\r\n            // Add the next digit, k, to the result array.\r\n            qd[i++] = k;\r\n\r\n            // Update the remainder.\r\n            if (cmp && rem[0]) {\r\n              rem[remL++] = xd[xi] || 0;\r\n            } else {\r\n              rem = [xd[xi]];\r\n              remL = 1;\r\n            }\r\n\r\n          } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n\r\n          more = rem[0] !== void 0;\r\n        }\r\n\r\n        // Leading zero?\r\n        if (!qd[0]) qd.shift();\r\n      }\r\n\r\n      // logBase is 1 when divide is being used for base conversion.\r\n      if (logBase == 1) {\r\n        q.e = e;\r\n        inexact = more;\r\n      } else {\r\n\r\n        // To calculate q.e, first get the number of digits of qd[0].\r\n        for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\r\n        q.e = i + e * logBase - 1;\r\n\r\n        finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round `x` to `sd` significant digits using rounding mode `rm`.\r\n   * Check for over/under-flow.\r\n   */\r\n   function finalise(x, sd, rm, isTruncated) {\r\n    var digits, i, j, k, rd, roundUp, w, xd, xdi,\r\n      Ctor = x.constructor;\r\n\r\n    // Don't round if sd is null or undefined.\r\n    out: if (sd != null) {\r\n      xd = x.d;\r\n\r\n      // Infinity/NaN.\r\n      if (!xd) return x;\r\n\r\n      // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // w: the word of xd containing rd, a base 1e7 number.\r\n      // xdi: the index of w within xd.\r\n      // digits: the number of digits of w.\r\n      // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n      // they had leading zeros)\r\n      // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n      // Get the length of the first word of the digits array xd.\r\n      for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\r\n      i = sd - digits;\r\n\r\n      // Is the rounding digit in the first word of xd?\r\n      if (i < 0) {\r\n        i += LOG_BASE;\r\n        j = sd;\r\n        w = xd[xdi = 0];\r\n\r\n        // Get the rounding digit at index j of w.\r\n        rd = w / mathpow(10, digits - j - 1) % 10 | 0;\r\n      } else {\r\n        xdi = Math.ceil((i + 1) / LOG_BASE);\r\n        k = xd.length;\r\n        if (xdi >= k) {\r\n          if (isTruncated) {\r\n\r\n            // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\r\n            for (; k++ <= xdi;) xd.push(0);\r\n            w = rd = 0;\r\n            digits = 1;\r\n            i %= LOG_BASE;\r\n            j = i - LOG_BASE + 1;\r\n          } else {\r\n            break out;\r\n          }\r\n        } else {\r\n          w = k = xd[xdi];\r\n\r\n          // Get the number of digits of w.\r\n          for (digits = 1; k >= 10; k /= 10) digits++;\r\n\r\n          // Get the index of rd within w.\r\n          i %= LOG_BASE;\r\n\r\n          // Get the index of rd within w, adjusted for leading zeros.\r\n          // The number of leading zeros of w is given by LOG_BASE - digits.\r\n          j = i - LOG_BASE + digits;\r\n\r\n          // Get the rounding digit at index j of w.\r\n          rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\r\n        }\r\n      }\r\n\r\n      // Are there any non-zero digits after the rounding digit?\r\n      isTruncated = isTruncated || sd < 0 ||\r\n        xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\r\n\r\n      // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\r\n      // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\r\n      // will give 714.\r\n\r\n      roundUp = rm < 4\r\n        ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n        : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n            rm == (x.s < 0 ? 8 : 7));\r\n\r\n      if (sd < 1 || !xd[0]) {\r\n        xd.length = 0;\r\n        if (roundUp) {\r\n\r\n          // Convert sd to decimal places.\r\n          sd -= x.e + 1;\r\n\r\n          // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n          xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n          x.e = -sd || 0;\r\n        } else {\r\n\r\n          // Zero.\r\n          xd[0] = x.e = 0;\r\n        }\r\n\r\n        return x;\r\n      }\r\n\r\n      // Remove excess digits.\r\n      if (i == 0) {\r\n        xd.length = xdi;\r\n        k = 1;\r\n        xdi--;\r\n      } else {\r\n        xd.length = xdi + 1;\r\n        k = mathpow(10, LOG_BASE - i);\r\n\r\n        // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n        // j > 0 means i > number of leading zeros of w.\r\n        xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\r\n      }\r\n\r\n      if (roundUp) {\r\n        for (;;) {\r\n\r\n          // Is the digit to be rounded up in the first word of xd?\r\n          if (xdi == 0) {\r\n\r\n            // i will be the length of xd[0] before k is added.\r\n            for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\r\n            j = xd[0] += k;\r\n            for (k = 1; j >= 10; j /= 10) k++;\r\n\r\n            // if i != k the length has increased.\r\n            if (i != k) {\r\n              x.e++;\r\n              if (xd[0] == BASE) xd[0] = 1;\r\n            }\r\n\r\n            break;\r\n          } else {\r\n            xd[xdi] += k;\r\n            if (xd[xdi] != BASE) break;\r\n            xd[xdi--] = 0;\r\n            k = 1;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n    }\r\n\r\n    if (external) {\r\n\r\n      // Overflow?\r\n      if (x.e > Ctor.maxE) {\r\n\r\n        // Infinity.\r\n        x.d = null;\r\n        x.e = NaN;\r\n\r\n      // Underflow?\r\n      } else if (x.e < Ctor.minE) {\r\n\r\n        // Zero.\r\n        x.e = 0;\r\n        x.d = [0];\r\n        // Ctor.underflow = true;\r\n      } // else Ctor.underflow = false;\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function finiteToString(x, isExp, sd) {\r\n    if (!x.isFinite()) return nonFiniteToString(x);\r\n    var k,\r\n      e = x.e,\r\n      str = digitsToString(x.d),\r\n      len = str.length;\r\n\r\n    if (isExp) {\r\n      if (sd && (k = sd - len) > 0) {\r\n        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n      } else if (len > 1) {\r\n        str = str.charAt(0) + '.' + str.slice(1);\r\n      }\r\n\r\n      str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\r\n    } else if (e < 0) {\r\n      str = '0.' + getZeroString(-e - 1) + str;\r\n      if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n    } else if (e >= len) {\r\n      str += getZeroString(e + 1 - len);\r\n      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n    } else {\r\n      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n      if (sd && (k = sd - len) > 0) {\r\n        if (e + 1 === len) str += '.';\r\n        str += getZeroString(k);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // Calculate the base 10 exponent from the base 1e7 exponent.\r\n  function getBase10Exponent(digits, e) {\r\n    var w = digits[0];\r\n\r\n    // Add the number of digits of the first word of the digits array.\r\n    for ( e *= LOG_BASE; w >= 10; w /= 10) e++;\r\n    return e;\r\n  }\r\n\r\n\r\n  function getLn10(Ctor, sd, pr) {\r\n    if (sd > LN10_PRECISION) {\r\n\r\n      // Reset global state in case the exception is caught.\r\n      external = true;\r\n      if (pr) Ctor.precision = pr;\r\n      throw Error(precisionLimitExceeded);\r\n    }\r\n    return finalise(new Ctor(LN10), sd, 1, true);\r\n  }\r\n\r\n\r\n  function getPi(Ctor, sd, rm) {\r\n    if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\r\n    return finalise(new Ctor(PI), sd, rm, true);\r\n  }\r\n\r\n\r\n  function getPrecision(digits) {\r\n    var w = digits.length - 1,\r\n      len = w * LOG_BASE + 1;\r\n\r\n    w = digits[w];\r\n\r\n    // If non-zero...\r\n    if (w) {\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      for (; w % 10 == 0; w /= 10) len--;\r\n\r\n      // Add the number of digits of the first word.\r\n      for (w = digits[0]; w >= 10; w /= 10) len++;\r\n    }\r\n\r\n    return len;\r\n  }\r\n\r\n\r\n  function getZeroString(k) {\r\n    var zs = '';\r\n    for (; k--;) zs += '0';\r\n    return zs;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\r\n   * integer of type number.\r\n   *\r\n   * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\r\n   *\r\n   */\r\n  function intPow(Ctor, x, n, pr) {\r\n    var isTruncated,\r\n      r = new Ctor(1),\r\n\r\n      // Max n of 9007199254740991 takes 53 loop iterations.\r\n      // Maximum digits array length; leaves [28, 34] guard digits.\r\n      k = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n    external = false;\r\n\r\n    for (;;) {\r\n      if (n % 2) {\r\n        r = r.times(x);\r\n        if (truncate(r.d, k)) isTruncated = true;\r\n      }\r\n\r\n      n = mathfloor(n / 2);\r\n      if (n === 0) {\r\n\r\n        // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\r\n        n = r.d.length - 1;\r\n        if (isTruncated && r.d[n] === 0) ++r.d[n];\r\n        break;\r\n      }\r\n\r\n      x = x.times(x);\r\n      truncate(x.d, k);\r\n    }\r\n\r\n    external = true;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  function isOdd(n) {\r\n    return n.d[n.d.length - 1] & 1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Handle `max` (`n` is -1) and `min` (`n` is 1).\r\n   */\r\n  function maxOrMin(Ctor, args, n) {\r\n    var k, y,\r\n      x = new Ctor(args[0]),\r\n      i = 0;\r\n\r\n    for (; ++i < args.length;) {\r\n      y = new Ctor(args[i]);\r\n\r\n      // NaN?\r\n      if (!y.s) {\r\n        x = y;\r\n        break;\r\n      }\r\n\r\n      k = x.cmp(y);\r\n\r\n      if (k === n || k === 0 && x.s === n) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   * Taylor/Maclaurin series.\r\n   *\r\n   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n   *\r\n   * Argument reduction:\r\n   *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n   *   exp(x) = exp(x / 2^k)^(2^k)\r\n   *\r\n   * Previously, the argument was initially reduced by\r\n   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n   * found to be slower than just dividing repeatedly by 32 as above.\r\n   *\r\n   * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n   * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n   *\r\n   *  exp(Infinity)  = Infinity\r\n   *  exp(-Infinity) = 0\r\n   *  exp(NaN)       = NaN\r\n   *  exp(±0)        = 1\r\n   *\r\n   *  exp(x) is non-terminating for any finite, non-zero x.\r\n   *\r\n   *  The result will always be correctly rounded.\r\n   *\r\n   */\r\n  function naturalExponential(x, sd) {\r\n    var denominator, guard, j, pow, sum, t, wpr,\r\n      rep = 0,\r\n      i = 0,\r\n      k = 0,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // 0/NaN/Infinity?\r\n    if (!x.d || !x.d[0] || x.e > 17) {\r\n\r\n      return new Ctor(x.d\r\n        ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\r\n        : x.s ? x.s < 0 ? 0 : x : 0 / 0);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    t = new Ctor(0.03125);\r\n\r\n    // while abs(x) >= 0.1\r\n    while (x.e > -2) {\r\n\r\n      // x = x / 2^5\r\n      x = x.times(t);\r\n      k += 5;\r\n    }\r\n\r\n    // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\r\n    // necessary to ensure the first 4 rounding digits are correct.\r\n    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n    wpr += guard;\r\n    denominator = pow = sum = new Ctor(1);\r\n    Ctor.precision = wpr;\r\n\r\n    for (;;) {\r\n      pow = finalise(pow.times(x), wpr, 1);\r\n      denominator = denominator.times(++i);\r\n      t = sum.plus(divide(pow, denominator, wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        j = k;\r\n        while (j--) sum = finalise(sum.times(sum), wpr, 1);\r\n\r\n        // Check to see if the first 4 rounding digits are [49]999.\r\n        // If so, repeat the summation with a higher precision, otherwise\r\n        // e.g. with precision: 18, rounding: 1\r\n        // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n\r\n          if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += 10;\r\n            denominator = pow = t = new Ctor(1);\r\n            i = 0;\r\n            rep++;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   *  ln(-n)        = NaN\r\n   *  ln(0)         = -Infinity\r\n   *  ln(-0)        = -Infinity\r\n   *  ln(1)         = 0\r\n   *  ln(Infinity)  = Infinity\r\n   *  ln(-Infinity) = NaN\r\n   *  ln(NaN)       = NaN\r\n   *\r\n   *  ln(n) (n != 1) is non-terminating.\r\n   *\r\n   */\r\n  function naturalLogarithm(y, sd) {\r\n    var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\r\n      n = 1,\r\n      guard = 10,\r\n      x = y,\r\n      xd = x.d,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // Is x negative or Infinity, NaN, 0 or 1?\r\n    if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\r\n      return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    Ctor.precision = wpr += guard;\r\n    c = digitsToString(xd);\r\n    c0 = c.charAt(0);\r\n\r\n    if (Math.abs(e = x.e) < 1.5e15) {\r\n\r\n      // Argument reduction.\r\n      // The series converges faster the closer the argument is to 1, so using\r\n      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n      // later be divided by this number, then separate out the power of 10 using\r\n      // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n      // max n is 6 (gives 0.7 - 1.3)\r\n      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n        x = x.times(y);\r\n        c = digitsToString(x.d);\r\n        c0 = c.charAt(0);\r\n        n++;\r\n      }\r\n\r\n      e = x.e;\r\n\r\n      if (c0 > 1) {\r\n        x = new Ctor('0.' + c);\r\n        e++;\r\n      } else {\r\n        x = new Ctor(c0 + '.' + c.slice(1));\r\n      }\r\n    } else {\r\n\r\n      // The argument reduction method above may result in overflow if the argument y is a massive\r\n      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n      // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n      t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n      x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n      Ctor.precision = pr;\r\n\r\n      return sd == null ? finalise(x, pr, rm, external = true) : x;\r\n    }\r\n\r\n    // x1 is x reduced to a value near 1.\r\n    x1 = x;\r\n\r\n    // Taylor series.\r\n    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n    // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n    sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\r\n    x2 = finalise(x.times(x), wpr, 1);\r\n    denominator = 3;\r\n\r\n    for (;;) {\r\n      numerator = finalise(numerator.times(x2), wpr, 1);\r\n      t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        sum = sum.times(2);\r\n\r\n        // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\r\n        // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\r\n        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n        sum = divide(sum, new Ctor(n), wpr, 1);\r\n\r\n        // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\r\n        // been repeated previously) and the first 4 rounding digits 9999?\r\n        // If so, restart the summation with a higher precision, otherwise\r\n        // e.g. with precision: 12, rounding: 1\r\n        // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n          if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += guard;\r\n            t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\r\n            x2 = finalise(x.times(x), wpr, 1);\r\n            denominator = rep = 1;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n      denominator += 2;\r\n    }\r\n  }\r\n\r\n\r\n  // ±Infinity, NaN.\r\n  function nonFiniteToString(x) {\r\n    // Unsigned.\r\n    return String(x.s * x.s / 0);\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from string `str`.\r\n   */\r\n  function parseDecimal(x, str) {\r\n    var e, i, len;\r\n\r\n    // TODO BigInt str: no need to check for decimal point, exponential form or leading zeros.\r\n\r\n    // Decimal point?\r\n    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = str.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +str.slice(i + 1);\r\n      str = str.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\r\n    str = str.slice(i, len);\r\n\r\n    if (str) {\r\n      len -= i;\r\n      x.e = e = e - i - 1;\r\n      x.d = [];\r\n\r\n      // Transform base\r\n\r\n      // e is the base 10 exponent.\r\n      // i is where to slice str to get the first word of the digits array.\r\n      i = (e + 1) % LOG_BASE;\r\n      if (e < 0) i += LOG_BASE;\r\n\r\n      if (i < len) {\r\n        if (i) x.d.push(+str.slice(0, i));\r\n        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n        str = str.slice(i);\r\n        i = LOG_BASE - str.length;\r\n      } else {\r\n        i -= len;\r\n      }\r\n\r\n      for (; i--;) str += '0';\r\n      x.d.push(+str);\r\n\r\n      if (external) {\r\n\r\n        // Overflow?\r\n        if (x.e > x.constructor.maxE) {\r\n\r\n          // Infinity.\r\n          x.d = null;\r\n          x.e = NaN;\r\n\r\n        // Underflow?\r\n        } else if (x.e < x.constructor.minE) {\r\n\r\n          // Zero.\r\n          x.e = 0;\r\n          x.d = [0];\r\n          // x.constructor.underflow = true;\r\n        } // else x.constructor.underflow = false;\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.e = 0;\r\n      x.d = [0];\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\r\n   */\r\n  function parseOther(x, str) {\r\n    var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\r\n\r\n    if (str.indexOf('_') > -1) {\r\n      str = str.replace(/(\\d)_(?=\\d)/g, '$1');\r\n      if (isDecimal.test(str)) return parseDecimal(x, str);\r\n    } else if (str === 'Infinity' || str === 'NaN') {\r\n      if (!+str) x.s = NaN;\r\n      x.e = NaN;\r\n      x.d = null;\r\n      return x;\r\n    }\r\n\r\n    if (isHex.test(str))  {\r\n      base = 16;\r\n      str = str.toLowerCase();\r\n    } else if (isBinary.test(str))  {\r\n      base = 2;\r\n    } else if (isOctal.test(str))  {\r\n      base = 8;\r\n    } else {\r\n      throw Error(invalidArgument + str);\r\n    }\r\n\r\n    // Is there a binary exponent part?\r\n    i = str.search(/p/i);\r\n\r\n    if (i > 0) {\r\n      p = +str.slice(i + 1);\r\n      str = str.substring(2, i);\r\n    } else {\r\n      str = str.slice(2);\r\n    }\r\n\r\n    // Convert `str` as an integer then divide the result by `base` raised to a power such that the\r\n    // fraction part will be restored.\r\n    i = str.indexOf('.');\r\n    isFloat = i >= 0;\r\n    Ctor = x.constructor;\r\n\r\n    if (isFloat) {\r\n      str = str.replace('.', '');\r\n      len = str.length;\r\n      i = len - i;\r\n\r\n      // log[10](16) = 1.2041... , log[10](88) = 1.9444....\r\n      divisor = intPow(Ctor, new Ctor(base), i, i * 2);\r\n    }\r\n\r\n    xd = convertBase(str, base, BASE);\r\n    xe = xd.length - 1;\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xe; xd[i] === 0; --i) xd.pop();\r\n    if (i < 0) return new Ctor(x.s * 0);\r\n    x.e = getBase10Exponent(xd, xe);\r\n    x.d = xd;\r\n    external = false;\r\n\r\n    // At what precision to perform the division to ensure exact conversion?\r\n    // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\r\n    // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\r\n    // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\r\n    // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\r\n    // Therefore using 4 * the number of digits of str will always be enough.\r\n    if (isFloat) x = divide(x, divisor, len * 4);\r\n\r\n    // Multiply by the binary exponent part if present.\r\n    if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\r\n    external = true;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function sine(Ctor, x) {\r\n    var k,\r\n      len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      return x.isZero() ? x : taylorSeries(Ctor, 2, x, x);\r\n    }\r\n\r\n    // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\r\n    // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\r\n    // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    k = 1.4 * Math.sqrt(len);\r\n    k = k > 16 ? 16 : k | 0;\r\n\r\n    x = x.times(1 / tinyPow(5, k));\r\n    x = taylorSeries(Ctor, 2, x, x);\r\n\r\n    // Reverse argument reduction\r\n    var sin2_x,\r\n      d5 = new Ctor(5),\r\n      d16 = new Ctor(16),\r\n      d20 = new Ctor(20);\r\n    for (; k--;) {\r\n      sin2_x = x.times(x);\r\n      x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  // Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\r\n  function taylorSeries(Ctor, n, x, y, isHyperbolic) {\r\n    var j, t, u, x2,\r\n      i = 1,\r\n      pr = Ctor.precision,\r\n      k = Math.ceil(pr / LOG_BASE);\r\n\r\n    external = false;\r\n    x2 = x.times(x);\r\n    u = new Ctor(y);\r\n\r\n    for (;;) {\r\n      t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      u = isHyperbolic ? y.plus(t) : y.minus(t);\r\n      y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      t = u.plus(y);\r\n\r\n      if (t.d[k] !== void 0) {\r\n        for (j = k; t.d[j] === u.d[j] && j--;);\r\n        if (j == -1) break;\r\n      }\r\n\r\n      j = u;\r\n      u = y;\r\n      y = t;\r\n      t = j;\r\n      i++;\r\n    }\r\n\r\n    external = true;\r\n    t.d.length = k + 1;\r\n\r\n    return t;\r\n  }\r\n\r\n\r\n  // Exponent e must be positive and non-zero.\r\n  function tinyPow(b, e) {\r\n    var n = b;\r\n    while (--e) n *= b;\r\n    return n;\r\n  }\r\n\r\n\r\n  // Return the absolute value of `x` reduced to less than or equal to half pi.\r\n  function toLessThanHalfPi(Ctor, x) {\r\n    var t,\r\n      isNeg = x.s < 0,\r\n      pi = getPi(Ctor, Ctor.precision, 1),\r\n      halfPi = pi.times(0.5);\r\n\r\n    x = x.abs();\r\n\r\n    if (x.lte(halfPi)) {\r\n      quadrant = isNeg ? 4 : 1;\r\n      return x;\r\n    }\r\n\r\n    t = x.divToInt(pi);\r\n\r\n    if (t.isZero()) {\r\n      quadrant = isNeg ? 3 : 2;\r\n    } else {\r\n      x = x.minus(t.times(pi));\r\n\r\n      // 0 <= x < pi\r\n      if (x.lte(halfPi)) {\r\n        quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\r\n        return x;\r\n      }\r\n\r\n      quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\r\n    }\r\n\r\n    return x.minus(pi).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return the value of Decimal `x` as a string in base `baseOut`.\r\n   *\r\n   * If the optional `sd` argument is present include a binary exponent suffix.\r\n   */\r\n  function toStringBinary(x, baseOut, sd, rm) {\r\n    var base, e, i, k, len, roundUp, str, xd, y,\r\n      Ctor = x.constructor,\r\n      isExp = sd !== void 0;\r\n\r\n    if (isExp) {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    } else {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    }\r\n\r\n    if (!x.isFinite()) {\r\n      str = nonFiniteToString(x);\r\n    } else {\r\n      str = finiteToString(x);\r\n      i = str.indexOf('.');\r\n\r\n      // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\r\n      // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\r\n      // minBinaryExponent = floor(decimalExponent * log[2](10))\r\n      // log[2](10) = 3.321928094887362347870319429489390175864\r\n\r\n      if (isExp) {\r\n        base = 2;\r\n        if (baseOut == 16) {\r\n          sd = sd * 4 - 3;\r\n        } else if (baseOut == 8) {\r\n          sd = sd * 3 - 2;\r\n        }\r\n      } else {\r\n        base = baseOut;\r\n      }\r\n\r\n      // Convert the number as an integer then divide the result by its base raised to a power such\r\n      // that the fraction part will be restored.\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        str = str.replace('.', '');\r\n        y = new Ctor(1);\r\n        y.e = str.length - i;\r\n        y.d = convertBase(finiteToString(y), 10, base);\r\n        y.e = y.d.length;\r\n      }\r\n\r\n      xd = convertBase(str, 10, base);\r\n      e = len = xd.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xd[--len] == 0;) xd.pop();\r\n\r\n      if (!xd[0]) {\r\n        str = isExp ? '0p+0' : '0';\r\n      } else {\r\n        if (i < 0) {\r\n          e--;\r\n        } else {\r\n          x = new Ctor(x);\r\n          x.d = xd;\r\n          x.e = e;\r\n          x = divide(x, y, sd, rm, 0, base);\r\n          xd = x.d;\r\n          e = x.e;\r\n          roundUp = inexact;\r\n        }\r\n\r\n        // The rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        i = xd[sd];\r\n        k = base / 2;\r\n        roundUp = roundUp || xd[sd + 1] !== void 0;\r\n\r\n        roundUp = rm < 4\r\n          ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\r\n          : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\r\n            rm === (x.s < 0 ? 8 : 7));\r\n\r\n        xd.length = sd;\r\n\r\n        if (roundUp) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (; ++xd[--sd] > base - 1;) {\r\n            xd[sd] = 0;\r\n            if (!sd) {\r\n              ++e;\r\n              xd.unshift(1);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n\r\n        // Add binary exponent suffix?\r\n        if (isExp) {\r\n          if (len > 1) {\r\n            if (baseOut == 16 || baseOut == 8) {\r\n              i = baseOut == 16 ? 4 : 3;\r\n              for (--len; len % i; len++) str += '0';\r\n              xd = convertBase(str, base, baseOut);\r\n              for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n              // xd[0] will always be be 1\r\n              for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n            } else {\r\n              str = str.charAt(0) + '.' + str.slice(1);\r\n            }\r\n          }\r\n\r\n          str =  str + (e < 0 ? 'p' : 'p+') + e;\r\n        } else if (e < 0) {\r\n          for (; ++e;) str = '0' + str;\r\n          str = '0.' + str;\r\n        } else {\r\n          if (++e > len) for (e -= len; e-- ;) str += '0';\r\n          else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\r\n        }\r\n      }\r\n\r\n      str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\r\n    }\r\n\r\n    return x.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Does not strip trailing zeros.\r\n  function truncate(arr, len) {\r\n    if (arr.length > len) {\r\n      arr.length = len;\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  // Decimal methods\r\n\r\n\r\n  /*\r\n   *  abs\r\n   *  acos\r\n   *  acosh\r\n   *  add\r\n   *  asin\r\n   *  asinh\r\n   *  atan\r\n   *  atanh\r\n   *  atan2\r\n   *  cbrt\r\n   *  ceil\r\n   *  clamp\r\n   *  clone\r\n   *  config\r\n   *  cos\r\n   *  cosh\r\n   *  div\r\n   *  exp\r\n   *  floor\r\n   *  hypot\r\n   *  ln\r\n   *  log\r\n   *  log2\r\n   *  log10\r\n   *  max\r\n   *  min\r\n   *  mod\r\n   *  mul\r\n   *  pow\r\n   *  random\r\n   *  round\r\n   *  set\r\n   *  sign\r\n   *  sin\r\n   *  sinh\r\n   *  sqrt\r\n   *  sub\r\n   *  sum\r\n   *  tan\r\n   *  tanh\r\n   *  trunc\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of `x`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function abs(x) {\r\n    return new this(x).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine in radians of `x`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function acos(x) {\r\n    return new this(x).acos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function acosh(x) {\r\n    return new this(x).acosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   * y {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function add(x, y) {\r\n    return new this(x).plus(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function asin(x) {\r\n    return new this(x).asin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function asinh(x) {\r\n    return new this(x).asinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function atan(x) {\r\n    return new this(x).atan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function atanh(x) {\r\n    return new this(x).atanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\r\n   * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi, pi]\r\n   *\r\n   * y {number|string|bigint|Decimal} The y-coordinate.\r\n   * x {number|string|bigint|Decimal} The x-coordinate.\r\n   *\r\n   * atan2(±0, -0)               = ±pi\r\n   * atan2(±0, +0)               = ±0\r\n   * atan2(±0, -x)               = ±pi for x > 0\r\n   * atan2(±0, x)                = ±0 for x > 0\r\n   * atan2(-y, ±0)               = -pi/2 for y > 0\r\n   * atan2(y, ±0)                = pi/2 for y > 0\r\n   * atan2(±y, -Infinity)        = ±pi for finite y > 0\r\n   * atan2(±y, +Infinity)        = ±0 for finite y > 0\r\n   * atan2(±Infinity, x)         = ±pi/2 for finite x\r\n   * atan2(±Infinity, -Infinity) = ±3*pi/4\r\n   * atan2(±Infinity, +Infinity) = ±pi/4\r\n   * atan2(NaN, x) = NaN\r\n   * atan2(y, NaN) = NaN\r\n   *\r\n   */\r\n  function atan2(y, x) {\r\n    y = new this(y);\r\n    x = new this(x);\r\n    var r,\r\n      pr = this.precision,\r\n      rm = this.rounding,\r\n      wpr = pr + 4;\r\n\r\n    // Either NaN\r\n    if (!y.s || !x.s) {\r\n      r = new this(NaN);\r\n\r\n    // Both ±Infinity\r\n    } else if (!y.d && !x.d) {\r\n      r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\r\n      r.s = y.s;\r\n\r\n    // x is ±Infinity or y is ±0\r\n    } else if (!x.d || y.isZero()) {\r\n      r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\r\n      r.s = y.s;\r\n\r\n    // y is ±Infinity or x is ±0\r\n    } else if (!y.d || x.isZero()) {\r\n      r = getPi(this, wpr, 1).times(0.5);\r\n      r.s = y.s;\r\n\r\n    // Both non-zero and finite\r\n    } else if (x.s < 0) {\r\n      this.precision = wpr;\r\n      this.rounding = 1;\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n      x = getPi(this, wpr, 1);\r\n      this.precision = pr;\r\n      this.rounding = rm;\r\n      r = y.s < 0 ? r.minus(x) : r.plus(x);\r\n    } else {\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function cbrt(x) {\r\n    return new this(x).cbrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function ceil(x) {\r\n    return finalise(x = new this(x), x.e + 1, 2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` clamped to the range delineated by `min` and `max`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   * min {number|string|bigint|Decimal}\r\n   * max {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function clamp(x, min, max) {\r\n    return new this(x).clamp(min, max);\r\n  }\r\n\r\n\r\n  /*\r\n   * Configure global settings for a Decimal constructor.\r\n   *\r\n   * `obj` is an object with one or more of the following properties,\r\n   *\r\n   *   precision  {number}\r\n   *   rounding   {number}\r\n   *   toExpNeg   {number}\r\n   *   toExpPos   {number}\r\n   *   maxE       {number}\r\n   *   minE       {number}\r\n   *   modulo     {number}\r\n   *   crypto     {boolean|number}\r\n   *   defaults   {true}\r\n   *\r\n   * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n   *\r\n   */\r\n  function config(obj) {\r\n    if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\r\n    var i, p, v,\r\n      useDefaults = obj.defaults === true,\r\n      ps = [\r\n        'precision', 1, MAX_DIGITS,\r\n        'rounding', 0, 8,\r\n        'toExpNeg', -EXP_LIMIT, 0,\r\n        'toExpPos', 0, EXP_LIMIT,\r\n        'maxE', 0, EXP_LIMIT,\r\n        'minE', -EXP_LIMIT, 0,\r\n        'modulo', 0, 9\r\n      ];\r\n\r\n    for (i = 0; i < ps.length; i += 3) {\r\n      if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\r\n      if ((v = obj[p]) !== void 0) {\r\n        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\r\n    if ((v = obj[p]) !== void 0) {\r\n      if (v === true || v === false || v === 0 || v === 1) {\r\n        if (v) {\r\n          if (typeof crypto != 'undefined' && crypto &&\r\n            (crypto.getRandomValues || crypto.randomBytes)) {\r\n            this[p] = true;\r\n          } else {\r\n            throw Error(cryptoUnavailable);\r\n          }\r\n        } else {\r\n          this[p] = false;\r\n        }\r\n      } else {\r\n        throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cos(x) {\r\n    return new this(x).cos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cosh(x) {\r\n    return new this(x).cosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n   * constructor.\r\n   *\r\n   */\r\n  function clone(obj) {\r\n    var i, p, ps;\r\n\r\n    /*\r\n     * The Decimal constructor and exported function.\r\n     * Return a new Decimal instance.\r\n     *\r\n     * v {number|string|bigint|Decimal} A numeric value.\r\n     *\r\n     */\r\n    function Decimal(v) {\r\n      var e, i, t,\r\n        x = this;\r\n\r\n      // Decimal called without new.\r\n      if (!(x instanceof Decimal)) return new Decimal(v);\r\n\r\n      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n      // which points to Object.\r\n      x.constructor = Decimal;\r\n\r\n      if (isDecimalInstance(v)) {\r\n        x.s = v.s;\r\n\r\n        if (external) {\r\n          if (!v.d || v.e > Decimal.maxE) {\r\n\r\n            // Infinity.\r\n            x.e = NaN;\r\n            x.d = null;\r\n          } else if (v.e < Decimal.minE) {\r\n\r\n            // Zero.\r\n            x.e = 0;\r\n            x.d = [0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.d = v.d.slice();\r\n          }\r\n        } else {\r\n          x.e = v.e;\r\n          x.d = v.d ? v.d.slice() : v.d;\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      t = typeof v;\r\n\r\n      if (t === 'number') {\r\n        if (v === 0) {\r\n          x.s = 1 / v < 0 ? -1 : 1;\r\n          x.e = 0;\r\n          x.d = [0];\r\n          return;\r\n        }\r\n\r\n        if (v < 0) {\r\n          v = -v;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 1;\r\n        }\r\n\r\n        // Fast path for small integers.\r\n        if (v === ~~v && v < 1e7) {\r\n          for (e = 0, i = v; i >= 10; i /= 10) e++;\r\n\r\n          if (external) {\r\n            if (e > Decimal.maxE) {\r\n              x.e = NaN;\r\n              x.d = null;\r\n            } else if (e < Decimal.minE) {\r\n              x.e = 0;\r\n              x.d = [0];\r\n            } else {\r\n              x.e = e;\r\n              x.d = [v];\r\n            }\r\n          } else {\r\n            x.e = e;\r\n            x.d = [v];\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        // Infinity or NaN?\r\n        if (v * 0 !== 0) {\r\n          if (!v) x.s = NaN;\r\n          x.e = NaN;\r\n          x.d = null;\r\n          return;\r\n        }\r\n\r\n        return parseDecimal(x, v.toString());\r\n      }\r\n\r\n      if (t === 'string') {\r\n        if ((i = v.charCodeAt(0)) === 45) {  // minus sign\r\n          v = v.slice(1);\r\n          x.s = -1;\r\n        } else {\r\n          if (i === 43) v = v.slice(1);  // plus sign\r\n          x.s = 1;\r\n        }\r\n\r\n        return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\r\n      }\r\n\r\n      if (t === 'bigint') {\r\n        if (v < 0) {\r\n          v = -v;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 1;\r\n        }\r\n\r\n        return parseDecimal(x, v.toString());\r\n      }\r\n\r\n      throw Error(invalidArgument + v);\r\n    }\r\n\r\n    Decimal.prototype = P;\r\n\r\n    Decimal.ROUND_UP = 0;\r\n    Decimal.ROUND_DOWN = 1;\r\n    Decimal.ROUND_CEIL = 2;\r\n    Decimal.ROUND_FLOOR = 3;\r\n    Decimal.ROUND_HALF_UP = 4;\r\n    Decimal.ROUND_HALF_DOWN = 5;\r\n    Decimal.ROUND_HALF_EVEN = 6;\r\n    Decimal.ROUND_HALF_CEIL = 7;\r\n    Decimal.ROUND_HALF_FLOOR = 8;\r\n    Decimal.EUCLID = 9;\r\n\r\n    Decimal.config = Decimal.set = config;\r\n    Decimal.clone = clone;\r\n    Decimal.isDecimal = isDecimalInstance;\r\n\r\n    Decimal.abs = abs;\r\n    Decimal.acos = acos;\r\n    Decimal.acosh = acosh;        // ES6\r\n    Decimal.add = add;\r\n    Decimal.asin = asin;\r\n    Decimal.asinh = asinh;        // ES6\r\n    Decimal.atan = atan;\r\n    Decimal.atanh = atanh;        // ES6\r\n    Decimal.atan2 = atan2;\r\n    Decimal.cbrt = cbrt;          // ES6\r\n    Decimal.ceil = ceil;\r\n    Decimal.clamp = clamp;\r\n    Decimal.cos = cos;\r\n    Decimal.cosh = cosh;          // ES6\r\n    Decimal.div = div;\r\n    Decimal.exp = exp;\r\n    Decimal.floor = floor;\r\n    Decimal.hypot = hypot;        // ES6\r\n    Decimal.ln = ln;\r\n    Decimal.log = log;\r\n    Decimal.log10 = log10;        // ES6\r\n    Decimal.log2 = log2;          // ES6\r\n    Decimal.max = max;\r\n    Decimal.min = min;\r\n    Decimal.mod = mod;\r\n    Decimal.mul = mul;\r\n    Decimal.pow = pow;\r\n    Decimal.random = random;\r\n    Decimal.round = round;\r\n    Decimal.sign = sign;          // ES6\r\n    Decimal.sin = sin;\r\n    Decimal.sinh = sinh;          // ES6\r\n    Decimal.sqrt = sqrt;\r\n    Decimal.sub = sub;\r\n    Decimal.sum = sum;\r\n    Decimal.tan = tan;\r\n    Decimal.tanh = tanh;          // ES6\r\n    Decimal.trunc = trunc;        // ES6\r\n\r\n    if (obj === void 0) obj = {};\r\n    if (obj) {\r\n      if (obj.defaults !== true) {\r\n        ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\r\n        for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n      }\r\n    }\r\n\r\n    Decimal.config(obj);\r\n\r\n    return Decimal;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   * y {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function div(x, y) {\r\n    return new this(x).div(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} The power to which to raise the base of the natural log.\r\n   *\r\n   */\r\n  function exp(x) {\r\n    return new this(x).exp();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function floor(x) {\r\n    return finalise(x = new this(x), x.e + 1, 3);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\r\n   *\r\n   * arguments {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function hypot() {\r\n    var i, n,\r\n      t = new this(0);\r\n\r\n    external = false;\r\n\r\n    for (i = 0; i < arguments.length;) {\r\n      n = new this(arguments[i++]);\r\n      if (!n.d) {\r\n        if (n.s) {\r\n          external = true;\r\n          return new this(1 / 0);\r\n        }\r\n        t = n;\r\n      } else if (t.d) {\r\n        t = t.plus(n.times(n));\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return t.sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  function isDecimalInstance(obj) {\r\n    return obj instanceof Decimal || obj && obj.toStringTag === tag || false;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function ln(x) {\r\n    return new this(x).ln();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\r\n   * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * log[y](x)\r\n   *\r\n   * x {number|string|bigint|Decimal} The argument of the logarithm.\r\n   * y {number|string|bigint|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  function log(x, y) {\r\n    return new this(x).log(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function log2(x) {\r\n    return new this(x).log(2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function log10(x) {\r\n    return new this(x).log(10);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function max() {\r\n    return maxOrMin(this, arguments, -1);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function min() {\r\n    return maxOrMin(this, arguments, 1);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   * y {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function mod(x, y) {\r\n    return new this(x).mod(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   * y {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function mul(x, y) {\r\n    return new this(x).mul(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} The base.\r\n   * y {number|string|bigint|Decimal} The exponent.\r\n   *\r\n   */\r\n  function pow(x, y) {\r\n    return new this(x).pow(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\r\n   * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\r\n   * are produced).\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\r\n   *\r\n   */\r\n  function random(sd) {\r\n    var d, e, k, n,\r\n      i = 0,\r\n      r = new this(1),\r\n      rd = [];\r\n\r\n    if (sd === void 0) sd = this.precision;\r\n    else checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    k = Math.ceil(sd / LOG_BASE);\r\n\r\n    if (!this.crypto) {\r\n      for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\r\n\r\n    // Browsers supporting crypto.getRandomValues.\r\n    } else if (crypto.getRandomValues) {\r\n      d = crypto.getRandomValues(new Uint32Array(k));\r\n\r\n      for (; i < k;) {\r\n        n = d[i];\r\n\r\n        // 0 <= n < 4294967296\r\n        // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\r\n        if (n >= 4.29e9) {\r\n          d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\r\n        } else {\r\n\r\n          // 0 <= n <= 4289999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd[i++] = n % 1e7;\r\n        }\r\n      }\r\n\r\n    // Node.js supporting crypto.randomBytes.\r\n    } else if (crypto.randomBytes) {\r\n\r\n      // buffer\r\n      d = crypto.randomBytes(k *= 4);\r\n\r\n      for (; i < k;) {\r\n\r\n        // 0 <= n < 2147483648\r\n        n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\r\n\r\n        // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\r\n        if (n >= 2.14e9) {\r\n          crypto.randomBytes(4).copy(d, i);\r\n        } else {\r\n\r\n          // 0 <= n <= 2139999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd.push(n % 1e7);\r\n          i += 4;\r\n        }\r\n      }\r\n\r\n      i = k / 4;\r\n    } else {\r\n      throw Error(cryptoUnavailable);\r\n    }\r\n\r\n    k = rd[--i];\r\n    sd %= LOG_BASE;\r\n\r\n    // Convert trailing digits to zeros according to sd.\r\n    if (k && sd) {\r\n      n = mathpow(10, LOG_BASE - sd);\r\n      rd[i] = (k / n | 0) * n;\r\n    }\r\n\r\n    // Remove trailing words which are zero.\r\n    for (; rd[i] === 0; i--) rd.pop();\r\n\r\n    // Zero?\r\n    if (i < 0) {\r\n      e = 0;\r\n      rd = [0];\r\n    } else {\r\n      e = -1;\r\n\r\n      // Remove leading words which are zero and adjust exponent accordingly.\r\n      for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\r\n\r\n      // Count the digits of the first word of rd to determine leading zeros.\r\n      for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\r\n\r\n      // Adjust the exponent for leading zeros of the first word of rd.\r\n      if (k < LOG_BASE) e -= LOG_BASE - k;\r\n    }\r\n\r\n    r.e = e;\r\n    r.d = rd;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\r\n   *\r\n   * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function round(x) {\r\n    return finalise(x = new this(x), x.e + 1, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if x > 0,\r\n   *  -1    if x < 0,\r\n   *   0    if x is 0,\r\n   *  -0    if x is -0,\r\n   *   NaN  otherwise\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function sign(x) {\r\n    x = new this(x);\r\n    return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sin(x) {\r\n    return new this(x).sin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sinh(x) {\r\n    return new this(x).sinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function sqrt(x) {\r\n    return new this(x).sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   * y {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function sub(x, y) {\r\n    return new this(x).sub(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of the arguments, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * Only the result is rounded, not the intermediate calculations.\r\n   *\r\n   * arguments {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function sum() {\r\n    var i = 0,\r\n      args = arguments,\r\n      x = new this(args[i]);\r\n\r\n    external = false;\r\n    for (; x.s && ++i < args.length;) x = x.plus(args[i]);\r\n    external = true;\r\n\r\n    return finalise(x, this.precision, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tan(x) {\r\n    return new this(x).tan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tanh(x) {\r\n    return new this(x).tanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` truncated to an integer.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function trunc(x) {\r\n    return finalise(x = new this(x), x.e + 1, 1);\r\n  }\r\n\r\n\r\n  // Create and configure initial Decimal constructor.\r\n  Decimal = clone(DEFAULTS);\r\n  Decimal.prototype.constructor = Decimal;\r\n  Decimal['default'] = Decimal.Decimal = Decimal;\r\n\r\n  // Create the internal constants from their string values.\r\n  LN10 = new Decimal(LN10);\r\n  PI = new Decimal(PI);\r\n\r\n\r\n  // Export.\r\n\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () {\r\n      return Decimal;\r\n    });\r\n\r\n  // Node and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    if (typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol') {\r\n      P[Symbol['for']('nodejs.util.inspect.custom')] = P.toString;\r\n      P[Symbol.toStringTag] = 'Decimal';\r\n    }\r\n\r\n    module.exports = Decimal;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalScope) {\r\n      globalScope = typeof self != 'undefined' && self && self.self == self ? self : window;\r\n    }\r\n\r\n    noConflict = globalScope.Decimal;\r\n    Decimal.noConflict = function () {\r\n      globalScope.Decimal = noConflict;\r\n      return Decimal;\r\n    };\r\n\r\n    globalScope.Decimal = Decimal;\r\n  }\r\n})(this);\r\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","/* @license\nPapa Parse\nv5.5.3\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\n((e,t)=>{\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof module&&\"undefined\"!=typeof exports?module.exports=t():e.Papa=t()})(this,function r(){var n=\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:void 0!==n?n:{};var d,s=!n.document&&!!n.postMessage,a=n.IS_PAPA_WORKER||!1,o={},h=0,v={};function u(e){this._handle=null,this._finished=!1,this._completed=!1,this._halted=!1,this._input=null,this._baseIndex=0,this._partialLine=\"\",this._rowCount=0,this._start=0,this._nextChunk=null,this.isFirstChunk=!0,this._completeResults={data:[],errors:[],meta:{}},function(e){var t=b(e);t.chunkSize=parseInt(t.chunkSize),e.step||e.chunk||(t.chunkSize=null);this._handle=new i(t),(this._handle.streamer=this)._config=t}.call(this,e),this.parseChunk=function(t,e){var i=parseInt(this._config.skipFirstNLines)||0;if(this.isFirstChunk&&0<i){let e=this._config.newline;e||(r=this._config.quoteChar||'\"',e=this._handle.guessLineEndings(t,r)),t=[...t.split(e).slice(i)].join(e)}this.isFirstChunk&&U(this._config.beforeFirstChunk)&&void 0!==(r=this._config.beforeFirstChunk(t))&&(t=r),this.isFirstChunk=!1,this._halted=!1;var i=this._partialLine+t,r=(this._partialLine=\"\",this._handle.parse(i,this._baseIndex,!this._finished));if(!this._handle.paused()&&!this._handle.aborted()){t=r.meta.cursor,i=(this._finished||(this._partialLine=i.substring(t-this._baseIndex),this._baseIndex=t),r&&r.data&&(this._rowCount+=r.data.length),this._finished||this._config.preview&&this._rowCount>=this._config.preview);if(a)n.postMessage({results:r,workerId:v.WORKER_ID,finished:i});else if(U(this._config.chunk)&&!e){if(this._config.chunk(r,this._handle),this._handle.paused()||this._handle.aborted())return void(this._halted=!0);this._completeResults=r=void 0}return this._config.step||this._config.chunk||(this._completeResults.data=this._completeResults.data.concat(r.data),this._completeResults.errors=this._completeResults.errors.concat(r.errors),this._completeResults.meta=r.meta),this._completed||!i||!U(this._config.complete)||r&&r.meta.aborted||(this._config.complete(this._completeResults,this._input),this._completed=!0),i||r&&r.meta.paused||this._nextChunk(),r}this._halted=!0},this._sendError=function(e){U(this._config.error)?this._config.error(e):a&&this._config.error&&n.postMessage({workerId:v.WORKER_ID,error:e,finished:!1})}}function f(e){var r;(e=e||{}).chunkSize||(e.chunkSize=v.RemoteChunkSize),u.call(this,e),this._nextChunk=s?function(){this._readChunk(),this._chunkLoaded()}:function(){this._readChunk()},this.stream=function(e){this._input=e,this._nextChunk()},this._readChunk=function(){if(this._finished)this._chunkLoaded();else{if(r=new XMLHttpRequest,this._config.withCredentials&&(r.withCredentials=this._config.withCredentials),s||(r.onload=y(this._chunkLoaded,this),r.onerror=y(this._chunkError,this)),r.open(this._config.downloadRequestBody?\"POST\":\"GET\",this._input,!s),this._config.downloadRequestHeaders){var e,t=this._config.downloadRequestHeaders;for(e in t)r.setRequestHeader(e,t[e])}var i;this._config.chunkSize&&(i=this._start+this._config.chunkSize-1,r.setRequestHeader(\"Range\",\"bytes=\"+this._start+\"-\"+i));try{r.send(this._config.downloadRequestBody)}catch(e){this._chunkError(e.message)}s&&0===r.status&&this._chunkError()}},this._chunkLoaded=function(){4===r.readyState&&(r.status<200||400<=r.status?this._chunkError():(this._start+=this._config.chunkSize||r.responseText.length,this._finished=!this._config.chunkSize||this._start>=(e=>null!==(e=e.getResponseHeader(\"Content-Range\"))?parseInt(e.substring(e.lastIndexOf(\"/\")+1)):-1)(r),this.parseChunk(r.responseText)))},this._chunkError=function(e){e=r.statusText||e;this._sendError(new Error(e))}}function l(e){(e=e||{}).chunkSize||(e.chunkSize=v.LocalChunkSize),u.call(this,e);var i,r,n=\"undefined\"!=typeof FileReader;this.stream=function(e){this._input=e,r=e.slice||e.webkitSlice||e.mozSlice,n?((i=new FileReader).onload=y(this._chunkLoaded,this),i.onerror=y(this._chunkError,this)):i=new FileReaderSync,this._nextChunk()},this._nextChunk=function(){this._finished||this._config.preview&&!(this._rowCount<this._config.preview)||this._readChunk()},this._readChunk=function(){var e=this._input,t=(this._config.chunkSize&&(t=Math.min(this._start+this._config.chunkSize,this._input.size),e=r.call(e,this._start,t)),i.readAsText(e,this._config.encoding));n||this._chunkLoaded({target:{result:t}})},this._chunkLoaded=function(e){this._start+=this._config.chunkSize,this._finished=!this._config.chunkSize||this._start>=this._input.size,this.parseChunk(e.target.result)},this._chunkError=function(){this._sendError(i.error)}}function c(e){var i;u.call(this,e=e||{}),this.stream=function(e){return i=e,this._nextChunk()},this._nextChunk=function(){var e,t;if(!this._finished)return e=this._config.chunkSize,i=e?(t=i.substring(0,e),i.substring(e)):(t=i,\"\"),this._finished=!i,this.parseChunk(t)}}function p(e){u.call(this,e=e||{});var t=[],i=!0,r=!1;this.pause=function(){u.prototype.pause.apply(this,arguments),this._input.pause()},this.resume=function(){u.prototype.resume.apply(this,arguments),this._input.resume()},this.stream=function(e){this._input=e,this._input.on(\"data\",this._streamData),this._input.on(\"end\",this._streamEnd),this._input.on(\"error\",this._streamError)},this._checkIsFinished=function(){r&&1===t.length&&(this._finished=!0)},this._nextChunk=function(){this._checkIsFinished(),t.length?this.parseChunk(t.shift()):i=!0},this._streamData=y(function(e){try{t.push(\"string\"==typeof e?e:e.toString(this._config.encoding)),i&&(i=!1,this._checkIsFinished(),this.parseChunk(t.shift()))}catch(e){this._streamError(e)}},this),this._streamError=y(function(e){this._streamCleanUp(),this._sendError(e)},this),this._streamEnd=y(function(){this._streamCleanUp(),r=!0,this._streamData(\"\")},this),this._streamCleanUp=y(function(){this._input.removeListener(\"data\",this._streamData),this._input.removeListener(\"end\",this._streamEnd),this._input.removeListener(\"error\",this._streamError)},this)}function i(m){var n,s,a,t,o=Math.pow(2,53),h=-o,u=/^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)([eE][-+]?\\d+)?\\s*$/,d=/^((\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z)))$/,i=this,r=0,f=0,l=!1,e=!1,c=[],p={data:[],errors:[],meta:{}};function y(e){return\"greedy\"===m.skipEmptyLines?\"\"===e.join(\"\").trim():1===e.length&&0===e[0].length}function g(){if(p&&a&&(k(\"Delimiter\",\"UndetectableDelimiter\",\"Unable to auto-detect delimiting character; defaulted to '\"+v.DefaultDelimiter+\"'\"),a=!1),m.skipEmptyLines&&(p.data=p.data.filter(function(e){return!y(e)})),_()){if(p)if(Array.isArray(p.data[0])){for(var e=0;_()&&e<p.data.length;e++)p.data[e].forEach(t);p.data.splice(0,1)}else p.data.forEach(t);function t(e,t){U(m.transformHeader)&&(e=m.transformHeader(e,t)),c.push(e)}}function i(e,t){for(var i=m.header?{}:[],r=0;r<e.length;r++){var n=r,s=e[r],s=((e,t)=>(e=>(m.dynamicTypingFunction&&void 0===m.dynamicTyping[e]&&(m.dynamicTyping[e]=m.dynamicTypingFunction(e)),!0===(m.dynamicTyping[e]||m.dynamicTyping)))(e)?\"true\"===t||\"TRUE\"===t||\"false\"!==t&&\"FALSE\"!==t&&((e=>{if(u.test(e)){e=parseFloat(e);if(h<e&&e<o)return 1}})(t)?parseFloat(t):d.test(t)?new Date(t):\"\"===t?null:t):t)(n=m.header?r>=c.length?\"__parsed_extra\":c[r]:n,s=m.transform?m.transform(s,n):s);\"__parsed_extra\"===n?(i[n]=i[n]||[],i[n].push(s)):i[n]=s}return m.header&&(r>c.length?k(\"FieldMismatch\",\"TooManyFields\",\"Too many fields: expected \"+c.length+\" fields but parsed \"+r,f+t):r<c.length&&k(\"FieldMismatch\",\"TooFewFields\",\"Too few fields: expected \"+c.length+\" fields but parsed \"+r,f+t)),i}var r;p&&(m.header||m.dynamicTyping||m.transform)&&(r=1,!p.data.length||Array.isArray(p.data[0])?(p.data=p.data.map(i),r=p.data.length):p.data=i(p.data,0),m.header&&p.meta&&(p.meta.fields=c),f+=r)}function _(){return m.header&&0===c.length}function k(e,t,i,r){e={type:e,code:t,message:i};void 0!==r&&(e.row=r),p.errors.push(e)}U(m.step)&&(t=m.step,m.step=function(e){p=e,_()?g():(g(),0!==p.data.length&&(r+=e.data.length,m.preview&&r>m.preview?s.abort():(p.data=p.data[0],t(p,i))))}),this.parse=function(e,t,i){var r=m.quoteChar||'\"',r=(m.newline||(m.newline=this.guessLineEndings(e,r)),a=!1,m.delimiter?U(m.delimiter)&&(m.delimiter=m.delimiter(e),p.meta.delimiter=m.delimiter):((r=((e,t,i,r,n)=>{var s,a,o,h;n=n||[\",\",\"\\t\",\"|\",\";\",v.RECORD_SEP,v.UNIT_SEP];for(var u=0;u<n.length;u++){for(var d,f=n[u],l=0,c=0,p=0,g=(o=void 0,new E({comments:r,delimiter:f,newline:t,preview:10}).parse(e)),_=0;_<g.data.length;_++)i&&y(g.data[_])?p++:(d=g.data[_].length,c+=d,void 0===o?o=d:0<d&&(l+=Math.abs(d-o),o=d));0<g.data.length&&(c/=g.data.length-p),(void 0===a||l<=a)&&(void 0===h||h<c)&&1.99<c&&(a=l,s=f,h=c)}return{successful:!!(m.delimiter=s),bestDelimiter:s}})(e,m.newline,m.skipEmptyLines,m.comments,m.delimitersToGuess)).successful?m.delimiter=r.bestDelimiter:(a=!0,m.delimiter=v.DefaultDelimiter),p.meta.delimiter=m.delimiter),b(m));return m.preview&&m.header&&r.preview++,n=e,s=new E(r),p=s.parse(n,t,i),g(),l?{meta:{paused:!0}}:p||{meta:{paused:!1}}},this.paused=function(){return l},this.pause=function(){l=!0,s.abort(),n=U(m.chunk)?\"\":n.substring(s.getCharIndex())},this.resume=function(){i.streamer._halted?(l=!1,i.streamer.parseChunk(n,!0)):setTimeout(i.resume,3)},this.aborted=function(){return e},this.abort=function(){e=!0,s.abort(),p.meta.aborted=!0,U(m.complete)&&m.complete(p),n=\"\"},this.guessLineEndings=function(e,t){e=e.substring(0,1048576);var t=new RegExp(P(t)+\"([^]*?)\"+P(t),\"gm\"),i=(e=e.replace(t,\"\")).split(\"\\r\"),t=e.split(\"\\n\"),e=1<t.length&&t[0].length<i[0].length;if(1===i.length||e)return\"\\n\";for(var r=0,n=0;n<i.length;n++)\"\\n\"===i[n][0]&&r++;return r>=i.length/2?\"\\r\\n\":\"\\r\"}}function P(e){return e.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\")}function E(C){var S=(C=C||{}).delimiter,O=C.newline,x=C.comments,I=C.step,A=C.preview,T=C.fastMode,D=null,L=!1,F=null==C.quoteChar?'\"':C.quoteChar,j=F;if(void 0!==C.escapeChar&&(j=C.escapeChar),(\"string\"!=typeof S||-1<v.BAD_DELIMITERS.indexOf(S))&&(S=\",\"),x===S)throw new Error(\"Comment character same as delimiter\");!0===x?x=\"#\":(\"string\"!=typeof x||-1<v.BAD_DELIMITERS.indexOf(x))&&(x=!1),\"\\n\"!==O&&\"\\r\"!==O&&\"\\r\\n\"!==O&&(O=\"\\n\");var z=0,M=!1;this.parse=function(i,t,r){if(\"string\"!=typeof i)throw new Error(\"Input must be a string\");var n=i.length,e=S.length,s=O.length,a=x.length,o=U(I),h=[],u=[],d=[],f=z=0;if(!i)return w();if(T||!1!==T&&-1===i.indexOf(F)){for(var l=i.split(O),c=0;c<l.length;c++){if(d=l[c],z+=d.length,c!==l.length-1)z+=O.length;else if(r)return w();if(!x||d.substring(0,a)!==x){if(o){if(h=[],k(d.split(S)),R(),M)return w()}else k(d.split(S));if(A&&A<=c)return h=h.slice(0,A),w(!0)}}return w()}for(var p=i.indexOf(S,z),g=i.indexOf(O,z),_=new RegExp(P(j)+P(F),\"g\"),m=i.indexOf(F,z);;)if(i[z]===F)for(m=z,z++;;){if(-1===(m=i.indexOf(F,m+1)))return r||u.push({type:\"Quotes\",code:\"MissingQuotes\",message:\"Quoted field unterminated\",row:h.length,index:z}),E();if(m===n-1)return E(i.substring(z,m).replace(_,F));if(F===j&&i[m+1]===j)m++;else if(F===j||0===m||i[m-1]!==j){-1!==p&&p<m+1&&(p=i.indexOf(S,m+1));var y=v(-1===(g=-1!==g&&g<m+1?i.indexOf(O,m+1):g)?p:Math.min(p,g));if(i.substr(m+1+y,e)===S){d.push(i.substring(z,m).replace(_,F)),i[z=m+1+y+e]!==F&&(m=i.indexOf(F,z)),p=i.indexOf(S,z),g=i.indexOf(O,z);break}y=v(g);if(i.substring(m+1+y,m+1+y+s)===O){if(d.push(i.substring(z,m).replace(_,F)),b(m+1+y+s),p=i.indexOf(S,z),m=i.indexOf(F,z),o&&(R(),M))return w();if(A&&h.length>=A)return w(!0);break}u.push({type:\"Quotes\",code:\"InvalidQuotes\",message:\"Trailing quote on quoted field is malformed\",row:h.length,index:z}),m++}}else if(x&&0===d.length&&i.substring(z,z+a)===x){if(-1===g)return w();z=g+s,g=i.indexOf(O,z),p=i.indexOf(S,z)}else if(-1!==p&&(p<g||-1===g))d.push(i.substring(z,p)),z=p+e,p=i.indexOf(S,z);else{if(-1===g)break;if(d.push(i.substring(z,g)),b(g+s),o&&(R(),M))return w();if(A&&h.length>=A)return w(!0)}return E();function k(e){h.push(e),f=z}function v(e){var t=0;return t=-1!==e&&(e=i.substring(m+1,e))&&\"\"===e.trim()?e.length:t}function E(e){return r||(void 0===e&&(e=i.substring(z)),d.push(e),z=n,k(d),o&&R()),w()}function b(e){z=e,k(d),d=[],g=i.indexOf(O,z)}function w(e){if(C.header&&!t&&h.length&&!L){var s=h[0],a=Object.create(null),o=new Set(s);let n=!1;for(let r=0;r<s.length;r++){let i=s[r];if(a[i=U(C.transformHeader)?C.transformHeader(i,r):i]){let e,t=a[i];for(;e=i+\"_\"+t,t++,o.has(e););o.add(e),s[r]=e,a[i]++,n=!0,(D=null===D?{}:D)[e]=i}else a[i]=1,s[r]=i;o.add(i)}n&&console.warn(\"Duplicate headers found and renamed.\"),L=!0}return{data:h,errors:u,meta:{delimiter:S,linebreak:O,aborted:M,truncated:!!e,cursor:f+(t||0),renamedHeaders:D}}}function R(){I(w()),h=[],u=[]}},this.abort=function(){M=!0},this.getCharIndex=function(){return z}}function g(e){var t=e.data,i=o[t.workerId],r=!1;if(t.error)i.userError(t.error,t.file);else if(t.results&&t.results.data){var n={abort:function(){r=!0,_(t.workerId,{data:[],errors:[],meta:{aborted:!0}})},pause:m,resume:m};if(U(i.userStep)){for(var s=0;s<t.results.data.length&&(i.userStep({data:t.results.data[s],errors:t.results.errors,meta:t.results.meta},n),!r);s++);delete t.results}else U(i.userChunk)&&(i.userChunk(t.results,n,t.file),delete t.results)}t.finished&&!r&&_(t.workerId,t.results)}function _(e,t){var i=o[e];U(i.userComplete)&&i.userComplete(t),i.terminate(),delete o[e]}function m(){throw new Error(\"Not implemented.\")}function b(e){if(\"object\"!=typeof e||null===e)return e;var t,i=Array.isArray(e)?[]:{};for(t in e)i[t]=b(e[t]);return i}function y(e,t){return function(){e.apply(t,arguments)}}function U(e){return\"function\"==typeof e}return v.parse=function(e,t){var i=(t=t||{}).dynamicTyping||!1;U(i)&&(t.dynamicTypingFunction=i,i={});if(t.dynamicTyping=i,t.transform=!!U(t.transform)&&t.transform,!t.worker||!v.WORKERS_SUPPORTED)return i=null,v.NODE_STREAM_INPUT,\"string\"==typeof e?(e=(e=>65279!==e.charCodeAt(0)?e:e.slice(1))(e),i=new(t.download?f:c)(t)):!0===e.readable&&U(e.read)&&U(e.on)?i=new p(t):(n.File&&e instanceof File||e instanceof Object)&&(i=new l(t)),i.stream(e);(i=(()=>{var e;return!!v.WORKERS_SUPPORTED&&(e=(()=>{var e=n.URL||n.webkitURL||null,t=r.toString();return v.BLOB_URL||(v.BLOB_URL=e.createObjectURL(new Blob([\"var global = (function() { if (typeof self !== 'undefined') { return self; } if (typeof window !== 'undefined') { return window; } if (typeof global !== 'undefined') { return global; } return {}; })(); global.IS_PAPA_WORKER=true; \",\"(\",t,\")();\"],{type:\"text/javascript\"})))})(),(e=new n.Worker(e)).onmessage=g,e.id=h++,o[e.id]=e)})()).userStep=t.step,i.userChunk=t.chunk,i.userComplete=t.complete,i.userError=t.error,t.step=U(t.step),t.chunk=U(t.chunk),t.complete=U(t.complete),t.error=U(t.error),delete t.worker,i.postMessage({input:e,config:t,workerId:i.id})},v.unparse=function(e,t){var n=!1,_=!0,m=\",\",y=\"\\r\\n\",s='\"',a=s+s,i=!1,r=null,o=!1,h=((()=>{if(\"object\"==typeof t){if(\"string\"!=typeof t.delimiter||v.BAD_DELIMITERS.filter(function(e){return-1!==t.delimiter.indexOf(e)}).length||(m=t.delimiter),\"boolean\"!=typeof t.quotes&&\"function\"!=typeof t.quotes&&!Array.isArray(t.quotes)||(n=t.quotes),\"boolean\"!=typeof t.skipEmptyLines&&\"string\"!=typeof t.skipEmptyLines||(i=t.skipEmptyLines),\"string\"==typeof t.newline&&(y=t.newline),\"string\"==typeof t.quoteChar&&(s=t.quoteChar),\"boolean\"==typeof t.header&&(_=t.header),Array.isArray(t.columns)){if(0===t.columns.length)throw new Error(\"Option columns is empty\");r=t.columns}void 0!==t.escapeChar&&(a=t.escapeChar+s),t.escapeFormulae instanceof RegExp?o=t.escapeFormulae:\"boolean\"==typeof t.escapeFormulae&&t.escapeFormulae&&(o=/^[=+\\-@\\t\\r].*$/)}})(),new RegExp(P(s),\"g\"));\"string\"==typeof e&&(e=JSON.parse(e));if(Array.isArray(e)){if(!e.length||Array.isArray(e[0]))return u(null,e,i);if(\"object\"==typeof e[0])return u(r||Object.keys(e[0]),e,i)}else if(\"object\"==typeof e)return\"string\"==typeof e.data&&(e.data=JSON.parse(e.data)),Array.isArray(e.data)&&(e.fields||(e.fields=e.meta&&e.meta.fields||r),e.fields||(e.fields=Array.isArray(e.data[0])?e.fields:\"object\"==typeof e.data[0]?Object.keys(e.data[0]):[]),Array.isArray(e.data[0])||\"object\"==typeof e.data[0]||(e.data=[e.data])),u(e.fields||[],e.data||[],i);throw new Error(\"Unable to serialize unrecognized input\");function u(e,t,i){var r=\"\",n=(\"string\"==typeof e&&(e=JSON.parse(e)),\"string\"==typeof t&&(t=JSON.parse(t)),Array.isArray(e)&&0<e.length),s=!Array.isArray(t[0]);if(n&&_){for(var a=0;a<e.length;a++)0<a&&(r+=m),r+=k(e[a],a);0<t.length&&(r+=y)}for(var o=0;o<t.length;o++){var h=(n?e:t[o]).length,u=!1,d=n?0===Object.keys(t[o]).length:0===t[o].length;if(i&&!n&&(u=\"greedy\"===i?\"\"===t[o].join(\"\").trim():1===t[o].length&&0===t[o][0].length),\"greedy\"===i&&n){for(var f=[],l=0;l<h;l++){var c=s?e[l]:l;f.push(t[o][c])}u=\"\"===f.join(\"\").trim()}if(!u){for(var p=0;p<h;p++){0<p&&!d&&(r+=m);var g=n&&s?e[p]:p;r+=k(t[o][g],p)}o<t.length-1&&(!i||0<h&&!d)&&(r+=y)}}return r}function k(e,t){var i,r;return null==e?\"\":e.constructor===Date?JSON.stringify(e).slice(1,25):(r=!1,o&&\"string\"==typeof e&&o.test(e)&&(e=\"'\"+e,r=!0),i=e.toString().replace(h,a),(r=r||!0===n||\"function\"==typeof n&&n(e,t)||Array.isArray(n)&&n[t]||((e,t)=>{for(var i=0;i<t.length;i++)if(-1<e.indexOf(t[i]))return!0;return!1})(i,v.BAD_DELIMITERS)||-1<i.indexOf(m)||\" \"===i.charAt(0)||\" \"===i.charAt(i.length-1))?s+i+s:i)}},v.RECORD_SEP=String.fromCharCode(30),v.UNIT_SEP=String.fromCharCode(31),v.BYTE_ORDER_MARK=\"\\ufeff\",v.BAD_DELIMITERS=[\"\\r\",\"\\n\",'\"',v.BYTE_ORDER_MARK],v.WORKERS_SUPPORTED=!s&&!!n.Worker,v.NODE_STREAM_INPUT=1,v.LocalChunkSize=10485760,v.RemoteChunkSize=5242880,v.DefaultDelimiter=\",\",v.Parser=E,v.ParserHandle=i,v.NetworkStreamer=f,v.FileStreamer=l,v.StringStreamer=c,v.ReadableStreamStreamer=p,n.jQuery&&((d=n.jQuery).fn.parse=function(o){var i=o.config||{},h=[];return this.each(function(e){if(!(\"INPUT\"===d(this).prop(\"tagName\").toUpperCase()&&\"file\"===d(this).attr(\"type\").toLowerCase()&&n.FileReader)||!this.files||0===this.files.length)return!0;for(var t=0;t<this.files.length;t++)h.push({file:this.files[t],inputElem:this,instanceConfig:d.extend({},i)})}),e(),this;function e(){if(0===h.length)U(o.complete)&&o.complete();else{var e,t,i,r,n=h[0];if(U(o.before)){var s=o.before(n.file,n.inputElem);if(\"object\"==typeof s){if(\"abort\"===s.action)return e=\"AbortError\",t=n.file,i=n.inputElem,r=s.reason,void(U(o.error)&&o.error({name:e},t,i,r));if(\"skip\"===s.action)return void u();\"object\"==typeof s.config&&(n.instanceConfig=d.extend(n.instanceConfig,s.config))}else if(\"skip\"===s)return void u()}var a=n.instanceConfig.complete;n.instanceConfig.complete=function(e){U(a)&&a(e,n.file,n.inputElem),u()},v.parse(n.file,n.instanceConfig)}}function u(){h.splice(0,1),e()}}),a&&(n.onmessage=function(e){e=e.data;void 0===v.WORKER_ID&&e&&(v.WORKER_ID=e.workerId);\"string\"==typeof e.input?n.postMessage({workerId:v.WORKER_ID,results:v.parse(e.input,e.config),finished:!0}):(n.File&&e.input instanceof File||e.input instanceof Object)&&(e=v.parse(e.input,e.config))&&n.postMessage({workerId:v.WORKER_ID,results:e,finished:!0})}),(f.prototype=Object.create(u.prototype)).constructor=f,(l.prototype=Object.create(u.prototype)).constructor=l,(c.prototype=Object.create(c.prototype)).constructor=c,(p.prototype=Object.create(u.prototype)).constructor=p,v});","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n",null,"import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  let found = false;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      found = true;\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n\n  if (!found && !options.all) {\n    return 0;\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = (meta) => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<TimeUnit | 'datetime', string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: string): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: string): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number | boolean): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options?: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<TimeUnit | 'datetime', string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase as {\n    new (options?: AnyObject): DateAdapter;\n    override<T extends AnyObject = AnyObject>(\n      members: Partial<Omit<DateAdapter<T>, 'options'>>\n    ): void;\n  }\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea, isNullOrUndef} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      const result = lookupMethod(data, axis, value);\n      if (spanGaps) {\n        const {vScale} = controller._cachedMeta;\n        const {_parsed} = metaset;\n\n        const distanceToDefinedLo = (_parsed\n          .slice(0, result.lo + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.lo -= Math.max(0, distanceToDefinedLo);\n\n        const distanceToDefinedHi = (_parsed\n          .slice(result.hi)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.hi += Math.max(0, distanceToDefinedHi);\n      }\n      return result;\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea, _isDomSupported, retinaScale, getDatasetClipArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    // @ts-expect-error\n    const clip = getDatasetClipArea(this, meta);\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (clip) {\n      clipArea(ctx, clip);\n    }\n\n    meta.controller.draw();\n\n    if (clip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController, defaults} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nfunction containsDefaultColorsDefenitions() {\n  return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    const containsColorDefenition = (\n      containsColorsDefinitions(datasets) ||\n      containsColorsDefinition(chartOptions) ||\n      (elements && containsColorsDefinitions(elements)) ||\n      containsDefaultColorsDefenitions());\n\n    if (!options.forceOverride && containsColorDefenition) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea, getDatasetClipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {chart, index, line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  const meta = chart.getDatasetMeta(index);\n  const clip = getDatasetClipArea(chart, meta);\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis, clip});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale, clip} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property, clip});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property, clip});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale, clip} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, clip, bounds) {\n  const chartArea = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n\n  if (property === 'x' || property === 'y') {\n    let left, top, right, bottom;\n\n    if (property === 'x') {\n      left = start;\n      top = chartArea.top;\n      right = end;\n      bottom = chartArea.bottom;\n    } else {\n      left = chartArea.left;\n      top = start;\n      right = chartArea.right;\n      bottom = end;\n    }\n\n    ctx.beginPath();\n\n    if (clip) {\n      left = Math.max(left, clip.left);\n      right = Math.min(right, clip.right);\n      top = Math.max(top, clip.top);\n      bottom = Math.min(bottom, clip.bottom);\n    }\n\n    ctx.rect(left, top, right - left, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n",null,"/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */\nfunction isNonPrimitive(n: unknown) {\n  return typeof n === 'symbol' || (typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n));\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNonPrimitive(n) && !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\nimport {isNullOrUndef} from './helpers.core.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, vScale, _parsed} = meta;\n    const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n      if (spanGaps) {\n        const distanceToDefinedLo = (_parsed\n          .slice(0, start + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        start -= Math.max(0, distanceToDefinedLo);\n      }\n      start = _limitValue(start, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      let end = Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n      if (spanGaps) {\n        const distanceToDefinedHi = (_parsed\n          .slice(end - 1)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        end += Math.max(0, distanceToDefinedHi);\n      }\n      count = _limitValue(end, start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type PrivateChart from '../core/core.controller.js';\nimport type {Chart, ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart | PrivateChart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart | PrivateChart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  (chart as PrivateChart).height = Math.floor(chart.height);\n  (chart as PrivateChart).width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    (chart as PrivateChart).currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import type {Chart, ChartArea, ChartMeta, Scale, TRBL} from '../types/index.js';\n\nfunction getSizeForArea(scale: Scale, chartArea: ChartArea, field: keyof ChartArea) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta: ChartMeta, chartArea: ChartArea): TRBL {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nexport function getDatasetClipArea(chart: Chart, meta: ChartMeta): TRBL | false {\n  const clip = meta._clip;\n  if (clip.disabled) {\n    return false;\n  }\n  const area = getDatasetArea(meta, chart.chartArea);\n\n  return {\n    left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n    right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n    top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n    bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n  };\n}\n","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n"],"names":["assign","target","arguments","i","l","length","k","getMatchingEdge","graph","source","type","sourceData","_nodes","get","edge","out","undirected","isPlainObject","value","_typeof","isEmpty","o","privateProperty","name","Object","defineProperty","enumerable","configurable","writable","readOnlyProperty","descriptor","validateHints","hints","attributes","Array","isArray","ReflectOwnKeys","R","Reflect","ReflectApply","apply","receiver","args","Function","prototype","call","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","Number","isNaN","EventEmitter","init","this","eventsModule","exports","events","once","emitter","Promise","resolve","reject","errorListener","err","removeListener","resolver","slice","eventTargetAgnosticAddListener","handler","flags","on","addErrorHandlerIfEventEmitter","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","_getMaxListeners","that","_addListener","prepend","m","existing","warning","create","newListener","emit","unshift","push","warned","w","Error","String","count","console","warn","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","arr","ret","unwrapListeners","arrayClone","listenerCount","n","copy","addEventListener","wrapListener","arg","removeEventListener","Iterator","next","set","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","message","context","len","listeners","addListener","prependListener","prependOnceListener","list","position","originalListener","shift","index","pop","spliceOne","off","removeAllListeners","key","keys","rawListeners","eventNames","Symbol","iterator","Iterator$2","of","done","empty","fromSequence","sequence","is","support","ARRAY_BUFFER_SUPPORT","ArrayBuffer","SYMBOL_SUPPORT","require$$0","require$$1","iter","isView","iterOrNull","take","iterable","step","Infinity","array","GraphError","_Error","_this","_inheritsLoose","_wrapNativeSuper","InvalidArgumentsGraphError","_GraphError","_this2","captureStackTrace","constructor","NotFoundGraphError","_GraphError2","_this3","UsageGraphError","_GraphError3","_this4","MixedNodeData","clear","DirectedNodeData","UndirectedNodeData","EdgeData","inDegree","outDegree","undirectedDegree","undirectedLoops","directedLoops","attach","outKey","inKey","attachMulti","adj","head","previous","detach","detachMulti","findRelevantNodeData","method","mode","nodeOrEdge","nameOrEdge","add1","add2","nodeData","edgeData","arg1","arg2","_edges","NODE_ATTRIBUTES_METHODS","element","attacher","Class","_findRelevantNodeData","data","_findRelevantNodeData3","hasOwnProperty","_findRelevantNodeData4","_findRelevantNodeData5","updater","_findRelevantNodeData6","_findRelevantNodeData7","_findRelevantNodeData8","_findRelevantNodeData9","EDGE_ATTRIBUTES_METHODS","multi","chain","iterables","current","EDGES_ITERATION","direction","forEachSimple","breakable","object","callback","avoid","shouldBreak","forEachMulti","createIterator","sourceAttributes","targetAttributes","forEachForKeySimple","targetData","forEachForKeyMulti","createIteratorForKey","createEdgeArray","size","from","undirectedSize","directedSize","mask","values","forEachEdge","shouldFilter","_data","createEdgeIterator","forEachEdgeForNode","found","fn","createEdgeArrayForNode","edges","createEdgeIteratorForNode","forEachEdgeForPath","createEdgeArrayForPath","createEdgeIteratorForPath","NEIGHBORS_ITERATION","CompositeSetWrapper","A","B","forEachInObjectOnce","visited","neighborData","has","forEachNeighbor","wrap","createDedupedObjectIterator","neighbor","attachNeighborArrayCreator","description","node","neighbors","createNeighborArrayForNode","attachNeighborIteratorCreator","iteratorName","createNeighborIterator","forEachAdjacency","assymetric","disconnectedNodes","hasEdges","validateSerializedNode","validateSerializedEdge","INSTANCE_ID","Math","floor","random","TYPES","Set","EMITTER_PROPS","DEFAULTS","allowSelfLoops","unsafeAddNode","NodeDataClass","addEdge","mustGenerateKey","eventData","_edgeKeyGenerator","isSelfLoop","_undirectedSelfLoopCount","_directedSelfLoopCount","_undirectedSize","_directedSize","mergeEdge","asUpdater","alreadyExistingEdgeData","info","oldAttributes","sourceWasAdded","targetWasAdded","dropEdgeFromData","Graph","_EventEmitter","options","_assertThisInitialized","instancePrefix","edgeId","Map","availableEdgeKey","forEach","prop","_options","_proto","_resetInstanceCounters","hasNode","hasDirectedEdge","hasUndirectedEdge","hasEdge","directedEdge","undirectedEdge","areDirectedNeighbors","areOutNeighbors","areInNeighbors","areUndirectedNeighbors","areNeighbors","areInboundNeighbors","areOutboundNeighbors","directedDegree","inboundDegree","degree","outboundDegree","inDegreeWithoutSelfLoops","outDegreeWithoutSelfLoops","directedDegreeWithoutSelfLoops","undirectedDegreeWithoutSelfLoops","inboundDegreeWithoutSelfLoops","loops","outboundDegreeWithoutSelfLoops","degreeWithoutSelfLoops","extremities","opposite","hasExtremity","isUndirected","isDirected","addNode","mergeNode","updateNode","dropNode","dropEdge","dropDirectedEdge","dropUndirectedEdge","clearEdges","getAttribute","_attributes","getAttributes","hasAttribute","setAttribute","updateAttribute","removeAttribute","replaceAttributes","mergeAttributes","updateAttributes","updateEachNodeAttributes","updateEachEdgeAttributes","forEachAdjacencyEntry","forEachAdjacencyEntryWithOrphans","forEachAssymetricAdjacencyEntry","forEachAssymetricAdjacencyEntryWithOrphans","nodes","forEachNode","findNode","mapNodes","result","order","someNode","everyNode","filterNodes","reduceNodes","initialValue","accumulator","nodeEntries","serialized","serializeNode","serializeEdge","merge","a","e","s","t","_sa","_ta","u","mergeUndirectedEdgeWithKey","mergeDirectedEdgeWithKey","addUndirectedEdgeWithKey","addDirectedEdgeWithKey","_node","undirectedByDefault","_edge","_edge$undirected","mergeUndirectedEdge","mergeDirectedEdge","addUndirectedEdge","addDirectedEdge","nullCopy","emptyCopy","toJSON","toString","inspect","multiIndex","tmp","label","desc","startsWith","dummy","verb","generateKey","_ref","attachNodeAttributesMethods","attachEdgeAttributesMethods","attachEdgeArrayCreator","forEachName","toUpperCase","mapName","ea","sa","ta","filterName","reduceName","attachForEachEdge","findEdgeName","someName","everyName","attachFindEdge","originalName","attachEdgeIteratorCreator","attachEdgeIterationMethods","attachForEachNeighbor","capitalizedSingular","findName","attachFindNeighbor","attachNeighborIterationMethods","DirectedGraph","_Graph","finalOptions","UndirectedGraph","_Graph2","MultiGraph","_Graph3","MultiDirectedGraph","_Graph4","MultiUndirectedGraph","_Graph5","attachStaticFromMethod","instance","Animator","_request","_charts","_running","_lastDate","_notify","chart","anims","date","callbacks","numSteps","duration","initial","currentStep","min","start","_refresh","requestAnimFrame","window","_update","Date","now","remaining","running","items","draw","item","_active","_total","tick","_getAnims","charts","complete","progress","listen","event","cb","add","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","transparent","interpolators","boolean","to","factor","color","c0","helpersColor","c1","valid","mix","hexString","number","Animation","cfg","currentValue","_fn","_easing","effects","easing","linear","_start","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","res","rej","resolved","Animations","config","_chart","_properties","configure","isObject","animationOptions","defaults","animation","animatedProps","option","properties","_animateOptions","newOptions","resolveTargetOptions","animations","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","animator","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","x","y","top","right","bottom","left","toClip","r","b","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","applyStack","stack","dsIndex","singleMode","datasetIndex","otherValue","isFinite","sign","convertObjectDataToArray","meta","iScale","vScale","iAxisKey","axis","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","scales","filter","createDatasetContext","parent","createContext","dataset","createDataContext","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","datasetElementType","dataElementType","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","fill","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","splice","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","_arrayUnique","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","isNullOrUndef","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","v","setInflateAmount","inflateAmount","BarController","grouped","numbers","overrides","_index_","offset","grid","_value_","beginAtZero","obj","bars","getBasePixel","_getRuler","vpixels","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","currentParsed","iScaleValue","skipNull","find","val","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","stackIndex","rects","BubbleController","radius","points","point","iPixel","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","TAU","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","DoughnutController","animateRotate","animateScale","spacing","descriptors","_scriptable","_indexable","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","onClick","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","toRadians","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","formatNumber","locale","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","segment","animated","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","angleLines","display","circular","pointLabels","_parseObjectDataRadialScale","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","abstract","DateAdapterBase","override","members","formats","format","diff","startOf","endOf","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","distanceToDefinedLo","lo","findIndex","distanceToDefinedHi","hi","el","getRange","evaluateInteractionItems","getSortedVisibleDatasetMetas","j","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","_isPointInArea","inRange","getNearestRadialItems","getProps","getAngleFromPoint","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","h","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","eventListenerOptions","supportsEventListenerOptions","passive","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","proxies","$proxies","handlers","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","defaultRoutes","tooltipPosition","hasValue","final","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","_factorize","ceil","majorStart","majorEnd","reverseAlign","align","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lines","lineHeight","createScaleContext","createTickContext","titleAlign","_toLeftRightCenter","titleArgs","titleX","titleY","_alignStartEnd","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","_measureText","valueAt","idx","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","tickTextAlign","showLabelBackdrop","backdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderTextOptions","renderText","unclipArea","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","isForType","isPrototypeOf","register","proto","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","describe","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","d","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","_proxy","defaultId","defaultScaleOptions","mergeIf","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","isFunction","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","p","hasFunction","isScriptable","isIndexable","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","version","invalidatePlugins","userConfig","initialCanvas","existingChart","uid","_aspectRatio","_metasets","_lastEvent","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getDatasetClipArea","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","_isClickEvent","onHover","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","_readValueToProps","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","borderJoinStyle","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","translate","fix","radiusOffset","setStyle","lineCap","borderCapStyle","getLineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","_steppedInterpolation","_bezierInterpolation","_pointInLine","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","capBezierPoints","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","interpolated","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","drawPoint","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","toTRBL","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","bounds","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","addRectPath","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","containsDefaultColorsDefenitions","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","_getEdge","_normalizeAngle","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","fillText","strikethrough","overrideTextDirection","textDirection","textWidth","setWidth","realX","_textX","fontLineHeight","calculateLegendItemHeight","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","WeakMap","positioners","average","xSet","xAverage","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","str","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","noop","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","_fallback","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceNum","niceMin","niceMax","numSpaces","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","relativeLabelSize","tickValue","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","_setMinAndMaxByKey","LinearScale","Ticks","formatters","numeric","log10Floor","log10","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","minExp","exp","significand","lastTick","LogarithmicScale","logarithmic","_zero","getTickBackdropHeight","measureLabelSize","_longestText","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","_lookup","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","isNumberFinite","defaultValue","dimension","endsWith","thisArg","loopable","a0","a1","clone","klen","isValidKey","_merger","tval","sval","merger","_mergerIf","_deprecated","keyResolvers","_splitKey","part","_getKeyResolver","PITAU","INFINITY","RAD_PER_DEG","QUARTER_PI","TWO_THIRDS_PI","roundedRange","niceRange","fraction","niceFraction","isNonPrimitive","toPrimitive","rounded","degrees","radians","isFiniteNumber","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","_angleDiff","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","cmp","mid","ti","arrayEvents","_chartjs","stub","pixelSize","fontStyle","fontFamily","requestAnimationFrame","argsToUse","ticking","timeout","clearTimeout","setTimeout","check","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","atEdge","elasticIn","elasticOut","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","Color","getHoverColor","saturate","darken","colors","applyAnimationsDefaults","applyLayoutsDefaults","intlCache","getNumberFormat","JSON","stringify","Intl","NumberFormat","num","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","applyScaleDefaults","getScope","root","Defaults","_appliers","family","hoverBackgroundColor","hoverBorderColor","hoverColor","scopeObject","targetScopeObject","privateName","defineProperties","appliers","toFontString","longest","arrayOfThings","thing","nestedThing","halfWidth","resetTransform","clearRect","xOffset","yOffset","xOffsetW","yOffsetW","drawImage","ellipse","SQRT1_2","flip","midpoint","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","decorateText","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","drawBackdrop","oldColor","strokeText","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","objProps","read","parseInt","inputs","cacheable","minmax","keepZero","parentContext","rootScopes","getTarget","finalRootScopes","_resolve","toStringTag","_scopes","_rootScopes","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","getKeysFromAllScopes","storage","_storage","subProxy","_context","_subProxy","_resolveWithContext","_allKeys","readKey","needsSubResolver","_resolveScriptable","_resolveArray","getValue","createSubResolver","resolveFallback","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","getValueAxis","splineCurve","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","splineCurveMonotone","slopeDelta","capControlPoint","inArea","inAreaPrev","inAreaNext","controlPoints","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","getPropertyValue","getPositionedStyle","styles","suffix","useOffsetPos","shadowRoot","getCanvasPosition","touches","getBoundingClientRect","clientX","clientY","borderBox","paddings","borders","getContainerSize","clientHeight","containerStyle","containerBorder","containerPadding","round1","bbWidth","bbHeight","containerSize","maintainHeight","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","passiveSupported","cp1","cp2","getRightToLeftAdapter","rectX","getLeftToRightAdapter","_itemWidth","original","getPropertyPriority","setProperty","prevTextDirection","propertyFn","between","compare","normalizeSegment","getSegment","startBound","endBound","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","sub","findStartAndEnd","solidSegments","segmentOptions","splitByStyles","completeLoop","doSplitByStyles","chartContext","baseStyle","readStyle","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","replacer","getSizeForArea","field","getDatasetArea"],"version":3,"file":"mvu1-sim.8ed14f75.js.map","sourceRoot":"/__parcel_source_root/"}