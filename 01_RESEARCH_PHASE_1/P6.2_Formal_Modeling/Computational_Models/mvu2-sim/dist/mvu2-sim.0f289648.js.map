{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAI,WAAW;AAAK,IAAI,WAAW;AAAK,IAAI,kBAAkB;AAAK,IAAI,aAAa;AAAM,IAAI,eAAe;AAAmB,IAAI,cAAc;AAAM,OAAO,MAAM,CAAC,aAAa,GAAG;AAAmB;AAEzM,+KAA+K,GAC/K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA,GACA,IAAI,aAAa;AACjB,IAAI,YAAY,OAAO,MAAM,CAAC,MAAM;AACpC,SAAS,OAAO,UAAU;IACxB,UAAU,IAAI,CAAC,IAAI,EAAE;IACrB,IAAI,CAAC,GAAG,GAAG;QACT,MAAM,OAAO,MAAM,CAAC,OAAO,CAAC,WAAW;QACvC,kBAAkB,EAAE;QACpB,mBAAmB,EAAE;QACrB,QAAQ,SAAU,EAAE;YAClB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,YAAa;QAChD;QACA,SAAS,SAAU,EAAE;YACnB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;QAC9B;IACF;IACA,OAAO,MAAM,CAAC,OAAO,CAAC,WAAW,GAAG;AACtC;AACA,OAAO,MAAM,CAAC,MAAM,GAAG;AACvB,OAAO,MAAM,CAAC,OAAO,GAAG,CAAC;AACzB,IAAI,cAAc,0BAA0B,KAC1C,eAAe,0BAA0B,KACzC,gBAAgB,mCAAmC,KACnD,eAAe,mCAAmC,KAClD,iBAAiB;AACnB,SAAS;IACP,OAAO,YAAa,CAAA,OAAO,aAAa,eAAe,SAAS,QAAQ,CAAC,OAAO,CAAC,YAAY,IAAI,SAAS,QAAQ,GAAG,WAAU;AACjI;AACA,SAAS;IACP,OAAO,YAAa,CAAA,OAAO,aAAa,cAAc,SAAS,IAAI,GAAG,eAAc;AACtF;AAEA,wCAAwC;AACxC,IAAI,YAAY,WAAW,SAAS;AACpC,IAAI,CAAC,aAAa,OAAO,OAAO,MAAM,CAAC,IAAI,KAAK,YAC9C,IAAI;IACF,4CAA4C;IAC5C,YAAY,OAAO,MAAM,CAAC,IAAI,CAAC;AACjC,EAAE,OAAM;AACN,UAAU;AACZ;AAEF,IAAI,WAAW;AACf,IAAI,OAAO;AACX,IAAI,WAAW,cAAc,OAAO,aAAa,eAAe,SAAS,QAAQ,KAAK,YAAY,CAAC;IAAC;IAAa;IAAa;CAAU,CAAC,QAAQ,CAAC,YAAY,QAAQ;AAEtK,wCAAwC;AACxC,IAAI,SAAS,OAAO,MAAM,CAAC,MAAM;AACjC,IAAI,CAAC,UAAU,CAAC,OAAO,eAAe,EAAE;IACtC,wBAAwB;IACxB,IAAI,SAAS,OAAO,YAAY,cAAc,OAAO,WAAW,cAAc,OAAO,SAAS;IAE9F,oDAAoD;IACpD,0DAA0D;IAC1D,IAAI,oBAAoB;IACxB,IAAI;QACD,CAAA,GAAG,IAAG,EAAG;IACZ,EAAE,OAAO,KAAK;QACZ,oBAAoB,IAAI,KAAK,CAAC,QAAQ,CAAC;IACzC;IACA,IAAI;IACJ,IAAI,aACF,KAAK,IAAI,YAAY;SAErB,IAAI;QACF,4FAA4F;QAC5F,IAAI,EACF,UAAU,EACV,UAAU,EACX,GAAG,OAAO,MAAM,CAAC,IAAI,CAAC,uBAAuB,OAAO;QACrD,IAAI,eAAe,QAAQ,eAAe,KAAK,KAAK,WAAW,QAAQ,EAAE;YACvE,WAAW,EAAE,CAAC,WAAW,OAAM;gBAC7B,IAAI;oBACF,MAAM,cAAc;oBACpB,WAAW,WAAW,CAAC;gBACzB,EAAE,OAAM;oBACN,WAAW,WAAW,CAAC;gBACzB;YACF;YAEA,gGAAgG;YAChG,eAAe,IAAM,WAAW,WAAW,CAAC;QAC9C;IACF,EAAE,OAAM;QACN,IAAI,OAAO,cAAc,aACvB,IAAI;YACF,KAAK,IAAI,UAAU,WAAW,QAAQ,WAAY,CAAA,OAAO,MAAM,OAAO,EAAC,IAAK;QAC9E,EAAE,OAAO,KAAK;YACZ,mCAAmC;YACnC,IAAI,IAAI,OAAO,IAAI,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,oDACvC,QAAQ,KAAK,CAAC,IAAI,OAAO;QAE7B;IAEJ;IAEF,IAAI,IAAI;QACN,aAAa;QACb,GAAG,SAAS,GAAG,eAAgB,MAAM,wBAAwB,GAAzB;YAClC,IAAI,KAAK,eAAe,MAAK,KAAK,KAAK,CAAC,MAAM,IAAI;YAClD,MAAM,cAAc;QACtB;QACA,IAAI,cAAc,WAAW;YAC3B,GAAG,OAAO,GAAG,SAAU,CAAC;gBACtB,IAAI,EAAE,OAAO,EACX,QAAQ,KAAK,CAAC,EAAE,OAAO;YAE3B;YACA,GAAG,OAAO,GAAG;gBACX,QAAQ,IAAI,CAAC;YACf;QACF;IACF;AACF;AACA,eAAe,cAAc,KAAK,eAAe,GAAhB;IAC/B,gBAAgB,CAAC,EAAE,0BAA0B;IAC7C,iBAAiB,CAAC,EAAE,0BAA0B;IAC9C,iBAAiB,EAAE;IACnB,kBAAkB,EAAE;IACpB,iBAAiB;IACjB,IAAI,KAAK,IAAI,KAAK,UAChB;SACK,IAAI,KAAK,IAAI,KAAK,UAAU;QACjC,uCAAuC;QACvC,IAAI,OAAO,aAAa,aACtB;QAEF,IAAI,SAAS,KAAK,MAAM;QAExB,oBAAoB;QACpB,IAAI,UAAU,OAAO,KAAK,CAAC,CAAA;YACzB,OAAO,MAAM,IAAI,KAAK,SAAS,MAAM,IAAI,KAAK,QAAQ,eAAe,OAAO,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE,MAAM,YAAY;QACvH;QAEA,0EAA0E;QAC1E,2EAA2E;QAC3E,kEAAkE;QAClE,2EAA2E;QAC3E,sCAAsC;QACtC,IAAI,WAAW,kBAAkB,OAAO,IAAI,CAAC,CAAA,IAAK,EAAE,OAAO,KAAK,iBAAiB,OAAO,WAAW,eAAe,OAAO,gBAAgB,aACvI,UAAU,CAAC,OAAO,aAAa,CAAC,IAAI,YAAY,mBAAmB;YACjE,YAAY;QACd;QAEF,IAAI,SAAS;YACX,QAAQ,KAAK;YAEb,yEAAyE;YACzE,IAAI,OAAO,WAAW,eAAe,OAAO,gBAAgB,aAC1D,OAAO,aAAa,CAAC,IAAI,YAAY;YAEvC,MAAM,gBAAgB;YACtB;YAEA,8FAA8F;YAC9F,IAAI,kBAAkB,CAAC;YACvB,IAAK,IAAI,IAAI,GAAG,IAAI,eAAe,MAAM,EAAE,IAAK;gBAC9C,IAAI,KAAK,cAAc,CAAC,EAAE,CAAC,EAAE;gBAC7B,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE;oBACxB,UAAU,cAAc,CAAC,EAAE,CAAC,EAAE,EAAE;oBAChC,eAAe,CAAC,GAAG,GAAG;gBACxB;YACF;QACF,OAAO;IACT;IACA,IAAI,KAAK,IAAI,KAAK,SAAS;QACzB,+BAA+B;QAC/B,KAAK,IAAI,kBAAkB,KAAK,WAAW,CAAC,IAAI,CAAE;YAChD,IAAI,QAAQ,eAAe,SAAS,GAAG,eAAe,SAAS,GAAG,eAAe,KAAK;YACtF,QAAQ,KAAK,CAAC,4BAAkB,eAAe,OAAO,GAAG,OAAO,QAAQ,SAAS,eAAe,KAAK,CAAC,IAAI,CAAC;QAC7G;QACA,IAAI,OAAO,aAAa,aAAa;YACnC,gCAAgC;YAChC;YACA,IAAI,UAAU,mBAAmB,KAAK,WAAW,CAAC,IAAI;YACtD,aAAa;YACb,SAAS,IAAI,CAAC,WAAW,CAAC;QAC5B;IACF;AACF;AACA,SAAS;IACP,IAAI,UAAU,SAAS,cAAc,CAAC;IACtC,IAAI,SAAS;QACX,QAAQ,MAAM;QACd,QAAQ,GAAG,CAAC;IACd;AACF;AACA,SAAS,mBAAmB,WAAW;IACrC,IAAI,UAAU,SAAS,aAAa,CAAC;IACrC,QAAQ,EAAE,GAAG;IACb,IAAI,YAAY;IAChB,KAAK,IAAI,cAAc,YAAa;QAClC,IAAI,QAAQ,WAAW,MAAM,CAAC,MAAM,GAAG,WAAW,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG;YAClE,OAAO,GAAG,EAAE;SACT,EAAE,aAAa,QAAQ,UAAU,OAAO,GAAG,EAAE,SAAS,CAAC,EAAE,KAAK,6BAA6B,EAAE,mBAAmB,MAAM,QAAQ,EAAE,2FAA2F,EAAE,MAAM,QAAQ,CAAC;AACrP,EAAE,MAAM,IAAI,EAAE;QACV,GAAG,MAAM,WAAW,KAAK;QACzB,aAAa;AACjB;AACA;AACA,oBAAa,EAAE,WAAW,OAAO,CAAC;;aAErB,EAAE,MAAM;;UAEX,EAAE,WAAW,KAAK,CAAC,GAAG,CAAC,CAAA,OAAQ,uBAAa,OAAO,UAAU,IAAI,CAAC,IAAI;;QAExE,EAAE,WAAW,aAAa,GAAG,CAAC,8CAAuC,EAAE,WAAW,aAAa,CAAC,sCAAsC,CAAC,GAAG,GAAG;;IAEjJ,CAAC;IACH;IACA,aAAa;IACb,QAAQ,SAAS,GAAG;IACpB,OAAO;AACT;AACA,SAAS;IACP,IAAI,OAAO,aAAa,eAAe,YAAY,UACjD,SAAS,MAAM;SACV,IAAI,OAAO,WAAW,eAAe,UAAU,OAAO,OAAO,IAAI,OAAO,OAAO,CAAC,MAAM,EAC3F,OAAO,OAAO,CAAC,MAAM;SAErB,IAAI;QACF,IAAI,EACF,UAAU,EACV,UAAU,EACX,GAAG,OAAO,MAAM,CAAC,IAAI,CAAC,uBAAuB,OAAO;QACrD,IAAI,eAAe,QAAQ,eAAe,KAAK,KAAK,WAAW,QAAQ,EACrE,WAAW,WAAW,CAAC;IAE3B,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC;IAChB;AAEJ;AACA,SAAS,WAAW,MAAM,EAAE,EAAE,EAAE,mCAAmC;IACjE,IAAI,UAAU,OAAO,OAAO;IAC5B,IAAI,CAAC,SACH,OAAO,EAAE;IAEX,IAAI,UAAU,EAAE;IAChB,IAAI,GAAG,GAAG;IACV,IAAK,KAAK,QACR,IAAK,KAAK,OAAO,CAAC,EAAE,CAAC,EAAE,CAAE;QACvB,MAAM,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;QACtB,IAAI,QAAQ,MAAM,MAAM,OAAO,CAAC,QAAQ,GAAG,CAAC,IAAI,MAAM,GAAG,EAAE,KAAK,IAC9D,QAAQ,IAAI,CAAC;YAAC;YAAQ;SAAE;IAE5B;IAEF,IAAI,OAAO,MAAM,EACf,UAAU,QAAQ,MAAM,CAAC,WAAW,OAAO,MAAM,EAAE;IAErD,OAAO;AACT;AACA,SAAS,WAAW,IAAI;IACtB,IAAI,OAAO,KAAK,YAAY,CAAC;IAC7B,IAAI,CAAC,MACH;IAEF,IAAI,UAAU,KAAK,SAAS;IAC5B,QAAQ,MAAM,GAAG;QACf,IAAI,KAAK,UAAU,KAAK,MACtB,aAAa;QACb,KAAK,UAAU,CAAC,WAAW,CAAC;IAEhC;IACA,QAAQ,YAAY,CAAC,QACrB,aAAa;IACb,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,KAAK,GAAG;IACnC,aAAa;IACb,KAAK,UAAU,CAAC,YAAY,CAAC,SAAS,KAAK,WAAW;AACxD;AACA,IAAI,aAAa;AACjB,SAAS;IACP,IAAI,cAAc,OAAO,aAAa,aACpC;IAEF,aAAa,WAAW;QACtB,IAAI,QAAQ,SAAS,gBAAgB,CAAC;QACtC,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;YACrC,gCAAgC;YAChC,IAAI,KAAK,WAAW,MAAK,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC;YAC/C,IAAI,WAAW;YACf,IAAI,sBAAsB,aAAa,cAAc,IAAI,OAAO,mDAAmD,WAAW,IAAI,CAAC,QAAQ,KAAK,OAAO,CAAC,WAAW,MAAM;YACzK,IAAI,WAAW,gBAAgB,IAAI,CAAC,SAAS,KAAK,OAAO,CAAC,SAAS,MAAM,MAAM,KAAK,CAAC;YACrF,IAAI,CAAC,UACH,WAAW,KAAK,CAAC,EAAE;QAEvB;QACA,aAAa;IACf,GAAG;AACL;AACA,SAAS,YAAY,KAAK;IACxB,IAAI,MAAM,IAAI,KAAK,MAAM;QACvB,IAAI,OAAO,aAAa,aAAa;YACnC,IAAI,SAAS,SAAS,aAAa,CAAC;YACpC,OAAO,GAAG,GAAG,MAAM,GAAG,GAAG,QAAQ,KAAK,GAAG;YACzC,IAAI,MAAM,YAAY,KAAK,YACzB,OAAO,IAAI,GAAG;YAEhB,OAAO,IAAI,QAAQ,CAAC,SAAS;gBAC3B,IAAI;gBACJ,OAAO,MAAM,GAAG,IAAM,QAAQ;gBAC9B,OAAO,OAAO,GAAG;gBAChB,CAAA,iBAAiB,SAAS,IAAI,AAAD,MAAO,QAAQ,mBAAmB,KAAK,KAAK,eAAe,WAAW,CAAC;YACvG;QACF,OAAO,IAAI,OAAO,kBAAkB,YAAY;YAC9C,iBAAiB;YACjB,IAAI,MAAM,YAAY,KAAK,YACzB,OAAO,OAAmB,MAAM,GAAG,GAAG,QAAQ,KAAK,GAAG;iBAEtD,OAAO,IAAI,QAAQ,CAAC,SAAS;gBAC3B,IAAI;oBACF,cAA0B,MAAM,GAAG,GAAG,QAAQ,KAAK,GAAG;oBACtD;gBACF,EAAE,OAAO,KAAK;oBACZ,OAAO;gBACT;YACF;QAEJ;IACF;AACF;AACA,eAAe,gBAAgB,MAAM;IACnC,OAAO,eAAe,GAAG,OAAO,MAAM,CAAC;IACvC,IAAI;IACJ,IAAI;QACF,kEAAkE;QAClE,gEAAgE;QAChE,gEAAgE;QAChE,mDAAmD;QACnD,iDAAiD;QACjD,mDAAmD;QACnD,IAAI,CAAC,mBAAmB;YACtB,IAAI,WAAW,OAAO,GAAG,CAAC,CAAA;gBACxB,IAAI;gBACJ,OAAO,AAAC,CAAA,eAAe,YAAY,MAAK,MAAO,QAAQ,iBAAiB,KAAK,IAAI,KAAK,IAAI,aAAa,KAAK,CAAC,CAAA;oBAC3G,oBAAoB;oBACpB,IAAI,UAAU,OAAO,OAAO,IAAI,OAAO,OAAO,CAAC,WAAW,GAAG,gBAAgB,IAAI,KAAK,OAAO,4BAA4B,eAAe,kBAAkB,0BAA0B;wBAClL,OAAO,OAAO,CAAC,MAAM;wBACrB;oBACF;oBACA,MAAM;gBACR;YACF;YACA,kBAAkB,MAAM,QAAQ,GAAG,CAAC;QACtC;QACA,OAAO,OAAO,CAAC,SAAU,KAAK;YAC5B,SAAS,OAAO,MAAM,CAAC,IAAI,EAAE;QAC/B;IACF,SAAU;QACR,OAAO,OAAO,eAAe;QAC7B,IAAI,iBACF,gBAAgB,OAAO,CAAC,CAAA;YACtB,IAAI,QAAQ;gBACV,IAAI;gBACH,CAAA,kBAAkB,SAAS,IAAI,AAAD,MAAO,QAAQ,oBAAoB,KAAK,KAAK,gBAAgB,WAAW,CAAC;YAC1G;QACF;IAEJ;AACF;AACA,SAAS,SAAS,OAAO,kBAAkB,GAAnB,EAAuB,MAAM,cAAc,GAAf;IAClD,IAAI,UAAU,OAAO,OAAO;IAC5B,IAAI,CAAC,SACH;IAEF,IAAI,MAAM,IAAI,KAAK,OACjB;SACK,IAAI,MAAM,IAAI,KAAK,MAAM;QAC9B,IAAI,OAAO,MAAM,YAAY,CAAC,OAAO,aAAa,CAAC;QACnD,IAAI,MAAM;YACR,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE;gBACrB,iEAAiE;gBACjE,oHAAoH;gBACpH,IAAI,UAAU,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE;gBAClC,IAAK,IAAI,OAAO,QACd,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,EAAE;oBAC5C,IAAI,KAAK,OAAO,CAAC,IAAI;oBACrB,IAAI,UAAU,WAAW,OAAO,MAAM,CAAC,IAAI,EAAE;oBAC7C,IAAI,QAAQ,MAAM,KAAK,GACrB,UAAU,OAAO,MAAM,CAAC,IAAI,EAAE;gBAElC;YAEJ;YACA,IAAI,mBAGF,AAFA,4DAA4D;YAC5D,+CAA+C;YAC9C,CAAA,GAAG,IAAG,EAAG,MAAM,MAAM;YAGxB,aAAa;YACb,IAAI,KAAK,OAAO,eAAe,CAAC,MAAM,EAAE,CAAC;YACzC,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG;gBAAC;gBAAI;aAAK;QAChC;QAEA,8FAA8F;QAC9F,0GAA0G;QAC1G,IAAI,OAAO,MAAM,EACf,SAAS,OAAO,MAAM,EAAE;IAE5B;AACF;AACA,SAAS,UAAU,MAAM,EAAE,EAAE;IAC3B,IAAI,UAAU,OAAO,OAAO;IAC5B,IAAI,CAAC,SACH;IAEF,IAAI,OAAO,CAAC,GAAG,EAAE;QACf,8EAA8E;QAC9E,IAAI,OAAO,OAAO,CAAC,GAAG,CAAC,EAAE;QACzB,IAAI,UAAU,EAAE;QAChB,IAAK,IAAI,OAAO,KAAM;YACpB,IAAI,UAAU,WAAW,OAAO,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI;YACtD,IAAI,QAAQ,MAAM,KAAK,GACrB,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI;QAE1B;QAEA,sGAAsG;QACtG,OAAO,OAAO,CAAC,GAAG;QAClB,OAAO,OAAO,KAAK,CAAC,GAAG;QAEvB,0BAA0B;QAC1B,QAAQ,OAAO,CAAC,CAAA;YACd,UAAU,OAAO,MAAM,CAAC,IAAI,EAAE;QAChC;IACF,OAAO,IAAI,OAAO,MAAM,EACtB,UAAU,OAAO,MAAM,EAAE;AAE7B;AACA,SAAS,eAAe,OAAO,kBAAkB,GAAnB,EAAuB,GAAG,WAAW,GAAZ,EAAgB,aAAa,uCAAuC,GAAxC;IACjF,gBAAgB,CAAC;IACjB,IAAI,kBAAkB,QAAQ,IAAI,eAChC,OAAO;IAGT,uGAAuG;IACvG,IAAI,UAAU,WAAW,OAAO,MAAM,CAAC,IAAI,EAAE;IAC7C,IAAI,WAAW;IACf,MAAO,QAAQ,MAAM,GAAG,EAAG;QACzB,IAAI,IAAI,QAAQ,KAAK;QACrB,IAAI,IAAI,kBAAkB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE;QACtC,IAAI,GACF,+EAA+E;QAC/E,WAAW;aACN,IAAI,MAAM,MAAM;YACrB,yDAAyD;YACzD,IAAI,IAAI,WAAW,OAAO,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE;YAC3C,IAAI,EAAE,MAAM,KAAK,GAAG;gBAClB,kFAAkF;gBAClF,WAAW;gBACX;YACF;YACA,QAAQ,IAAI,IAAI;QAClB;IACF;IACA,OAAO;AACT;AACA,SAAS,kBAAkB,OAAO,kBAAkB,GAAnB,EAAuB,GAAG,WAAW,GAAZ,EAAgB,aAAa,uCAAuC,GAAxC;IACpF,IAAI,UAAU,OAAO,OAAO;IAC5B,IAAI,CAAC,SACH;IAEF,IAAI,gBAAgB,CAAC,YAAY,CAAC,OAAO,aAAa,CAAC,EAAE;QACvD,2EAA2E;QAC3E,yEAAyE;QACzE,IAAI,CAAC,OAAO,MAAM,EAAE;YAClB,iBAAiB;YACjB,OAAO;QACT;QACA,OAAO,kBAAkB,OAAO,MAAM,EAAE,IAAI;IAC9C;IACA,IAAI,aAAa,CAAC,GAAG,EACnB,OAAO;IAET,aAAa,CAAC,GAAG,GAAG;IACpB,IAAI,SAAS,OAAO,KAAK,CAAC,GAAG;IAC7B,IAAI,CAAC,QACH,OAAO;IAET,gBAAgB,IAAI,CAAC;QAAC;QAAQ;KAAG;IACjC,IAAI,UAAU,OAAO,GAAG,IAAI,OAAO,GAAG,CAAC,gBAAgB,CAAC,MAAM,EAAE;QAC9D,eAAe,IAAI,CAAC;YAAC;YAAQ;SAAG;QAChC,OAAO;IACT;IACA,OAAO;AACT;AACA,SAAS;IACP,0BAA0B;IAC1B,IAAK,IAAI,IAAI,GAAG,IAAI,gBAAgB,MAAM,EAAE,IAAK;QAC/C,IAAI,KAAK,eAAe,CAAC,EAAE,CAAC,EAAE;QAC9B,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE;YACvB,WAAW,eAAe,CAAC,EAAE,CAAC,EAAE,EAAE;YAClC,cAAc,CAAC,GAAG,GAAG;QACvB;IACF;IACA,kBAAkB,EAAE;AACtB;AACA,SAAS,WAAW,OAAO,kBAAkB,GAAnB,EAAuB,GAAG,WAAW,GAAZ;IACjD,IAAI,SAAS,OAAO,KAAK,CAAC,GAAG;IAC7B,OAAO,OAAO,CAAC,GAAG,GAAG,CAAC;IACtB,IAAI,UAAU,OAAO,GAAG,EACtB,OAAO,GAAG,CAAC,IAAI,GAAG,OAAO,OAAO,CAAC,GAAG;IAEtC,IAAI,UAAU,OAAO,GAAG,IAAI,OAAO,GAAG,CAAC,iBAAiB,CAAC,MAAM,EAC7D,OAAO,GAAG,CAAC,iBAAiB,CAAC,OAAO,CAAC,SAAU,EAAE;QAC/C,GAAG,OAAO,OAAO,CAAC,GAAG;IACvB;IAEF,OAAO,OAAO,KAAK,CAAC,GAAG;AACzB;AACA,SAAS,UAAU,OAAO,kBAAkB,GAAnB,EAAuB,GAAG,WAAW,GAAZ;IAChD,sBAAsB;IACtB,OAAO;IAEP,6DAA6D;IAC7D,IAAI,SAAS,OAAO,KAAK,CAAC,GAAG;IAC7B,IAAI,UAAU,OAAO,GAAG,IAAI,OAAO,GAAG,CAAC,gBAAgB,CAAC,MAAM,EAAE;QAC9D,IAAI,qBAAqB,EAAE;QAC3B,OAAO,GAAG,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAU,EAAE;YAC9C,IAAI,mBAAmB,GAAG;gBACxB,OAAO,WAAW,OAAO,MAAM,CAAC,IAAI,EAAE;YACxC;YACA,IAAI,MAAM,OAAO,CAAC,qBAAqB,iBAAiB,MAAM,EAC5D,mBAAmB,IAAI,IAAI;QAE/B;QACA,IAAI,mBAAmB,MAAM,EAAE;YAC7B,IAAI,UAAU,mBAAmB,KAAK,CAAC,SAAU,CAAC;gBAChD,OAAO,eAAe,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE;YAClC;YACA,IAAI,CAAC,SACH,OAAO;YAET;QACF;IACF;AACF;;;AC5kBA,cAAc;AAEd;AACA;AAEA,4CAA4C;AAC5C,mDAAmD;AAEnD,SAAS,gBAAgB,CAAC,oBAAoB;IAC1C,IAAI;QACA,0EAA0E;QAC1E,yEAAyE;QACzE,MAAM,KAAK,CAAA,GAAA,wBAAY,AAAD;QAEtB,wFAAwF;QACxF,MAAM,gBAAgB,IAAI,CAAA,GAAA,0CAAoB,AAAD,EAAE;QAE/C,8EAA8E;QAC9E,cAAc,KAAK;IAEvB,EAAE,OAAO,OAAO;QACZ,iFAAiF;QACjF,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,MAAM;IACV;AACJ;;;ACzBA,qBAAqB;AAErB,6DAA6D;;;AAkC7D;;;;CAIC,GACD,kDAAgB;AAAT,SAAS;IACZ,MAAM,KAAiB;QACnB,gBAAgB,SAAS,cAAc,CAAC;QACxC,kBAAkB,SAAS,cAAc,CAAC;QAC1C,sBAAsB,SAAS,cAAc,CAAC;QAC9C,wBAAwB,SAAS,cAAc,CAAC;QAChD,cAAc,SAAS,cAAc,CAAC;QACtC,gBAAgB,SAAS,cAAc,CAAC;QACxC,gBAAgB,SAAS,cAAc,CAAC;QACxC,iBAAiB,SAAS,cAAc,CAAC;QACzC,mBAAmB,SAAS,cAAc,CAAC;QAC3C,mBAAmB,SAAS,cAAc,CAAC;QAC3C,aAAa,SAAS,cAAc,CAAC;QACrC,eAAe,SAAS,cAAc,CAAC;QACvC,eAAe,SAAS,cAAc,CAAC;QACvC,cAAc,SAAS,cAAc,CAAC;QACtC,qBAAqB,SAAS,cAAc,CAAC;QAC7C,iBAAiB,SAAS,cAAc,CAAC;QACzC,qBAAqB,SAAS,cAAc,CAAC;QAC7C,iBAAiB,SAAS,cAAc,CAAC;QACzC,iBAAiB,SAAS,cAAc,CAAC;QACzC,mBAAmB,SAAS,cAAc,CAAC;QAC3C,yBAAyB,SAAS,cAAc,CAAC;QACjD,kBAAkB,SAAS,cAAc,CAAC;QAC1C,eAAe,SAAS,cAAc,CAAC;QACvC,sBAAsB,SAAS,cAAc,CAAC;QAC9C,uBAAuB,SAAS,cAAc,CAAC;QAC/C,wBAAwB,SAAS,cAAc,CAAC;QAChD,4BAA4B,SAAS,cAAc,CAAC;QACpD,kBAAkB,SAAS,cAAc,CAAC;QAC1C,4BAA4B,SAAS,cAAc,CAAC;QACpD,2BAA2B,SAAS,cAAc,CAAC;IACvD;IAEA,+DAA+D;IAC/D,IAAK,MAAM,OAAO,GACd,IAAI,CAAC,EAAE,CAAC,IAAwB,EAAE;QAC9B,MAAM,cAAc,IAAI,OAAO,CAAC,YAAY,OAAO,WAAW;QAC9D,MAAM,IAAI,MAAM,CAAC,uBAAuB,EAAE,IAAI,iBAAiB,EAAE,YAAY,sCAAsC,CAAC;IACxH;IAGJ,OAAO;AACX;;;ACpFA,QAAQ,cAAc,GAAG,SAAU,CAAC;IAClC,OAAO,KAAK,EAAE,UAAU,GAAG,IAAI;QAAC,SAAS;IAAC;AAC5C;AAEA,QAAQ,iBAAiB,GAAG,SAAU,CAAC;IACrC,OAAO,cAAc,CAAC,GAAG,cAAc;QAAC,OAAO;IAAI;AACrD;AAEA,QAAQ,SAAS,GAAG,SAAU,MAAM,EAAE,IAAI;IACxC,OAAO,IAAI,CAAC,QAAQ,OAAO,CAAC,SAAU,GAAG;QACvC,IACE,QAAQ,aACR,QAAQ,gBACR,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,MAE3C;QAGF,OAAO,cAAc,CAAC,MAAM,KAAK;YAC/B,YAAY;YACZ,KAAK;gBACH,OAAO,MAAM,CAAC,IAAI;YACpB;QACF;IACF;IAEA,OAAO;AACT;AAEA,QAAQ,MAAM,GAAG,SAAU,IAAI,EAAE,QAAQ,EAAE,GAAG;IAC5C,OAAO,cAAc,CAAC,MAAM,UAAU;QACpC,YAAY;QACZ,KAAK;IACP;AACF;;;AClCA,+BAA+B;;;AAc/B,0DAAa;AAbb;AACA;AAMA;AACA;AACA;;AAIO,MAAM;IAgBT,YAAY,EAAc,CAAE;aAdpB,aAAuD;aACvD,WAAW;aACX,mBAA2B;aAClB,YAAY;aAErB,cAAoC;aACpC,oBAA0C;aAC1C,sBAA4C;aAE5C,qBAAqB;aACrB,kBAA0E,EAAE;aAC5E,uBAAgC,CAAA,GAAA,oBAAO,AAAD,EAAE,SAAS;aACjD,sBAAqC;aAyDrC,WAAW;YACf,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,IAAI,IAAI,CAAC,gBAAgB,EAAE,qBAAqB,IAAI,CAAC,gBAAgB;gBACrE,IAAI,CAAC,gBAAgB,GAAG;gBACxB;YACJ;YAEA,OAAQ,IAAI,CAAC,UAAU;gBACnB,KAAK;oBAAY,IAAI,CAAC,eAAe;oBAAI;gBACzC,KAAK;oBAAc,IAAI,CAAC,kBAAkB;oBAAI,QAAQ,kCAAkC;gBACxF,KAAK;oBAAc,IAAI,CAAC,iBAAiB;oBAAI;YACjD;YAEA,IAAI,CAAC,IAAI,CAAC,QAAQ,EACd,IAAI,CAAC,gBAAgB,GAAG,sBAAsB,IAAI,CAAC,QAAQ;QAEnE;QAtEI,IAAI,CAAC,EAAE,GAAG;IACd;IAEO,QAAQ;QACX,IAAI,CAAC,mBAAmB;QACxB,IAAI,CAAC,wBAAwB;QAC7B,IAAI,CAAC,oBAAoB,CAAC,OAAO;QACjC,IAAI,CAAC,UAAU,CAAC;IACpB;IAEQ,yBAAyB,gBAAmC,MAAM,EAAE,IAAa,EAAa;QAClG,OAAO;YACH,WAAW;YACX,MAAM,QAAQ,KAAK,GAAG,KAAK,KAAK,MAAM,KAAK;YAC3C,2BAA2B,IAAI,CAAC,EAAE,CAAC,oBAAoB,CAAC,OAAO;YAC/D,4BAA4B,IAAI,CAAC,EAAE,CAAC,qBAAqB,CAAC,OAAO;YACjE,6BAA6B,IAAI,CAAC,EAAE,CAAC,sBAAsB,CAAC,OAAO;YACnE,iCAAiC,IAAI,CAAC,EAAE,CAAC,0BAA0B,CAAC,OAAO;YAC3E,iBAAiB,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,OAAO;YACjD,+BAA+B,IAAI,CAAC,EAAE,CAAC,0BAA0B,CAAC,OAAO;YACzE,2BAA2B,IAAI,CAAC,EAAE,CAAC,yBAAyB,CAAC,OAAO;YACpE,uBAAuB;YACvB,kCAAkC;YAClC,oBAAoB;YACpB,aAAa;YACb,sBAAsB;YACtB,2BAA2B;YAC3B,gCAAgC;QACpC;IACJ;IAEQ,qBAAqB,OAA0C,KAAK,EAAE,uBAAuB,KAAK,EAAE;QACxG,IAAI,SAAS,cAAc,SAAS,OAAO;YACvC,MAAM,sBAAsB,IAAI,CAAC,WAAW,EAAE;YAC9C,MAAM,eAAe,wBAAwB,CAAC,sBAAsB,YAAY;YAChF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAA,GAAA,4BAAa,AAAD,EAAE,IAAI,CAAC,wBAAwB,CAAC,QAAQ;YAC3E,IAAI,CAAC,WAAW,CAAC,KAAK;QAC1B;QACA,IAAI,SAAS,gBAAgB,SAAS,OAAO;YACzC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAA,GAAA,4BAAa,AAAD,EAAE,IAAI,CAAC,wBAAwB,CAAC,QAAQ;YACjF,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAA,GAAA,4BAAa,AAAD,EAAE,IAAI,CAAC,wBAAwB,CAAC,UAAU;YACrF,IAAI,CAAC,iBAAiB,CAAC,KAAK;YAC5B,IAAI,CAAC,mBAAmB,CAAC,KAAK;QAClC;IACJ;IAEQ,gCAAgC,IAA+B,EAAE,0BAA0B,KAAK,EAAE;QACtG,IAAI,SAAS,cAAe,CAAA,CAAC,IAAI,CAAC,WAAW,IAAI,uBAAsB,GACnE,IAAI,CAAC,oBAAoB,CAAC,YAAY;aACnC,IAAI,SAAS,gBAAiB,CAAA,CAAC,IAAI,CAAC,iBAAiB,IAAI,CAAC,IAAI,CAAC,mBAAmB,AAAD,GACpF,IAAI,CAAC,oBAAoB,CAAC;IAElC;IAoBQ,kBAAkB;QACtB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;QACvB,MAAM,SAAS,IAAI,CAAC,WAAW,CAAC,IAAI;QACpC,CAAA,GAAA,0BAAS,AAAD,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,cAAc;QACxD,IAAI,CAAC,mBAAmB,CAAC,OAAO,UAAU;QAC1C,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY;QAE3D,IAAI,OAAO,IAAI,EAAE;YACb,IAAI,CAAC,QAAQ,GAAG;YAChB,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,WAAW,GAAG;YAClC,QAAQ,GAAG,CAAC,CAAC,uBAAuB,EAAE,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE,EAAE,OAAO,MAAM,EAAE,EAAE,OAAO,UAAU,GAAG,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC,OAAO,UAAU,KAAK;QACjK;IACJ;IAEA,MAAc,qBAAqB;QAC/B,IAAI,IAAI,CAAC,QAAQ,EAAE;QAEnB,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAK;YACxB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACnB,MAAM,YAAY,IAAI,CAAA,GAAA,4BAAa,AAAD,EAAE,IAAI,CAAC,wBAAwB,CAAC;YAClE,IAAI;YACJ,GACI,SAAS,UAAU,IAAI;mBAClB,CAAC,OAAO,IAAI,IAAI,UAAU,YAAY,GAAG,SAAS,CAAC,oBAAoB,EAAE;YAElF,IAAI,CAAC,kBAAkB;YACvB,IAAI,OAAO,UAAU,IAAI,OAAO,MAAM,KAAK,sBAAsB,OAAO,UAAU,CAAC,CAAC,CAAC,QAAQ,KAAK,GAAG;gBACjG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;oBAAE,YAAY,OAAO,UAAU;oBAAE,WAAW,UAAU,YAAY,CAAC,UAAU,KAAK;gBAAE;gBAC9G,IAAI,OAAO,UAAU,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,oBAAoB,EACrD,IAAI,CAAC,oBAAoB,GAAG,OAAO,UAAU,CAAC,CAAC,CAAC,KAAK;YAE7D;YACA,IAAI,IAAI,MAAM,GAAG,MAAM,IAAI,QAAQ,CAAA,IAAK,WAAW,GAAG;QAC1D;QACA,CAAA,GAAA,oCAAc,AAAD,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,EAAE,CAAC,gBAAgB;QAC7D,IAAI,CAAC,qBAAqB;QAE1B,IAAI,CAAC,IAAI,CAAC,QAAQ,EACd,IAAI,CAAC,gBAAgB,GAAG,sBAAsB,IAAI,CAAC,QAAQ;IAEnE;IAEQ,oBAAoB;QACxB,IAAI,CAAC,IAAI,CAAC,iBAAiB,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE;QAC1D,MAAM,aAAa,IAAI,CAAC,iBAAiB,CAAC,IAAI;QAC9C,MAAM,eAAe,IAAI,CAAC,mBAAmB,CAAC,IAAI;QAClD,CAAA,GAAA,0BAAS,AAAD,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,oBAAoB;QACpE,CAAA,GAAA,0BAAS,AAAD,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,sBAAsB;QAExE,IAAI,CAAC,IAAI,CAAC,mBAAmB,EACzB;YAAA,IAAI,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,MAAM,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,GAC1I,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY;QAClE;QAEJ,IAAI,CAAC,qBAAqB,CAAC,WAAW,UAAU;QAChD,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,iBAAiB,CAAC,YAAY;QAEjE,IAAI,WAAW,IAAI,IAAI,aAAa,IAAI,EAAE;YACtC,IAAI,CAAC,QAAQ,GAAG;YAChB,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,WAAW,GAAG;QACtC;IACJ;IAEQ,oBAAoB,UAA8B,EAAE;QACxD,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,WAAW,GAAC,IAAI,CAAC,WAAW,EAAE,aAAa,cAAY;QAAI,IAAG,YAAW;YAAC,IAAI,CAAC,EAAE,CAAC,mBAAmB,CAAC,WAAW,GAAC,WAAW,CAAC,CAAC,QAAQ,GAAG,OAAO,CAAC;YAAG,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,WAAW,GAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,CAAA,GAAA,oBAAO,AAAD,CAAC,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,mBAAmB,CAAC,WAAW,GAAC,WAAW,CAAC,CAAC,UAAU,CAAC,QAAQ,GAAG,OAAO,CAAC;YAAG,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,WAAW,GAAC,WAAW,WAAW,CAAC,QAAQ,GAAG,OAAO,CAAC;QAAG,OAAK;YAAC,IAAI,CAAC,EAAE,CAAC,mBAAmB,CAAC,WAAW,GAAC;YAAM,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,WAAW,GAAC;YAAM,IAAI,CAAC,EAAE,CAAC,mBAAmB,CAAC,WAAW,GAAC;YAAM,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,WAAW,GAAC;QAAM;IACzmB;IACQ,wBAAwB;QAC5B,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,WAAW,GAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ;QAAG,IAAI,CAAC,EAAE,CAAC,iBAAiB,CAAC,WAAW,GAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ;QAAG,IAAI,CAAC,EAAE,CAAC,uBAAuB,CAAC,WAAW,GAAC,CAAC,CAAC,EAAE,IAAI,CAAC,oBAAoB,CAAC,EAAE,EAAE,CAAA,GAAA,oBAAO,AAAD,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;IAC3Q;IACQ,sBAAsB,QAA4B,EAAE;QACxD,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,WAAW,GAAC,IAAI,CAAC,iBAAiB,EAAE,aAAa,cAAY;QAAI,IAAG,UAAS;YAAC,IAAI,CAAC,EAAE,CAAC,mBAAmB,CAAC,WAAW,GAAC,SAAS,CAAC,CAAC,QAAQ,GAAG,OAAO,CAAC;YAAG,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,WAAW,GAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,CAAA,GAAA,oBAAO,AAAD,CAAC,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,mBAAmB,CAAC,WAAW,GAAC,SAAS,CAAC,CAAC,UAAU,CAAC,QAAQ,GAAG,OAAO,CAAC;YAAG,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,WAAW,GAAC,SAAS,WAAW,CAAC,QAAQ,GAAG,OAAO,CAAC;QAAG,OAAK;YAAC,IAAI,CAAC,EAAE,CAAC,mBAAmB,CAAC,WAAW,GAAC;YAAM,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,WAAW,GAAC;YAAM,IAAI,CAAC,EAAE,CAAC,mBAAmB,CAAC,WAAW,GAAC;YAAM,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,WAAW,GAAC;QAAM;QAC/lB,IAAG,IAAI,CAAC,mBAAmB,EAAC;YAAC,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,WAAW,GAAC,CAAC,iBAAiB,EAAE,IAAI,CAAC,mBAAmB,EAAE;YAAC,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,GAAC;QAAU,OAAM,IAAG,CAAC,IAAI,CAAC,QAAQ,IAAE,IAAI,CAAC,UAAU,KAAG,cAAa;YAAC,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,WAAW,GAAC;YAAa,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,GAAC;QAAG,OAAM,IAAG,IAAI,CAAC,QAAQ,IAAE,IAAI,CAAC,UAAU,KAAG,gBAAc,IAAI,CAAC,iBAAiB,EAAE,eAAa,GAAG,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,WAAW,GAAC;aAAc;YAAC,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,WAAW,GAAC;YAAM,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,GAAC;QAAG;IAC9hB;IACQ,yBAAyB,OAAsC,EAAE;QACrE,IAAG,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAC;QAAO,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS,GAAC;QAAG,IAAG,WAAS,QAAQ,IAAI,GAAC,GAAG,QAAQ,OAAO,CAAC,CAAC,GAAE;YAAM,MAAM,KAAG,SAAS,aAAa,CAAC;YAAM,GAAG,WAAW,GAAC,GAAG,GAAG,EAAE,EAAE,EAAE,QAAQ,GAAG,OAAO,CAAC,IAAI;YAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,WAAW,CAAC;QAAI;aAAQ;YAAC,MAAM,KAAG,SAAS,aAAa,CAAC;YAAM,GAAG,WAAW,GAAC;YAAM,IAAI,cAAc;YAAO,IAAG,IAAI,CAAC,UAAU,KAAG,cAAY,IAAI,CAAC,WAAW,EAAE,cAAc,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,6BAA6B,KAAK;iBAAa,IAAG,IAAI,CAAC,UAAU,KAAG,gBAAc,IAAI,CAAC,iBAAiB,EAAE,cAAc,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,6BAA6B,KAAK;YAAQ,IAAG,aAAa,GAAG,WAAW,GAAC;YAAsB,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,WAAW,CAAC;QAAI;IAC7sB;IAEQ,2BAA2B,0BAA0B,KAAK,EAAE;QAChE,IAAI,IAAI,CAAC,UAAU,KAAK,YAAY;YAChC,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,+BAA+B,CAAC,YAAY;QACrD,OAAO,IAAI,IAAI,CAAC,UAAU,KAAK,cAAc;YACzC,IAAI,CAAC,iBAAiB,EAAE;YACxB,IAAI,CAAC,mBAAmB,EAAE;YAC1B,IAAI,CAAC,+BAA+B,CAAC;QACzC;IACJ;IAEQ,6BAA6B;QACjC,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,WAAW,GAAC;QAAI,IAAI,CAAC,EAAE,CAAC,mBAAmB,CAAC,WAAW,GAAC;QAAM,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,WAAW,GAAC;QAAM,IAAI,CAAC,EAAE,CAAC,mBAAmB,CAAC,WAAW,GAAC;QAAM,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,WAAW,GAAC;QAC/M,IAAI,CAAC,mBAAmB,GAAC;QAAK,IAAI,CAAC,qBAAqB;QAAI,IAAI,CAAC,qBAAqB;QAAI,IAAI,CAAC,wBAAwB;IAC3H;IAEQ,WAAW,OAAiD,EAAE;QAClE,IAAI,CAAC,QAAQ,GAAC;QAAM,IAAG,IAAI,CAAC,gBAAgB,EAAC,qBAAqB,IAAI,CAAC,gBAAgB;QAAG,IAAI,CAAC,gBAAgB,GAAC;QAChH,IAAI,CAAC,UAAU,GAAC;QAEhB,IAAI,CAAC,0BAA0B;QAC/B,IAAI,CAAC,+BAA+B,CAAC,SAAS;QAE9C,SAAS,gBAAgB,CAAC,SAAS,OAAO,CAAC,CAAA,IAAG,AAAC,EAAkB,KAAK,CAAC,OAAO,GAAC;QAC/E,SAAS,gBAAgB,CAAC,aAAa,OAAO,CAAC,CAAA,IAAG,EAAE,SAAS,CAAC,MAAM,CAAC;QACrE,MAAM,KAAG,SAAS,cAAc,CAAC,GAAG,QAAQ,KAAK,CAAC;QAAE,IAAG,IAAG,GAAG,KAAK,CAAC,OAAO,GAAC,YAAU,eAAa,SAAO;QACzG,MAAM,KAAG,SAAS,cAAc,CAAC,CAAC,KAAK,EAAE,QAAQ,IAAI,CAAC;QAAE,IAAG,IAAG,GAAG,SAAS,CAAC,GAAG,CAAC;QAC/E,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,WAAW,GAAC,QAAQ,MAAM,CAAC,GAAG,WAAW,KAAG,QAAQ,KAAK,CAAC;QAEhF;YAAC,IAAI,CAAC,EAAE,CAAC,cAAc;YAAC,IAAI,CAAC,EAAE,CAAC,gBAAgB;YAAC,IAAI,CAAC,EAAE,CAAC,oBAAoB;YAAC,IAAI,CAAC,EAAE,CAAC,sBAAsB;SAAC,CAAC,OAAO,CAAC,CAAA;YAAI,MAAM,MAAI,EAAE,UAAU,CAAC;YAAM,IAAG,KAAI,IAAI,SAAS,CAAC,GAAE,GAAE,EAAE,KAAK,EAAC,EAAE,MAAM;QAAE;QAElM,IAAG,YAAU,cAAc,IAAI,CAAC,WAAW,EAAE;YAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,IAAI;YAAY,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY;QAAG,OACjL,IAAG,YAAU,cAAc;YAAE,CAAA,GAAA,oCAAc,AAAD,EAAE,IAAI,CAAC,eAAe,EAAC,IAAI,CAAC,EAAE,CAAC,gBAAgB;YAAG,IAAI,CAAC,wBAAwB;QAAI,OAC7H,IAAG,YAAU,gBAAgB,IAAI,CAAC,iBAAiB,EAAE;YAAE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,iBAAiB,CAAC,eAAe,IAAI;YAAY,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,iBAAiB,CAAC,YAAY;QAAG;QAEjN,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,WAAW,GAAG;IACtC;IAEQ,sBAAsB;QAC1B,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,gBAAgB,CAAC,SAAS;YAC1C,IAAG,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,WAAW,KAAG,WAAS,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,WAAW,KAAG,UAAS;gBACrF,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,KAAK,cAAc,CAAC,IAAI,CAAC,WAAW;gBACzG,IAAI,CAAC,QAAQ,GAAC;gBAAM,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,WAAW,GAAC;gBAAQ,IAAI,CAAC,QAAQ;YAC7E,OAAO,IAAG,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,WAAW,KAAG,SAAQ;gBAChD,IAAI,CAAC,QAAQ,GAAC;gBAAK,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,WAAW,GAAC;YACvD,OAAO,IAAG,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,WAAW,KAAG,WAAU;gBAClD,IAAI,CAAC,QAAQ,GAAC;gBAAM,IAAG,IAAI,CAAC,gBAAgB,EAAC,qBAAqB,IAAI,CAAC,gBAAgB;gBAAG,IAAI,CAAC,gBAAgB,GAAC;gBAChH,IAAI,CAAC,0BAA0B,CAAC;gBAChC,IAAI,IAAI,CAAC,UAAU,KAAK,cAAc,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,IAAI;qBAChH,IAAI,IAAI,CAAC,UAAU,KAAK,gBAAgB,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,iBAAiB,CAAC,eAAe,IAAI;gBAC1I,IAAI,CAAC,QAAQ,GAAC;gBAAM,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,WAAW,GAAC;gBAAQ,IAAI,CAAC,QAAQ;YAC7E;QACJ;QAEA,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,gBAAgB,CAAC,SAAS,IAAM,IAAI,CAAC,UAAU,CAAC;QACxE,IAAI,CAAC,EAAE,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,SAAS,IAAM,IAAI,CAAC,UAAU,CAAC;QAC1E,IAAI,CAAC,EAAE,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,SAAS,IAAM,IAAI,CAAC,UAAU,CAAC;QAE1E,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,gBAAgB,CAAC,SAAS;YAC5C,IAAG,IAAI,CAAC,eAAe,CAAC,MAAM,KAAG,GAAE;gBAAC,MAAM;gBAA4C;YAAO;YAC7F,MAAM,eAAa,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,KAAI,IAAK,CAAA;oBAAC,aAAY,IAAE;oBAAE,SAAQ,IAAI,UAAU,CAAC,CAAC,CAAC,KAAK;oBAAC,cAAa,CAAA,GAAA,oBAAO,AAAD,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC;oBAAC,YAAW,IAAI,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ;oBAAG,cAAa,IAAI,UAAU,CAAC,CAAC,CAAC,QAAQ;oBAAG,cAAa,IAAI,UAAU,CAAC,WAAW,CAAC,QAAQ;oBAAG,gCAA+B,IAAI,UAAU,CAAC,2BAA2B,CAAC,QAAQ;oBAAG,UAAS,IAAI,UAAU,CAAC,QAAQ,EAAE,cAAY;gBAAE,CAAA;YACta,MAAM,MAAI,CAAA,GAAA,yBAAI,AAAD,EAAE,OAAO,CAAC;YAAc,MAAM,OAAK,IAAI,KAAK;gBAAC;aAAI,EAAC;gBAAC,MAAK;YAAyB;YAAG,MAAM,OAAK,SAAS,aAAa,CAAC;YAAK,KAAK,IAAI,GAAC,IAAI,eAAe,CAAC;YAAM,KAAK,YAAY,CAAC,YAAW;YAAiC,KAAK,KAAK;YAAG,IAAI,eAAe,CAAC,KAAK,IAAI;QACxR;QAEA,MAAM,mBAAmB;YACrB,IAAI,CAAC,EAAE,CAAC,oBAAoB;YAAE,IAAI,CAAC,EAAE,CAAC,qBAAqB;YAAE,IAAI,CAAC,EAAE,CAAC,sBAAsB;YAC3F,IAAI,CAAC,EAAE,CAAC,0BAA0B;YAAE,IAAI,CAAC,EAAE,CAAC,gBAAgB;YAAE,IAAI,CAAC,EAAE,CAAC,0BAA0B;YAChG,IAAI,CAAC,EAAE,CAAC,yBAAyB;SACpC;QACD,iBAAiB,OAAO,CAAC,CAAA;YACrB,GAAG,gBAAgB,CAAC,UAAU;gBAC1B,QAAQ,GAAG,CAAC,CAAC,gBAAgB,EAAE,GAAG,EAAE,CAAC,QAAQ,EAAE,GAAG,OAAO,CAAC,4DAA4D,CAAC;gBACvH,IAAI,CAAC,WAAW,GAAG;gBAAM,IAAI,CAAC,iBAAiB,GAAG;gBAAM,IAAI,CAAC,mBAAmB,GAAG;gBACnF,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;oBAChB,IAAI,CAAC,QAAQ,GAAG;oBAChB,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,WAAW,GAAG;oBAClC,IAAG,IAAI,CAAC,gBAAgB,EAAE,qBAAqB,IAAI,CAAC,gBAAgB;oBAAG,IAAI,CAAC,gBAAgB,GAAG;gBACnG,OACI,IAAI,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,WAAW,KAAK,YAAY,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,WAAW,KAAK,SACpF,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,WAAW,GAAG;YAG9C;QACJ;IACJ;IAEQ,2BAA2B;QAC/B,IAAI,CAAC,EAAE,CAAC,oBAAoB,CAAC,OAAO,GAAG,CAAA,GAAA,+BAAkB,AAAD,EAAE,yBAAyB;QACnF,IAAI,CAAC,EAAE,CAAC,qBAAqB,CAAC,OAAO,GAAG,CAAA,GAAA,+BAAkB,AAAD,EAAE,0BAA0B;QACrF,IAAI,CAAC,EAAE,CAAC,sBAAsB,CAAC,OAAO,GAAG,CAAA,GAAA,+BAAkB,AAAD,EAAE,2BAA2B;QACvF,IAAI,CAAC,EAAE,CAAC,0BAA0B,CAAC,OAAO,GAAG,CAAA,GAAA,+BAAkB,AAAD,EAAE,+BAA+B;QAC/F,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,OAAO,GAAG,CAAA,GAAA,+BAAkB,AAAD,EAAE,eAAe;QACrE,IAAI,CAAC,EAAE,CAAC,0BAA0B,CAAC,OAAO,GAAG,CAAA,GAAA,+BAAkB,AAAD,EAAE,6BAA6B;QAC7F,IAAI,CAAC,EAAE,CAAC,yBAAyB,CAAC,OAAO,GAAG,CAAA,GAAA,+BAAkB,AAAD,EAAE,yBAAyB;IAC5F;AACJ;;;ACnRA,wBAAwB;;;AAmBxB,mDAAa;AAlBb;AACA;AACA;AAgBO,MAAM,sBAAsB,CAAA,GAAA,6BAAc,AAAD;IAE5C,YAAY,MAA2B,CAAE;QACrC,KAAK,CAAC;IACV;IAEO,OAAqG;QACxG,OAAO,CAAA,GAAA,mBAAW,AAAD,EAAE,IAAI;IAC3B;IAEO,sBAAsB,QAAgD,IAAI,CAAC,KAAK,EAAQ;QAC3F,CAAA,GAAA,wCAAyB,AAAD,EAAE,IAAI;IAClC;IAEO,2BAA2B,IAA4C,IAAI,CAAC,KAAK,EAAqB;QACzG,OAAO,CAAA,GAAA,6CAA8B,AAAD,EAAE,IAAI;IAC9C;IAEO,aAAa,IAA4C,IAAI,CAAC,KAAK,EAAU;QAChF,OAAO,CAAA,GAAA,+BAAgB,AAAD,EAAE;IAC5B;IAEO,kBAAkB,KAA6C,EAAE,EAAU,EAAE,CAAS,EAAE,EAAW,EAAE,EAAc,EAAE,EAAY,EAAQ;QAC5I,KAAK,CAAC,kBAAkB,OAAO,IAAI,GAAG,IAAI,IAAI;IAClD;AACJ;;;AC5CA,yBAAyB;;;AAezB,mDAAa;AAdb;;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEO,MAAM;IAsBT,YAAY,MAA2B,CAAE;aAnBlC,eAAe;aAEf,gBAAgB,EAAG,mCAAmC;;aACtD,sBAAoF,IAAI;aACxF,qBAAmC,EAAE;QAG5C,mDAAmD;aAC5C,0BAA+C,IAAI;aACnD,mBAAiD,IAAI;aAE5C,uBAAuB;aACvB,oBAAoB;aACpB,gCAAgC,IAAI,CAAA,GAAA,0BAAe,AAAD,EAAE,MAAM;aAC1D,qCAAqC;aAG9C,kBAA4C;aA2C5C,SAAS;YACZ,IAAI,CAAC,QAAQ,GAAG,AAAC,CAAA,IAAI,CAAC,QAAQ,GAAG,UAAU,UAAS,IAAK;YACzD,OAAO,IAAI,CAAC,QAAQ,GAAG;QAC3B;QA3CI,IAAI,CAAC,MAAM,GAAG;YAAE,GAAG,CAAA,GAAA,+BAAkB,AAAD,CAAC;YAAE,GAAG,MAAM;QAAC;QACjD,IAAI,IAAI,CAAC,MAAM,CAAC,yBAAyB,IAAI,IAAI,CAAC,MAAM,CAAC,yBAAyB,GAAG,GACjF,IAAI,CAAC,MAAM,CAAC,yBAAyB,GAAG;QAE5C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA,GAAA,0BAAK,AAAD,EAAmC;YAAE,OAAO;YAAO,gBAAgB;QAAM;QAC9F,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,KAAK,GAAG;QAC5C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe;QACjC,IAAI,CAAC,YAAY,GAAG,IAAI;QACxB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA,OAAQ,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,IAAI,CAAA,GAAA,0BAAe,AAAD,EAAE,KAAK,IAAI,CAAC,MAAM,CAAC,SAAS;IAC9G;IAEQ,kBAA0B;QAC9B,MAAM,cAAsB;YAAC,CAAA,GAAA,wBAAW,AAAD;YAAG,CAAA,GAAA,wBAAW,AAAD;YAAG,CAAA,GAAA,kCAAgB,AAAD;SAAE;QACxE,IAAI,IAAI,CAAC,MAAM,CAAC,yBAAyB,IAAI,IAAI,CAAC,MAAM,CAAC,0BAA0B,IAAI,IAAI,CAAC,MAAM,CAAC,2BAA2B,EAC1H,YAAY,IAAI,CAAC,CAAA,GAAA,8BAAc,AAAD;QAElC,IAAI,IAAI,CAAC,MAAM,CAAC,+BAA+B,EAC3C,YAAY,IAAI,CAAC,CAAA,GAAA,sCAAkB,AAAD;QAEtC,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,EAC3B,YAAY,IAAI,CAAC,CAAA,GAAA,0BAAY,AAAD;QAEhC,OAAO;IACX;IAEO,QAAQ;QACX,IAAI,CAAC,KAAK,CAAC,KAAK;QAChB,IAAI,CAAC,YAAY,GAAG;QACpB,IAAI,CAAC,aAAa,GAAG;QACrB,IAAI,CAAC,mBAAmB,CAAC,KAAK;QAC9B,IAAI,CAAC,kBAAkB,GAAG,EAAE;QAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,KAAK,GAAG;QAC5C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe;QACjC,IAAI,CAAC,YAAY,CAAC,KAAK;QACvB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA,OAAQ,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,IAAI,CAAA,GAAA,0BAAe,AAAD,EAAE,KAAK,IAAI,CAAC,MAAM,CAAC,SAAS;QAC1G,IAAI,CAAC,eAAe,GAAG;QACvB,IAAI,CAAC,uBAAuB,CAAC,KAAK;QAClC,IAAI,CAAC,gBAAgB,CAAC,KAAK;IAC/B;IAOO,gBAAwB;QAAE,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,aAAa,IAAI;IAAE;IAE9D,kBAAkB,MAAc,EAAU;QAC7C,OAAO,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,WAAW;IACvD;IAEO,kBAAkB,KAA6C,EAAE,EAAU,EAAE,CAAS,EAAE,EAAW,EAAE,EAAc,EAAE,EAAY,EAAQ;QAC5I,MAAM,SAAO,MAAI,IAAI,CAAC,MAAM,CAAC,qBAAqB;QAClD,IAAI,YAAU,KAAK,KAAK,CAAC,SAAO,IAAI,CAAC,MAAM,CAAC,gCAAgC;QAC5E,YAAU,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAC;QAC3C,YAAU,KAAK,GAAG,CAAC,WAAU,IAAI,CAAC,MAAM,CAAC,oBAAoB;QAE7D,MAAM,OAAO,CAAC,IAAG;YACb;YACA,UAAS;YACT,WAAU,MAAI,CAAA,GAAA,sBAAS,AAAD,EAAE,QAAQ;YAChC,cAAa;YACb,SAAQ;YACR,QAAO,CAAA,GAAA,0BAAe,AAAD,EAAE,IAAI,CAAC,WAAU,IAAI,CAAC,MAAM,CAAC,SAAS;YAC3D,QAAO,MAAI,CAAA,GAAA,oBAAO,AAAD,EAAE,mBAAmB;YACtC,cAAa,CAAA,GAAA,yBAAY,AAAD,EAAE,IAAI;YAC9B,oBAAmB,CAAA,GAAA,0BAAe,AAAD,EAAE,IAAI,CAAC,KAAI,IAAI,CAAC,MAAM,CAAC,SAAS;YACjE,gBAAe,CAAA,GAAA,0BAAe,AAAD,EAAE,IAAI,CAAC,KAAI,IAAI,CAAC,MAAM,CAAC,SAAS;QACjE;IACJ;AACJ;;;AElFA,CAAA,SAAA,CAAA,EAAA,CAAA;IAAA,OAAA,OAAA,GAAA;AAAA,EAAA,IAAA,EAAA;IAAA;IAAA,SAAA,EAAA,CAAA;QAAA,OAAA,IAAA,cAAA,OAAA,UAAA,YAAA,OAAA,OAAA,QAAA,GAAA,SAAA,CAAA;YAAA,OAAA,OAAA;QAAA,IAAA,SAAA,CAAA;YAAA,OAAA,KAAA,cAAA,OAAA,UAAA,EAAA,WAAA,KAAA,UAAA,MAAA,OAAA,SAAA,GAAA,WAAA,OAAA;QAAA,GAAA,EAAA;IAAA;IAAA,SAAA,EAAA,CAAA,EAAA,CAAA;QAAA,EAAA,SAAA,GAAA,OAAA,MAAA,CAAA,EAAA,SAAA,GAAA,EAAA,SAAA,CAAA,WAAA,GAAA,GAAA,EAAA,GAAA;IAAA;IAAA,SAAA,EAAA,CAAA;QAAA,OAAA,IAAA,OAAA,cAAA,GAAA,OAAA,cAAA,CAAA,IAAA,KAAA,SAAA,CAAA;YAAA,OAAA,EAAA,SAAA,IAAA,OAAA,cAAA,CAAA;QAAA,GAAA,EAAA;IAAA;IAAA,SAAA,EAAA,CAAA,EAAA,CAAA;QAAA,OAAA,IAAA,OAAA,cAAA,GAAA,OAAA,cAAA,CAAA,IAAA,KAAA,SAAA,CAAA,EAAA,CAAA;YAAA,OAAA,EAAA,SAAA,GAAA,GAAA;QAAA,GAAA,EAAA,GAAA;IAAA;IAAA,SAAA;QAAA,IAAA,eAAA,OAAA,WAAA,CAAA,QAAA,SAAA,EAAA,OAAA,CAAA;QAAA,IAAA,QAAA,SAAA,CAAA,IAAA,EAAA,OAAA,CAAA;QAAA,IAAA,cAAA,OAAA,OAAA,OAAA,CAAA;QAAA,IAAA;YAAA,OAAA,QAAA,SAAA,CAAA,OAAA,CAAA,IAAA,CAAA,QAAA,SAAA,CAAA,SAAA,EAAA,EAAA,YAAA,KAAA,CAAA;QAAA,EAAA,OAAA,GAAA;YAAA,OAAA,CAAA;QAAA;IAAA;IAAA,SAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA;QAAA,OAAA,IAAA,MAAA,QAAA,SAAA,CAAA,IAAA,KAAA,SAAA,CAAA,EAAA,CAAA,EAAA,CAAA;YAAA,IAAA,IAAA;gBAAA;aAAA;YAAA,EAAA,IAAA,CAAA,KAAA,CAAA,GAAA;YAAA,IAAA,IAAA,IAAA,CAAA,SAAA,IAAA,CAAA,KAAA,CAAA,GAAA,EAAA;YAAA,OAAA,KAAA,EAAA,GAAA,EAAA,SAAA,GAAA;QAAA,GAAA,EAAA,KAAA,CAAA,MAAA;IAAA;IAAA,SAAA,EAAA,CAAA;QAAA,IAAA,IAAA,cAAA,OAAA,MAAA,IAAA,MAAA,KAAA;QAAA,OAAA,IAAA,SAAA,CAAA;YAAA,IAAA,SAAA,KAAA,CAAA,IAAA,GAAA,OAAA,SAAA,QAAA,CAAA,IAAA,CAAA,GAAA,OAAA,CAAA,gBAAA,GAAA,OAAA;YAAA,IAAA;YAAA,IAAA,cAAA,OAAA,GAAA,MAAA,IAAA,UAAA;YAAA,IAAA,KAAA,MAAA,GAAA;gBAAA,IAAA,EAAA,GAAA,CAAA,IAAA,OAAA,EAAA,GAAA,CAAA;gBAAA,EAAA,GAAA,CAAA,GAAA;YAAA;YAAA,SAAA;gBAAA,OAAA,EAAA,GAAA,WAAA,EAAA,IAAA,EAAA,WAAA;YAAA;YAAA,OAAA,EAAA,SAAA,GAAA,OAAA,MAAA,CAAA,EAAA,SAAA,EAAA;gBAAA,aAAA;oBAAA,OAAA;oBAAA,YAAA,CAAA;oBAAA,UAAA,CAAA;oBAAA,cAAA,CAAA;gBAAA;YAAA,IAAA,EAAA,GAAA;QAAA,GAAA,EAAA;IAAA;IAAA,SAAA,EAAA,CAAA;QAAA,IAAA,KAAA,MAAA,GAAA,MAAA,IAAA,eAAA;QAAA,OAAA;IAAA;IAAA,IAAIA,IAZJ;QAGE,IAFA,IAAMC,IAASC,SAAAA,CAAU,EAAA,EAEhBC,IAAI,GAAGC,IAAIF,UAAUG,MAAAA,EAAQF,IAAIC,GAAGD,IAC3C,IAAKD,SAAAA,CAAUC,EAAAA,EAEf,IAAK,IAAMG,KAAKJ,SAAAA,CAAUC,EAAAA,CAAIF,CAAAA,CAAOK,EAAAA,GAAKJ,SAAAA,CAAUC,EAAAA,CAAGG,EAAAA;QAGzD,OAAOL;IACT;IAmBO,SAASM,EAAgBC,CAAAA,EAAOC,CAAAA,EAAQR,CAAAA,EAAQS,CAAAA;QACrD,IAAMC,IAAaH,EAAMI,MAAAA,CAAOC,GAAAA,CAAIJ,IAEhCK,IAAO;QAEX,OAAKH,IAGHG,IADW,YAATJ,IAECC,EAAWI,GAAAA,IAAOJ,EAAWI,GAAAA,CAAId,EAAAA,IACjCU,EAAWK,UAAAA,IAAcL,EAAWK,UAAAA,CAAWf,EAAAA,GAChC,eAATS,IACFC,EAAWI,GAAAA,IAAOJ,EAAWI,GAAAA,CAAId,EAAAA,GAEjCU,EAAWK,UAAAA,IAAcL,EAAWK,UAAAA,CAAWf,EAAAA,GAThCa;IAa1B;IAQO,SAASG,EAAcC,CAAAA;QAO5B,OAAwB,aAAjBC,EAAOD,MAAgC,SAAVA;IACtC;IAQO,SAASE,EAAQC,CAAAA;QACtB,IAAIf;QAEJ,IAAKA,KAAKe,EAAG,OAAA,CAAO;QAEpB,OAAA,CAAO;IACT;IASO,SAASC,EAAgBrB,CAAAA,EAAQsB,CAAAA,EAAML,CAAAA;QAC5CM,OAAOC,cAAAA,CAAexB,GAAQsB,GAAM;YAClCG,YAAAA,CAAY;YACZC,cAAAA,CAAc;YACdC,UAAAA,CAAU;YACVV,OAAAA;QAAAA;IAEJ;IASO,SAASW,EAAiB5B,CAAAA,EAAQsB,CAAAA,EAAML,CAAAA;QAC7C,IAAMY,IAAa;YACjBJ,YAAAA,CAAY;YACZC,cAAAA,CAAc;QAAA;QAGK,cAAA,OAAVT,IACTY,EAAWjB,GAAAA,GAAMK,IAEjBY,CAAAA,EAAWZ,KAAAA,GAAQA,GACnBY,EAAWF,QAAAA,GAAAA,CAAW,CAAA,GAGxBJ,OAAOC,cAAAA,CAAexB,GAAQsB,GAAMO;IACtC;IAOO,SAASC,EAAcC,CAAAA;QAC5B,OAAA,CAAA,CAAKf,EAAce,MAAAA,CAEfA,CAAAA,EAAMC,UAAAA,IAAAA,CAAeC,MAAMC,OAAAA,CAAQH,EAAMC,UAAAA,CAAAA;IAG/C;IAnH6B,cAAA,OAAlBT,OAAOxB,MAAAA,IAAuBA,CAAAA,IAASwB,OAAOxB,MAAAA,AAAAA;IAAAA,ICErDoC,GAAAA,IAAAA;QAAAA,SAAAA,CAAAA;IAAAA,GAPAC,IAAuB,YAAA,OAAZC,UAAuBA,UAAU,MAC5CC,IAAeF,KAAwB,cAAA,OAAZA,EAAEG,KAAAA,GAC7BH,EAAEG,KAAAA,GACF,SAAsBvC,CAAAA,EAAQwC,CAAAA,EAAUC,CAAAA;QACxC,OAAOC,SAASC,SAAAA,CAAUJ,KAAAA,CAAMK,IAAAA,CAAK5C,GAAQwC,GAAUC;IACxD;IAIDN,IADEC,KAA0B,cAAA,OAAdA,EAAES,OAAAA,GACCT,EAAES,OAAAA,GACVtB,OAAOuB,qBAAAA,GACC,SAAwB9C,CAAAA;QACvC,OAAOuB,OAAOwB,mBAAAA,CAAoB/C,GAC/BgD,MAAAA,CAAOzB,OAAOuB,qBAAAA,CAAsB9C;IAAAA,IAGxB,SAAwBA,CAAAA;QACvC,OAAOuB,OAAOwB,mBAAAA,CAAoB/C;IAAAA;IAQtC,IAAIiD,IAAcC,OAAOC,KAAAA,IAAS,SAAqBlC,CAAAA;QACrD,OAAOA,KAAUA;IACnB;IAEA,SAASmC;QACPA,EAAaC,IAAAA,CAAKT,IAAAA,CAAKU,IAAAA;IACzB;IACAC,EAAcC,OAAAA,GAAGJ,GACEK,EAAAD,OAAAA,CAAAE,IAAAA,GAwYnB,SAAcC,CAAAA,EAASrC,CAAAA;QACrB,OAAO,IAAIsC,QAAQ,SAAUC,CAAAA,EAASC,CAAAA;YACpC,SAASC,EAAcC,CAAAA;gBACrBL,EAAQM,cAAAA,CAAe3C,GAAM4C,IAC7BJ,EAAOE;YACR;YAED,SAASE;gBAC+B,cAAA,OAA3BP,EAAQM,cAAAA,IACjBN,EAAQM,cAAAA,CAAe,SAASF,IAElCF,EAAQ,EAAA,CAAGM,KAAAA,CAAMvB,IAAAA,CAAK3C;YAC5B;YAEImE,EAA+BT,GAASrC,GAAM4C,GAAU;gBAAER,MAAAA,CAAM;YAAA,IACnD,YAATpC,KAMR,SAAuCqC,CAAAA,EAASU,CAAAA,EAASC,CAAAA;gBAC7B,cAAA,OAAfX,EAAQY,EAAAA,IACjBH,EAA+BT,GAAS,SAASU,GAASC;YAE9D,EAToCX,GAASI,GAAe;gBAAEL,MAAAA,CAAM;YAAA;QAEpE;IACA,GAxZAN,EAAaA,YAAAA,GAAeA,GAE5BA,EAAaT,SAAAA,CAAU8B,OAAAA,GAAAA,KAAUC,GACjCtB,EAAaT,SAAAA,CAAUgC,YAAAA,GAAe,GACtCvB,EAAaT,SAAAA,CAAUiC,aAAAA,GAAAA,KAAgBF;IAIvC,IAAIG,IAAsB;IAE1B,SAASC,EAAcC,CAAAA;QACrB,IAAwB,cAAA,OAAbA,GACT,MAAM,IAAIC,UAAU,qEAAA,OAA4ED;IAEpG;IAoCA,SAASE,EAAiBC,CAAAA;QACxB,OAAA,KAA2BR,MAAvBQ,EAAKN,aAAAA,GACAxB,EAAayB,mBAAAA,GACfK,EAAKN,aACd;IAAA;IAkDA,SAASO,EAAanF,CAAAA,EAAQS,CAAAA,EAAMsE,CAAAA,EAAUK,CAAAA;QAC5C,IAAIC,GACA5B,GACA6B,GA1HsBC;QAgJ1B,IApBAT,EAAcC,IAAAA,KAGCL,MADfjB,CAAAA,IAASzD,EAAOyE,OAAAA,AAAAA,IAEdhB,CAAAA,IAASzD,EAAOyE,OAAAA,GAAUlD,OAAOiE,MAAAA,CAAO,OACxCxF,EAAO2E,YAAAA,GAAe,CAAA,IAAA,CAAA,KAIKD,MAAvBjB,EAAOgC,WAAAA,IACTzF,CAAAA,EAAO0F,IAAAA,CAAK,eAAejF,GACfsE,EAASA,QAAAA,GAAWA,EAASA,QAAAA,GAAWA,IAIpDtB,IAASzD,EAAOyE,OAAAA,AAAAA,GAElBa,IAAW7B,CAAAA,CAAOhD,EAAAA,AAAAA,GAAAA,KAGHiE,MAAbY,GAEFA,IAAW7B,CAAAA,CAAOhD,EAAAA,GAAQsE,GAAAA,EACxB/E,EAAO2E,YAAAA;aAeT,IAbwB,cAAA,OAAbW,IAETA,IAAW7B,CAAAA,CAAOhD,EAAAA,GAChB2E,IAAU;YAACL;YAAUO;SAAAA,GAAY;YAACA;YAAUP;SAAAA,GAErCK,IACTE,EAASK,OAAAA,CAAQZ,KAEjBO,EAASM,IAAAA,CAAKb,IAAAA,AAIhBM,CAAAA,IAAIJ,EAAiBjF,EAAAA,IACb,KAAKsF,EAASlF,MAAAA,GAASiF,KAAAA,CAAMC,EAASO,MAAAA,EAAQ;YACpDP,EAASO,MAAAA,GAAAA,CAAS;YAGlB,IAAIC,IAAI,IAAIC,MAAM,iDACET,EAASlF,MAAAA,GAAS,MAAM4F,OAAOvF,KADjC;YAIlBqF,EAAExE,IAAAA,GAAO,+BACTwE,EAAEnC,OAAAA,GAAU3D,GACZ8F,EAAErF,IAAAA,GAAOA,GACTqF,EAAEG,KAAAA,GAAQX,EAASlF,MAAAA,EA7KGmF,IA8KHO,GA7KnBI,WAAWA,QAAQC,IAAAA,IAAMD,QAAQC,IAAAA,CAAKZ;QA8KvC;QAGH,OAAOvF;IACT;IAaA,SAASoG;QACP,IAAA,CAAK9C,IAAAA,CAAK+C,KAAAA,EAGR,OAFA/C,IAAAA,CAAKtD,MAAAA,CAAOiE,cAAAA,CAAeX,IAAAA,CAAK7C,IAAAA,EAAM6C,IAAAA,CAAKgD,MAAAA,GAC3ChD,IAAAA,CAAK+C,KAAAA,GAAAA,CAAQ,GACY,MAArBpG,UAAUG,MAAAA,GACLkD,IAAAA,CAAKyB,QAAAA,CAASnC,IAAAA,CAAKU,IAAAA,CAAKtD,MAAAA,IAC1BsD,IAAAA,CAAKyB,QAAAA,CAASxC,KAAAA,CAAMe,IAAAA,CAAKtD,MAAAA,EAAQC;IAE5C;IAEA,SAASsG,EAAUvG,CAAAA,EAAQS,CAAAA,EAAMsE,CAAAA;QAC/B,IAAIyB,IAAQ;YAAEH,OAAAA,CAAO;YAAOC,QAAAA,KAAQ5B;YAAW1E,QAAQA;YAAQS,MAAMA;YAAMsE,UAAUA;QAAAA,GACjF0B,IAAUL,EAAYM,IAAAA,CAAKF;QAG/B,OAFAC,EAAQ1B,QAAAA,GAAWA,GACnByB,EAAMF,MAAAA,GAASG,GACRA;IACT;IAyHA,SAASE,EAAW3G,CAAAA,EAAQS,CAAAA,EAAMmG,CAAAA;QAChC,IAAInD,IAASzD,EAAOyE,OAAAA;QAEpB,IAAA,KAAeC,MAAXjB,GACF,OAAO,EAAA;QAET,IAAIoD,IAAapD,CAAAA,CAAOhD,EAAAA;QACxB,OAAA,KAAmBiE,MAAfmC,IACK,EAAA,GAEiB,cAAA,OAAfA,IACFD,IAAS;YAACC,EAAW9B,QAAAA,IAAY8B;SAAAA,GAAc;YAACA;SAAAA,GAElDD,IAsDT,SAAyBE,CAAAA;YAEvB,IADA,IAAIC,IAAM,IAAI9E,MAAM6E,EAAI1G,MAAAA,GACfF,IAAI,GAAGA,IAAI6G,EAAI3G,MAAAA,EAAAA,EAAUF,EAChC6G,CAAAA,CAAI7G,EAAAA,GAAK4G,CAAAA,CAAI5G,EAAAA,CAAG6E,QAAAA,IAAY+B,CAAAA,CAAI5G,EAAAA;YAElC,OAAO6G;QACT,EA3DoBF,KAAcI,EAAWJ,GAAYA,EAAWzG,MAAAA;IACpE;IAmBA,SAAS8G,EAAczG,CAAAA;QACrB,IAAIgD,IAASH,IAAAA,CAAKmB,OAAAA;QAElB,IAAA,KAAeC,MAAXjB,GAAsB;YACxB,IAAIoD,IAAapD,CAAAA,CAAOhD,EAAAA;YAExB,IAA0B,cAAA,OAAfoG,GACT,OAAO;YACF,IAAA,KAAmBnC,MAAfmC,GACT,OAAOA,EAAWzG,MAErB;QAAA;QAED,OAAO;IACT;IAMA,SAAS6G,EAAWH,CAAAA,EAAKK,CAAAA;QAEvB,IADA,IAAIC,IAAO,IAAInF,MAAMkF,IACZjH,IAAI,GAAGA,IAAIiH,GAAAA,EAAKjH,EACvBkH,CAAAA,CAAKlH,EAAAA,GAAK4G,CAAAA,CAAI5G,EAAAA;QAChB,OAAOkH;IACT;IA2CA,SAAShD,EAA+BT,CAAAA,EAASrC,CAAAA,EAAMyD,CAAAA,EAAUT,CAAAA;QAC/D,IAA0B,cAAA,OAAfX,EAAQY,EAAAA,EACbD,EAAMZ,IAAAA,GACRC,EAAQD,IAAAA,CAAKpC,GAAMyD,KAEnBpB,EAAQY,EAAAA,CAAGjD,GAAMyD;aAEd;YAAA,IAAwC,cAAA,OAA7BpB,EAAQ0D,gBAAAA,EAYxB,MAAM,IAAIrC,UAAU,wEAAA,OAA+ErB;YATnGA,EAAQ0D,gBAAAA,CAAiB/F,GAAM,SAASgG,EAAaC,CAAAA;gBAG/CjD,EAAMZ,IAAAA,IACRC,EAAQ6D,mBAAAA,CAAoBlG,GAAMgG,IAEpCvC,EAASwC;YACf;QAGG;IACH;ICneA,SAASE,EAASC,CAAAA;QAChB,IAAoB,cAAA,OAATA,GACT,MAAM,IAAI3B,MAAM;QAElBzC,IAAAA,CAAKoE,IAAAA,GAAOA;IACd;IDyDAnG,OAAOC,cAAAA,CAAe4B,GAAc,uBAAuB;QACzD3B,YAAAA,CAAY;QACZb,KAAK;YACH,OAAOiE;QACR;QACD8C,KAAK,SAASJ,CAAAA;YACZ,IAAmB,YAAA,OAARA,KAAoBA,IAAM,KAAKtE,EAAYsE,IACpD,MAAM,IAAIK,WAAW,oGAAoGL,IAAM;YAEjI1C,IAAsB0C;QACvB;IAAA,IAGHnE,EAAaC,IAAAA,GAAO;QAAA,KAEGqB,MAAjBpB,IAAAA,CAAKmB,OAAAA,IACLnB,IAAAA,CAAKmB,OAAAA,KAAYlD,OAAOsG,cAAAA,CAAevE,IAAAA,EAAMmB,OAAAA,IAC/CnB,CAAAA,IAAAA,CAAKmB,OAAAA,GAAUlD,OAAOiE,MAAAA,CAAO,OAC7BlC,IAAAA,CAAKqB,YAAAA,GAAe,CAAA,GAGtBrB,IAAAA,CAAKsB,aAAAA,GAAgBtB,IAAAA,CAAKsB,aAAAA,IAAAA,KAAiBF;IAC7C,GAIAtB,EAAaT,SAAAA,CAAUmF,eAAAA,GAAkB,SAAyBX,CAAAA;QAChE,IAAiB,YAAA,OAANA,KAAkBA,IAAI,KAAKlE,EAAYkE,IAChD,MAAM,IAAIS,WAAW,kFAAkFT,IAAI;QAG7G,OADA7D,IAAAA,CAAKsB,aAAAA,GAAgBuC,GACd7D,IACT;IAAA,GAQAF,EAAaT,SAAAA,CAAUoF,eAAAA,GAAkB;QACvC,OAAO9C,EAAiB3B,IAAAA;IAC1B,GAEAF,EAAaT,SAAAA,CAAU+C,IAAAA,GAAO,SAAcjF,CAAAA;QAE1C,IADA,IAAIgC,IAAO,EAAA,EACFvC,IAAI,GAAGA,IAAID,UAAUG,MAAAA,EAAQF,IAAKuC,EAAKmD,IAAAA,CAAK3F,SAAAA,CAAUC,EAAAA;QAC/D,IAAI8H,IAAoB,YAATvH,GAEXgD,IAASH,IAAAA,CAAKmB,OAAAA;QAClB,IAAA,KAAeC,MAAXjB,GACFuE,IAAWA,KAAAA,KAA4BtD,MAAjBjB,EAAOwE,KAAAA;aAC1B,IAAA,CAAKD,GACR,OAAA,CAAO;QAGT,IAAIA,GAAS;YACX,IAAIE;YAGJ,IAFIzF,EAAKrC,MAAAA,GAAS,KAChB8H,CAAAA,IAAKzF,CAAAA,CAAK,EAAA,AAAA,GACRyF,aAAcnC,OAGhB,MAAMmC;YAGR,IAAIlE,IAAM,IAAI+B,MAAM,qBAAsBmC,CAAAA,IAAK,OAAOA,EAAGC,OAAAA,GAAU,MAAM,EAAA;YAEzE,MADAnE,EAAIoE,OAAAA,GAAUF,GACRlE;QACP;QAED,IAAIK,IAAUZ,CAAAA,CAAOhD,EAAAA;QAErB,IAAA,KAAgBiE,MAAZL,GACF,OAAA,CAAO;QAET,IAAuB,cAAA,OAAZA,GACT/B,EAAa+B,GAASf,IAAAA,EAAMb;aAE5B;YAAA,IAAI4F,IAAMhE,EAAQjE,MAAAA,EACdkI,IAAYrB,EAAW5C,GAASgE;YACpC,IAASnI,IAAI,GAAGA,IAAImI,GAAAA,EAAOnI,EACzBoC,EAAagG,CAAAA,CAAUpI,EAAAA,EAAIoD,IAAAA,EAAMb;QAHX;QAM1B,OAAA,CAAO;IACT,GAgEAW,EAAaT,SAAAA,CAAU4F,WAAAA,GAAc,SAAqB9H,CAAAA,EAAMsE,CAAAA;QAC9D,OAAOI,EAAa7B,IAAAA,EAAM7C,GAAMsE,GAAAA,CAAU;IAC5C,GAEA3B,EAAaT,SAAAA,CAAU4B,EAAAA,GAAKnB,EAAaT,SAAAA,CAAU4F,WAAAA,EAEnDnF,EAAaT,SAAAA,CAAU6F,eAAAA,GACnB,SAAyB/H,CAAAA,EAAMsE,CAAAA;QAC7B,OAAOI,EAAa7B,IAAAA,EAAM7C,GAAMsE,GAAAA,CAAU;IAChD,GAoBA3B,EAAaT,SAAAA,CAAUe,IAAAA,GAAO,SAAcjD,CAAAA,EAAMsE,CAAAA;QAGhD,OAFAD,EAAcC,IACdzB,IAAAA,CAAKiB,EAAAA,CAAG9D,GAAM8F,EAAUjD,IAAAA,EAAM7C,GAAMsE,KAC7BzB,IACT;IAAA,GAEAF,EAAaT,SAAAA,CAAU8F,mBAAAA,GACnB,SAA6BhI,CAAAA,EAAMsE,CAAAA;QAGjC,OAFAD,EAAcC,IACdzB,IAAAA,CAAKkF,eAAAA,CAAgB/H,GAAM8F,EAAUjD,IAAAA,EAAM7C,GAAMsE,KAC1CzB,IACb;IAAA,GAGAF,EAAaT,SAAAA,CAAUsB,cAAAA,GACnB,SAAwBxD,CAAAA,EAAMsE,CAAAA;QAC5B,IAAI2D,GAAMjF,GAAQkF,GAAUzI,GAAG0I;QAK/B,IAHA9D,EAAcC,IAAAA,KAGCL,MADfjB,CAAAA,IAASH,IAAAA,CAAKmB,OAAAA,AAAAA,GAEZ,OAAOnB,IAAAA;QAGT,IAAA,KAAaoB,MADbgE,CAAAA,IAAOjF,CAAAA,CAAOhD,EAAAA,AAAAA,GAEZ,OAAO6C,IAAAA;QAET,IAAIoF,MAAS3D,KAAY2D,EAAK3D,QAAAA,KAAaA,GACb,KAAA,EAAtBzB,IAAAA,CAAKqB,YAAAA,GACTrB,IAAAA,CAAKmB,OAAAA,GAAUlD,OAAOiE,MAAAA,CAAO,QAAA,CAAA,OAEtB/B,CAAAA,CAAOhD,EAAAA,EACVgD,EAAOQ,cAAAA,IACTX,IAAAA,CAAKoC,IAAAA,CAAK,kBAAkBjF,GAAMiI,EAAK3D,QAAAA,IAAYA,EAAAA;aAElD,IAAoB,cAAA,OAAT2D,GAAqB;YAGrC,IAFAC,IAAAA,IAEKzI,IAAIwI,EAAKtI,MAAAA,GAAS,GAAGF,KAAK,GAAGA,IAChC,IAAIwI,CAAAA,CAAKxI,EAAAA,KAAO6E,KAAY2D,CAAAA,CAAKxI,EAAAA,CAAG6E,QAAAA,KAAaA,GAAU;gBACzD6D,IAAmBF,CAAAA,CAAKxI,EAAAA,CAAG6E,QAAAA,EAC3B4D,IAAWzI;gBACX;YACD;YAGH,IAAIyI,IAAW,GACb,OAAOrF,IAAAA;YAEQ,MAAbqF,IACFD,EAAKG,KAAAA,KAiIf,SAAmBH,CAAAA,EAAMI,CAAAA;gBACvB,MAAOA,IAAQ,IAAIJ,EAAKtI,MAAAA,EAAQ0I,IAC9BJ,CAAAA,CAAKI,EAAAA,GAASJ,CAAAA,CAAKI,IAAQ,EAAA;gBAC7BJ,EAAKK,GAAAA;YACP,EAnIoBL,GAAMC,IAGE,MAAhBD,EAAKtI,MAAAA,IACPqD,CAAAA,CAAAA,CAAOhD,EAAAA,GAAQiI,CAAAA,CAAK,EAAA,AAAA,GAAA,KAEQhE,MAA1BjB,EAAOQ,cAAAA,IACTX,IAAAA,CAAKoC,IAAAA,CAAK,kBAAkBjF,GAAMmI,KAAoB7D;QACzD;QAED,OAAOzB,IACb;IAAA,GAEAF,EAAaT,SAAAA,CAAUsG,GAAAA,GAAM7F,EAAaT,SAAAA,CAAUsB,cAAAA,EAEpDb,EAAaT,SAAAA,CAAUuG,kBAAAA,GACnB,SAA4BzI,CAAAA;QAC1B,IAAI6H,GAAW7E,GAAQvD;QAGvB,IAAA,KAAewE,MADfjB,CAAAA,IAASH,IAAAA,CAAKmB,OAAAA,AAAAA,GAEZ,OAAOnB,IAAAA;QAGT,IAAA,KAA8BoB,MAA1BjB,EAAOQ,cAAAA,EAUT,OATyB,MAArBhE,UAAUG,MAAAA,GACZkD,CAAAA,IAAAA,CAAKmB,OAAAA,GAAUlD,OAAOiE,MAAAA,CAAO,OAC7BlC,IAAAA,CAAKqB,YAAAA,GAAe,CAAA,IAAA,KACMD,MAAjBjB,CAAAA,CAAOhD,EAAAA,IACY,CAAA,KAAA,EAAtB6C,IAAAA,CAAKqB,YAAAA,GACTrB,IAAAA,CAAKmB,OAAAA,GAAUlD,OAAOiE,MAAAA,CAAO,QAAA,OAEtB/B,CAAAA,CAAOhD,EAAAA,AAAAA,GAEX6C,IAAAA;QAIT,IAAyB,MAArBrD,UAAUG,MAAAA,EAAc;YAC1B,IACI+I,GADAC,IAAO7H,OAAO6H,IAAAA,CAAK3F;YAEvB,IAAKvD,IAAI,GAAGA,IAAIkJ,EAAKhJ,MAAAA,EAAAA,EAAUF,EAEjB,qBADZiJ,CAAAA,IAAMC,CAAAA,CAAKlJ,EAAAA,AAAAA,KAEXoD,IAAAA,CAAK4F,kBAAAA,CAAmBC;YAK1B,OAHA7F,IAAAA,CAAK4F,kBAAAA,CAAmB,mBACxB5F,IAAAA,CAAKmB,OAAAA,GAAUlD,OAAOiE,MAAAA,CAAO,OAC7BlC,IAAAA,CAAKqB,YAAAA,GAAe,GACbrB,IACR;QAAA;QAID,IAAyB,cAAA,OAFzBgF,CAAAA,IAAY7E,CAAAA,CAAOhD,EAAAA,AAAAA,GAGjB6C,IAAAA,CAAKW,cAAAA,CAAexD,GAAM6H;aACrB,IAAA,KAAkB5D,MAAd4D,GAET,IAAKpI,IAAIoI,EAAUlI,MAAAA,GAAS,GAAGF,KAAK,GAAGA,IACrCoD,IAAAA,CAAKW,cAAAA,CAAexD,GAAM6H,CAAAA,CAAUpI,EAAAA;QAIxC,OAAOoD,IACb;IAAA,GAmBAF,EAAaT,SAAAA,CAAU2F,SAAAA,GAAY,SAAmB7H,CAAAA;QACpD,OAAOkG,EAAWrD,IAAAA,EAAM7C,GAAAA,CAAM;IAChC,GAEA2C,EAAaT,SAAAA,CAAU0G,YAAAA,GAAe,SAAsB5I,CAAAA;QAC1D,OAAOkG,EAAWrD,IAAAA,EAAM7C,GAAAA,CAAM;IAChC,GAEA2C,EAAa8D,aAAAA,GAAgB,SAASvD,CAAAA,EAASlD,CAAAA;QAC7C,OAAqC,cAAA,OAA1BkD,EAAQuD,aAAAA,GACVvD,EAAQuD,aAAAA,CAAczG,KAEtByG,EAActE,IAAAA,CAAKe,GAASlD;IAEvC,GAEA2C,EAAaT,SAAAA,CAAUuE,aAAAA,GAAgBA,GAiBvC9D,EAAaT,SAAAA,CAAU2G,UAAAA,GAAa;QAClC,OAAOhG,IAAAA,CAAKqB,YAAAA,GAAe,IAAIxC,EAAemB,IAAAA,CAAKmB,OAAAA,IAAW,EAChE;IAAA,GClZsB,eAAA,OAAX8E,UACT9B,CAAAA,EAAS9E,SAAAA,CAAU4G,OAAOC,QAAAA,CAAAA,GAAY;QACpC,OAAOlG,IACX;IAAA,CAAA,GAQQmG,EAACC,EAAAA,GAAK;QACZ,IAAIjH,IAAOxC,WACTE,IAAIsC,EAAKrC,MAAAA,EACTF,IAAI;QAEN,OAAO,IAAIuH,EAAS;YAClB,OAAIvH,KAAKC,IAAU;gBAACwJ,MAAAA,CAAM;YAAA,IAEnB;gBAACA,MAAAA,CAAM;gBAAO1I,OAAOwB,CAAAA,CAAKvC,IAAAA;YAAAA;QACrC;IACA,GAOQuJ,EAACG,KAAAA,GAAQ;QAKf,OAJe,IAAInC,EAAS;YAC1B,OAAO;gBAACkC,MAAAA,CAAM;YAAA;QAClB;IAGA,GAQAlC,EAASoC,YAAAA,GAAe,SAAUC,CAAAA;QAChC,IAAI5J,IAAI,GACNC,IAAI2J,EAAS1J,MAAAA;QAEf,OAAO,IAAIqH,EAAS;YAClB,OAAIvH,KAAKC,IAAU;gBAACwJ,MAAAA,CAAM;YAAA,IAEnB;gBAACA,MAAAA,CAAM;gBAAO1I,OAAO6I,CAAAA,CAAS5J,IAAAA;YAAAA;QACzC;IACA,GAQAuH,EAASsC,EAAAA,GAAK,SAAU9I,CAAAA;QACtB,OAAIA,aAAiBwG,KAGF,YAAA,OAAVxG,KACG,SAAVA,KACsB,cAAA,OAAfA,EAAMyG,IAEjB;IAAA;IAKA,IAAA8B,IAAiB/B,GAAAA,IAAAA,CAAAA;IC/FjBuC,EAAAC,oBAAAA,GAAsD,eAAA,OAAhBC,aACtCF,EAAAG,cAAAA,GAA2C,eAAA,OAAXZ;ICMhC,IAAI9B,IAAW2C,GACXJ,IAAUK,GAEVJ,IAAuBD,EAAQC,oBAAAA,EAC/BE,IAAiBH,EAAQG,cAAAA;IAyB7B,IAAAG,IAAiB,SAActK,CAAAA;QAC7B,IAAIwJ,IAxBN,SAAoBxJ,CAAAA;YAElB,OACoB,YAAA,OAAXA,KACPiC,MAAMC,OAAAA,CAAQlC,MACbiK,KAAwBC,YAAYK,MAAAA,CAAOvK,KAErCyH,EAASoC,YAAAA,CAAa7J,KAGT,YAAA,OAAXA,KAAkC,SAAXA,IAAwB,OAGtDmK,KAAqD,cAAA,OAA5BnK,CAAAA,CAAOuJ,OAAOC,QAAAA,CAAAA,GAClCxJ,CAAAA,CAAOuJ,OAAOC,QAAAA,CAAAA,KAGI,cAAA,OAAhBxJ,EAAO0H,IAAAA,GAA4B1H,IAGvC;QACT,EAG4BA;QAE1B,IAAA,CAAKwJ,GACH,MAAM,IAAIzD,MACR;QAGJ,OAAOyD;IACT,GCrCIc,IAAOF,GASXK,IAAiB,SAAcC,CAAAA,EAAUvD,CAAAA;QAQvC,IAPA,IAEEwD,GAFExK,IAAIF,UAAUG,MAAAA,GAAS,IAAI+G,IAAIyD,IAAAA,GACjCC,IAAQ1K,MAAMyK,IAAAA,IAAW,IAAI3I,MAAM9B,KAAK,EAAA,EAExCD,IAAI,GAEFsJ,IAAWc,EAAKI,KAEP;YACX,IAAIxK,MAAMC,GAAG,OAAO0K;YAIpB,IAAA,AAFAF,CAAAA,IAAOnB,EAAS9B,IAAAA,EAAAA,EAEPiC,IAAAA,EAGP,OAFIzJ,MAAMiH,KAAG0D,CAAAA,EAAMzK,MAAAA,GAASF,CAAAA,GAErB2K;YAGTA,CAAAA,CAAM3K,IAAAA,GAAOyK,EAAK1J,KACnB;QAAA;IACH,GC9Ba6J,IAAU,SAAAC,CAAAA;QACrB,SAAAD,EAAY3C,CAAAA;YAAS,IAAA6C;YAGI,OAAA,AAFvBA,CAAAA,IAAOD,EAAAnI,IAAAA,CAAAU,IAAAA,KAAAA,IAAAA,AAAAA,EACFhC,IAAAA,GAAO,cACZ0J,EAAK7C,OAAAA,GAAUA,GAAQ6C;QACzB;QAAC,OALoBC,EAAAH,GAAAC,IAKpBD;IAAA,EAAAI,EAL6BnF,SAQnBoF,IAA0B,SAAAC,CAAAA;QACrC,SAAAD,EAAYhD,CAAAA;YAAS,IAAAkD;YASf,OAAA,AARJA,CAAAA,IAAAD,EAAAxI,IAAAA,CAAAU,IAAAA,EAAM6E,MAAQ7E,IAAAA,AAAAA,EACThC,IAAAA,GAAO,8BAG2B,cAAA,OAA5ByE,MAAMuF,iBAAAA,IACfvF,MAAMuF,iBAAAA,CAAAA,EAAAA,IAEJH,EAA2BxI,SAAAA,CAAU4I,WAAAA,GACrCF;QACN;QAAC,OAXoCJ,EAAAE,GAAAC,IAWpCD;IAAA,EAX6CL,IAcnCU,IAAkB,SAAAC,CAAAA;QAC7B,SAAAD,EAAYrD,CAAAA;YAAS,IAAAuD;YAMuD,OAAA,AAL1EA,CAAAA,IAAAD,EAAA7I,IAAAA,CAAAU,IAAAA,EAAM6E,MAAQ7E,IAAAA,AAAAA,EACThC,IAAAA,GAAO,sBAG2B,cAAA,OAA5ByE,MAAMuF,iBAAAA,IACfvF,MAAMuF,iBAAAA,CAAAA,EAAAA,IAAwBE,EAAmB7I,SAAAA,CAAU4I,WAAAA,GAAaG;QAC5E;QAAC,OAR4BT,EAAAO,GAAAC,IAQ5BD;IAAA,EARqCV,IAW3Ba,IAAe,SAAAC,CAAAA;QAC1B,SAAAD,EAAYxD,CAAAA;YAAS,IAAA0D;YAMoD,OAAA,AALvEA,CAAAA,IAAAD,EAAAhJ,IAAAA,CAAAU,IAAAA,EAAM6E,MAAQ7E,IAAAA,AAAAA,EACThC,IAAAA,GAAO,mBAG2B,cAAA,OAA5ByE,MAAMuF,iBAAAA,IACfvF,MAAMuF,iBAAAA,CAAAA,EAAAA,IAAwBK,EAAgBhJ,SAAAA,CAAU4I,WAAAA,GAAaM;QACzE;QAAC,OARyBZ,EAAAU,GAAAC,IAQzBD;IAAA,EARkCb;ICvB9B,SAASgB,EAAc3C,CAAAA,EAAKnH,CAAAA;QAEjCsB,IAAAA,CAAK6F,GAAAA,GAAMA,GACX7F,IAAAA,CAAKtB,UAAAA,GAAaA,GAElBsB,IAAAA,CAAKyI,KAAAA;IACP;IAuBO,SAASC,EAAiB7C,CAAAA,EAAKnH,CAAAA;QAEpCsB,IAAAA,CAAK6F,GAAAA,GAAMA,GACX7F,IAAAA,CAAKtB,UAAAA,GAAaA,GAElBsB,IAAAA,CAAKyI,KAAAA;IACP;IAoBO,SAASE,EAAmB9C,CAAAA,EAAKnH,CAAAA;QAEtCsB,IAAAA,CAAK6F,GAAAA,GAAMA,GACX7F,IAAAA,CAAKtB,UAAAA,GAAaA,GAElBsB,IAAAA,CAAKyI,KAAAA;IACP;IAqBO,SAASG,EAASnL,CAAAA,EAAYoI,CAAAA,EAAK3I,CAAAA,EAAQR,CAAAA,EAAQgC,CAAAA;QAExDsB,IAAAA,CAAK6F,GAAAA,GAAMA,GACX7F,IAAAA,CAAKtB,UAAAA,GAAaA,GAClBsB,IAAAA,CAAKvC,UAAAA,GAAaA,GAGlBuC,IAAAA,CAAK9C,MAAAA,GAASA,GACd8C,IAAAA,CAAKtD,MAAAA,GAASA;IAChB;IAnFA8L,EAAcnJ,SAAAA,CAAUoJ,KAAAA,GAAQ;QAE9BzI,IAAAA,CAAK6I,QAAAA,GAAW,GAChB7I,IAAAA,CAAK8I,SAAAA,GAAY,GACjB9I,IAAAA,CAAK+I,gBAAAA,GAAmB,GACxB/I,IAAAA,CAAKgJ,eAAAA,GAAkB,GACvBhJ,IAAAA,CAAKiJ,aAAAA,GAAgB,GAGrBjJ,IAAAA,CAAI,EAAA,GAAM,CAAA,GACVA,IAAAA,CAAKxC,GAAAA,GAAM,CAAA,GACXwC,IAAAA,CAAKvC,UAAAA,GAAa,CAAA;IACpB,GAiBAiL,EAAiBrJ,SAAAA,CAAUoJ,KAAAA,GAAQ;QAEjCzI,IAAAA,CAAK6I,QAAAA,GAAW,GAChB7I,IAAAA,CAAK8I,SAAAA,GAAY,GACjB9I,IAAAA,CAAKiJ,aAAAA,GAAgB,GAGrBjJ,IAAAA,CAAI,EAAA,GAAM,CAAA,GACVA,IAAAA,CAAKxC,GAAAA,GAAM,CAAA;IACb,GAiBAmL,EAAmBtJ,SAAAA,CAAUoJ,KAAAA,GAAQ;QAEnCzI,IAAAA,CAAK+I,gBAAAA,GAAmB,GACxB/I,IAAAA,CAAKgJ,eAAAA,GAAkB,GAGvBhJ,IAAAA,CAAKvC,UAAAA,GAAa,CAAA;IACpB,GAuBAmL,EAASvJ,SAAAA,CAAU6J,MAAAA,GAAS;QAC1B,IAAIC,IAAS,OACTC,IAAQ;QAERpJ,IAAAA,CAAKvC,UAAAA,IAAY0L,CAAAA,IAASC,IAAQ,YAAA;QAEtC,IAAMlM,IAAS8C,IAAAA,CAAK9C,MAAAA,CAAO2I,GAAAA,EACrBnJ,IAASsD,IAAAA,CAAKtD,MAAAA,CAAOmJ,GAAAA;QAG3B7F,IAAAA,CAAK9C,MAAAA,CAAOiM,EAAAA,CAAQzM,EAAAA,GAAUsD,IAAAA,EAE1BA,IAAAA,CAAKvC,UAAAA,IAAcP,MAAWR,KAGlCsD,CAAAA,IAAAA,CAAKtD,MAAAA,CAAO0M,EAAAA,CAAOlM,EAAAA,GAAU8C,IAAAA,AAAAA;IAC/B,GAEA4I,EAASvJ,SAAAA,CAAUgK,WAAAA,GAAc;QAC/B,IAAIF,IAAS,OACTC,IAAQ,MAENlM,IAAS8C,IAAAA,CAAK9C,MAAAA,CAAO2I,GAAAA,EACrBnJ,IAASsD,IAAAA,CAAKtD,MAAAA,CAAOmJ,GAAAA;QAEvB7F,IAAAA,CAAKvC,UAAAA,IAAY0L,CAAAA,IAASC,IAAQ,YAAA;QAGtC,IAAME,IAAMtJ,IAAAA,CAAK9C,MAAAA,CAAOiM,EAAAA,EAClBI,IAAOD,CAAAA,CAAI5M,EAAAA;QAEjB,IAAA,KAAoB,MAAT6M,GAST,OARAD,CAAAA,CAAI5M,EAAAA,GAAUsD,IAAAA,EAAAA,KAGRA,CAAAA,IAAAA,CAAKvC,UAAAA,IAAcP,MAAWR,KAElCsD,CAAAA,IAAAA,CAAKtD,MAAAA,CAAO0M,EAAAA,CAAOlM,EAAAA,GAAU8C,IAAAA,AAAAA,CAAAA;QAOjCuJ,EAAKC,QAAAA,GAAWxJ,IAAAA,EAChBA,IAAAA,CAAKoE,IAAAA,GAAOmF,GAIZD,CAAAA,CAAI5M,EAAAA,GAAUsD,IAAAA,EACdA,IAAAA,CAAKtD,MAAAA,CAAO0M,EAAAA,CAAOlM,EAAAA,GAAU8C,IAC/B;IAAA,GAEA4I,EAASvJ,SAAAA,CAAUoK,MAAAA,GAAS;QAC1B,IAAMvM,IAAS8C,IAAAA,CAAK9C,MAAAA,CAAO2I,GAAAA,EACrBnJ,IAASsD,IAAAA,CAAKtD,MAAAA,CAAOmJ,GAAAA,EAEvBsD,IAAS,OACTC,IAAQ;QAERpJ,IAAAA,CAAKvC,UAAAA,IAAY0L,CAAAA,IAASC,IAAQ,YAAA,GAAA,OAE/BpJ,IAAAA,CAAK9C,MAAAA,CAAOiM,EAAAA,CAAQzM,EAAAA,EAAAA,OAGpBsD,IAAAA,CAAKtD,MAAAA,CAAO0M,EAAAA,CAAOlM,EAC5B;IAAA,GAEA0L,EAASvJ,SAAAA,CAAUqK,WAAAA,GAAc;QAC/B,IAAMxM,IAAS8C,IAAAA,CAAK9C,MAAAA,CAAO2I,GAAAA,EACrBnJ,IAASsD,IAAAA,CAAKtD,MAAAA,CAAOmJ,GAAAA,EAEvBsD,IAAS,OACTC,IAAQ;QAERpJ,IAAAA,CAAKvC,UAAAA,IAAY0L,CAAAA,IAASC,IAAQ,YAAA,GAAA,KAGhBhI,MAAlBpB,IAAAA,CAAKwJ,QAAAA,GAAAA,KAIWpI,MAAdpB,IAAAA,CAAKoE,IAAAA,GAAAA,CAAAA,OACApE,IAAAA,CAAK9C,MAAAA,CAAOiM,EAAAA,CAAQzM,EAAAA,EAAAA,OAGpBsD,IAAAA,CAAKtD,MAAAA,CAAO0M,EAAAA,CAAOlM,EAAAA,AAAAA,IAG1B8C,CAAAA,IAAAA,CAAKoE,IAAAA,CAAKoF,QAAAA,GAAAA,KAAWpI,GAGrBpB,IAAAA,CAAK9C,MAAAA,CAAOiM,EAAAA,CAAQzM,EAAAA,GAAUsD,IAAAA,CAAKoE,IAAAA,EAGnCpE,IAAAA,CAAKtD,MAAAA,CAAO0M,EAAAA,CAAOlM,EAAAA,GAAU8C,IAAAA,CAAKoE,IAAAA,AAAAA,IAIpCpE,CAAAA,IAAAA,CAAKwJ,QAAAA,CAASpF,IAAAA,GAAOpE,IAAAA,CAAKoE,IAAAA,EAAAA,KAGRhD,MAAdpB,IAAAA,CAAKoE,IAAAA,IACPpE,CAAAA,IAAAA,CAAKoE,IAAAA,CAAKoF,QAAAA,GAAWxJ,IAAAA,CAAKwJ,QAAAA,AAAAA,CAAAA;IAGhC;IC5MA,SAASG,EACP1M,CAAAA,EACA2M,CAAAA,EACAC,CAAAA,EACAC,CAAAA,EACAC,CAAAA,EACAC,CAAAA,EACAC,CAAAA;QAEA,IAAIC,GAAUC,GAAUC,GAAMC;QAI9B,IAFAP,IAAa,KAAKA,GAhBP,MAkBPD,GAAe;YAGjB,IAAA,CAFAK,CAAAA,IAAWjN,EAAMI,MAAAA,CAAOC,GAAAA,CAAIwM,EAAAA,GAG1B,MAAM,IAAI5B,EACC0B,SAAAA,MAAAA,CAAAA,GAA+BE,0BAAAA,MAAAA,CAAAA,GACzC;YAEHM,IAAOL,GACPM,IAAOL;QACT,OAAO,IAzBQ,MAyBJH,GAAmB;YAK5B,IAJAE,IAAa,KAAKA,GAAAA,CAElBI,CAAAA,IAAWlN,EAAMqN,MAAAA,CAAOhN,GAAAA,CAAIyM,EAAAA,GAG1B,MAAM,IAAI7B,EACC0B,SAAAA,MAAAA,CAAAA,GAA+BG,0BAAAA,MAAAA,CAAAA,GACzC;YAEH,IAAM7M,IAASiN,EAASjN,MAAAA,CAAO2I,GAAAA,EACzBnJ,IAASyN,EAASzN,MAAAA,CAAOmJ,GAAAA;YAE/B,IAAIiE,MAAe5M,GACjBgN,IAAWC,EAASzN,MAAAA;iBACf;gBAAA,IAAIoN,MAAepN,GAGxB,MAAM,IAAIwL,EACC0B,SAAAA,MAAAA,CAAAA,GAAgBE,WAAAA,MAAAA,CAAAA,GAA4CC,mCAAAA,MAAAA,CAAAA,GAAqB7M,YAAAA,MAAAA,CAAAA,GAAWR,MAAAA,MAAAA,CAAAA,GACtG;gBAJDwN,IAAWC,EAASjN,MAKtB;YAAA;YAEAkN,IAAOJ,GACPK,IAAOJ;QACT,OAAO;YAGL,IAAA,CAFAE,CAAAA,IAAWlN,EAAMqN,MAAAA,CAAOhN,GAAAA,CAAIwM,EAAAA,GAG1B,MAAM,IAAI5B,EACC0B,SAAAA,MAAAA,CAAAA,GAA+BE,0BAAAA,MAAAA,CAAAA,GACzC;YAGDI,IA7DS,MA4DPL,IACSM,EAASjN,MAAAA,GAETiN,EAASzN,MAAAA,EAGtB0N,IAAOL,GACPM,IAAOL;QACT;QAEA,OAAO;YAACE;YAAUE;YAAMC;SAC1B;IAAA;IA8NA,IAAME,IAA0B;QAC9B;YACEvM,MAAM,SAAAwM,CAAAA;gBAAO,OAAA,MAAA9K,MAAAA,CAAU8K,GAAO;YAAW;YACzCC,UA/NJ,SAAmCC,CAAAA,EAAOd,CAAAA,EAAQC,CAAAA;gBAChDa,EAAMrL,SAAAA,CAAUuK,EAAAA,GAAU,SAAUE,CAAAA,EAAYC,CAAAA,EAAYC,CAAAA;oBAC1D,IAAAW,IAAqBhB,EACnB3J,IAAAA,EACA4J,GACAC,GACAC,GACAC,GACAC,IANKY,IAAID,CAAAA,CAAA,EAAA,EAAE3M,IAAI2M,CAAAA,CAAA,EAAA;oBASjB,OAAOC,EAAKlM,UAAAA,CAAWV,EAAAA;gBAAAA;YAE3B;QAAA;QAoNE;YACEA,MAAM,SAAAwM,CAAAA;gBAAO,OAAA,MAAA9K,MAAAA,CAAU8K,GAAO;YAAY;YAC1CC,UApNJ,SAAoCC,CAAAA,EAAOd,CAAAA,EAAQC,CAAAA;gBACjDa,EAAMrL,SAAAA,CAAUuK,EAAAA,GAAU,SAAUE,CAAAA,EAAYC,CAAAA;oBAS9C,OAReJ,EACb3J,IAAAA,EACA4J,GACAC,GACAC,GACAC,EAAAA,CALS,EAAA,CAQCrL,UAAAA;gBAAAA;YAEhB;QAAA;QA0ME;YACEV,MAAM,SAAAwM,CAAAA;gBAAO,OAAA,MAAA9K,MAAAA,CAAU8K,GAAO;YAAW;YACzCC,UA1MJ,SAAoCC,CAAAA,EAAOd,CAAAA,EAAQC,CAAAA;gBACjDa,EAAMrL,SAAAA,CAAUuK,EAAAA,GAAU,SAAUE,CAAAA,EAAYC,CAAAA,EAAYC,CAAAA;oBAC1D,IAAAa,IAAqBlB,EACnB3J,IAAAA,EACA4J,GACAC,GACAC,GACAC,GACAC,IANKY,IAAIC,CAAAA,CAAA,EAAA,EAAE7M,IAAI6M,CAAAA,CAAA,EAAA;oBASjB,OAAOD,EAAKlM,UAAAA,CAAWoM,cAAAA,CAAe9M;gBAAAA;YAE1C;QAAA;QA+LE;YACEA,MAAM,SAAAwM,CAAAA;gBAAO,OAAA,MAAA9K,MAAAA,CAAU8K,GAAO;YAAW;YACzCC,UA/LJ,SAAmCC,CAAAA,EAAOd,CAAAA,EAAQC,CAAAA;gBAChDa,EAAMrL,SAAAA,CAAUuK,EAAAA,GAAU,SAAUE,CAAAA,EAAYC,CAAAA,EAAYC,CAAAA,EAAMC,CAAAA;oBAChE,IAAAc,IAA4BpB,EAC1B3J,IAAAA,EACA4J,GACAC,GACAC,GACAC,GACAC,GACAC,IAPKW,IAAIG,CAAAA,CAAA,EAAA,EAAE/M,IAAI+M,CAAAA,CAAA,EAAA,EAAEpN,IAAKoN,CAAAA,CAAA,EAAA;oBAoBxB,OAVAH,EAAKlM,UAAAA,CAAWV,EAAAA,GAAQL,GAGxBqC,IAAAA,CAAKoC,IAAAA,CAAK,yBAAyB;wBACjCyD,KAAK+E,EAAK/E,GAAAA;wBACV1I,MAAM;wBACNuB,YAAYkM,EAAKlM,UAAAA;wBACjBV,MAAAA;oBAAAA,IAGKgC,IAAAA;gBAAAA;YAEX;QAAA;QAyKE;YACEhC,MAAM,SAAAwM,CAAAA;gBAAO,OAAA,SAAA9K,MAAAA,CAAa8K,GAAO;YAAW;YAC5CC,UAzKJ,SAAoCC,CAAAA,EAAOd,CAAAA,EAAQC,CAAAA;gBACjDa,EAAMrL,SAAAA,CAAUuK,EAAAA,GAAU,SAAUE,CAAAA,EAAYC,CAAAA,EAAYC,CAAAA,EAAMC,CAAAA;oBAChE,IAAAe,IAA8BrB,EAC5B3J,IAAAA,EACA4J,GACAC,GACAC,GACAC,GACAC,GACAC,IAPKW,IAAII,CAAAA,CAAA,EAAA,EAAEhN,IAAIgN,CAAAA,CAAA,EAAA,EAAEC,IAAOD,CAAAA,CAAA,EAAA;oBAU1B,IAAuB,cAAA,OAAZC,GACT,MAAM,IAAIpD,EACC+B,SAAAA,MAAAA,CAAAA,GACV;oBAEH,IAAMlL,IAAakM,EAAKlM,UAAAA,EAClBf,IAAQsN,EAAQvM,CAAAA,CAAWV,EAAAA;oBAYjC,OAVAU,CAAAA,CAAWV,EAAAA,GAAQL,GAGnBqC,IAAAA,CAAKoC,IAAAA,CAAK,yBAAyB;wBACjCyD,KAAK+E,EAAK/E,GAAAA;wBACV1I,MAAM;wBACNuB,YAAYkM,EAAKlM,UAAAA;wBACjBV,MAAAA;oBAAAA,IAGKgC,IAAAA;gBAAAA;YAEX;QAAA;QA2IE;YACEhC,MAAM,SAAAwM,CAAAA;gBAAO,OAAA,SAAA9K,MAAAA,CAAa8K,GAAO;YAAW;YAC5CC,UA3IJ,SAAoCC,CAAAA,EAAOd,CAAAA,EAAQC,CAAAA;gBACjDa,EAAMrL,SAAAA,CAAUuK,EAAAA,GAAU,SAAUE,CAAAA,EAAYC,CAAAA,EAAYC,CAAAA;oBAC1D,IAAAkB,IAAqBvB,EACnB3J,IAAAA,EACA4J,GACAC,GACAC,GACAC,GACAC,IANKY,IAAIM,CAAAA,CAAA,EAAA,EAAElN,IAAIkN,CAAAA,CAAA,EAAA;oBAmBjB,OAAA,OAVON,EAAKlM,UAAAA,CAAWV,EAAAA,EAGvBgC,IAAAA,CAAKoC,IAAAA,CAAK,yBAAyB;wBACjCyD,KAAK+E,EAAK/E,GAAAA;wBACV1I,MAAM;wBACNuB,YAAYkM,EAAKlM,UAAAA;wBACjBV,MAAAA;oBAAAA,IAGKgC,IAAAA;gBAAAA;YAEX;QAAA;QAsHE;YACEhC,MAAM,SAAAwM,CAAAA;gBAAO,OAAA,UAAA9K,MAAAA,CAAc8K,GAAO;YAAY;YAC9CC,UAtHJ,SAAsCC,CAAAA,EAAOd,CAAAA,EAAQC,CAAAA;gBACnDa,EAAMrL,SAAAA,CAAUuK,EAAAA,GAAU,SAAUE,CAAAA,EAAYC,CAAAA,EAAYC,CAAAA;oBAC1D,IAAAmB,IAA2BxB,EACzB3J,IAAAA,EACA4J,GACAC,GACAC,GACAC,GACAC,IANKY,IAAIO,CAAAA,CAAA,EAAA,EAAEzM,IAAUyM,CAAAA,CAAA,EAAA;oBASvB,IAAA,CAAKzN,EAAcgB,IACjB,MAAM,IAAImJ,EACC+B,SAAAA,MAAAA,CAAAA,GACV;oBAWH,OATAgB,EAAKlM,UAAAA,GAAaA,GAGlBsB,IAAAA,CAAKoC,IAAAA,CAAK,yBAAyB;wBACjCyD,KAAK+E,EAAK/E,GAAAA;wBACV1I,MAAM;wBACNuB,YAAYkM,EAAKlM,UAAAA;oBAAAA,IAGZsB,IAAAA;gBAAAA;YAEX;QAAA;QA6FE;YACEhC,MAAM,SAAAwM,CAAAA;gBAAO,OAAA,QAAA9K,MAAAA,CAAY8K,GAAO;YAAY;YAC5CC,UA7FJ,SAAoCC,CAAAA,EAAOd,CAAAA,EAAQC,CAAAA;gBACjDa,EAAMrL,SAAAA,CAAUuK,EAAAA,GAAU,SAAUE,CAAAA,EAAYC,CAAAA,EAAYC,CAAAA;oBAC1D,IAAAoB,IAA2BzB,EACzB3J,IAAAA,EACA4J,GACAC,GACAC,GACAC,GACAC,IANKY,IAAIQ,CAAAA,CAAA,EAAA,EAAE1M,IAAU0M,CAAAA,CAAA,EAAA;oBASvB,IAAA,CAAK1N,EAAcgB,IACjB,MAAM,IAAImJ,EACC+B,SAAAA,MAAAA,CAAAA,GACV;oBAYH,OAVAnN,EAAOmO,EAAKlM,UAAAA,EAAYA,IAGxBsB,IAAAA,CAAKoC,IAAAA,CAAK,yBAAyB;wBACjCyD,KAAK+E,EAAK/E,GAAAA;wBACV1I,MAAM;wBACNuB,YAAYkM,EAAKlM,UAAAA;wBACjBkM,MAAMlM;oBAAAA,IAGDsB,IAAAA;gBAAAA;YAEX;QAAA;QAmEE;YACEhC,MAAM,SAAAwM,CAAAA;gBAAO,OAAA,SAAA9K,MAAAA,CAAa8K,GAAO;YAAY;YAC7CC,UAnEJ,SAAqCC,CAAAA,EAAOd,CAAAA,EAAQC,CAAAA;gBAClDa,EAAMrL,SAAAA,CAAUuK,EAAAA,GAAU,SAAUE,CAAAA,EAAYC,CAAAA,EAAYC,CAAAA;oBAC1D,IAAAqB,IAAwB1B,EACtB3J,IAAAA,EACA4J,GACAC,GACAC,GACAC,GACAC,IANKY,IAAIS,CAAAA,CAAA,EAAA,EAAEJ,IAAOI,CAAAA,CAAA,EAAA;oBASpB,IAAuB,cAAA,OAAZJ,GACT,MAAM,IAAIpD,EACC+B,SAAAA,MAAAA,CAAAA,GACV;oBAWH,OATAgB,EAAKlM,UAAAA,GAAauM,EAAQL,EAAKlM,UAAAA,GAG/BsB,IAAAA,CAAKoC,IAAAA,CAAK,yBAAyB;wBACjCyD,KAAK+E,EAAK/E,GAAAA;wBACV1I,MAAM;wBACNuB,YAAYkM,EAAKlM,UAAAA;oBAAAA,IAGZsB,IAAAA;gBAAAA;YAEX;QAAA;KAAA;ICoaA,IAAMsL,IAA0B;QAC9B;YACEtN,MAAM,SAAAwM,CAAAA;gBAAO,OAAA,MAAA9K,MAAAA,CAAU8K,GAAO;YAAW;YACzCC,UA7rBJ,SAAmCC,CAAAA,EAAOd,CAAAA,EAAQzM,CAAAA;gBAkBhDuN,EAAMrL,SAAAA,CAAUuK,EAAAA,GAAU,SAAUY,CAAAA,EAASxM,CAAAA;oBAC3C,IAAI4M;oBAEJ,IAAkB,YAAd5K,IAAAA,CAAK7C,IAAAA,IAA6B,YAATA,KAAoBA,MAAS6C,IAAAA,CAAK7C,IAAAA,EAC7D,MAAM,IAAIkL,EACCuB,SAAAA,MAAAA,CAAAA,GAAkD,6CAAAlK,MAAAA,CAAAM,IAAAA,CAAK7C,IAAAA,EACjE;oBAEH,IAAIR,UAAUG,MAAAA,GAAS,GAAG;wBACxB,IAAIkD,IAAAA,CAAKuL,KAAAA,EACP,MAAM,IAAIlD,EACCuB,SAAAA,MAAAA,CAAAA,GACV;wBAEH,IAAM1M,IAAS,KAAKsN,GACd9N,IAAS,KAAKsB;wBAMpB,IAJAA,IAAOrB,SAAAA,CAAU,EAAA,EAAA,CAEjBiO,CAAAA,IAAO5N,EAAgBgD,IAAAA,EAAM9C,GAAQR,GAAQS,EAAAA,GAG3C,MAAM,IAAI+K,EACC0B,SAAAA,MAAAA,CAAAA,GAAuD1M,kDAAAA,MAAAA,CAAAA,GAAcR,SAAAA,MAAAA,CAAAA,GAC/E;oBACL,OAAO;wBACL,IAAa,YAATS,GACF,MAAM,IAAIkL,EACCuB,SAAAA,MAAAA,CAAAA,GACV;wBAKH,IAHAY,IAAU,KAAKA,GAAAA,CACfI,CAAAA,IAAO5K,IAAAA,CAAKsK,MAAAA,CAAOhN,GAAAA,CAAIkN,EAAAA,GAGrB,MAAM,IAAItC,EACC0B,SAAAA,MAAAA,CAAAA,GAA+BY,0BAAAA,MAAAA,CAAAA,GACzC;oBACL;oBAEA,OAAOI,EAAKlM,UAAAA,CAAWV,EAAAA;gBAAAA;YAE3B;QAAA;QAmoBE;YACEA,MAAM,SAAAwM,CAAAA;gBAAO,OAAA,MAAA9K,MAAAA,CAAU8K,GAAO;YAAY;YAC1CC,UA5nBJ,SAAoCC,CAAAA,EAAOd,CAAAA,EAAQzM,CAAAA;gBAgBjDuN,EAAMrL,SAAAA,CAAUuK,EAAAA,GAAU,SAAUY,CAAAA;oBAClC,IAAII;oBAEJ,IAAkB,YAAd5K,IAAAA,CAAK7C,IAAAA,IAA6B,YAATA,KAAoBA,MAAS6C,IAAAA,CAAK7C,IAAAA,EAC7D,MAAM,IAAIkL,EACCuB,SAAAA,MAAAA,CAAAA,GAAkD,6CAAAlK,MAAAA,CAAAM,IAAAA,CAAK7C,IAAAA,EACjE;oBAEH,IAAIR,UAAUG,MAAAA,GAAS,GAAG;wBACxB,IAAIkD,IAAAA,CAAKuL,KAAAA,EACP,MAAM,IAAIlD,EACCuB,SAAAA,MAAAA,CAAAA,GACV;wBAEH,IAAM1M,IAAS,KAAKsN,GAClB9N,IAAS,KAAKC,SAAAA,CAAU,EAAA;wBAI1B,IAAA,CAFAiO,CAAAA,IAAO5N,EAAgBgD,IAAAA,EAAM9C,GAAQR,GAAQS,EAAAA,GAG3C,MAAM,IAAI+K,EACC0B,SAAAA,MAAAA,CAAAA,GAAuD1M,kDAAAA,MAAAA,CAAAA,GAAcR,SAAAA,MAAAA,CAAAA,GAC/E;oBACL,OAAO;wBACL,IAAa,YAATS,GACF,MAAM,IAAIkL,EACCuB,SAAAA,MAAAA,CAAAA,GACV;wBAKH,IAHAY,IAAU,KAAKA,GAAAA,CACfI,CAAAA,IAAO5K,IAAAA,CAAKsK,MAAAA,CAAOhN,GAAAA,CAAIkN,EAAAA,GAGrB,MAAM,IAAItC,EACC0B,SAAAA,MAAAA,CAAAA,GAA+BY,0BAAAA,MAAAA,CAAAA,GACzC;oBACL;oBAEA,OAAOI,EAAKlM,UAAAA;gBAAAA;YAEhB;QAAA;QAskBE;YACEV,MAAM,SAAAwM,CAAAA;gBAAO,OAAA,MAAA9K,MAAAA,CAAU8K,GAAO;YAAW;YACzCC,UA/jBJ,SAAoCC,CAAAA,EAAOd,CAAAA,EAAQzM,CAAAA;gBAkBjDuN,EAAMrL,SAAAA,CAAUuK,EAAAA,GAAU,SAAUY,CAAAA,EAASxM,CAAAA;oBAC3C,IAAI4M;oBAEJ,IAAkB,YAAd5K,IAAAA,CAAK7C,IAAAA,IAA6B,YAATA,KAAoBA,MAAS6C,IAAAA,CAAK7C,IAAAA,EAC7D,MAAM,IAAIkL,EACCuB,SAAAA,MAAAA,CAAAA,GAAkD,6CAAAlK,MAAAA,CAAAM,IAAAA,CAAK7C,IAAAA,EACjE;oBAEH,IAAIR,UAAUG,MAAAA,GAAS,GAAG;wBACxB,IAAIkD,IAAAA,CAAKuL,KAAAA,EACP,MAAM,IAAIlD,EACCuB,SAAAA,MAAAA,CAAAA,GACV;wBAEH,IAAM1M,IAAS,KAAKsN,GACd9N,IAAS,KAAKsB;wBAMpB,IAJAA,IAAOrB,SAAAA,CAAU,EAAA,EAAA,CAEjBiO,CAAAA,IAAO5N,EAAgBgD,IAAAA,EAAM9C,GAAQR,GAAQS,EAAAA,GAG3C,MAAM,IAAI+K,EACC0B,SAAAA,MAAAA,CAAAA,GAAuD1M,kDAAAA,MAAAA,CAAAA,GAAcR,SAAAA,MAAAA,CAAAA,GAC/E;oBACL,OAAO;wBACL,IAAa,YAATS,GACF,MAAM,IAAIkL,EACCuB,SAAAA,MAAAA,CAAAA,GACV;wBAKH,IAHAY,IAAU,KAAKA,GAAAA,CACfI,CAAAA,IAAO5K,IAAAA,CAAKsK,MAAAA,CAAOhN,GAAAA,CAAIkN,EAAAA,GAGrB,MAAM,IAAItC,EACC0B,SAAAA,MAAAA,CAAAA,GAA+BY,0BAAAA,MAAAA,CAAAA,GACzC;oBACL;oBAEA,OAAOI,EAAKlM,UAAAA,CAAWoM,cAAAA,CAAe9M;gBAAAA;YAE1C;QAAA;QAqgBE;YACEA,MAAM,SAAAwM,CAAAA;gBAAO,OAAA,MAAA9K,MAAAA,CAAU8K,GAAO;YAAW;YACzCC,UA9fJ,SAAmCC,CAAAA,EAAOd,CAAAA,EAAQzM,CAAAA;gBAoBhDuN,EAAMrL,SAAAA,CAAUuK,EAAAA,GAAU,SAAUY,CAAAA,EAASxM,CAAAA,EAAML,CAAAA;oBACjD,IAAIiN;oBAEJ,IAAkB,YAAd5K,IAAAA,CAAK7C,IAAAA,IAA6B,YAATA,KAAoBA,MAAS6C,IAAAA,CAAK7C,IAAAA,EAC7D,MAAM,IAAIkL,EACCuB,SAAAA,MAAAA,CAAAA,GAAkD,6CAAAlK,MAAAA,CAAAM,IAAAA,CAAK7C,IAAAA,EACjE;oBAEH,IAAIR,UAAUG,MAAAA,GAAS,GAAG;wBACxB,IAAIkD,IAAAA,CAAKuL,KAAAA,EACP,MAAM,IAAIlD,EACCuB,SAAAA,MAAAA,CAAAA,GACV;wBAEH,IAAM1M,IAAS,KAAKsN,GACd9N,IAAS,KAAKsB;wBAOpB,IALAA,IAAOrB,SAAAA,CAAU,EAAA,EACjBgB,IAAQhB,SAAAA,CAAU,EAAA,EAAA,CAElBiO,CAAAA,IAAO5N,EAAgBgD,IAAAA,EAAM9C,GAAQR,GAAQS,EAAAA,GAG3C,MAAM,IAAI+K,EACC0B,SAAAA,MAAAA,CAAAA,GAAuD1M,kDAAAA,MAAAA,CAAAA,GAAcR,SAAAA,MAAAA,CAAAA,GAC/E;oBACL,OAAO;wBACL,IAAa,YAATS,GACF,MAAM,IAAIkL,EACCuB,SAAAA,MAAAA,CAAAA,GACV;wBAKH,IAHAY,IAAU,KAAKA,GAAAA,CACfI,CAAAA,IAAO5K,IAAAA,CAAKsK,MAAAA,CAAOhN,GAAAA,CAAIkN,EAAAA,GAGrB,MAAM,IAAItC,EACC0B,SAAAA,MAAAA,CAAAA,GAA+BY,0BAAAA,MAAAA,CAAAA,GACzC;oBACL;oBAYA,OAVAI,EAAKlM,UAAAA,CAAWV,EAAAA,GAAQL,GAGxBqC,IAAAA,CAAKoC,IAAAA,CAAK,yBAAyB;wBACjCyD,KAAK+E,EAAK/E,GAAAA;wBACV1I,MAAM;wBACNuB,YAAYkM,EAAKlM,UAAAA;wBACjBV,MAAAA;oBAAAA,IAGKgC,IAAAA;gBAAAA;YAEX;QAAA;QAubE;YACEhC,MAAM,SAAAwM,CAAAA;gBAAO,OAAA,SAAA9K,MAAAA,CAAa8K,GAAO;YAAW;YAC5CC,UAhbJ,SAAoCC,CAAAA,EAAOd,CAAAA,EAAQzM,CAAAA;gBAqBjDuN,EAAMrL,SAAAA,CAAUuK,EAAAA,GAAU,SAAUY,CAAAA,EAASxM,CAAAA,EAAMiN,CAAAA;oBACjD,IAAIL;oBAEJ,IAAkB,YAAd5K,IAAAA,CAAK7C,IAAAA,IAA6B,YAATA,KAAoBA,MAAS6C,IAAAA,CAAK7C,IAAAA,EAC7D,MAAM,IAAIkL,EACCuB,SAAAA,MAAAA,CAAAA,GAAkD,6CAAAlK,MAAAA,CAAAM,IAAAA,CAAK7C,IAAAA,EACjE;oBAEH,IAAIR,UAAUG,MAAAA,GAAS,GAAG;wBACxB,IAAIkD,IAAAA,CAAKuL,KAAAA,EACP,MAAM,IAAIlD,EACCuB,SAAAA,MAAAA,CAAAA,GACV;wBAEH,IAAM1M,IAAS,KAAKsN,GACd9N,IAAS,KAAKsB;wBAOpB,IALAA,IAAOrB,SAAAA,CAAU,EAAA,EACjBsO,IAAUtO,SAAAA,CAAU,EAAA,EAAA,CAEpBiO,CAAAA,IAAO5N,EAAgBgD,IAAAA,EAAM9C,GAAQR,GAAQS,EAAAA,GAG3C,MAAM,IAAI+K,EACC0B,SAAAA,MAAAA,CAAAA,GAAuD1M,kDAAAA,MAAAA,CAAAA,GAAcR,SAAAA,MAAAA,CAAAA,GAC/E;oBACL,OAAO;wBACL,IAAa,YAATS,GACF,MAAM,IAAIkL,EACCuB,SAAAA,MAAAA,CAAAA,GACV;wBAKH,IAHAY,IAAU,KAAKA,GAAAA,CACfI,CAAAA,IAAO5K,IAAAA,CAAKsK,MAAAA,CAAOhN,GAAAA,CAAIkN,EAAAA,GAGrB,MAAM,IAAItC,EACC0B,SAAAA,MAAAA,CAAAA,GAA+BY,0BAAAA,MAAAA,CAAAA,GACzC;oBACL;oBAEA,IAAuB,cAAA,OAAZS,GACT,MAAM,IAAIpD,EACC+B,SAAAA,MAAAA,CAAAA,GACV;oBAYH,OAVAgB,EAAKlM,UAAAA,CAAWV,EAAAA,GAAQiN,EAAQL,EAAKlM,UAAAA,CAAWV,EAAAA,GAGhDgC,IAAAA,CAAKoC,IAAAA,CAAK,yBAAyB;wBACjCyD,KAAK+E,EAAK/E,GAAAA;wBACV1I,MAAM;wBACNuB,YAAYkM,EAAKlM,UAAAA;wBACjBV,MAAAA;oBAAAA,IAGKgC,IAAAA;gBAAAA;YAEX;QAAA;QAmWE;YACEhC,MAAM,SAAAwM,CAAAA;gBAAO,OAAA,SAAA9K,MAAAA,CAAa8K,GAAO;YAAW;YAC5CC,UA5VJ,SAAoCC,CAAAA,EAAOd,CAAAA,EAAQzM,CAAAA;gBAkBjDuN,EAAMrL,SAAAA,CAAUuK,EAAAA,GAAU,SAAUY,CAAAA,EAASxM,CAAAA;oBAC3C,IAAI4M;oBAEJ,IAAkB,YAAd5K,IAAAA,CAAK7C,IAAAA,IAA6B,YAATA,KAAoBA,MAAS6C,IAAAA,CAAK7C,IAAAA,EAC7D,MAAM,IAAIkL,EACCuB,SAAAA,MAAAA,CAAAA,GAAkD,6CAAAlK,MAAAA,CAAAM,IAAAA,CAAK7C,IAAAA,EACjE;oBAEH,IAAIR,UAAUG,MAAAA,GAAS,GAAG;wBACxB,IAAIkD,IAAAA,CAAKuL,KAAAA,EACP,MAAM,IAAIlD,EACCuB,SAAAA,MAAAA,CAAAA,GACV;wBAEH,IAAM1M,IAAS,KAAKsN,GACd9N,IAAS,KAAKsB;wBAMpB,IAJAA,IAAOrB,SAAAA,CAAU,EAAA,EAAA,CAEjBiO,CAAAA,IAAO5N,EAAgBgD,IAAAA,EAAM9C,GAAQR,GAAQS,EAAAA,GAG3C,MAAM,IAAI+K,EACC0B,SAAAA,MAAAA,CAAAA,GAAuD1M,kDAAAA,MAAAA,CAAAA,GAAcR,SAAAA,MAAAA,CAAAA,GAC/E;oBACL,OAAO;wBACL,IAAa,YAATS,GACF,MAAM,IAAIkL,EACCuB,SAAAA,MAAAA,CAAAA,GACV;wBAKH,IAHAY,IAAU,KAAKA,GAAAA,CACfI,CAAAA,IAAO5K,IAAAA,CAAKsK,MAAAA,CAAOhN,GAAAA,CAAIkN,EAAAA,GAGrB,MAAM,IAAItC,EACC0B,SAAAA,MAAAA,CAAAA,GAA+BY,0BAAAA,MAAAA,CAAAA,GACzC;oBACL;oBAYA,OAAA,OAVOI,EAAKlM,UAAAA,CAAWV,EAAAA,EAGvBgC,IAAAA,CAAKoC,IAAAA,CAAK,yBAAyB;wBACjCyD,KAAK+E,EAAK/E,GAAAA;wBACV1I,MAAM;wBACNuB,YAAYkM,EAAKlM,UAAAA;wBACjBV,MAAAA;oBAAAA,IAGKgC,IAAAA;gBAAAA;YAEX;QAAA;QAwRE;YACEhC,MAAM,SAAAwM,CAAAA;gBAAO,OAAA,UAAA9K,MAAAA,CAAc8K,GAAO;YAAY;YAC9CC,UAjRJ,SAAsCC,CAAAA,EAAOd,CAAAA,EAAQzM,CAAAA;gBAkBnDuN,EAAMrL,SAAAA,CAAUuK,EAAAA,GAAU,SAAUY,CAAAA,EAAS9L,CAAAA;oBAC3C,IAAIkM;oBAEJ,IAAkB,YAAd5K,IAAAA,CAAK7C,IAAAA,IAA6B,YAATA,KAAoBA,MAAS6C,IAAAA,CAAK7C,IAAAA,EAC7D,MAAM,IAAIkL,EACCuB,SAAAA,MAAAA,CAAAA,GAAkD,6CAAAlK,MAAAA,CAAAM,IAAAA,CAAK7C,IAAAA,EACjE;oBAEH,IAAIR,UAAUG,MAAAA,GAAS,GAAG;wBACxB,IAAIkD,IAAAA,CAAKuL,KAAAA,EACP,MAAM,IAAIlD,EACCuB,SAAAA,MAAAA,CAAAA,GACV;wBAEH,IAAM1M,IAAS,KAAKsN,GAClB9N,IAAS,KAAKgC;wBAMhB,IAJAA,IAAa/B,SAAAA,CAAU,EAAA,EAAA,CAEvBiO,CAAAA,IAAO5N,EAAgBgD,IAAAA,EAAM9C,GAAQR,GAAQS,EAAAA,GAG3C,MAAM,IAAI+K,EACC0B,SAAAA,MAAAA,CAAAA,GAAuD1M,kDAAAA,MAAAA,CAAAA,GAAcR,SAAAA,MAAAA,CAAAA,GAC/E;oBACL,OAAO;wBACL,IAAa,YAATS,GACF,MAAM,IAAIkL,EACCuB,SAAAA,MAAAA,CAAAA,GACV;wBAKH,IAHAY,IAAU,KAAKA,GAAAA,CACfI,CAAAA,IAAO5K,IAAAA,CAAKsK,MAAAA,CAAOhN,GAAAA,CAAIkN,EAAAA,GAGrB,MAAM,IAAItC,EACC0B,SAAAA,MAAAA,CAAAA,GAA+BY,0BAAAA,MAAAA,CAAAA,GACzC;oBACL;oBAEA,IAAA,CAAK9M,EAAcgB,IACjB,MAAM,IAAImJ,EACC+B,SAAAA,MAAAA,CAAAA,GACV;oBAWH,OATAgB,EAAKlM,UAAAA,GAAaA,GAGlBsB,IAAAA,CAAKoC,IAAAA,CAAK,yBAAyB;wBACjCyD,KAAK+E,EAAK/E,GAAAA;wBACV1I,MAAM;wBACNuB,YAAYkM,EAAKlM,UAAAA;oBAAAA,IAGZsB,IAAAA;gBAAAA;YAEX;QAAA;QAyME;YACEhC,MAAM,SAAAwM,CAAAA;gBAAO,OAAA,QAAA9K,MAAAA,CAAY8K,GAAO;YAAY;YAC5CC,UAlMJ,SAAoCC,CAAAA,EAAOd,CAAAA,EAAQzM,CAAAA;gBAkBjDuN,EAAMrL,SAAAA,CAAUuK,EAAAA,GAAU,SAAUY,CAAAA,EAAS9L,CAAAA;oBAC3C,IAAIkM;oBAEJ,IAAkB,YAAd5K,IAAAA,CAAK7C,IAAAA,IAA6B,YAATA,KAAoBA,MAAS6C,IAAAA,CAAK7C,IAAAA,EAC7D,MAAM,IAAIkL,EACCuB,SAAAA,MAAAA,CAAAA,GAAkD,6CAAAlK,MAAAA,CAAAM,IAAAA,CAAK7C,IAAAA,EACjE;oBAEH,IAAIR,UAAUG,MAAAA,GAAS,GAAG;wBACxB,IAAIkD,IAAAA,CAAKuL,KAAAA,EACP,MAAM,IAAIlD,EACCuB,SAAAA,MAAAA,CAAAA,GACV;wBAEH,IAAM1M,IAAS,KAAKsN,GAClB9N,IAAS,KAAKgC;wBAMhB,IAJAA,IAAa/B,SAAAA,CAAU,EAAA,EAAA,CAEvBiO,CAAAA,IAAO5N,EAAgBgD,IAAAA,EAAM9C,GAAQR,GAAQS,EAAAA,GAG3C,MAAM,IAAI+K,EACC0B,SAAAA,MAAAA,CAAAA,GAAuD1M,kDAAAA,MAAAA,CAAAA,GAAcR,SAAAA,MAAAA,CAAAA,GAC/E;oBACL,OAAO;wBACL,IAAa,YAATS,GACF,MAAM,IAAIkL,EACCuB,SAAAA,MAAAA,CAAAA,GACV;wBAKH,IAHAY,IAAU,KAAKA,GAAAA,CACfI,CAAAA,IAAO5K,IAAAA,CAAKsK,MAAAA,CAAOhN,GAAAA,CAAIkN,EAAAA,GAGrB,MAAM,IAAItC,EACC0B,SAAAA,MAAAA,CAAAA,GAA+BY,0BAAAA,MAAAA,CAAAA,GACzC;oBACL;oBAEA,IAAA,CAAK9M,EAAcgB,IACjB,MAAM,IAAImJ,EACC+B,SAAAA,MAAAA,CAAAA,GACV;oBAYH,OAVAnN,EAAOmO,EAAKlM,UAAAA,EAAYA,IAGxBsB,IAAAA,CAAKoC,IAAAA,CAAK,yBAAyB;wBACjCyD,KAAK+E,EAAK/E,GAAAA;wBACV1I,MAAM;wBACNuB,YAAYkM,EAAKlM,UAAAA;wBACjBkM,MAAMlM;oBAAAA,IAGDsB,IAAAA;gBAAAA;YAEX;QAAA;QAyHE;YACEhC,MAAM,SAAAwM,CAAAA;gBAAO,OAAA,SAAA9K,MAAAA,CAAa8K,GAAO;YAAY;YAC7CC,UAlHJ,SAAqCC,CAAAA,EAAOd,CAAAA,EAAQzM,CAAAA;gBAkBlDuN,EAAMrL,SAAAA,CAAUuK,EAAAA,GAAU,SAAUY,CAAAA,EAASS,CAAAA;oBAC3C,IAAIL;oBAEJ,IAAkB,YAAd5K,IAAAA,CAAK7C,IAAAA,IAA6B,YAATA,KAAoBA,MAAS6C,IAAAA,CAAK7C,IAAAA,EAC7D,MAAM,IAAIkL,EACCuB,SAAAA,MAAAA,CAAAA,GAAkD,6CAAAlK,MAAAA,CAAAM,IAAAA,CAAK7C,IAAAA,EACjE;oBAEH,IAAIR,UAAUG,MAAAA,GAAS,GAAG;wBACxB,IAAIkD,IAAAA,CAAKuL,KAAAA,EACP,MAAM,IAAIlD,EACCuB,SAAAA,MAAAA,CAAAA,GACV;wBAEH,IAAM1M,IAAS,KAAKsN,GAClB9N,IAAS,KAAKuO;wBAMhB,IAJAA,IAAUtO,SAAAA,CAAU,EAAA,EAAA,CAEpBiO,CAAAA,IAAO5N,EAAgBgD,IAAAA,EAAM9C,GAAQR,GAAQS,EAAAA,GAG3C,MAAM,IAAI+K,EACC0B,SAAAA,MAAAA,CAAAA,GAAuD1M,kDAAAA,MAAAA,CAAAA,GAAcR,SAAAA,MAAAA,CAAAA,GAC/E;oBACL,OAAO;wBACL,IAAa,YAATS,GACF,MAAM,IAAIkL,EACCuB,SAAAA,MAAAA,CAAAA,GACV;wBAKH,IAHAY,IAAU,KAAKA,GAAAA,CACfI,CAAAA,IAAO5K,IAAAA,CAAKsK,MAAAA,CAAOhN,GAAAA,CAAIkN,EAAAA,GAGrB,MAAM,IAAItC,EACC0B,SAAAA,MAAAA,CAAAA,GAA+BY,0BAAAA,MAAAA,CAAAA,GACzC;oBACL;oBAEA,IAAuB,cAAA,OAAZS,GACT,MAAM,IAAIpD,EACC+B,SAAAA,MAAAA,CAAAA,GACV;oBAWH,OATAgB,EAAKlM,UAAAA,GAAauM,EAAQL,EAAKlM,UAAAA,GAG/BsB,IAAAA,CAAKoC,IAAAA,CAAK,yBAAyB;wBACjCyD,KAAK+E,EAAK/E,GAAAA;wBACV1I,MAAM;wBACNuB,YAAYkM,EAAKlM,UAAAA;oBAAAA,IAGZsB,IAAAA;gBAAAA;YAEX;QAAA;KAAA;IClsBA,IAAImE,IAAW2C,GACXE,IAAOD,GAQXyE,KAAiB;QACf,IAAIC,IAAY9O,WACZ+O,IAAU,MACV9O,IAAAA;QAGJ,OAAO,IAAIuH,EAAS;YAGlB,IAFA,IAAIkD,IAAO,OAER;gBACD,IAAgB,SAAZqE,GAAkB;oBAGpB,IAAA,EAFA9O,KAES6O,EAAU3O,MAAAA,EAAQ,OAAO;wBAACuJ,MAAAA,CAAM;oBAAA;oBAEzCqF,IAAU1E,EAAKyE,CAAAA,CAAU7O,EAAAA;gBAC1B;gBAID,IAAA,CAAkB,MAAA,AAFlByK,CAAAA,IAAOqE,EAAQtH,IAAAA,EAAAA,EAENiC,IAAAA,EAKT;gBAJEqF,IAAU;YAKb;YAED,OAAOrE;QACX;IACA,GC7BMsE,KAAkB;QACtB;YACE3N,MAAM;YACNb,MAAM;QAAA;QAER;YACEa,MAAM;YACNb,MAAM;YACNyO,WAAW;QAAA;QAEb;YACE5N,MAAM;YACNb,MAAM;YACNyO,WAAW;QAAA;QAEb;YACE5N,MAAM;YACNb,MAAM;YACNyO,WAAW;QAAA;QAEb;YACE5N,MAAM;YACNb,MAAM;YACNyO,WAAW;QAAA;QAEb;YACE5N,MAAM;YACNb,MAAM;QAAA;QAER;YACEa,MAAM;YACNb,MAAM;QAAA;KAAA;IAUV,SAAS0O,GAAcC,CAAAA,EAAWC,CAAAA,EAAQC,CAAAA,EAAUC,CAAAA;QAClD,IAAIC,IAAAA,CAAc;QAElB,IAAK,IAAMnP,KAAKgP,EACd,IAAIhP,MAAMkP,GAAV;YAEA,IAAM9B,IAAW4B,CAAAA,CAAOhP,EAAAA;YAYxB,IAVAmP,IAAcF,EACZ7B,EAAStE,GAAAA,EACTsE,EAASzL,UAAAA,EACTyL,EAASjN,MAAAA,CAAO2I,GAAAA,EAChBsE,EAASzN,MAAAA,CAAOmJ,GAAAA,EAChBsE,EAASjN,MAAAA,CAAOwB,UAAAA,EAChByL,EAASzN,MAAAA,CAAOgC,UAAAA,EAChByL,EAAS1M,UAAAA,GAGPqO,KAAaI,GAAa,OAAO/B,EAAStE,GAd7B;QAAA;IAkBrB;IAEA,SAASsG,GAAaL,CAAAA,EAAWC,CAAAA,EAAQC,CAAAA,EAAUC,CAAAA;QACjD,IAAI9B,GAAUjN,GAAQR,GAElBwP,IAAAA,CAAc;QAElB,IAAK,IAAMnP,KAAKgP,EACd,IAAIhP,MAAMkP,GAAV;YAEA9B,IAAW4B,CAAAA,CAAOhP,EAAAA;YAElB,GAAG;gBAcD,IAbAG,IAASiN,EAASjN,MAAAA,EAClBR,IAASyN,EAASzN,MAAAA,EAElBwP,IAAcF,EACZ7B,EAAStE,GAAAA,EACTsE,EAASzL,UAAAA,EACTxB,EAAO2I,GAAAA,EACPnJ,EAAOmJ,GAAAA,EACP3I,EAAOwB,UAAAA,EACPhC,EAAOgC,UAAAA,EACPyL,EAAS1M,UAAAA,GAGPqO,KAAaI,GAAa,OAAO/B,EAAStE,GAAAA;gBAE9CsE,IAAWA,EAAS/F,IAAAA;YAAAA,QAAAA,KACAhD,MAAb+I,GArBQ;QAAA;IAyBrB;IAQA,SAASiC,GAAeL,CAAAA,EAAQE,CAAAA;QAC9B,IAGI9B,GAHErE,IAAO7H,OAAO6H,IAAAA,CAAKiG,IACnBlP,IAAIiJ,EAAKhJ,MAAAA,EAGXF,IAAI;QAER,OAAO,IAAIuH,EAAS;YAClB,GACE,IAAKgG,GAYHA,IAAWA,EAAS/F,IAAAA;iBAZP;gBACb,IAAIxH,KAAKC,GAAG,OAAO;oBAACwJ,MAAAA,CAAM;gBAAA;gBAE1B,IAAMtJ,IAAI+I,CAAAA,CAAKlJ,IAAAA;gBAEf,IAAIG,MAAMkP,GAAO;oBACf9B,IAAAA,KAAW/I;oBACX;gBACF;gBAEA+I,IAAW4B,CAAAA,CAAOhP,EACpB;YAAA;mBAAA,CAGQoN,GAEV;YAAA,OAAO;gBACL9D,MAAAA,CAAM;gBACN1I,OAAO;oBACLJ,MAAM4M,EAAStE,GAAAA;oBACfnH,YAAYyL,EAASzL,UAAAA;oBACrBxB,QAAQiN,EAASjN,MAAAA,CAAO2I,GAAAA;oBACxBnJ,QAAQyN,EAASzN,MAAAA,CAAOmJ,GAAAA;oBACxBwG,kBAAkBlC,EAASjN,MAAAA,CAAOwB,UAAAA;oBAClC4N,kBAAkBnC,EAASzN,MAAAA,CAAOgC,UAAAA;oBAClCjB,YAAY0M,EAAS1M,UAAAA;gBAAAA;YAAAA;QAG3B;IACF;IAUA,SAAS8O,GAAoBT,CAAAA,EAAWC,CAAAA,EAAQhP,CAAAA,EAAGiP,CAAAA;QACjD,IAAM7B,IAAW4B,CAAAA,CAAOhP,EAAAA;QAExB,IAAKoN,GAAL;YAEA,IAAM/M,IAAa+M,EAASjN,MAAAA,EACtBsP,IAAarC,EAASzN,MAAAA;YAE5B,OACEsP,EACE7B,EAAStE,GAAAA,EACTsE,EAASzL,UAAAA,EACTtB,EAAWyI,GAAAA,EACX2G,EAAW3G,GAAAA,EACXzI,EAAWsB,UAAAA,EACX8N,EAAW9N,UAAAA,EACXyL,EAAS1M,UAAAA,KAEXqO,IAEO3B,EAAStE,GAAAA,GAAAA,KAZlB;QALe;IAkBjB;IAEA,SAAS4G,GAAmBX,CAAAA,EAAWC,CAAAA,EAAQhP,CAAAA,EAAGiP,CAAAA;QAChD,IAAI7B,IAAW4B,CAAAA,CAAOhP,EAAAA;QAEtB,IAAKoN,GAAL;YAEA,IAAI+B,IAAAA,CAAc;YAElB,GAAG;gBAWD,IAVAA,IAAcF,EACZ7B,EAAStE,GAAAA,EACTsE,EAASzL,UAAAA,EACTyL,EAASjN,MAAAA,CAAO2I,GAAAA,EAChBsE,EAASzN,MAAAA,CAAOmJ,GAAAA,EAChBsE,EAASjN,MAAAA,CAAOwB,UAAAA,EAChByL,EAASzN,MAAAA,CAAOgC,UAAAA,EAChByL,EAAS1M,UAAAA,GAGPqO,KAAaI,GAAa,OAAO/B,EAAStE,GAAAA;gBAE9CsE,IAAWA,EAAS/F,IAAAA;YAAAA,QAAAA,KACAhD,MAAb+I,GAlBM;QAAA;IAqBjB;IASA,SAASuC,GAAqBX,CAAAA,EAAQhP,CAAAA;QACpC,IAAIoN,IAAW4B,CAAAA,CAAOhP,EAAAA;QAEtB,OAAA,KAAsBqE,MAAlB+I,EAAS/F,IAAAA,GACJ,IAAID,EAAS;YAClB,IAAA,CAAKgG,GAAU,OAAO;gBAAC9D,MAAAA,CAAM;YAAA;YAE7B,IAAM1I,IAAQ;gBACZJ,MAAM4M,EAAStE,GAAAA;gBACfnH,YAAYyL,EAASzL,UAAAA;gBACrBxB,QAAQiN,EAASjN,MAAAA,CAAO2I,GAAAA;gBACxBnJ,QAAQyN,EAASzN,MAAAA,CAAOmJ,GAAAA;gBACxBwG,kBAAkBlC,EAASjN,MAAAA,CAAOwB,UAAAA;gBAClC4N,kBAAkBnC,EAASzN,MAAAA,CAAOgC,UAAAA;gBAClCjB,YAAY0M,EAAS1M,UAAAA;YAAAA;YAKvB,OAFA0M,IAAWA,EAAS/F,IAAAA,EAEb;gBACLiC,MAAAA,CAAM;gBACN1I,OAAAA;YAAAA;QAEJ,KAGKwG,EAASiC,EAAAA,CAAG;YACjB7I,MAAM4M,EAAStE,GAAAA;YACfnH,YAAYyL,EAASzL,UAAAA;YACrBxB,QAAQiN,EAASjN,MAAAA,CAAO2I,GAAAA;YACxBnJ,QAAQyN,EAASzN,MAAAA,CAAOmJ,GAAAA;YACxBwG,kBAAkBlC,EAASjN,MAAAA,CAAOwB,UAAAA;YAClC4N,kBAAkBnC,EAASzN,MAAAA,CAAOgC,UAAAA;YAClCjB,YAAY0M,EAAS1M,UAAAA;QAAAA;IAEzB;IASA,SAASkP,GAAgB1P,CAAAA,EAAOE,CAAAA;QAC9B,IAAmB,MAAfF,EAAM2P,IAAAA,EAAY,OAAO,EAAA;QAE7B,IAAa,YAATzP,KAAoBA,MAASF,EAAME,IAAAA,EACrC,OAA0B,cAAA,OAAfwB,MAAMkO,IAAAA,GACRlO,MAAMkO,IAAAA,CAAK5P,EAAMqN,MAAAA,CAAOxE,IAAAA,MAE1BqB,EAAKlK,EAAMqN,MAAAA,CAAOxE,IAAAA,IAAQ7I,EAAMqN,MAAAA,CAAOsC,IAAAA;QAchD,IAXA,IASIvF,GAAMuD,GATJgC,IACK,iBAATzP,IAAwBF,EAAM6P,cAAAA,GAAiB7P,EAAM8P,YAAAA,EAEjD3H,IAAO,IAAIzG,MAAMiO,IACrBI,IAAgB,iBAAT7P,GAEH+I,IAAWjJ,EAAMqN,MAAAA,CAAO2C,MAAAA,IAE1BrQ,IAAI,GAAA,CAGwC,MAAA,AAAvCyK,CAAAA,IAAOnB,EAAS9B,IAAAA,EAAAA,EAAciC,IAAAA,EAAAA,AACrCuE,CAAAA,IAAOvD,EAAK1J,KAAAA,AAAAA,EAEHF,UAAAA,KAAeuP,KAAM5H,CAAAA,CAAAA,CAAKxI,IAAAA,GAAOgO,EAAK/E,GAAAA,AAAAA;QAGjD,OAAOT;IACT;IAUA,SAAS8H,GAAYpB,CAAAA,EAAW7O,CAAAA,EAAOE,CAAAA,EAAM6O,CAAAA;QAC3C,IAAmB,MAAf/O,EAAM2P,IAAAA,EASV;YAAA,IAPA,IAGIvF,GAAMuD,GAHJuC,IAAwB,YAAThQ,KAAoBA,MAASF,EAAME,IAAAA,EAClD6P,IAAgB,iBAAT7P,GAGT+O,IAAAA,CAAc,GACZhG,IAAWjJ,EAAMqN,MAAAA,CAAO2C,MAAAA,IAAAA,CAEkB,MAAA,AAAvC5F,CAAAA,IAAOnB,EAAS9B,IAAAA,EAAAA,EAAciC,IAAAA,EAGrC,IAFAuE,IAAOvD,EAAK1J,KAAAA,EAAAA,CAERwP,KAAgBvC,EAAKnN,UAAAA,KAAeuP,GAAxC;gBAEA,IAAAI,IAA0CxC,GAAnC/E,IAAAA,EAAAA,GAAAA,EAAKnH,IAAAA,EAAAA,UAAAA,EAAYxB,IAAAA,EAAAA,MAAAA,EAAQR,IAAAA,EAAAA,MAAAA;gBAYhC,IAVAwP,IAAcF,EACZnG,GACAnH,GACAxB,EAAO2I,GAAAA,EACPnJ,EAAOmJ,GAAAA,EACP3I,EAAOwB,UAAAA,EACPhC,EAAOgC,UAAAA,EACPkM,EAAKnN,UAAAA,GAGHqO,KAAaI,GAAa,OAAOrG;YAdS;QAAA;IAkBlD;IASA,SAASwH,GAAmBpQ,CAAAA,EAAOE,CAAAA;QACjC,IAAmB,MAAfF,EAAM2P,IAAAA,EAAY,OAAOzI,EAASmC,KAAAA;QAEtC,IAAM6G,IAAwB,YAAThQ,KAAoBA,MAASF,EAAME,IAAAA,EAClD6P,IAAgB,iBAAT7P,GAEP+I,IAAWjJ,EAAMqN,MAAAA,CAAO2C,MAAAA;QAE9B,OAAO,IAAI9I,EAAS;YAIlB,IAHA,IAAIkD,GAAMuD,IAGG;gBAGX,IAAA,AAFAvD,CAAAA,IAAOnB,EAAS9B,IAAAA,EAAAA,EAEPiC,IAAAA,EAAM,OAAOgB;gBAItB,IAFAuD,IAAOvD,EAAK1J,KAAAA,EAAAA,CAERwP,KAAgBvC,EAAKnN,UAAAA,KAAeuP,GAExC;YACF;YAYA,OAAO;gBAACrP,OAVM;oBACZJ,MAAMqN,EAAK/E,GAAAA;oBACXnH,YAAYkM,EAAKlM,UAAAA;oBACjBxB,QAAQ0N,EAAK1N,MAAAA,CAAO2I,GAAAA;oBACpBnJ,QAAQkO,EAAKlO,MAAAA,CAAOmJ,GAAAA;oBACpBwG,kBAAkBzB,EAAK1N,MAAAA,CAAOwB,UAAAA;oBAC9B4N,kBAAkB1B,EAAKlO,MAAAA,CAAOgC,UAAAA;oBAC9BjB,YAAYmN,EAAKnN,UAAAA;gBAAAA;gBAGJ4I,MAAAA,CAAM;YAAA;QACvB;IACF;IAWA,SAASiH,GACPxB,CAAAA,EACAP,CAAAA,EACApO,CAAAA,EACAyO,CAAAA,EACA1B,CAAAA,EACA8B,CAAAA;QAEA,IAEIuB,GAFEC,IAAKjC,IAAQY,KAAeN;QAIlC,IAAa,iBAAT1O,GAAuB;YACzB,IAAkB,UAAdyO,KACF2B,CAAAA,IAAQC,EAAG1B,GAAW5B,EAAQ,EAAA,EAAK8B,IAE/BF,KAAayB,CAAAA,GAAO,OAAOA;YAEjC,IAAkB,SAAd3B,KACF2B,CAAAA,IAAQC,EACN1B,GACA5B,EAAS1M,GAAAA,EACTwO,GACCJ,IAAAA,KAA2BxK,IAAf8I,EAASrE,GAAAA,GAGpBiG,KAAayB,CAAAA,GAAO,OAAOA;QAEnC;QAEA,IAAa,eAATpQ,KACFoQ,CAAAA,IAAQC,EAAG1B,GAAW5B,EAASzM,UAAAA,EAAYuO,IAEvCF,KAAayB,CAAAA,GAAO,OAAOA;IAInC;IAWA,SAASE,GAAuBlC,CAAAA,EAAOpO,CAAAA,EAAMyO,CAAAA,EAAW1B,CAAAA;QACtD,IAAMwD,IAAQ,EAAA;QAMd,OAJAJ,GAAAA,CAAmB,GAAO/B,GAAOpO,GAAMyO,GAAW1B,GAAU,SAAUrE,CAAAA;YACpE6H,EAAMpL,IAAAA,CAAKuD;QACb,IAEO6H;IACT;IAUA,SAASC,GAA0BxQ,CAAAA,EAAMyO,CAAAA,EAAW1B,CAAAA;QAClD,IAAIhE,IAAW/B,EAASmC,KAAAA;QAgBxB,OAda,iBAATnJ,KACgB,CAAA,UAAdyO,KAAAA,KAA8C,MAAhB1B,EAAQ,EAAA,IACxChE,CAAAA,IAAWsF,GAAMtF,GAAUkG,GAAelC,EAAW,EAAA,EAAA,GACrC,SAAd0B,KAAAA,KAA8C,MAAjB1B,EAAS1M,GAAAA,IACxC0I,CAAAA,IAAWsF,GACTtF,GACAkG,GAAelC,EAAS1M,GAAAA,EAAMoO,IAAAA,KAA2BxK,IAAf8I,EAASrE,GAAAA,EAAAA,CAAAA,GAI5C,eAAT1I,KAAAA,KAAsD,MAAxB+M,EAASzM,UAAAA,IACzCyI,CAAAA,IAAWsF,GAAMtF,GAAUkG,GAAelC,EAASzM,UAAAA,EAAAA,GAG9CyI;IACT;IAaA,SAAS0H,GACP9B,CAAAA,EACA3O,CAAAA,EACAoO,CAAAA,EACAK,CAAAA,EACAxO,CAAAA,EACAV,CAAAA,EACAsP,CAAAA;QAEA,IAEIuB,GAFEC,IAAKjC,IAAQkB,KAAqBF;QAIxC,IAAa,iBAATpP,GAAuB;YACzB,IAAA,KAA6B,MAAlBC,EAAa,EAAA,IAAkC,UAAdwO,KAC1C2B,CAAAA,IAAQC,EAAG1B,GAAW1O,EAAU,EAAA,EAAKV,GAAQsP,IAEzCF,KAAayB,CAAAA,GAAO,OAAOA;YAGjC,IAAA,KAC4B,MAAnBnQ,EAAWI,GAAAA,IACJ,SAAdoO,KACCA,CAAAA,KAAaxO,EAAWyI,GAAAA,KAAQnJ,CAAAA,KAEjC6Q,CAAAA,IAAQC,EAAG1B,GAAW1O,EAAWI,GAAAA,EAAKd,GAAQsP,IAE1CF,KAAayB,CAAAA,GAAO,OAAOA;QAEnC;QAEA,IAAa,eAATpQ,KAAAA,KACmC,MAA1BC,EAAWK,UAAAA,IACpB8P,CAAAA,IAAQC,EAAG1B,GAAW1O,EAAWK,UAAAA,EAAYf,GAAQsP,IAEjDF,KAAayB,CAAAA,GAAO,OAAOA;IAKrC;IAYA,SAASM,GAAuB1Q,CAAAA,EAAMoO,CAAAA,EAAOK,CAAAA,EAAWxO,CAAAA,EAAYV,CAAAA;QAClE,IAAMgR,IAAQ,EAAA;QAcd,OAZAE,GAAAA,CACE,GACAzQ,GACAoO,GACAK,GACAxO,GACAV,GACA,SAAUmJ,CAAAA;YACR6H,EAAMpL,IAAAA,CAAKuD;QACb,IAGK6H;IACT;IAWA,SAASI,GAA0B3Q,CAAAA,EAAMyO,CAAAA,EAAWxO,CAAAA,EAAYV,CAAAA;QAC9D,IAAIwJ,IAAW/B,EAASmC,KAAAA;QA8BxB,OA5Ba,iBAATnJ,KAAAA,CAAAA,KAEyB,MAAlBC,EAAa,EAAA,IACN,UAAdwO,KACAlP,KAAUU,EAAU,EAAA,IAEpB8I,CAAAA,IAAWsF,GAAMtF,GAAUwG,GAAqBtP,EAAa,EAAA,EAAEV,GAAAA,GAAAA,KAGrC,MAAnBU,EAAWI,GAAAA,IACJ,SAAdoO,KACAlP,KAAUU,EAAWI,GAAAA,IACpBoO,CAAAA,KAAaxO,EAAWyI,GAAAA,KAAQnJ,CAAAA,KAEjCwJ,CAAAA,IAAWsF,GAAMtF,GAAUwG,GAAqBtP,EAAWI,GAAAA,EAAKd,GAAAA,CAAAA,GAGvD,eAATS,KAAAA,KAEiC,MAA1BC,EAAWK,UAAAA,IAClBf,KAAUU,EAAWK,UAAAA,IAErByI,CAAAA,IAAWsF,GACTtF,GACAwG,GAAqBtP,EAAWK,UAAAA,EAAYf,GAAAA,GAI3CwJ;IACT;IC1kBA,IAAM6H,KAAsB;QAC1B;YACE/P,MAAM;YACNb,MAAM;QAAA;QAER;YACEa,MAAM;YACNb,MAAM;YACNyO,WAAW;QAAA;QAEb;YACE5N,MAAM;YACNb,MAAM;YACNyO,WAAW;QAAA;QAEb;YACE5N,MAAM;YACNb,MAAM;YACNyO,WAAW;QAAA;QAEb;YACE5N,MAAM;YACNb,MAAM;YACNyO,WAAW;QAAA;QAEb;YACE5N,MAAM;YACNb,MAAM;QAAA;QAER;YACEa,MAAM;YACNb,MAAM;QAAA;KAAA;IAOV,SAAS6Q;QACPhO,IAAAA,CAAKiO,CAAAA,GAAI,MACTjO,IAAAA,CAAKkO,CAAAA,GAAI;IACX;IAsBA,SAASC,GAAoBrC,CAAAA,EAAWsC,CAAAA,EAASlE,CAAAA,EAAU6B,CAAAA,EAAQC,CAAAA;QACjE,IAAK,IAAMjP,KAAKgP,EAAQ;YACtB,IAAM5B,IAAW4B,CAAAA,CAAOhP,EAAAA,EAElBK,IAAa+M,EAASjN,MAAAA,EACtBsP,IAAarC,EAASzN,MAAAA,EAEtB2R,IAAejR,MAAe8M,IAAWsC,IAAapP;YAE5D,IAAA,CAAIgR,KAAAA,CAAWA,EAAQE,GAAAA,CAAID,EAAaxI,GAAAA,GAAxC;gBAEA,IAAMqG,IAAcF,EAASqC,EAAaxI,GAAAA,EAAKwI,EAAa3P,UAAAA;gBAE5D,IAAIoN,KAAaI,GAAa,OAAOmC,EAAaxI,GAJJ;YAAA;QAKhD;IAGF;IAEA,SAAS0I,GAAgBzC,CAAAA,EAAW3O,CAAAA,EAAMyO,CAAAA,EAAW1B,CAAAA,EAAU8B,CAAAA;QAE7D,IAAa,YAAT7O,GAAkB;YACpB,IAAa,iBAATA,GACF,OAAOgR,GACLrC,GACA,MACA5B,GACAA,EAASzM,UAAAA,EACTuO;YAGJ,IAAyB,YAAA,OAAdJ,GACT,OAAOuC,GACLrC,GACA,MACA5B,GACAA,CAAAA,CAAS0B,EAAAA,EACTI;QAEN;QAIA,IAEIuB,GAFEa,IAAU,IAAIJ;QAIpB,IAAa,iBAAT7Q,GAAuB;YACzB,IAAkB,UAAdyO,GAAqB;gBASvB,IARA2B,IAAQY,GACNrC,GACA,MACA5B,GACAA,EAAW,EAAA,EACX8B,IAGEF,KAAayB,GAAO,OAAOA;gBAE/Ba,EAAQI,IAAAA,CAAKtE,EAAAA,EAAAA;YACf;YACA,IAAkB,SAAd0B,GAAoB;gBAStB,IARA2B,IAAQY,GACNrC,GACAsC,GACAlE,GACAA,EAAS1M,GAAAA,EACTwO,IAGEF,KAAayB,GAAO,OAAOA;gBAE/Ba,EAAQI,IAAAA,CAAKtE,EAAS1M,GAAAA;YACxB;QACF;QAEA,IAAa,eAATL,KACFoQ,CAAAA,IAAQY,GACNrC,GACAsC,GACAlE,GACAA,EAASzM,UAAAA,EACTuO,IAGEF,KAAayB,CAAAA,GAAO,OAAOA;IAInC;IAmCA,SAASkB,GAA4BL,CAAAA,EAASlE,CAAAA,EAAU6B,CAAAA;QACtD,IAAMjG,IAAO7H,OAAO6H,IAAAA,CAAKiG,IACnBlP,IAAIiJ,EAAKhJ,MAAAA,EAEXF,IAAI;QAER,OAAO,IAAIuH,EAAS;YAClB,IAAIkK,IAAe;YAEnB,GAAG;gBACD,IAAIzR,KAAKC,GAEP,OADIuR,KAASA,EAAQI,IAAAA,CAAKzC,IACnB;oBAAC1F,MAAAA,CAAM;gBAAA;gBAGhB,IAAM8D,IAAW4B,CAAAA,CAAOjG,CAAAA,CAAKlJ,IAAAA,CAAAA,EAEvBQ,IAAa+M,EAASjN,MAAAA,EACtBsP,IAAarC,EAASzN,MAAAA;gBAE5B2R,IAAejR,MAAe8M,IAAWsC,IAAapP,GAElDgR,KAAWA,EAAQE,GAAAA,CAAID,EAAaxI,GAAAA,KACtCwI,CAAAA,IAAe,IAAA;YAAA,QAGO,SAAjBA,GAET;YAAA,OAAO;gBACLhI,MAAAA,CAAM;gBACN1I,OAAO;oBAAC+Q,UAAUL,EAAaxI,GAAAA;oBAAKnH,YAAY2P,EAAa3P,UAAAA;gBAAAA;YAAAA;QAEjE;IACF;IAiDA,SAASiQ,GAA2BjE,CAAAA,EAAOkE,CAAAA;QACzC,IAAO5Q,IAAyB4Q,EAAzB5Q,IAAAA,EAAMb,IAAmByR,EAAnBzR,IAAAA,EAAMyO,IAAagD,EAAbhD,SAAAA;QAUnBlB,EAAMrL,SAAAA,CAAUrB,EAAAA,GAAQ,SAAU6Q,CAAAA;YAEhC,IAAa,YAAT1R,KAAkC,YAAd6C,IAAAA,CAAK7C,IAAAA,IAAoBA,MAAS6C,IAAAA,CAAK7C,IAAAA,EAC7D,OAAO,EAAA;YAET0R,IAAO,KAAKA;YAEZ,IAAM3E,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIuR;YAEjC,IAAA,KAAwB,MAAb3E,GACT,MAAM,IAAIhC,EACClK,SAAAA,MAAAA,CAAAA,GAA6B6Q,0BAAAA,MAAAA,CAAAA,GACvC;YAGH,OArIJ,SAAoC1R,CAAAA,EAAMyO,CAAAA,EAAW1B,CAAAA;gBAEnD,IAAa,YAAT/M,GAAkB;oBACpB,IAAa,iBAATA,GAAuB,OAAOc,OAAO6H,IAAAA,CAAKoE,EAASzM,UAAAA;oBAEvD,IAAyB,YAAA,OAAdmO,GAAwB,OAAO3N,OAAO6H,IAAAA,CAAKoE,CAAAA,CAAS0B,EAAAA;gBACjE;gBAEA,IAAMkD,IAAY,EAAA;gBAMlB,OAJAP,GAAAA,CAAgB,GAAOpR,GAAMyO,GAAW1B,GAAU,SAAUrE,CAAAA;oBAC1DiJ,EAAUxM,IAAAA,CAAKuD;gBACjB,IAEOiJ;YACT,EAuHe,YAAT3R,IAAmB6C,IAAAA,CAAK7C,IAAAA,GAAOA,GAC/ByO,GACA1B;QAAAA;IAGN;IA+MA,SAAS8E,GAA8BtE,CAAAA,EAAOkE,CAAAA;QAC5C,IAAO5Q,IAAyB4Q,EAAzB5Q,IAAAA,EAAMb,IAAmByR,EAAnBzR,IAAAA,EAAMyO,IAAagD,EAAbhD,SAAAA,EAEbqD,IAAejR,EAAK6C,KAAAA,CAAM,GAAA,MAAS;QAUzC6J,EAAMrL,SAAAA,CAAU4P,EAAAA,GAAgB,SAAUJ,CAAAA;YAExC,IAAa,YAAT1R,KAAkC,YAAd6C,IAAAA,CAAK7C,IAAAA,IAAoBA,MAAS6C,IAAAA,CAAK7C,IAAAA,EAC7D,OAAOgH,EAASmC,KAAAA;YAElBuI,IAAO,KAAKA;YAEZ,IAAM3E,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIuR;YAEjC,IAAA,KAAwB,MAAb3E,GACT,MAAM,IAAIhC,EACC+G,SAAAA,MAAAA,CAAAA,GAAqCJ,0BAAAA,MAAAA,CAAAA,GAC/C;YAGH,OA1TJ,SAAgC1R,CAAAA,EAAMyO,CAAAA,EAAW1B,CAAAA;gBAE/C,IAAa,YAAT/M,GAAkB;oBACpB,IAAa,iBAATA,GACF,OAAOsR,GAA4B,MAAMvE,GAAUA,EAASzM,UAAAA;oBAE9D,IAAyB,YAAA,OAAdmO,GACT,OAAO6C,GAA4B,MAAMvE,GAAUA,CAAAA,CAAS0B,EAAAA;gBAChE;gBAEA,IAAI1F,IAAW/B,EAASmC,KAAAA,IAIlB8H,IAAU,IAAIJ;gBAwBpB,OAtBa,iBAAT7Q,KACgB,CAAA,UAAdyO,KACF1F,CAAAA,IAAWsF,GACTtF,GACAuI,GAA4BL,GAASlE,GAAUA,EAAQ,EAAA,EAAA,GAGzC,SAAd0B,KACF1F,CAAAA,IAAWsF,GACTtF,GACAuI,GAA4BL,GAASlE,GAAUA,EAAS1M,GAAAA,EAAAA,CAAAA,GAKjD,eAATL,KACF+I,CAAAA,IAAWsF,GACTtF,GACAuI,GAA4BL,GAASlE,GAAUA,EAASzM,UAAAA,EAAAA,GAIrDyI;YACT,EAoRe,YAAT/I,IAAmB6C,IAAAA,CAAK7C,IAAAA,GAAOA,GAC/ByO,GACA1B;QAAAA;IAGN;IC5hBO,SAASiF,GACdrD,CAAAA,EACAsD,CAAAA,EACAC,CAAAA,EACApS,CAAAA,EACA+O,CAAAA;QAQA,IANA,IAII3E,GAAMjK,GAAYsR,GAAUpF,GAAKa,GAAUqC,GAAYN,GAJrDhG,IAAWjJ,EAAMI,MAAAA,CAAO4P,MAAAA,IAExB9P,IAAOF,EAAME,IAAAA,EAAAA,CAI6B,MAAA,AAAvCkK,CAAAA,IAAOnB,EAAS9B,IAAAA,EAAAA,EAAciC,IAAAA,EAAgB;YACrD,IAAIiJ,IAAAA,CAAW;YAIf,IAFAlS,IAAaiK,EAAK1J,KAAAA,EAEL,iBAATR,GAGF,IAAKuR,KAFLpF,IAAMlM,EAAWI,GAAAA,CAEK;gBACpB2M,IAAWb,CAAAA,CAAIoF,EAAAA;gBAEf,GAAG;oBAcD,IAbAlC,IAAarC,EAASzN,MAAAA,EAEtB4S,IAAAA,CAAW,GACXpD,IAAcF,EACZ5O,EAAWyI,GAAAA,EACX2G,EAAW3G,GAAAA,EACXzI,EAAWsB,UAAAA,EACX8N,EAAW9N,UAAAA,EACXyL,EAAStE,GAAAA,EACTsE,EAASzL,UAAAA,EACTyL,EAAS1M,UAAAA,GAGPqO,KAAaI,GAAa,OAAO/B;oBAErCA,IAAWA,EAAS/F,IACrB;gBAAA,QAAQ+F,GACX;YAAA;YAGF,IAAa,eAAThN,GAGF;gBAAA,IAAKuR,KAFLpF,IAAMlM,EAAWK,UAAAA,CAGf,IAAA,CAAI2R,CAAAA,KAAchS,EAAWyI,GAAAA,GAAM6I,CAAAA,GAAnC;oBAEAvE,IAAWb,CAAAA,CAAIoF,EAAAA;oBAEf,GAAG;wBAgBD,IAAA,AAfAlC,CAAAA,IAAarC,EAASzN,MAAAA,AAAAA,EAEPmJ,GAAAA,KAAQ6I,KAAUlC,CAAAA,IAAarC,EAASjN,MAAAA,AAAAA,GAEvDoS,IAAAA,CAAW,GACXpD,IAAcF,EACZ5O,EAAWyI,GAAAA,EACX2G,EAAW3G,GAAAA,EACXzI,EAAWsB,UAAAA,EACX8N,EAAW9N,UAAAA,EACXyL,EAAStE,GAAAA,EACTsE,EAASzL,UAAAA,EACTyL,EAAS1M,UAAAA,GAGPqO,KAAaI,GAAa,OAAO/B;wBAErCA,IAAWA,EAAS/F,IACrB;oBAAA,QAAQ+F,GAvBoC;gBAAA;YAAA;YA2BjD,IAAIkF,KAAAA,CAAsBC,KACxBpD,CAAAA,IAAcF,EACZ5O,EAAWyI,GAAAA,EACX,MACAzI,EAAWsB,UAAAA,EACX,MACA,MACA,MACA,OAGEoN,KAAaI,CAAAA,GAAa,OAAO;QAEzC;IAGF;ICvDO,SAASqD,GAAuB5R,CAAAA;QACrC,IAAA,CAAKD,EAAcC,IACjB,MAAM,IAAIkK,EACR;QAGJ,IAAA,CAAM,CAAA,SAASlK,CAAAA,GACb,MAAM,IAAIkK,EACR;QAGJ,IACE,gBAAgBlK,KAAAA,CAAAA,CACdD,EAAcC,EAAMe,UAAAA,KAAoC,SAArBf,EAAMe,UAAAA,AAAAA,GAE3C,MAAM,IAAImJ,EACR;IAEN;IAQO,SAAS2H,GAAuB7R,CAAAA;QACrC,IAAA,CAAKD,EAAcC,IACjB,MAAM,IAAIkK,EACR;QAGJ,IAAA,CAAM,CAAA,YAAYlK,CAAAA,GAChB,MAAM,IAAIkK,EACR;QAGJ,IAAA,CAAM,CAAA,YAAYlK,CAAAA,GAChB,MAAM,IAAIkK,EACR;QAGJ,IACE,gBAAgBlK,KAAAA,CAAAA,CACdD,EAAcC,EAAMe,UAAAA,KAAoC,SAArBf,EAAMe,UAAAA,AAAAA,GAE3C,MAAM,IAAImJ,EACR;QAGJ,IAAI,gBAAgBlK,KAAqC,aAAA,OAArBA,EAAMF,UAAAA,EACxC,MAAM,IAAIoK,EACR;IAEN;IFlDAmG,GAAoB3O,SAAAA,CAAUmP,IAAAA,GAAO,SAAUnK,CAAAA;QAC9B,SAAXrE,IAAAA,CAAKiO,CAAAA,GAAYjO,IAAAA,CAAKiO,CAAAA,GAAI5J,IACV,SAAXrE,IAAAA,CAAKkO,CAAAA,IAAYlO,CAAAA,IAAAA,CAAKkO,CAAAA,GAAI7J,CAAAA;IACrC,GAEA2J,GAAoB3O,SAAAA,CAAUiP,GAAAA,GAAM,SAAUzI,CAAAA;QAC5C,OAAe,SAAX7F,IAAAA,CAAKiO,CAAAA,IAAcpI,KAAO7F,IAAAA,CAAKiO,CAAAA,IACpB,SAAXjO,IAAAA,CAAKkO,CAAAA,IAAcrI,KAAO7F,IAAAA,CAAKkO,CAErC;IAAA;IGjBA,IfqGMtR,IerGA6S,KfqGA7S,CAAAA,KAAsC,MAAlC8S,KAAKC,KAAAA,CAAsB,MAAhBD,KAAKE,MAAAA,KAEjB;QACL,OAAOhT;IAAAA,CAAAA,GenGLiT,KAAQ,IAAIC,IAAI;QAAC;QAAY;QAAc;KAAA,GAE3CC,KAAgB,IAAID,IAAI;QAC5B;QACA;QACA;QACA;KAAA,GAkCIE,KAAW;QACfC,gBAAAA,CAAgB;QAChB1E,OAAAA,CAAO;QACPpO,MAAM;IAAA;IAgDR,SAAS+S,GAAcjT,CAAAA,EAAO4R,CAAAA,EAAMnQ,CAAAA;QAClC,IAAMkM,IAAO,IAAI3N,EAAMkT,aAAAA,CAActB,GAAMnQ;QAS3C,OAPAzB,EAAMI,MAAAA,CAAOgH,GAAAA,CAAIwK,GAAMjE,IAEvB3N,EAAMmF,IAAAA,CAAK,aAAa;YACtByD,KAAKgJ;YACLnQ,YAAAA;QAAAA,IAGKkM;IACT;IAoBA,SAASwF,GACPnT,CAAAA,EACAe,CAAAA,EACAqS,CAAAA,EACA5S,CAAAA,EACAF,CAAAA,EACAL,CAAAA,EACAR,CAAAA,EACAgC,CAAAA;QAGA,IAAA,CAAKjB,KAA6B,iBAAfR,EAAME,IAAAA,EACvB,MAAM,IAAIkL,EAAe,SAAA3I,MAAAA,CACd1B,GACV;QAEH,IAAIP,KAA6B,eAAfR,EAAME,IAAAA,EACtB,MAAM,IAAIkL,EAAe,SAAA3I,MAAAA,CACd1B,GACV;QAEH,IAAIU,KAAAA,CAAehB,EAAcgB,IAC/B,MAAM,IAAImJ,EAA0B,SAAAnI,MAAAA,CACzB1B,GAAI,uDAAA0B,MAAAA,CAAsDhB,GACpE;QAOH,IAJAxB,IAAS,KAAKA,GACdR,IAAS,KAAKA,GACdgC,IAAaA,KAAc,CAAA,GAAA,CAEtBzB,EAAMgT,cAAAA,IAAkB/S,MAAWR,GACtC,MAAM,IAAI2L,EAAe,SAAA3I,MAAAA,CACd1B,GAAI,qCAAA0B,MAAAA,CAAoCxC,GAClD;QAEH,IAAME,IAAaH,EAAMI,MAAAA,CAAOC,GAAAA,CAAIJ,IAClCsP,IAAavP,EAAMI,MAAAA,CAAOC,GAAAA,CAAIZ;QAEhC,IAAA,CAAKU,GACH,MAAM,IAAI8K,EACClK,SAAAA,MAAAA,CAAAA,GAAsBd,mBAAAA,MAAAA,CAAAA,GAChC;QAEH,IAAA,CAAKsP,GACH,MAAM,IAAItE,EACClK,SAAAA,MAAAA,CAAAA,GAAsBtB,mBAAAA,MAAAA,CAAAA,GAChC;QAGH,IAAM4T,IAAY;YAChBzK,KAAK;YACLpI,YAAAA;YACAP,QAAAA;YACAR,QAAAA;YACAgC,YAAAA;QAAAA;QAGF,IAAI2R,GAGF9S,IAAON,EAAMsT,iBAAAA;aAMb,IAHAhT,IAAO,KAAKA,GAGRN,EAAMqN,MAAAA,CAAOgE,GAAAA,CAAI/Q,IACnB,MAAM,IAAI8K,EAAe,SAAA3I,MAAAA,CACd1B,GAAI,WAAA0B,MAAAA,CAAUnC,GACxB;QAIL,IAAA,CACGN,EAAMsO,KAAAA,IACN9N,CAAAA,IAAAA,KAC4C,MAAlCL,EAAWK,UAAAA,CAAWf,EAAAA,GAAAA,KACK,MAA3BU,EAAWI,GAAAA,CAAId,EAAAA,AAAAA,GAE1B,MAAM,IAAI2L,EACCrK,SAAAA,MAAAA,CAAAA,GAAAA,uBAAAA,MAAAA,CAA0Bd,GAAM,UAAAwC,MAAAA,CAAShD,GACnD;QAIH,IAAMyN,IAAW,IAAIvB,EACnBnL,GACAF,GACAH,GACAoP,GACA9N;QAIFzB,EAAMqN,MAAAA,CAAOjG,GAAAA,CAAI9G,GAAM4M;QAGvB,IAAMqG,IAAatT,MAAWR;QAgC9B,OA9BIe,IACFL,CAAAA,EAAW2L,gBAAAA,IACXyD,EAAWzD,gBAAAA,IAEPyH,KACFpT,CAAAA,EAAW4L,eAAAA,IACX/L,EAAMwT,wBAAAA,EAAAA,CAAAA,IAGRrT,CAAAA,EAAW0L,SAAAA,IACX0D,EAAW3D,QAAAA,IAEP2H,KACFpT,CAAAA,EAAW6L,aAAAA,IACXhM,EAAMyT,sBAAAA,EAAAA,CAAAA,GAKNzT,EAAMsO,KAAAA,GAAOpB,EAASd,WAAAA,KACrBc,EAASjB,MAAAA,IAEVzL,IAAYR,EAAM0T,eAAAA,KACjB1T,EAAM2T,aAAAA,IAGXN,EAAUzK,GAAAA,GAAMtI,GAEhBN,EAAMmF,IAAAA,CAAK,aAAakO,IAEjB/S;IACT;IAqBA,SAASsT,GACP5T,CAAAA,EACAe,CAAAA,EACAqS,CAAAA,EACA5S,CAAAA,EACAF,CAAAA,EACAL,CAAAA,EACAR,CAAAA,EACAgC,CAAAA,EACAoS,CAAAA;QAGA,IAAA,CAAKrT,KAA6B,iBAAfR,EAAME,IAAAA,EACvB,MAAM,IAAIkL,EAAe,SAAA3I,MAAAA,CACd1B,GACV;QAEH,IAAIP,KAA6B,eAAfR,EAAME,IAAAA,EACtB,MAAM,IAAIkL,EAAe,SAAA3I,MAAAA,CACd1B,GACV;QAEH,IAAIU,GACF;YAAA,IAAIoS,GAAAA;gBACF,IAA0B,cAAA,OAAfpS,GACT,MAAM,IAAImJ,EACC7J,SAAAA,MAAAA,CAAAA,GAAiEU,8DAAAA,MAAAA,CAAAA,GAC3E;YAAA,OAEH,IAAA,CAAKhB,EAAcgB,IACjB,MAAM,IAAImJ,EAA0B,SAAAnI,MAAAA,CACzB1B,GAAI,uDAAA0B,MAAAA,CAAsDhB,GACpE;QAAA;QAQP,IAAIuM;QAOJ,IAVA/N,IAAS,KAAKA,GACdR,IAAS,KAAKA,GAIVoU,KACF7F,CAAAA,IAAUvM,GACVA,IAAAA,KAAa0C,CAAAA,GAAAA,CAGVnE,EAAMgT,cAAAA,IAAkB/S,MAAWR,GACtC,MAAM,IAAI2L,EAAe,SAAA3I,MAAAA,CACd1B,GAAI,qCAAA0B,MAAAA,CAAoCxC,GAClD;QAEH,IAEIiN,GAGA4G,GALA3T,IAAaH,EAAMI,MAAAA,CAAOC,GAAAA,CAAIJ,IAC9BsP,IAAavP,EAAMI,MAAAA,CAAOC,GAAAA,CAAIZ;QAMlC,IAAA,CAAK2T,KACHlG,CAAAA,IAAWlN,EAAMqN,MAAAA,CAAOhN,GAAAA,CAAIC,EAAAA,GAEd;YAGZ,IAAA,CAAI4M,CAAAA,EAASjN,MAAAA,CAAO2I,GAAAA,KAAQ3I,KAAUiN,EAASzN,MAAAA,CAAOmJ,GAAAA,KAAQnJ,KAGzDe,KACD0M,EAASjN,MAAAA,CAAO2I,GAAAA,KAAQnJ,KACxByN,EAASzN,MAAAA,CAAOmJ,GAAAA,KAAQ3I,CAAAA,GAGxB,MAAM,IAAImL,EACCrK,SAAAA,MAAAA,CAAAA,GAAAA,2DAAAA,MAAAA,CAA8DT,GAAI,iBAAAmC,MAAAA,CAAgBxC,GAAM,gBAAAwC,MAAAA,CAAehD,GAAM,mBAAAgD,MAAAA,CAAkByK,EAASjN,MAAAA,CAAO2I,GAAAA,EAAG,QAAAnG,MAAAA,CAAOyK,EAASzN,MAAAA,CAAOmJ,GAAAA,EACnL;YAILkL,IAA0B5G;QAC5B;QAWF,IAPK4G,KAA4B9T,EAAMsO,KAAAA,IAAAA,CAASnO,KAC9C2T,CAAAA,IAA0BtT,IACtBL,EAAWK,UAAAA,CAAWf,EAAAA,GACtBU,EAAWI,GAAAA,CAAId,EAAAA,AAAAA,GAIjBqU,GAAyB;YAC3B,IAAMC,IAAO;gBAACD,EAAwBlL,GAAAA;gBAAAA,CAAK;gBAAA,CAAO;gBAAA,CAAO;aAAA;YAGzD,IAAIiL,IAAAA,CAAa7F,IAAAA,CAAWvM,GAAY,OAAOsS;YAG/C,IAAIF,GAAW;gBACb,IAAMG,IAAgBF,EAAwBrS,UAAAA;gBAC9CqS,EAAwBrS,UAAAA,GAAauM,EAAQgG,IAE7ChU,EAAMmF,IAAAA,CAAK,yBAAyB;oBAClCjF,MAAM;oBACN0I,KAAKkL,EAAwBlL,GAAAA;oBAC7BnH,YAAYqS,EAAwBrS,UAAAA;gBAAAA;YAExC,OAIEjC,EAAOsU,EAAwBrS,UAAAA,EAAYA,IAE3CzB,EAAMmF,IAAAA,CAAK,yBAAyB;gBAClCjF,MAAM;gBACN0I,KAAKkL,EAAwBlL,GAAAA;gBAC7BnH,YAAYqS,EAAwBrS,UAAAA;gBACpCkM,MAAMlM;YAAAA;YAIV,OAAOsS;QACT;QAEAtS,IAAaA,KAAc,CAAA,GAEvBoS,KAAa7F,KAASvM,CAAAA,IAAauM,EAAQvM,EAAAA;QAG/C,IAAM4R,IAAY;YAChBzK,KAAK;YACLpI,YAAAA;YACAP,QAAAA;YACAR,QAAAA;YACAgC,YAAAA;QAAAA;QAGF,IAAI2R,GAGF9S,IAAON,EAAMsT,iBAAAA;aAMb,IAHAhT,IAAO,KAAKA,GAGRN,EAAMqN,MAAAA,CAAOgE,GAAAA,CAAI/Q,IACnB,MAAM,IAAI8K,EAAe,SAAA3I,MAAAA,CACd1B,GAAI,WAAA0B,MAAAA,CAAUnC,GACxB;QAGL,IAAI2T,IAAAA,CAAiB,GACjBC,IAAAA,CAAiB;QAEhB/T,KACHA,CAAAA,IAAa8S,GAAcjT,GAAOC,GAAQ,CAAE,IAC5CgU,IAAAA,CAAiB,GAEbhU,MAAWR,KACb8P,CAAAA,IAAapP,GACb+T,IAAAA,CAAiB,CAAA,CAAA,GAGhB3E,KACHA,CAAAA,IAAa0D,GAAcjT,GAAOP,GAAQ,CAAE,IAC5CyU,IAAAA,CAAiB,CAAA,GAInBhH,IAAW,IAAIvB,EAASnL,GAAYF,GAAMH,GAAYoP,GAAY9N,IAGlEzB,EAAMqN,MAAAA,CAAOjG,GAAAA,CAAI9G,GAAM4M;QAGvB,IAAMqG,IAAatT,MAAWR;QAgC9B,OA9BIe,IACFL,CAAAA,EAAW2L,gBAAAA,IACXyD,EAAWzD,gBAAAA,IAEPyH,KACFpT,CAAAA,EAAW4L,eAAAA,IACX/L,EAAMwT,wBAAAA,EAAAA,CAAAA,IAGRrT,CAAAA,EAAW0L,SAAAA,IACX0D,EAAW3D,QAAAA,IAEP2H,KACFpT,CAAAA,EAAW6L,aAAAA,IACXhM,EAAMyT,sBAAAA,EAAAA,CAAAA,GAKNzT,EAAMsO,KAAAA,GAAOpB,EAASd,WAAAA,KACrBc,EAASjB,MAAAA,IAEVzL,IAAYR,EAAM0T,eAAAA,KACjB1T,EAAM2T,aAAAA,IAGXN,EAAUzK,GAAAA,GAAMtI,GAEhBN,EAAMmF,IAAAA,CAAK,aAAakO,IAEjB;YAAC/S;YAAAA,CAAM;YAAM2T;YAAgBC;SACtC;IAAA;IAQA,SAASC,GAAiBnU,CAAAA,EAAOkN,CAAAA;QAE/BlN,EAAMqN,MAAAA,CAAM,MAAA,CAAQH,EAAStE,GAAAA;QAG7B,IAAezI,IAA8C+M,EAAtDjN,MAAAA,EAA4BsP,IAA0BrC,EAAlCzN,MAAAA,EAAoBgC,IAAcyL,EAAdzL,UAAAA,EAEzCjB,IAAa0M,EAAS1M,UAAAA,EAEtB+S,IAAapT,MAAeoP;QAE9B/O,IACFL,CAAAA,EAAW2L,gBAAAA,IACXyD,EAAWzD,gBAAAA,IAEPyH,KACFpT,CAAAA,EAAW4L,eAAAA,IACX/L,EAAMwT,wBAAAA,EAAAA,CAAAA,IAGRrT,CAAAA,EAAW0L,SAAAA,IACX0D,EAAW3D,QAAAA,IAEP2H,KACFpT,CAAAA,EAAW6L,aAAAA,IACXhM,EAAMyT,sBAAAA,EAAAA,CAAAA,GAKNzT,EAAMsO,KAAAA,GAAOpB,EAAST,WAAAA,KACrBS,EAASV,MAAAA,IAEVhM,IAAYR,EAAM0T,eAAAA,KACjB1T,EAAM2T,aAAAA,IAGX3T,EAAMmF,IAAAA,CAAK,eAAe;YACxByD,KAAKsE,EAAStE,GAAAA;YACdnH,YAAAA;YACAxB,QAAQE,EAAWyI,GAAAA;YACnBnJ,QAAQ8P,EAAW3G,GAAAA;YACnBpI,YAAAA;QAAAA;IAEJ;IAEA,IAYqB4T,KAAK,SAAAC,CAAAA;QACxB,SAAAD,EAAYE,CAAAA;YAAS,IAAA7J;YAOnB,IANAA,IAAO4J,EAAAhS,IAAAA,CAAAU,IAAAA,KAAAA,IAAAA,EAMsB,aAAA,OAAA,AAH7BuR,CAAAA,IAAU9U,EAAO,CAAA,GAAIuT,IAAUuB,EAAAA,EAGZhG,KAAAA,EACjB,MAAM,IAAI1D,EAA0B,4EAAAnI,MAAAA,CACyC6R,EAAQhG,KAAAA,EACpF;YAEH,IAAA,CAAKsE,GAAMvB,GAAAA,CAAIiD,EAAQpU,IAAAA,GACrB,MAAM,IAAI0K,EAAAA,6GAAAA,MAAAA,CACmG0J,EAAQpU,IAAAA,EACpH;YAEH,IAAsC,aAAA,OAA3BoU,EAAQtB,cAAAA,EACjB,MAAM,IAAIpI,EAA0B,qFAAAnI,MAAAA,CACkD6R,EAAQtB,cAAAA,EAC7F;YAKH,IAAME,IACa,YAAjBoB,EAAQpU,IAAAA,GACJqL,IACiB,eAAjB+I,EAAQpU,IAAAA,GACRuL,IACAC;YAEN5K,EAAsByT,EAAA9J,IAAA,iBAAiByI;YAavC,IAAMsB,IAAiB,UAAUhC,OAAgB,KAC7CiC,IAAS;YAmDgD,OAtC7D3T,EAAsByT,EAAA9J,IAAA,eAAe,CAAE,IACvC3J,EAAAA,EAAAA,IAAsB,UAAU,IAAI4T,MACpC5T,EAAAA,EAAAA,IAAsB,UAAU,IAAI4T,MACpC5T,EAAsByT,EAAA9J,IAAA,iBAAiB,IACvC3J,EAAsByT,EAAA9J,IAAA,mBAAmB,IACzC3J,EAAsByT,EAAA9J,IAAA,0BAA0B,IAChD3J,EAAsByT,EAAA9J,IAAA,4BAA4B,IAClD3J,EAAsByT,EAAA9J,IAAA,qBAlBG;gBACvB,IAAIkK;gBAEJ,GACEA,IAAmBH,IAAiBC;uBAC7BhK,EAAK4C,MAAAA,CAAOgE,GAAAA,CAAIsD,IAEzB;gBAAA,OAAOA;YAAAA,IAcT7T,EAAsByT,EAAA9J,IAAA,YAAY6J,IAGlCxB,GAAc8B,OAAAA,CAAQ,SAAAC,CAAAA;gBAAI,OAAI/T,EAAsB+T,EAAAA,IAAAA,GAAMpK,CAAAA,CAAKoK,EAAAA;YAAAA,IAG/DxT,EAAgBkT,EAAA9J,IAAO,SAAS;gBAAA,OAAMA,EAAKrK,MAAAA,CAAOuP,IAAAA;YAAAA,IAClDtO,EAAgBkT,EAAA9J,IAAO,QAAQ;gBAAA,OAAMA,EAAK4C,MAAAA,CAAOsC,IAAAA;YAAAA,IACjDtO,EAAgBkT,EAAA9J,IAAO,gBAAgB;gBAAA,OAAMA,EAAKkJ,aAAAA;YAAAA,IAClDtS,EAAgBkT,EAAA9J,IAAO,kBAAkB;gBAAA,OAAMA,EAAKiJ,eAAAA;YAAAA,IACpDrS,EAAgBkT,EAAA9J,IAEd,iBACA;gBAAA,OAAMA,EAAKgJ,sBAAAA,GAAyBhJ,EAAK+I,wBAAAA;YAAAA,IAE3CnS,EAAgBkT,EAAA9J,IAEd,yBACA;gBAAA,OAAMA,EAAKgJ,sBAAAA;YAAAA,IAEbpS,EAAgBkT,EAAA9J,IAEd,2BACA;gBAAA,OAAMA,EAAK+I,wBAAAA;YAAAA,IAEbnS,EAAAA,EAAAA,IAAuB,SAASoJ,EAAKqK,QAAAA,CAASxG,KAAAA,GAC9CjN,EAAAA,EAAAA,IAAuB,QAAQoJ,EAAKqK,QAAAA,CAAS5U,IAAAA,GAC7CmB,EAAAA,EAAAA,IAAuB,kBAAkBoJ,EAAKqK,QAAAA,CAAS9B,cAAAA,GACvD3R,EAAgBkT,EAAA9J,IAAO,kBAAkB;gBAAA,OAAM;YAAA,IAAcA;QAC/D;QAnGwBC,EAAA0J,GAAAC;QAmGvB,IAAAU,IAAAX,EAAAhS,SAAAA;QA8qEA,OA9qEA2S,EAEDC,sBAAAA,GAAA;YACEjS,IAAAA,CAAK4Q,aAAAA,GAAgB,GACrB5Q,IAAAA,CAAK2Q,eAAAA,GAAkB,GACvB3Q,IAAAA,CAAK0Q,sBAAAA,GAAyB,GAC9B1Q,IAAAA,CAAKyQ,wBAAAA,GAA2B;QAClC,GAOAuB,EAMAE,OAAAA,GAAA,SAAQrD,CAAAA;YACN,OAAO7O,IAAAA,CAAK3C,MAAAA,CAAOiR,GAAAA,CAAI,KAAKO;QAC9B,GAEAmD,EAcAG,eAAAA,GAAA,SAAgBjV,CAAAA,EAAQR,CAAAA;YAEtB,IAAkB,iBAAdsD,IAAAA,CAAK7C,IAAAA,EAAuB,OAAA,CAAO;YAEvC,IAAyB,MAArBR,UAAUG,MAAAA,EAAc;gBAC1B,IAAMS,IAAO,KAAKL,GAEZiN,IAAWnK,IAAAA,CAAKsK,MAAAA,CAAOhN,GAAAA,CAAIC;gBAEjC,OAAA,CAAA,CAAS4M,KAAAA,CAAaA,EAAS1M,UACjC;YAAA;YAAO,IAAyB,MAArBd,UAAUG,MAAAA,EAAc;gBACjCI,IAAS,KAAKA,GACdR,IAAS,KAAKA;gBAGd,IAAMwN,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIJ;gBAEjC,OAAA,CAAA,CAAKgN,KAGEA,EAAS1M,GAAAA,CAAIsN,cAAAA,CAAepO;YACrC;YAEA,MAAM,IAAImL,EAA0B,yCAAAnI,MAAAA,CACO/C,UAAUG,MAAAA,EACpD;QACH,GAEAkV,EAcAI,iBAAAA,GAAA,SAAkBlV,CAAAA,EAAQR,CAAAA;YAExB,IAAkB,eAAdsD,IAAAA,CAAK7C,IAAAA,EAAqB,OAAA,CAAO;YAErC,IAAyB,MAArBR,UAAUG,MAAAA,EAAc;gBAC1B,IAAMS,IAAO,KAAKL,GAEZiN,IAAWnK,IAAAA,CAAKsK,MAAAA,CAAOhN,GAAAA,CAAIC;gBAEjC,OAAA,CAAA,CAAS4M,KAAYA,EAAS1M,UAChC;YAAA;YAAO,IAAyB,MAArBd,UAAUG,MAAAA,EAAc;gBACjCI,IAAS,KAAKA,GACdR,IAAS,KAAKA;gBAGd,IAAMwN,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIJ;gBAEjC,OAAA,CAAA,CAAKgN,KAGEA,EAASzM,UAAAA,CAAWqN,cAAAA,CAAepO;YAC5C;YAEA,MAAM,IAAImL,EAA0B,yCAAAnI,MAAAA,CACO/C,UAAUG,MAAAA,EACpD;QACH,GAEAkV,EAcAK,OAAAA,GAAA,SAAQnV,CAAAA,EAAQR,CAAAA;YACd,IAAyB,MAArBC,UAAUG,MAAAA,EAAc;gBAC1B,IAAMS,IAAO,KAAKL;gBAElB,OAAO8C,IAAAA,CAAKsK,MAAAA,CAAOgE,GAAAA,CAAI/Q;YACzB;YAAO,IAAyB,MAArBZ,UAAUG,MAAAA,EAAc;gBACjCI,IAAS,KAAKA,GACdR,IAAS,KAAKA;gBAGd,IAAMwN,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIJ;gBAEjC,OAAA,CAAA,CAAKgN,KAAAA,CAAAA,KAIsB,MAAjBA,EAAS1M,GAAAA,IACf0M,EAAS1M,GAAAA,CAAIsN,cAAAA,CAAepO,MAAAA,KACE,MAAxBwN,EAASzM,UAAAA,IACfyM,EAASzM,UAAAA,CAAWqN,cAAAA,CAAepO,EAAAA;YAEzC;YAEA,MAAM,IAAImL,EAA0B,iCAAAnI,MAAAA,CACD/C,UAAUG,MAAAA,EAC5C;QACH,GAEAkV,EAWAM,YAAAA,GAAA,SAAapV,CAAAA,EAAQR,CAAAA;YACnB,IAAkB,iBAAdsD,IAAAA,CAAK7C,IAAAA,EAAT;gBAKA,IAHAD,IAAS,KAAKA,GACdR,IAAS,KAAKA,GAEVsD,IAAAA,CAAKuL,KAAAA,EACP,MAAM,IAAIlD,EACR;gBAGJ,IAAMjL,IAAa4C,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIJ;gBAEnC,IAAA,CAAKE,GACH,MAAM,IAAI8K,EAAkB,2CAAAxI,MAAAA,CACiBxC,GAC5C;gBAEH,IAAA,CAAK8C,IAAAA,CAAK3C,MAAAA,CAAOiR,GAAAA,CAAI5R,IACnB,MAAM,IAAIwL,EAAkB,2CAAAxI,MAAAA,CACiBhD,GAC5C;gBAEH,IAAMyN,IAAY/M,EAAWI,GAAAA,IAAOJ,EAAWI,GAAAA,CAAId,EAAAA,IAAAA,KAAY0E;gBAE/D,OAAI+I,IAAiBA,EAAStE,GAAAA,GAAAA,KAA9B;YAxBgC;QAyBlC,GAEAmM,EAWAO,cAAAA,GAAA,SAAerV,CAAAA,EAAQR,CAAAA;YACrB,IAAkB,eAAdsD,IAAAA,CAAK7C,IAAAA,EAAT;gBAKA,IAHAD,IAAS,KAAKA,GACdR,IAAS,KAAKA,GAEVsD,IAAAA,CAAKuL,KAAAA,EACP,MAAM,IAAIlD,EACR;gBAGJ,IAAMjL,IAAa4C,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIJ;gBAEnC,IAAA,CAAKE,GACH,MAAM,IAAI8K,EAAkB,6CAAAxI,MAAAA,CACmBxC,GAC9C;gBAEH,IAAA,CAAK8C,IAAAA,CAAK3C,MAAAA,CAAOiR,GAAAA,CAAI5R,IACnB,MAAM,IAAIwL,EAAkB,6CAAAxI,MAAAA,CACmBhD,GAC9C;gBAEH,IAAMyN,IACH/M,EAAWK,UAAAA,IAAcL,EAAWK,UAAAA,CAAWf,EAAAA,IAAAA,KAAY0E;gBAE9D,OAAI+I,IAAiBA,EAAStE,GAAAA,GAAAA,KAA9B;YAzB8B;QA0BhC,GAEAmM,EAWAzU,IAAAA,GAAA,SAAKL,CAAAA,EAAQR,CAAAA;YACX,IAAIsD,IAAAA,CAAKuL,KAAAA,EACP,MAAM,IAAIlD,EACR;YAGJnL,IAAS,KAAKA,GACdR,IAAS,KAAKA;YAEd,IAAMU,IAAa4C,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIJ;YAEnC,IAAA,CAAKE,GACH,MAAM,IAAI8K,EAAkB,mCAAAxI,MAAAA,CACSxC,GACpC;YAEH,IAAA,CAAK8C,IAAAA,CAAK3C,MAAAA,CAAOiR,GAAAA,CAAI5R,IACnB,MAAM,IAAIwL,EAAkB,mCAAAxI,MAAAA,CACShD,GACpC;YAEH,IAAMyN,IACH/M,EAAWI,GAAAA,IAAOJ,EAAWI,GAAAA,CAAId,EAAAA,IACjCU,EAAWK,UAAAA,IAAcL,EAAWK,UAAAA,CAAWf,EAAAA,IAAAA,KAChD0E;YAEF,IAAI+I,GAAU,OAAOA,EAAStE,GAChC;QAAA,GAEAmM,EASAQ,oBAAAA,GAAA,SAAqB3D,CAAAA,EAAMH,CAAAA;YACzBG,IAAO,KAAKA,GACZH,IAAW,KAAKA;YAEhB,IAAMxE,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIuR;YAEjC,IAAA,CAAK3E,GACH,MAAM,IAAIhC,EAAkB,mDAAAxI,MAAAA,CACyBmP,GACpD;YAEH,OAAkB,iBAAd7O,IAAAA,CAAK7C,IAAAA,IAEFuR,CAAAA,KAAYxE,EAAQ,EAAA,IAAOwE,KAAYxE,EAAS1M,GAAAA,AAAAA;QACzD,GAEAwU,EASAS,eAAAA,GAAA,SAAgB5D,CAAAA,EAAMH,CAAAA;YACpBG,IAAO,KAAKA,GACZH,IAAW,KAAKA;YAEhB,IAAMxE,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIuR;YAEjC,IAAA,CAAK3E,GACH,MAAM,IAAIhC,EAAkB,8CAAAxI,MAAAA,CACoBmP,GAC/C;YAEH,OAAkB,iBAAd7O,IAAAA,CAAK7C,IAAAA,IAEFuR,KAAYxE,EAAS1M,GAC9B;QAAA,GAEAwU,EASAU,cAAAA,GAAA,SAAe7D,CAAAA,EAAMH,CAAAA;YACnBG,IAAO,KAAKA,GACZH,IAAW,KAAKA;YAEhB,IAAMxE,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIuR;YAEjC,IAAA,CAAK3E,GACH,MAAM,IAAIhC,EAAkB,6CAAAxI,MAAAA,CACmBmP,GAC9C;YAEH,OAAkB,iBAAd7O,IAAAA,CAAK7C,IAAAA,IAEFuR,KAAYxE,EAAW,EAChC;QAAA,GAEA8H,EASAW,sBAAAA,GAAA,SAAuB9D,CAAAA,EAAMH,CAAAA;YAC3BG,IAAO,KAAKA,GACZH,IAAW,KAAKA;YAEhB,IAAMxE,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIuR;YAEjC,IAAA,CAAK3E,GACH,MAAM,IAAIhC,EAAkB,qDAAAxI,MAAAA,CAC2BmP,GACtD;YAEH,OAAkB,eAAd7O,IAAAA,CAAK7C,IAAAA,IAEFuR,KAAYxE,EAASzM,UAC9B;QAAA,GAEAuU,EASAY,YAAAA,GAAA,SAAa/D,CAAAA,EAAMH,CAAAA;YACjBG,IAAO,KAAKA,GACZH,IAAW,KAAKA;YAEhB,IAAMxE,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIuR;YAEjC,IAAA,CAAK3E,GACH,MAAM,IAAIhC,EAAkB,2CAAAxI,MAAAA,CACiBmP,GAC5C;YAEH,OAAkB,iBAAd7O,IAAAA,CAAK7C,IAAAA,IACHuR,CAAAA,KAAYxE,EAAQ,EAAA,IAAOwE,KAAYxE,EAAS1M,GAAAA,AAAAA,KAGpC,eAAdwC,IAAAA,CAAK7C,IAAAA,IACHuR,KAAYxE,EAASzM,UAI7B;QAAA,GAEAuU,EASAa,mBAAAA,GAAA,SAAoBhE,CAAAA,EAAMH,CAAAA;YACxBG,IAAO,KAAKA,GACZH,IAAW,KAAKA;YAEhB,IAAMxE,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIuR;YAEjC,IAAA,CAAK3E,GACH,MAAM,IAAIhC,EAAkB,kDAAAxI,MAAAA,CACwBmP,GACnD;YAEH,OAAkB,iBAAd7O,IAAAA,CAAK7C,IAAAA,IACHuR,KAAYxE,EAAW,EAAA,IAGX,eAAdlK,IAAAA,CAAK7C,IAAAA,IACHuR,KAAYxE,EAASzM,UAI7B;QAAA,GAEAuU,EASAc,oBAAAA,GAAA,SAAqBjE,CAAAA,EAAMH,CAAAA;YACzBG,IAAO,KAAKA,GACZH,IAAW,KAAKA;YAEhB,IAAMxE,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIuR;YAEjC,IAAA,CAAK3E,GACH,MAAM,IAAIhC,EAAkB,mDAAAxI,MAAAA,CACyBmP,GACpD;YAEH,OAAkB,iBAAd7O,IAAAA,CAAK7C,IAAAA,IACHuR,KAAYxE,EAAS1M,GAAAA,IAGT,eAAdwC,IAAAA,CAAK7C,IAAAA,IACHuR,KAAYxE,EAASzM,UAI7B;QAAA,GAEAuU,EAQAnJ,QAAAA,GAAA,SAASgG,CAAAA;YACPA,IAAO,KAAKA;YAEZ,IAAM3E,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIuR;YAEjC,IAAA,CAAK3E,GACH,MAAM,IAAIhC,EAAkB,uCAAAxI,MAAAA,CACamP,GACxC;YAEH,OAAkB,iBAAd7O,IAAAA,CAAK7C,IAAAA,GAA8B,IAEhC+M,EAASrB,QAClB;QAAA,GAEAmJ,EAQAlJ,SAAAA,GAAA,SAAU+F,CAAAA;YACRA,IAAO,KAAKA;YAEZ,IAAM3E,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIuR;YAEjC,IAAA,CAAK3E,GACH,MAAM,IAAIhC,EAAkB,wCAAAxI,MAAAA,CACcmP,GACzC;YAEH,OAAkB,iBAAd7O,IAAAA,CAAK7C,IAAAA,GAA8B,IAEhC+M,EAASpB,SAClB;QAAA,GAEAkJ,EAQAe,cAAAA,GAAA,SAAelE,CAAAA;YACbA,IAAO,KAAKA;YAEZ,IAAM3E,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIuR;YAEjC,IAAA,CAAK3E,GACH,MAAM,IAAIhC,EAAkB,6CAAAxI,MAAAA,CACmBmP,GAC9C;YAEH,OAAkB,iBAAd7O,IAAAA,CAAK7C,IAAAA,GAA8B,IAEhC+M,EAASrB,QAAAA,GAAWqB,EAASpB,SACtC;QAAA,GAEAkJ,EAQAjJ,gBAAAA,GAAA,SAAiB8F,CAAAA;YACfA,IAAO,KAAKA;YAEZ,IAAM3E,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIuR;YAEjC,IAAA,CAAK3E,GACH,MAAM,IAAIhC,EAAkB,+CAAAxI,MAAAA,CACqBmP,GAChD;YAEH,OAAkB,eAAd7O,IAAAA,CAAK7C,IAAAA,GAA4B,IAE9B+M,EAASnB,gBAClB;QAAA,GAEAiJ,EAQAgB,aAAAA,GAAA,SAAcnE,CAAAA;YACZA,IAAO,KAAKA;YAEZ,IAAM3E,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIuR;YAEjC,IAAA,CAAK3E,GACH,MAAM,IAAIhC,EAAkB,4CAAAxI,MAAAA,CACkBmP,GAC7C;YAEH,IAAIoE,IAAS;YAUb,OARkB,eAAdjT,IAAAA,CAAK7C,IAAAA,IACP8V,CAAAA,KAAU/I,EAASnB,gBAAAA,AAAAA,GAGH,iBAAd/I,IAAAA,CAAK7C,IAAAA,IACP8V,CAAAA,KAAU/I,EAASrB,QAAAA,AAAAA,GAGdoK;QACT,GAEAjB,EAQAkB,cAAAA,GAAA,SAAerE,CAAAA;YACbA,IAAO,KAAKA;YAEZ,IAAM3E,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIuR;YAEjC,IAAA,CAAK3E,GACH,MAAM,IAAIhC,EAAkB,6CAAAxI,MAAAA,CACmBmP,GAC9C;YAEH,IAAIoE,IAAS;YAUb,OARkB,eAAdjT,IAAAA,CAAK7C,IAAAA,IACP8V,CAAAA,KAAU/I,EAASnB,gBAAAA,AAAAA,GAGH,iBAAd/I,IAAAA,CAAK7C,IAAAA,IACP8V,CAAAA,KAAU/I,EAASpB,SAAAA,AAAAA,GAGdmK;QACT,GAEAjB,EAQAiB,MAAAA,GAAA,SAAOpE,CAAAA;YACLA,IAAO,KAAKA;YAEZ,IAAM3E,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIuR;YAEjC,IAAA,CAAK3E,GACH,MAAM,IAAIhC,EAAkB,qCAAAxI,MAAAA,CACWmP,GACtC;YAEH,IAAIoE,IAAS;YAUb,OARkB,eAAdjT,IAAAA,CAAK7C,IAAAA,IACP8V,CAAAA,KAAU/I,EAASnB,gBAAAA,AAAAA,GAGH,iBAAd/I,IAAAA,CAAK7C,IAAAA,IACP8V,CAAAA,KAAU/I,EAASrB,QAAAA,GAAWqB,EAASpB,SAAAA,AAAAA,GAGlCmK;QACT,GAEAjB,EAQAmB,wBAAAA,GAAA,SAAyBtE,CAAAA;YACvBA,IAAO,KAAKA;YAEZ,IAAM3E,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIuR;YAEjC,IAAA,CAAK3E,GACH,MAAM,IAAIhC,EAAkB,uDAAAxI,MAAAA,CAC6BmP,GACxD;YAEH,OAAkB,iBAAd7O,IAAAA,CAAK7C,IAAAA,GAA8B,IAEhC+M,EAASrB,QAAAA,GAAWqB,EAASjB,aACtC;QAAA,GAEA+I,EAQAoB,yBAAAA,GAAA,SAA0BvE,CAAAA;YACxBA,IAAO,KAAKA;YAEZ,IAAM3E,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIuR;YAEjC,IAAA,CAAK3E,GACH,MAAM,IAAIhC,EAAkB,wDAAAxI,MAAAA,CAC8BmP,GACzD;YAEH,OAAkB,iBAAd7O,IAAAA,CAAK7C,IAAAA,GAA8B,IAEhC+M,EAASpB,SAAAA,GAAYoB,EAASjB,aACvC;QAAA,GAEA+I,EAQAqB,8BAAAA,GAAA,SAA+BxE,CAAAA;YAC7BA,IAAO,KAAKA;YAEZ,IAAM3E,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIuR;YAEjC,IAAA,CAAK3E,GACH,MAAM,IAAIhC,EAAkB,6DAAAxI,MAAAA,CACmCmP,GAC9D;YAEH,OAAkB,iBAAd7O,IAAAA,CAAK7C,IAAAA,GAA8B,IAEhC+M,EAASrB,QAAAA,GAAWqB,EAASpB,SAAAA,GAAqC,IAAzBoB,EAASjB,aAC3D;QAAA,GAEA+I,EAQAsB,gCAAAA,GAAA,SAAiCzE,CAAAA;YAC/BA,IAAO,KAAKA;YAEZ,IAAM3E,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIuR;YAEjC,IAAA,CAAK3E,GACH,MAAM,IAAIhC,EAAkB,+DAAAxI,MAAAA,CACqCmP,GAChE;YAEH,OAAkB,eAAd7O,IAAAA,CAAK7C,IAAAA,GAA4B,IAE9B+M,EAASnB,gBAAAA,GAA8C,IAA3BmB,EAASlB,eAC9C;QAAA,GAEAgJ,EAQAuB,6BAAAA,GAAA,SAA8B1E,CAAAA;YAC5BA,IAAO,KAAKA;YAEZ,IAAM3E,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIuR;YAEjC,IAAA,CAAK3E,GACH,MAAM,IAAIhC,EAAkB,4DAAAxI,MAAAA,CACkCmP,GAC7D;YAEH,IAAIoE,IAAS,GACTO,IAAQ;YAYZ,OAVkB,eAAdxT,IAAAA,CAAK7C,IAAAA,IACP8V,CAAAA,KAAU/I,EAASnB,gBAAAA,EACnByK,KAAoC,IAA3BtJ,EAASlB,eAAAA,AAAAA,GAGF,iBAAdhJ,IAAAA,CAAK7C,IAAAA,IACP8V,CAAAA,KAAU/I,EAASrB,QAAAA,EACnB2K,KAAStJ,EAASjB,aAAAA,AAAAA,GAGbgK,IAASO;QAClB,GAEAxB,EAQAyB,8BAAAA,GAAA,SAA+B5E,CAAAA;YAC7BA,IAAO,KAAKA;YAEZ,IAAM3E,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIuR;YAEjC,IAAA,CAAK3E,GACH,MAAM,IAAIhC,EAAkB,6DAAAxI,MAAAA,CACmCmP,GAC9D;YAEH,IAAIoE,IAAS,GACTO,IAAQ;YAYZ,OAVkB,eAAdxT,IAAAA,CAAK7C,IAAAA,IACP8V,CAAAA,KAAU/I,EAASnB,gBAAAA,EACnByK,KAAoC,IAA3BtJ,EAASlB,eAAAA,AAAAA,GAGF,iBAAdhJ,IAAAA,CAAK7C,IAAAA,IACP8V,CAAAA,KAAU/I,EAASpB,SAAAA,EACnB0K,KAAStJ,EAASjB,aAAAA,AAAAA,GAGbgK,IAASO;QAClB,GAEAxB,EAQA0B,sBAAAA,GAAA,SAAuB7E,CAAAA;YACrBA,IAAO,KAAKA;YAEZ,IAAM3E,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIuR;YAEjC,IAAA,CAAK3E,GACH,MAAM,IAAIhC,EAAkB,qDAAAxI,MAAAA,CAC2BmP,GACtD;YAEH,IAAIoE,IAAS,GACTO,IAAQ;YAYZ,OAVkB,eAAdxT,IAAAA,CAAK7C,IAAAA,IACP8V,CAAAA,KAAU/I,EAASnB,gBAAAA,EACnByK,KAAoC,IAA3BtJ,EAASlB,eAAAA,AAAAA,GAGF,iBAAdhJ,IAAAA,CAAK7C,IAAAA,IACP8V,CAAAA,KAAU/I,EAASrB,QAAAA,GAAWqB,EAASpB,SAAAA,EACvC0K,KAAkC,IAAzBtJ,EAASjB,aAAAA,AAAAA,GAGbgK,IAASO;QAClB,GAEAxB,EAQA9U,MAAAA,GAAA,SAAOK,CAAAA;YACLA,IAAO,KAAKA;YAEZ,IAAMqN,IAAO5K,IAAAA,CAAKsK,MAAAA,CAAOhN,GAAAA,CAAIC;YAE7B,IAAA,CAAKqN,GACH,MAAM,IAAI1C,EAAkB,qCAAAxI,MAAAA,CACWnC,GACtC;YAEH,OAAOqN,EAAK1N,MAAAA,CAAO2I,GACrB;QAAA,GAEAmM,EAQAtV,MAAAA,GAAA,SAAOa,CAAAA;YACLA,IAAO,KAAKA;YAEZ,IAAMqN,IAAO5K,IAAAA,CAAKsK,MAAAA,CAAOhN,GAAAA,CAAIC;YAE7B,IAAA,CAAKqN,GACH,MAAM,IAAI1C,EAAkB,qCAAAxI,MAAAA,CACWnC,GACtC;YAEH,OAAOqN,EAAKlO,MAAAA,CAAOmJ,GACrB;QAAA,GAEAmM,EAQA2B,WAAAA,GAAA,SAAYpW,CAAAA;YACVA,IAAO,KAAKA;YAEZ,IAAM4M,IAAWnK,IAAAA,CAAKsK,MAAAA,CAAOhN,GAAAA,CAAIC;YAEjC,IAAA,CAAK4M,GACH,MAAM,IAAIjC,EAAkB,0CAAAxI,MAAAA,CACgBnC,GAC3C;YAEH,OAAO;gBAAC4M,EAASjN,MAAAA,CAAO2I,GAAAA;gBAAKsE,EAASzN,MAAAA,CAAOmJ,GAAAA;aAC/C;QAAA,GAEAmM,EAUA4B,QAAAA,GAAA,SAAS/E,CAAAA,EAAMtR,CAAAA;YACbsR,IAAO,KAAKA,GACZtR,IAAO,KAAKA;YAEZ,IAAMqN,IAAO5K,IAAAA,CAAKsK,MAAAA,CAAOhN,GAAAA,CAAIC;YAE7B,IAAA,CAAKqN,GACH,MAAM,IAAI1C,EAAkB,uCAAAxI,MAAAA,CACanC,GACxC;YAEH,IAAML,IAAS0N,EAAK1N,MAAAA,CAAO2I,GAAAA,EACrBnJ,IAASkO,EAAKlO,MAAAA,CAAOmJ,GAAAA;YAE3B,IAAIgJ,MAAS3R,GAAQ,OAAOR;YAC5B,IAAImS,MAASnS,GAAQ,OAAOQ;YAE5B,MAAM,IAAIgL,EAAkB,wBAAAxI,MAAAA,CACFmP,GAAI,mCAAAnP,MAAAA,CAAkCnC,GAAeL,YAAAA,MAAAA,CAAAA,GAAWR,MAAAA,MAAAA,CAAAA,GACzF;QACH,GAEAsV,EASA6B,YAAAA,GAAA,SAAatW,CAAAA,EAAMsR,CAAAA;YACjBtR,IAAO,KAAKA,GACZsR,IAAO,KAAKA;YAEZ,IAAMjE,IAAO5K,IAAAA,CAAKsK,MAAAA,CAAOhN,GAAAA,CAAIC;YAE7B,IAAA,CAAKqN,GACH,MAAM,IAAI1C,EAAkB,2CAAAxI,MAAAA,CACiBnC,GAC5C;YAEH,OAAOqN,EAAK1N,MAAAA,CAAO2I,GAAAA,KAAQgJ,KAAQjE,EAAKlO,MAAAA,CAAOmJ,GAAAA,KAAQgJ;QACzD,GAEAmD,EAQA8B,YAAAA,GAAA,SAAavW,CAAAA;YACXA,IAAO,KAAKA;YAEZ,IAAMqN,IAAO5K,IAAAA,CAAKsK,MAAAA,CAAOhN,GAAAA,CAAIC;YAE7B,IAAA,CAAKqN,GACH,MAAM,IAAI1C,EAAkB,2CAAAxI,MAAAA,CACiBnC,GAC5C;YAEH,OAAOqN,EAAKnN,UACd;QAAA,GAEAuU,EAQA+B,UAAAA,GAAA,SAAWxW,CAAAA;YACTA,IAAO,KAAKA;YAEZ,IAAMqN,IAAO5K,IAAAA,CAAKsK,MAAAA,CAAOhN,GAAAA,CAAIC;YAE7B,IAAA,CAAKqN,GACH,MAAM,IAAI1C,EAAkB,yCAAAxI,MAAAA,CACenC,GAC1C;YAEH,OAAA,CAAQqN,EAAKnN,UACf;QAAA,GAEAuU,EAQAxB,UAAAA,GAAA,SAAWjT,CAAAA;YACTA,IAAO,KAAKA;YAEZ,IAAMqN,IAAO5K,IAAAA,CAAKsK,MAAAA,CAAOhN,GAAAA,CAAIC;YAE7B,IAAA,CAAKqN,GACH,MAAM,IAAI1C,EAAkB,yCAAAxI,MAAAA,CACenC,GAC1C;YAEH,OAAOqN,EAAK1N,MAAAA,KAAW0N,EAAKlO,MAC9B;QAAA,GAOAsV,EAUAgC,OAAAA,GAAA,SAAQnF,CAAAA,EAAMnQ,CAAAA;YACZ,IAAMwL,IA5lDV,SAAiBjN,CAAAA,EAAO4R,CAAAA,EAAMnQ,CAAAA;gBAC5B,IAAIA,KAAAA,CAAehB,EAAcgB,IAC/B,MAAM,IAAImJ,EAA0B,mEAAAnI,MAAAA,CACiChB,GACpE;gBAMH,IAHAmQ,IAAO,KAAKA,GACZnQ,IAAaA,KAAc,CAAA,GAEvBzB,EAAMI,MAAAA,CAAOiR,GAAAA,CAAIO,IACnB,MAAM,IAAIxG,EAAe,uBAAA3I,MAAAA,CACAmP,GACxB;gBAEH,IAAMjE,IAAO,IAAI3N,EAAMkT,aAAAA,CAActB,GAAMnQ;gBAW3C,OARAzB,EAAMI,MAAAA,CAAOgH,GAAAA,CAAIwK,GAAMjE,IAGvB3N,EAAMmF,IAAAA,CAAK,aAAa;oBACtByD,KAAKgJ;oBACLnQ,YAAAA;gBAAAA,IAGKkM;YACT,EAikD6B5K,IAAAA,EAAM6O,GAAMnQ;YAErC,OAAOwL,EAASrE,GAClB;QAAA,GAEAmM,EAOAiC,SAAAA,GAAA,SAAUpF,CAAAA,EAAMnQ,CAAAA;YACd,IAAIA,KAAAA,CAAehB,EAAcgB,IAC/B,MAAM,IAAImJ,EAA0B,qEAAAnI,MAAAA,CACmChB,GACtE;YAGHmQ,IAAO,KAAKA,GACZnQ,IAAaA,KAAc,CAAA;YAG3B,IAAIkM,IAAO5K,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIuR;YAE3B,OAAIjE,IACElM,CAAAA,KACFjC,CAAAA,EAAOmO,EAAKlM,UAAAA,EAAYA,IAExBsB,IAAAA,CAAKoC,IAAAA,CAAK,yBAAyB;gBACjCjF,MAAM;gBACN0I,KAAKgJ;gBACLnQ,YAAYkM,EAAKlM,UAAAA;gBACjBkM,MAAMlM;YAAAA,EAAAA,GAGH;gBAACmQ;gBAAAA,CAAM;aAAA,AAAA,IAGhBjE,CAAAA,IAAO,IAAI5K,IAAAA,CAAKmQ,aAAAA,CAActB,GAAMnQ,IAGpCsB,IAAAA,CAAK3C,MAAAA,CAAOgH,GAAAA,CAAIwK,GAAMjE,IAGtB5K,IAAAA,CAAKoC,IAAAA,CAAK,aAAa;gBACrByD,KAAKgJ;gBACLnQ,YAAAA;YAAAA,IAGK;gBAACmQ;gBAAAA,CAAM;aAAA,AAAA;QAChB,GAEAmD,EAQAkC,UAAAA,GAAA,SAAWrF,CAAAA,EAAM5D,CAAAA;YACf,IAAIA,KAA8B,cAAA,OAAZA,GACpB,MAAM,IAAIpD,EACqEoD,6EAAAA,MAAAA,CAAAA,GAC9E;YAGH4D,IAAO,KAAKA;YAGZ,IAAIjE,IAAO5K,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIuR;YAE3B,IAAIjE,GAAM;gBACR,IAAIK,GAAS;oBACX,IAAMgG,IAAgBrG,EAAKlM,UAAAA;oBAC3BkM,EAAKlM,UAAAA,GAAauM,EAAQgG,IAE1BjR,IAAAA,CAAKoC,IAAAA,CAAK,yBAAyB;wBACjCjF,MAAM;wBACN0I,KAAKgJ;wBACLnQ,YAAYkM,EAAKlM,UAAAA;oBAAAA;gBAErB;gBACA,OAAO;oBAACmQ;oBAAAA,CAAM;iBAChB;YAAA;YAEA,IAAMnQ,IAAauM,IAAUA,EAAQ,CAAE,KAAI,CAAA;YAa3C,OAXAL,IAAO,IAAI5K,IAAAA,CAAKmQ,aAAAA,CAActB,GAAMnQ,IAGpCsB,IAAAA,CAAK3C,MAAAA,CAAOgH,GAAAA,CAAIwK,GAAMjE,IAGtB5K,IAAAA,CAAKoC,IAAAA,CAAK,aAAa;gBACrByD,KAAKgJ;gBACLnQ,YAAAA;YAAAA,IAGK;gBAACmQ;gBAAAA,CAAM;aAChB;QAAA,GAEAmD,EAQAmC,QAAAA,GAAA,SAAStF,CAAAA;YACPA,IAAO,KAAKA;YAEZ,IAOI1E,GAPED,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIuR;YAEjC,IAAA,CAAK3E,GACH,MAAM,IAAIhC,EAAkB,uCAAAxI,MAAAA,CACamP,GACxC;YAMH,IAAkB,iBAAd7O,IAAAA,CAAK7C,IAAAA,EAAuB;gBAC9B,IAAK,IAAMuR,KAAYxE,EAAS1M,GAAAA,CAAK;oBACnC2M,IAAWD,EAAS1M,GAAAA,CAAIkR,EAAAA;oBAExB,GACE0C,GAAiBpR,IAAAA,EAAMmK,IACvBA,IAAWA,EAAS/F,IAAAA;2BACb+F,GACX;gBAAA;gBAEA,IAAK,IAAMuE,KAAYxE,EAAAA,EAAAA,CAAa;oBAClCC,IAAWD,EAAW,EAAA,CAACwE,EAAAA;oBAEvB,GACE0C,GAAiBpR,IAAAA,EAAMmK,IACvBA,IAAWA,EAAS/F,IAAAA;2BACb+F,GACX;gBAAA;YACF;YAEA,IAAkB,eAAdnK,IAAAA,CAAK7C,IAAAA,EACP,IAAK,IAAMuR,KAAYxE,EAASzM,UAAAA,CAAY;gBAC1C0M,IAAWD,EAASzM,UAAAA,CAAWiR,EAAAA;gBAE/B,GACE0C,GAAiBpR,IAAAA,EAAMmK,IACvBA,IAAWA,EAAS/F,IAAAA;uBACb+F,GACX;YAAA;YAIFnK,IAAAA,CAAK3C,MAAAA,CAAa,MAAA,CAACwR,IAGnB7O,IAAAA,CAAKoC,IAAAA,CAAK,eAAe;gBACvByD,KAAKgJ;gBACLnQ,YAAYwL,EAASxL,UAAAA;YAAAA;QAEzB,GAEAsT,EAcAoC,QAAAA,GAAA,SAAS7W,CAAAA;YACP,IAAI4M;YAEJ,IAAIxN,UAAUG,MAAAA,GAAS,GAAG;gBACxB,IAAMI,IAAS,KAAKP,SAAAA,CAAU,EAAA,EACxBD,IAAS,KAAKC,SAAAA,CAAU,EAAA;gBAI9B,IAAA,CAFAwN,CAAAA,IAAWnN,EAAgBgD,IAAAA,EAAM9C,GAAQR,GAAQsD,IAAAA,CAAK7C,IAAAA,CAAAA,GAGpD,MAAM,IAAI+K,EAC+BhL,uCAAAA,MAAAA,CAAAA,GAAeR,UAAAA,MAAAA,CAAAA,GACvD;YACL,OAKE,IAJAa,IAAO,KAAKA,GAAAA,CAEZ4M,CAAAA,IAAWnK,IAAAA,CAAKsK,MAAAA,CAAOhN,GAAAA,CAAIC,EAAAA,GAGzB,MAAM,IAAI2K,EAAkB,uCAAAxI,MAAAA,CACanC,GACxC;YAKL,OAFA6T,GAAiBpR,IAAAA,EAAMmK,IAEhBnK,IACT;QAAA,GAEAgS,EAUAqC,gBAAAA,GAAA,SAAiBnX,CAAAA,EAAQR,CAAAA;YACvB,IAAIC,UAAUG,MAAAA,GAAS,GACrB,MAAM,IAAIuL,EACR;YAGJ,IAAIrI,IAAAA,CAAKuL,KAAAA,EACP,MAAM,IAAIlD,EACR;YAMJ,IAAM8B,IAAWnN,EAAgBgD,IAAAA,EAHjC9C,IAAS,KAAKA,GACdR,IAAS,KAAKA,GAEyC;YAEvD,IAAA,CAAKyN,GACH,MAAM,IAAIjC,EACqChL,6CAAAA,MAAAA,CAAAA,GAAeR,UAAAA,MAAAA,CAAAA,GAC7D;YAIH,OAFA0U,GAAiBpR,IAAAA,EAAMmK,IAEhBnK,IACT;QAAA,GAEAgS,EAUAsC,kBAAAA,GAAA,SAAmBpX,CAAAA,EAAQR,CAAAA;YACzB,IAAIC,UAAUG,MAAAA,GAAS,GACrB,MAAM,IAAIuL,EACR;YAGJ,IAAIrI,IAAAA,CAAKuL,KAAAA,EACP,MAAM,IAAIlD,EACR;YAGJ,IAAM8B,IAAWnN,EAAgBgD,IAAAA,EAAM9C,GAAQR,GAAQ;YAEvD,IAAA,CAAKyN,GACH,MAAM,IAAIjC,EACuChL,+CAAAA,MAAAA,CAAAA,GAAeR,UAAAA,MAAAA,CAAAA,GAC/D;YAIH,OAFA0U,GAAiBpR,IAAAA,EAAMmK,IAEhBnK,IACT;QAAA,GAEAgS,EAKAvJ,KAAAA,GAAA;YAEEzI,IAAAA,CAAKsK,MAAAA,CAAO7B,KAAAA,IAGZzI,IAAAA,CAAK3C,MAAAA,CAAOoL,KAAAA,IAGZzI,IAAAA,CAAKiS,sBAAAA,IAGLjS,IAAAA,CAAKoC,IAAAA,CAAK;QACZ,GAEA4P,EAKAuC,UAAAA,GAAA;YAME,IAJA,IAEIlN,GAFEnB,IAAWlG,IAAAA,CAAK3C,MAAAA,CAAO4P,MAAAA,IAAAA,CAImB,MAAA,AAAvC5F,CAAAA,IAAOnB,EAAS9B,IAAAA,EAAAA,EAAciC,IAAAA,EACrCgB,EAAK1J,KAAAA,CAAM8K,KAAAA;YAIbzI,IAAAA,CAAKsK,MAAAA,CAAO7B,KAAAA,IAGZzI,IAAAA,CAAKiS,sBAAAA,IAGLjS,IAAAA,CAAKoC,IAAAA,CAAK;QACZ,GAOA4P,EAMAwC,YAAAA,GAAA,SAAaxW,CAAAA;YACX,OAAOgC,IAAAA,CAAKyU,WAAAA,CAAYzW,EAC1B;QAAA,GAEAgU,EAKA0C,aAAAA,GAAA;YACE,OAAO1U,IAAAA,CAAKyU,WACd;QAAA,GAEAzC,EAMA2C,YAAAA,GAAA,SAAa3W,CAAAA;YACX,OAAOgC,IAAAA,CAAKyU,WAAAA,CAAY3J,cAAAA,CAAe9M;QACzC,GAEAgU,EAOA4C,YAAAA,GAAA,SAAa5W,CAAAA,EAAML,CAAAA;YAUjB,OATAqC,IAAAA,CAAKyU,WAAAA,CAAYzW,EAAAA,GAAQL,GAGzBqC,IAAAA,CAAKoC,IAAAA,CAAK,qBAAqB;gBAC7BjF,MAAM;gBACNuB,YAAYsB,IAAAA,CAAKyU,WAAAA;gBACjBzW,MAAAA;YAAAA,IAGKgC,IACT;QAAA,GAEAgS,EAOA6C,eAAAA,GAAA,SAAgB7W,CAAAA,EAAMiN,CAAAA;YACpB,IAAuB,cAAA,OAAZA,GACT,MAAM,IAAIpD,EACR;YAGJ,IAAMlK,IAAQqC,IAAAA,CAAKyU,WAAAA,CAAYzW,EAAAA;YAW/B,OATAgC,IAAAA,CAAKyU,WAAAA,CAAYzW,EAAAA,GAAQiN,EAAQtN,IAGjCqC,IAAAA,CAAKoC,IAAAA,CAAK,qBAAqB;gBAC7BjF,MAAM;gBACNuB,YAAYsB,IAAAA,CAAKyU,WAAAA;gBACjBzW,MAAAA;YAAAA,IAGKgC,IACT;QAAA,GAEAgS,EAMA8C,eAAAA,GAAA,SAAgB9W,CAAAA;YAUd,OAAA,OATOgC,IAAAA,CAAKyU,WAAAA,CAAYzW,EAAAA,EAGxBgC,IAAAA,CAAKoC,IAAAA,CAAK,qBAAqB;gBAC7BjF,MAAM;gBACNuB,YAAYsB,IAAAA,CAAKyU,WAAAA;gBACjBzW,MAAAA;YAAAA,IAGKgC,IACT;QAAA,GAEAgS,EAQA+C,iBAAAA,GAAA,SAAkBrW,CAAAA;YAChB,IAAA,CAAKhB,EAAcgB,IACjB,MAAM,IAAImJ,EACR;YAWJ,OARA7H,IAAAA,CAAKyU,WAAAA,GAAc/V,GAGnBsB,IAAAA,CAAKoC,IAAAA,CAAK,qBAAqB;gBAC7BjF,MAAM;gBACNuB,YAAYsB,IAAAA,CAAKyU,WAAAA;YAAAA,IAGZzU,IACT;QAAA,GAEAgS,EAQAgD,eAAAA,GAAA,SAAgBtW,CAAAA;YACd,IAAA,CAAKhB,EAAcgB,IACjB,MAAM,IAAImJ,EACR;YAYJ,OATApL,EAAOuD,IAAAA,CAAKyU,WAAAA,EAAa/V,IAGzBsB,IAAAA,CAAKoC,IAAAA,CAAK,qBAAqB;gBAC7BjF,MAAM;gBACNuB,YAAYsB,IAAAA,CAAKyU,WAAAA;gBACjB7J,MAAMlM;YAAAA,IAGDsB,IACT;QAAA,GAEAgS,EAQAiD,gBAAAA,GAAA,SAAiBhK,CAAAA;YACf,IAAuB,cAAA,OAAZA,GACT,MAAM,IAAIpD,EACR;YAWJ,OARA7H,IAAAA,CAAKyU,WAAAA,GAAcxJ,EAAQjL,IAAAA,CAAKyU,WAAAA,GAGhCzU,IAAAA,CAAKoC,IAAAA,CAAK,qBAAqB;gBAC7BjF,MAAM;gBACNuB,YAAYsB,IAAAA,CAAKyU,WAAAA;YAAAA,IAGZzU,IACT;QAAA,GAEAgS,EAMAkD,wBAAAA,GAAA,SAAyBjK,CAAAA,EAASxM,CAAAA;YAChC,IAAuB,cAAA,OAAZwM,GACT,MAAM,IAAIpD,EACR;YAGJ,IAAIpJ,KAAAA,CAAUD,EAAcC,IAC1B,MAAM,IAAIoJ,EACR;YAOJ,IAJA,IAEIR,GAAM6C,GAFJhE,IAAWlG,IAAAA,CAAK3C,MAAAA,CAAO4P,MAAAA,IAAAA,CAImB,MAAA,AAAvC5F,CAAAA,IAAOnB,EAAS9B,IAAAA,EAAAA,EAAciC,IAAAA,EAAAA,AACrC6D,CAAAA,IAAW7C,EAAK1J,KAAAA,AAAAA,EACPe,UAAAA,GAAauM,EAAQf,EAASrE,GAAAA,EAAKqE,EAASxL,UAAAA;YAGvDsB,IAAAA,CAAKoC,IAAAA,CAAK,6BAA6B;gBACrC3D,OAAOA,KAAgB;YAAA;QAE3B,GAEAuT,EAMAmD,wBAAAA,GAAA,SAAyBlK,CAAAA,EAASxM,CAAAA;YAChC,IAAuB,cAAA,OAAZwM,GACT,MAAM,IAAIpD,EACR;YAGJ,IAAIpJ,KAAAA,CAAUD,EAAcC,IAC1B,MAAM,IAAIoJ,EACR;YAOJ,IAJA,IAEIR,GAAM8C,GAAU/M,GAAYoP,GAF1BtG,IAAWlG,IAAAA,CAAKsK,MAAAA,CAAO2C,MAAAA,IAAAA,CAImB,MAAA,AAAvC5F,CAAAA,IAAOnB,EAAS9B,IAAAA,EAAAA,EAAciC,IAAAA,EAErCjJ,IAAAA,AADA+M,CAAAA,IAAW9C,EAAK1J,KAAAA,AAAAA,EACMT,MAAAA,EACtBsP,IAAarC,EAASzN,MAAAA,EAEtByN,EAASzL,UAAAA,GAAauM,EACpBd,EAAStE,GAAAA,EACTsE,EAASzL,UAAAA,EACTtB,EAAWyI,GAAAA,EACX2G,EAAW3G,GAAAA,EACXzI,EAAWsB,UAAAA,EACX8N,EAAW9N,UAAAA,EACXyL,EAAS1M,UAAAA;YAIbuC,IAAAA,CAAKoC,IAAAA,CAAK,6BAA6B;gBACrC3D,OAAOA,KAAgB;YAAA;QAE3B,GAOAuT,EAKAoD,qBAAAA,GAAA,SAAsBpJ,CAAAA;YACpB,IAAwB,cAAA,OAAbA,GACT,MAAM,IAAInE,EACR;YAGJsH,GAAAA,CAAiB,GAAA,CAAO,GAAA,CAAO,GAAOnP,IAAAA,EAAMgM;QAAAA,GAC7CgG,EACDqD,gCAAAA,GAAA,SAAiCrJ,CAAAA;YAC/B,IAAwB,cAAA,OAAbA,GACT,MAAM,IAAInE,EACR;YAGJsH,GAAAA,CAAiB,GAAA,CAAO,GAAA,CAAO,GAAMnP,IAAAA,EAAMgM;QAC7C,GAEAgG,EAKAsD,+BAAAA,GAAA,SAAgCtJ,CAAAA;YAC9B,IAAwB,cAAA,OAAbA,GACT,MAAM,IAAInE,EACR;YAGJsH,GAAAA,CAAiB,GAAA,CAAO,GAAA,CAAM,GAAOnP,IAAAA,EAAMgM;QAAAA,GAC5CgG,EACDuD,0CAAAA,GAAA,SAA2CvJ,CAAAA;YACzC,IAAwB,cAAA,OAAbA,GACT,MAAM,IAAInE,EACR;YAGJsH,GAAAA,CAAiB,GAAA,CAAO,GAAA,CAAM,GAAMnP,IAAAA,EAAMgM;QAC5C,GAEAgG,EAKAwD,KAAAA,GAAA;YACE,OAA0B,cAAA,OAAf7W,MAAMkO,IAAAA,GAA4BlO,MAAMkO,IAAAA,CAAK7M,IAAAA,CAAK3C,MAAAA,CAAOyI,IAAAA,MAE7DqB,EAAKnH,IAAAA,CAAK3C,MAAAA,CAAOyI,IAAAA,IAAQ9F,IAAAA,CAAK3C,MAAAA,CAAOuP,IAAAA;QAC9C,GAEAoF,EAKAyD,WAAAA,GAAA,SAAYzJ,CAAAA;YACV,IAAwB,cAAA,OAAbA,GACT,MAAM,IAAInE,EACR;YAOJ,IAJA,IAEIR,GAAM6C,GAFJhE,IAAWlG,IAAAA,CAAK3C,MAAAA,CAAO4P,MAAAA,IAAAA,CAImB,MAAA,AAAvC5F,CAAAA,IAAOnB,EAAS9B,IAAAA,EAAAA,EAAciC,IAAAA,EAErC2F,EAAAA,AADA9B,CAAAA,IAAW7C,EAAK1J,KAAAA,AAAAA,EACEkI,GAAAA,EAAKqE,EAASxL,UAAAA;QAEpC,GAEAsT,EAMA0D,QAAAA,GAAA,SAAS1J,CAAAA;YACP,IAAwB,cAAA,OAAbA,GACT,MAAM,IAAInE,EACR;YAOJ,IAJA,IAEIR,GAAM6C,GAFJhE,IAAWlG,IAAAA,CAAK3C,MAAAA,CAAO4P,MAAAA,IAAAA,CAImB,MAAA,AAAvC5F,CAAAA,IAAOnB,EAAS9B,IAAAA,EAAAA,EAAciC,IAAAA,EAGrC,IAAI2F,EAAAA,AAFJ9B,CAAAA,IAAW7C,EAAK1J,KAAAA,AAAAA,EAEMkI,GAAAA,EAAKqE,EAASxL,UAAAA,GAAa,OAAOwL,EAASrE,GAIrE;QAAA,GAEAmM,EAKA2D,QAAAA,GAAA,SAAS3J,CAAAA;YACP,IAAwB,cAAA,OAAbA,GACT,MAAM,IAAInE,EACR;YAUJ,IAPA,IAEIR,GAAM6C,GAFJhE,IAAWlG,IAAAA,CAAK3C,MAAAA,CAAO4P,MAAAA,IAIvB2I,IAAS,IAAIjX,MAAMqB,IAAAA,CAAK6V,KAAAA,GAC1BjZ,IAAI,GAAA,CAEwC,MAAA,AAAvCyK,CAAAA,IAAOnB,EAAS9B,IAAAA,EAAAA,EAAciC,IAAAA,EACrC6D,IAAW7C,EAAK1J,KAAAA,EAChBiY,CAAAA,CAAOhZ,IAAAA,GAAOoP,EAAS9B,EAASrE,GAAAA,EAAKqE,EAASxL,UAAAA;YAGhD,OAAOkX;QACT,GAEA5D,EAKA8D,QAAAA,GAAA,SAAS9J,CAAAA;YACP,IAAwB,cAAA,OAAbA,GACT,MAAM,IAAInE,EACR;YAOJ,IAJA,IAEIR,GAAM6C,GAFJhE,IAAWlG,IAAAA,CAAK3C,MAAAA,CAAO4P,MAAAA,IAAAA,CAImB,MAAA,AAAvC5F,CAAAA,IAAOnB,EAAS9B,IAAAA,EAAAA,EAAciC,IAAAA,EAGrC,IAAI2F,EAAAA,AAFJ9B,CAAAA,IAAW7C,EAAK1J,KAAAA,AAAAA,EAEMkI,GAAAA,EAAKqE,EAASxL,UAAAA,GAAa,OAAA,CAAO;YAG1D,OAAA,CAAO;QACT,GAEAsT,EAKA+D,SAAAA,GAAA,SAAU/J,CAAAA;YACR,IAAwB,cAAA,OAAbA,GACT,MAAM,IAAInE,EACR;YAOJ,IAJA,IAEIR,GAAM6C,GAFJhE,IAAWlG,IAAAA,CAAK3C,MAAAA,CAAO4P,MAAAA,IAAAA,CAImB,MAAA,AAAvC5F,CAAAA,IAAOnB,EAAS9B,IAAAA,EAAAA,EAAciC,IAAAA,EAGrC,IAAA,CAAK2F,EAAAA,AAFL9B,CAAAA,IAAW7C,EAAK1J,KAAAA,AAAAA,EAEOkI,GAAAA,EAAKqE,EAASxL,UAAAA,GAAa,OAAA,CAAO;YAG3D,OAAA,CAAO;QACT,GAEAsT,EAKAgE,WAAAA,GAAA,SAAYhK,CAAAA;YACV,IAAwB,cAAA,OAAbA,GACT,MAAM,IAAInE,EACR;YASJ,IANA,IAEIR,GAAM6C,GAFJhE,IAAWlG,IAAAA,CAAK3C,MAAAA,CAAO4P,MAAAA,IAIvB2I,IAAS,EAAA,EAAA,CAEiC,MAAA,AAAvCvO,CAAAA,IAAOnB,EAAS9B,IAAAA,EAAAA,EAAciC,IAAAA,EAGjC2F,EAAAA,AAFJ9B,CAAAA,IAAW7C,EAAK1J,KAAAA,AAAAA,EAEMkI,GAAAA,EAAKqE,EAASxL,UAAAA,KAClCkX,EAAOtT,IAAAA,CAAK4H,EAASrE,GAAAA;YAGzB,OAAO+P;QACT,GAEA5D,EAKAiE,WAAAA,GAAA,SAAYjK,CAAAA,EAAUkK,CAAAA;YACpB,IAAwB,cAAA,OAAblK,GACT,MAAM,IAAInE,EACR;YAGJ,IAAIlL,UAAUG,MAAAA,GAAS,GACrB,MAAM,IAAI+K,EACR;YASJ,IANA,IAIIR,GAAM6C,GAJNiM,IAAcD,GAEZhQ,IAAWlG,IAAAA,CAAK3C,MAAAA,CAAO4P,MAAAA,IAAAA,CAImB,MAAA,AAAvC5F,CAAAA,IAAOnB,EAAS9B,IAAAA,EAAAA,EAAciC,IAAAA,EAErC8P,IAAcnK,EAASmK,GAAAA,AADvBjM,CAAAA,IAAW7C,EAAK1J,KAAAA,AAAAA,EAC6BkI,GAAAA,EAAKqE,EAASxL,UAAAA;YAG7D,OAAOyX;QACT,GAEAnE,EAKAoE,WAAAA,GAAA;YACE,IAAMlQ,IAAWlG,IAAAA,CAAK3C,MAAAA,CAAO4P,MAAAA;YAE7B,OAAO,IAAI9I,EAAS;gBAClB,IAAMkD,IAAOnB,EAAS9B,IAAAA;gBAEtB,IAAIiD,EAAKhB,IAAAA,EAAM,OAAOgB;gBAEtB,IAAMuD,IAAOvD,EAAK1J,KAAAA;gBAElB,OAAO;oBACLA,OAAO;wBAACkR,MAAMjE,EAAK/E,GAAAA;wBAAKnH,YAAYkM,EAAKlM,UAAAA;oBAAAA;oBACzC2H,MAAAA,CAAM;gBAAA;YAEV;QACF,GAOA2L,EAAA,MAAA,GAKA;YAAS,IAAAjK,IAAA/H,IAAAA,EACDwV,IAAQ,IAAI7W,MAAMqB,IAAAA,CAAK3C,MAAAA,CAAOuP,IAAAA,GAEhChQ,IAAI;YAERoD,IAAAA,CAAK3C,MAAAA,CAAOwU,OAAAA,CAAQ,SAACjH,CAAAA,EAAM/E,CAAAA;gBACzB2P,CAAAA,CAAM5Y,IAAAA,GD3gFL,SAAuBiJ,CAAAA,EAAK+E,CAAAA;oBACjC,IAAMyL,IAAa;wBAACxQ,KAAAA;oBAAAA;oBAKpB,OAHKhI,EAAQ+M,EAAKlM,UAAAA,KAChB2X,CAAAA,EAAW3X,UAAAA,GAAajC,EAAO,CAAA,GAAImO,EAAKlM,UAAAA,CAAAA,GAEnC2X;gBACT,ECogFiCxQ,GAAK+E;YAClC;YAEA,IAAM8C,IAAQ,IAAI/O,MAAMqB,IAAAA,CAAKsK,MAAAA,CAAOsC,IAAAA;YAQpC,OANAhQ,IAAI,GAEJoD,IAAAA,CAAKsK,MAAAA,CAAOuH,OAAAA,CAAQ,SAACjH,CAAAA,EAAM/E,CAAAA;gBACzB6H,CAAAA,CAAM9Q,IAAAA,GDlgFL,SAAuBO,CAAAA,EAAM0I,CAAAA,EAAK+E,CAAAA;oBACvC,IAAMyL,IAAa;wBACjBxQ,KAAAA;wBACA3I,QAAQ0N,EAAK1N,MAAAA,CAAO2I,GAAAA;wBACpBnJ,QAAQkO,EAAKlO,MAAAA,CAAOmJ,GAAAA;oBAAAA;oBAQtB,OALKhI,EAAQ+M,EAAKlM,UAAAA,KAChB2X,CAAAA,EAAW3X,UAAAA,GAAajC,EAAO,CAAA,GAAImO,EAAKlM,UAAAA,CAAAA,GAE7B,YAATvB,KAAoByN,EAAKnN,UAAAA,IAAY4Y,CAAAA,EAAW5Y,UAAAA,GAAAA,CAAa,CAAA,GAE1D4Y;gBACT,ECq/EiCtO,EAAK5K,IAAAA,EAAM0I,GAAK+E;YAC7C,IAEO;gBACL2G,SAAS;oBACPpU,MAAM6C,IAAAA,CAAK7C,IAAAA;oBACXoO,OAAOvL,IAAAA,CAAKuL,KAAAA;oBACZ0E,gBAAgBjQ,IAAAA,CAAKiQ,cAAAA;gBAAAA;gBAEvBvR,YAAYsB,IAAAA,CAAK0U,aAAAA;gBACjBc,OAAAA;gBACA9H,OAAAA;YAAAA;QAEJ,GAEAsE,EAOA,MAAA,GAAA,SAAOpH,CAAAA;YAAqB,IAuCtBhO,GAAGC,GAAGuI,GAAMyJ,GAAMtR,GAvCI6K,IAAApI,IAAAA,EAAfwW,IAAAA,UAAAA,MAAAA,GAAAA,KAAAA,KAAAA,MAAAA,SAAAA,CAAAA,EAAAA,IAAAA,SAAAA,CAAAA,EAAAA;YAEX,IAAI5L,aAAgByG,GAkBlB,OAhBAzG,EAAK6K,WAAAA,CAAY,SAAC5R,CAAAA,EAAG4S,CAAAA;gBACfD,IAAOpO,EAAK6L,SAAAA,CAAUpQ,GAAG4S,KACxBrO,EAAK4L,OAAAA,CAAQnQ,GAAG4S;YACvB,IAGA7L,EAAKsC,WAAAA,CAAY,SAACwJ,CAAAA,EAAGD,CAAAA,EAAGE,CAAAA,EAAGC,CAAAA,EAAGC,CAAAA,EAAKC,CAAAA,EAAKC,CAAAA;gBAClCP,IACEO,IAAG3O,EAAK4O,0BAAAA,CAA2BN,GAAGC,GAAGC,GAAGH,KAC3CrO,EAAK6O,wBAAAA,CAAyBP,GAAGC,GAAGC,GAAGH,KAExCM,IAAG3O,EAAK8O,wBAAAA,CAAyBR,GAAGC,GAAGC,GAAGH,KACzCrO,EAAK+O,sBAAAA,CAAuBT,GAAGC,GAAGC,GAAGH;YAE9C,IAEOzW,IAAAA;YAIT,IAAA,CAAKtC,EAAckN,IACjB,MAAM,IAAI/C,EACR;YAGJ,IAAI+C,EAAKlM,UAAAA,EAAY;gBACnB,IAAA,CAAKhB,EAAckN,EAAKlM,UAAAA,GACtB,MAAM,IAAImJ,EACR;gBAGA2O,IAAOxW,IAAAA,CAAKgV,eAAAA,CAAgBpK,EAAKlM,UAAAA,IAChCsB,IAAAA,CAAK+U,iBAAAA,CAAkBnK,EAAKlM,UAAAA;YACnC;YAIA,IAAIkM,EAAK4K,KAAAA,EAAO;gBAGd,IAFApQ,IAAOwF,EAAK4K,KAAAA,EAAAA,CAEP7W,MAAMC,OAAAA,CAAQwG,IACjB,MAAM,IAAIyC,EACR;gBAGJ,IAAKjL,IAAI,GAAGC,IAAIuI,EAAKtI,MAAAA,EAAQF,IAAIC,GAAGD,IAAK;oBAIvC2S,GAHAV,IAAOzJ,CAAAA,CAAKxI,EAAAA;oBAMZ,IAAAwa,IAA0BvI,GAAnBhJ,IAAAA,EAAAA,GAAAA,EAAKnH,IAAAA,EAAAA,UAAAA;oBAER8X,IAAOxW,IAAAA,CAAKiU,SAAAA,CAAUpO,GAAKnH,KAC1BsB,IAAAA,CAAKgU,OAAAA,CAAQnO,GAAKnH;gBACzB;YACF;YAEA,IAAIkM,EAAK8C,KAAAA,EAAO;gBACd,IAAI2J,IAAAA,CAAsB;gBAQ1B,IANkB,iBAAdrX,IAAAA,CAAK7C,IAAAA,IACPka,CAAAA,IAAAA,CAAsB,CAAA,GAGxBjS,IAAOwF,EAAK8C,KAAAA,EAAAA,CAEP/O,MAAMC,OAAAA,CAAQwG,IACjB,MAAM,IAAIyC,EACR;gBAGJ,IAAKjL,IAAI,GAAGC,IAAIuI,EAAKtI,MAAAA,EAAQF,IAAIC,GAAGD,IAAK;oBAIvC4S,GAHAjS,IAAO6H,CAAAA,CAAKxI,EAAAA;oBAMZ,IAAA0a,IAKI/Z,GAJFL,IAAAA,EAAAA,MAAAA,EACAR,IAAAA,EAAAA,MAAAA,EACAgC,IAAAA,EAAAA,UAAAA,EAAU6Y,IAAAD,EACV7Z,UAAAA,EAAAA,IAAAA,KAAAA,MAAAA,IAAa4Z,IAAmBE;oBAK9B,SAASha,IAAAA,AACFiZ,CAAAA,IACL/Y,IACEuC,IAAAA,CAAKgX,0BAAAA,GACLhX,IAAAA,CAAKiX,wBAAAA,GACPxZ,IACAuC,IAAAA,CAAKkX,wBAAAA,GACLlX,IAAAA,CAAKmX,sBAAAA,AAAAA,EAEF7X,IAAAA,CAAKU,IAAAA,EAAMzC,EAAKsI,GAAAA,EAAK3I,GAAQR,GAAQgC,KAAAA,AAEnC8X,CAAAA,IACL/Y,IACEuC,IAAAA,CAAKwX,mBAAAA,GACLxX,IAAAA,CAAKyX,iBAAAA,GACPha,IACAuC,IAAAA,CAAK0X,iBAAAA,GACL1X,IAAAA,CAAK2X,eAAAA,AAAAA,EAEFrY,IAAAA,CAAKU,IAAAA,EAAM9C,GAAQR,GAAQgC;gBAEtC;YACF;YAEA,OAAOsB,IACT;QAAA,GAOAgS,EAOA4F,QAAAA,GAAA,SAASrG,CAAAA;YACP,IAAMtU,IAAQ,IAAIoU,EAAM5U,EAAO,CAAE,GAAEuD,IAAAA,CAAK+R,QAAAA,EAAUR;YAElD,OADAtU,EAAM8X,iBAAAA,CAAkBtY,EAAO,CAAA,GAAIuD,IAAAA,CAAK0U,aAAAA,MACjCzX;QACT,GAEA+U,EAOA6F,SAAAA,GAAA,SAAUtG,CAAAA;YACR,IAAMtU,IAAQ+C,IAAAA,CAAK4X,QAAAA,CAASrG;YAU5B,OARAvR,IAAAA,CAAK3C,MAAAA,CAAOwU,OAAAA,CAAQ,SAAC3H,CAAAA,EAAUrE,CAAAA;gBAC7B,IAAMnH,IAAajC,EAAO,CAAE,GAAEyN,EAASxL,UAAAA;gBAGvCwL,IAAW,IAAIjN,EAAMkT,aAAAA,CAActK,GAAKnH,IACxCzB,EAAMI,MAAAA,CAAOgH,GAAAA,CAAIwB,GAAKqE;YACxB,IAEOjN;QACT,GAEA+U,EAMAlO,IAAAA,GAAA,SAAKyN,CAAAA;YAGH,IAC0B,YAAA,OAAA,AAH1BA,CAAAA,IAAUA,KAAW,CAAA,CAAA,EAGJpU,IAAAA,IACfoU,EAAQpU,IAAAA,KAAS6C,IAAAA,CAAK7C,IAAAA,IACL,YAAjBoU,EAAQpU,IAAAA,EAER,MAAM,IAAIkL,EAAe,wDAAA3I,MAAAA,CACiCM,IAAAA,CAAK7C,IAAAA,EAAI,eAAAuC,MAAAA,CAAc6R,EAAQpU,IAAAA,EACxF;YAEH,IAC2B,aAAA,OAAlBoU,EAAQhG,KAAAA,IACfgG,EAAQhG,KAAAA,KAAUvL,IAAAA,CAAKuL,KAAAA,IAAAA,CACL,MAAlBgG,EAAQhG,KAAAA,EAER,MAAM,IAAIlD,EACR;YAGJ,IACoC,aAAA,OAA3BkJ,EAAQtB,cAAAA,IACfsB,EAAQtB,cAAAA,KAAmBjQ,IAAAA,CAAKiQ,cAAAA,IAAAA,CACL,MAA3BsB,EAAQtB,cAAAA,EAER,MAAM,IAAI5H,EACR;YASJ,IANA,IAIIhB,GAAM8C,GAJJlN,IAAQ+C,IAAAA,CAAK6X,SAAAA,CAAUtG,IAEvBrL,IAAWlG,IAAAA,CAAKsK,MAAAA,CAAO2C,MAAAA,IAAAA,CAImB,MAAA,AAAvC5F,CAAAA,IAAOnB,EAAS9B,IAAAA,EAAAA,EAAciC,IAAAA,EAIrC+J,GACEnT,GACA,QAAA,CACA,GAAA,AANFkN,CAAAA,IAAW9C,EAAK1J,KAAAA,AAAAA,EAOLF,UAAAA,EACT0M,EAAStE,GAAAA,EACTsE,EAASjN,MAAAA,CAAO2I,GAAAA,EAChBsE,EAASzN,MAAAA,CAAOmJ,GAAAA,EAChBpJ,EAAO,CAAA,GAAI0N,EAASzL,UAAAA;YAIxB,OAAOzB;QACT,GAOA+U,EAKA8F,MAAAA,GAAA;YACE,OAAO9X,IAAAA,CAAAA,MAAAA;QACT,GAEAgS,EAGA+F,QAAAA,GAAA;YACE,OAAO;QACT,GAEA/F,EAKAgG,OAAAA,GAAA;YAAU,IAAAzP,IAAAvI,IAAAA,EACFwV,IAAQ,CAAA;YACdxV,IAAAA,CAAK3C,MAAAA,CAAOwU,OAAAA,CAAQ,SAACjH,CAAAA,EAAM/E,CAAAA;gBACzB2P,CAAAA,CAAM3P,EAAAA,GAAO+E,EAAKlM,UACpB;YAAA;YAEA,IAAMgP,IAAQ,CAAE,GACduK,IAAa,CAAA;YAEfjY,IAAAA,CAAKsK,MAAAA,CAAOuH,OAAAA,CAAQ,SAACjH,CAAAA,EAAM/E,CAAAA;gBACzB,IAMIqS,GANEtM,IAAYhB,EAAKnN,UAAAA,GAAa,OAAO,MAEvC0a,IAAQ,IAERjb,IAAS0N,EAAK1N,MAAAA,CAAO2I,GAAAA,EACrBnJ,IAASkO,EAAKlO,MAAAA,CAAOmJ,GAAAA;gBAGrB+E,EAAKnN,UAAAA,IAAcP,IAASR,KAC9Bwb,CAAAA,IAAMhb,GACNA,IAASR,GACTA,IAASwb,CAAAA;gBAGX,IAAME,IAAWlb,IAAAA,MAAAA,CAAAA,GAAAA,KAAAA,MAAAA,CAAU0O,GAAS,KAAAlM,MAAAA,CAAIhD,GAAS;gBAE5CmJ,EAAIwS,UAAAA,CAAW,WAET9P,EAAKgD,KAAAA,IAAAA,CAAAA,KACkB,MAArB0M,CAAAA,CAAWG,EAAAA,GACpBH,CAAAA,CAAWG,EAAAA,GAAQ,IAEnBH,CAAAA,CAAWG,EAAAA,IAGbD,KAAYF,GAAAA,MAAAA,CAAAA,CAAAA,CAAWG,EAAAA,EAAS,KAAA,IARhCD,KAAK,IAAAzY,MAAAA,CAAQmG,GAAQ,QAavB6H,CAAAA,CAFAyK,KAASC,EAAAA,GAEMxN,EAAKlM,UACtB;YAAA;YAEA,IAAM4Z,IAAQ,CAAA;YAEd,IAAK,IAAMvb,KAAKiD,IAAAA,CAEZA,IAAAA,CAAK8K,cAAAA,CAAe/N,MAAAA,CACnBgT,GAAczB,GAAAA,CAAIvR,MACA,cAAA,OAAZiD,IAAAA,CAAKjD,EAAAA,IACC,aAAba,EAAOb,MAEPub,CAAAA,CAAAA,CAAMvb,EAAAA,GAAKiD,IAAAA,CAAKjD,EAAAA,AAAAA;YASpB,OANAub,EAAM5Z,UAAAA,GAAasB,IAAAA,CAAKyU,WAAAA,EACxB6D,EAAM9C,KAAAA,GAAQA,GACd8C,EAAM5K,KAAAA,GAAQA,GAEd3P,EAAgBua,GAAO,eAAetY,IAAAA,CAAKiI,WAAAA,GAEpCqQ;QAAAA,GACRjH;IAAA,EAjxEgCvR,EAAAA,OAAAA,CAAAA,YAAAA;IA+xEb,eAAA,OAAXmG,UACToL,CAAAA,GAAMhS,SAAAA,CAAU4G,OAAAA,GAAAA,CAAW,8BAAA,GACzBoL,GAAMhS,SAAAA,CAAU2Y,OAAAA,AAAAA,GA7zFK;QACvB;YACEha,MAAM,SAAAua,CAAAA;gBAAI,OAAA,GAAA7Y,MAAAA,CAAO6Y,GAAI;YAAM;YAC3BC,aAAAA,CAAa;QAAA;QAEf;YACExa,MAAM,SAAAua,CAAAA;gBAAI,OAAA,GAAA7Y,MAAAA,CAAO6Y,GAAI;YAAc;YACnCC,aAAAA,CAAa;YACbrb,MAAM;QAAA;QAER;YACEa,MAAM,SAAAua,CAAAA;gBAAI,OAAA,GAAA7Y,MAAAA,CAAO6Y,GAAI;YAAgB;YACrCC,aAAAA,CAAa;YACbrb,MAAM;QAAA;QAER;YACEa,MAAM,SAAAua,CAAAA;gBAAI,OAAA,GAAA7Y,MAAAA,CAAO6Y,GAAI;YAAA;QAAA;QAEvB;YACEva,MAAM,SAAAua,CAAAA;gBAAI,OAAA,GAAA7Y,MAAAA,CAAO6Y,GAAI;YAAqB;YAC1Cpb,MAAM;QAAA;QAER;YACEa,MAAM,SAAAua,CAAAA;gBAAI,OAAA,GAAA7Y,MAAAA,CAAO6Y,GAAI;YAAuB;YAC5Cpb,MAAM;QAAA;KAAA,CA0yFO0U,OAAAA,CAAQ,SAAAjI,CAAAA;QACvB;YAAC;YAAO;YAAS;SAAA,CAAUiI,OAAAA,CAAQ,SAAA0G,CAAAA;YACjC,IAAMva,IAAO4L,EAAO5L,IAAAA,CAAKua,IACnB/K,IAAc,UAAT+K,IAAiBnI,KAAUS;YAElCjH,EAAO4O,WAAAA,GACTnH,GAAMhS,SAAAA,CAAUrB,EAAAA,GAAQ,SAAUd,CAAAA,EAAQR,CAAAA,EAAQgC,CAAAA;gBAChD,OAAO8O,EACLxN,IAAAA,EACAhC,GAAAA,CACA,GAC+B,iBAA9B4L,CAAAA,EAAOzM,IAAAA,IAAQ6C,IAAAA,CAAK7C,IAAAA,AAAAA,GACrB,MACAD,GACAR,GACAgC,GACS,aAAT6Z;YAAAA,IAIJlH,GAAMhS,SAAAA,CAAUrB,EAAAA,GAAQ,SAAUT,CAAAA,EAAML,CAAAA,EAAQR,CAAAA,EAAQgC,CAAAA;gBACtD,OAAO8O,EACLxN,IAAAA,EACAhC,GAAAA,CACA,GAC+B,iBAA9B4L,CAAAA,EAAOzM,IAAAA,IAAQ6C,IAAAA,CAAK7C,IAAAA,AAAAA,GACrBI,GACAL,GACAR,GACAgC,GACS,aAAT6Z;YAAAA;QAIR;IACF,IP3kFe,SAAqClH,CAAAA;QAClD9G,EAAwBsH,OAAAA,CAAQ,SAA4B4G,CAAAA;YAAA,IAAjBza,IAAAA,EAAAA,IAAAA,EAAMyM,IAAAA,EAAAA,QAAAA;YAE/CA,EAAS4G,GAAOrT,EAAK,SArVZ,IAwVTyM,EAAS4G,GAAOrT,EAAK,WAvVV,IA0VXyM,EAAS4G,GAAOrT,EAAK,WAzVV,IA4VXyM,EAAS4G,GAAOrT,EAAK,aA3VR;QA4Vf;IACF,EOkkF4BqT,KNjrEb,SAAqCA,CAAAA;QAClD/F,EAAwBuG,OAAAA,CAAQ,SAA4B4G,CAAAA;YAAA,IAAjBza,IAAAA,EAAAA,IAAAA,EAAMyM,IAAAA,EAAAA,QAAAA;YAE/CA,EAAS4G,GAAOrT,EAAK,SAAS,UAG9ByM,EAAS4G,GAAOrT,EAAK,iBAAiB,aAGtCyM,EAAS4G,GAAOrT,EAAK,mBAAmB;QAC1C;IACF,EMuqE4BqT,KJzvDb,SAAoCA,CAAAA;QACjD1F,GAAgBkG,OAAAA,CAAQ,SAAAjD,CAAAA;YAAAA,CAllB1B,SAAgClE,CAAAA,EAAOkE,CAAAA;gBACrC,IAAO5Q,IAAyB4Q,EAAzB5Q,IAAAA,EAAMb,IAAmByR,EAAnBzR,IAAAA,EAAMyO,IAAagD,EAAbhD,SAAAA;gBAkBnBlB,EAAMrL,SAAAA,CAAUrB,EAAAA,GAAQ,SAAUd,CAAAA,EAAQR,CAAAA;oBAExC,IAAa,YAATS,KAAkC,YAAd6C,IAAAA,CAAK7C,IAAAA,IAAoBA,MAAS6C,IAAAA,CAAK7C,IAAAA,EAC7D,OAAO,EAAA;oBAET,IAAA,CAAKR,UAAUG,MAAAA,EAAQ,OAAO6P,GAAgB3M,IAAAA,EAAM7C;oBAEpD,IAAyB,MAArBR,UAAUG,MAAAA,EAAc;wBAC1BI,IAAS,KAAKA;wBAEd,IAAMgN,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIJ;wBAEjC,IAAA,KAAwB,MAAbgN,GACT,MAAM,IAAIhC,EACClK,SAAAA,MAAAA,CAAAA,GAA6Bd,0BAAAA,MAAAA,CAAAA,GACvC;wBAGH,OAAOuQ,GACLzN,IAAAA,CAAKuL,KAAAA,EACI,YAATpO,IAAmB6C,IAAAA,CAAK7C,IAAAA,GAAOA,GAC/ByO,GACA1B;oBAEJ;oBAEA,IAAyB,MAArBvN,UAAUG,MAAAA,EAAc;wBAC1BI,IAAS,KAAKA,GACdR,IAAS,KAAKA;wBAEd,IAAMU,IAAa4C,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIJ;wBAEnC,IAAA,CAAKE,GACH,MAAM,IAAI8K,EACClK,SAAAA,MAAAA,CAAAA,GAA8Bd,2BAAAA,MAAAA,CAAAA,GACxC;wBAEH,IAAA,CAAK8C,IAAAA,CAAK3C,MAAAA,CAAOiR,GAAAA,CAAI5R,IACnB,MAAM,IAAIwL,EAAAA,SAAAA,MAAAA,CACClK,GAAI,2BAAA0B,MAAAA,CAA0BhD,GACxC;wBAGH,OAAOmR,GACL1Q,GACA6C,IAAAA,CAAKuL,KAAAA,EACLK,GACAxO,GACAV;oBAEJ;oBAEA,MAAM,IAAImL,EACC7J,SAAAA,MAAAA,CAAAA,GAAAA,sDAAAA,MAAAA,CAAyDrB,UAAUG,MAAAA,EAC7E;gBAAA;YAEL,EAwgB2BuU,GAAOzC,IAhgBlC,SAA2BlE,CAAAA,EAAOkE,CAAAA;gBAChC,IAAO5Q,IAAyB4Q,EAAzB5Q,IAAAA,EAAMb,IAAmByR,EAAnBzR,IAAAA,EAAMyO,IAAagD,EAAbhD,SAAAA,EAEbiN,IAAc,YAAY7a,CAAAA,CAAK,EAAA,CAAG8a,WAAAA,KAAgB9a,EAAK6C,KAAAA,CAAM,GAAA;gBAsBnE6J,EAAMrL,SAAAA,CAAUwZ,EAAAA,GAAe,SAAU3b,CAAAA,EAAQR,CAAAA,EAAQsP,CAAAA;oBAEvD,IAAa,YAAT7O,KAAkC,YAAd6C,IAAAA,CAAK7C,IAAAA,IAAoBA,MAAS6C,IAAAA,CAAK7C,IAAAA,EAA/D;wBAEA,IAAyB,MAArBR,UAAUG,MAAAA,EAEZ,OAAOoQ,GAAAA,CAAY,GAAOlN,IAAAA,EAAM7C,GADhC6O,IAAW9O;wBAIb,IAAyB,MAArBP,UAAUG,MAAAA,EAAc;4BAC1BI,IAAS,KAAKA,GACd8O,IAAWtP;4BAEX,IAAMwN,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIJ;4BAEjC,IAAA,KAAwB,MAAbgN,GACT,MAAM,IAAIhC,EACC2Q,SAAAA,MAAAA,CAAAA,GAAoC3b,0BAAAA,MAAAA,CAAAA,GAC9C;4BAIH,OAAOoQ,GAAAA,CACL,GACAtN,IAAAA,CAAKuL,KAAAA,EACI,YAATpO,IAAmB6C,IAAAA,CAAK7C,IAAAA,GAAOA,GAC/ByO,GACA1B,GACA8B;wBAEJ;wBAEA,IAAyB,MAArBrP,UAAUG,MAAAA,EAAc;4BAC1BI,IAAS,KAAKA,GACdR,IAAS,KAAKA;4BAEd,IAAMU,IAAa4C,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIJ;4BAEnC,IAAA,CAAKE,GACH,MAAM,IAAI8K,EACC2Q,SAAAA,MAAAA,CAAAA,GAAqC3b,2BAAAA,MAAAA,CAAAA,GAC/C;4BAEH,IAAA,CAAK8C,IAAAA,CAAK3C,MAAAA,CAAOiR,GAAAA,CAAI5R,IACnB,MAAM,IAAIwL,EAAAA,SAAAA,MAAAA,CACC2Q,GAAW,2BAAAnZ,MAAAA,CAA0BhD,GAC/C;4BAGH,OAAOkR,GAAAA,CACL,GACAzQ,GACA6C,IAAAA,CAAKuL,KAAAA,EACLK,GACAxO,GACAV,GACAsP;wBAEJ;wBAEA,MAAM,IAAInE,EACCgR,SAAAA,MAAAA,CAAAA,GAAAA,sDAAAA,MAAAA,CAAgElc,UAAUG,MAAAA,EACpF;oBA5DoE;gBAAA;gBAmFvE,IAAMic,IAAU,QAAQ/a,CAAAA,CAAK,EAAA,CAAG8a,WAAAA,KAAgB9a,EAAK6C,KAAAA,CAAM;gBAE3D6J,EAAMrL,SAAAA,CAAU0Z,EAAAA,GAAW;oBACzB,IAGInD,GAHEzW,IAAOR,MAAMU,SAAAA,CAAUwB,KAAAA,CAAMvB,IAAAA,CAAK3C,YAClCqP,IAAW7M,EAAKsG,GAAAA;oBAKtB,IAAoB,MAAhBtG,EAAKrC,MAAAA,EAAc;wBACrB,IAAIA,IAAS;wBAEA,eAATK,KAAqBL,CAAAA,KAAUkD,IAAAA,CAAK8M,cAAAA,AAAAA,GAC3B,iBAAT3P,KAAuBL,CAAAA,KAAUkD,IAAAA,CAAK+M,YAAAA,AAAAA,GAE1C6I,IAAS,IAAIjX,MAAM7B;wBAEnB,IAAIF,IAAI;wBAERuC,EAAKmD,IAAAA,CAAK,SAACoU,CAAAA,EAAGsC,CAAAA,EAAIrC,CAAAA,EAAGC,CAAAA,EAAGqC,CAAAA,EAAIC,CAAAA,EAAInC,CAAAA;4BAC9BnB,CAAAA,CAAOhZ,IAAAA,GAAOoP,EAAS0K,GAAGsC,GAAIrC,GAAGC,GAAGqC,GAAIC,GAAInC;wBAC9C;oBACF,OAKEnB,IAAS,EAAA,EAETzW,EAAKmD,IAAAA,CAAK,SAACoU,CAAAA,EAAGsC,CAAAA,EAAIrC,CAAAA,EAAGC,CAAAA,EAAGqC,CAAAA,EAAIC,CAAAA,EAAInC,CAAAA;wBAC9BnB,EAAOtT,IAAAA,CAAK0J,EAAS0K,GAAGsC,GAAIrC,GAAGC,GAAGqC,GAAIC,GAAInC;oBAC5C;oBAKF,OAFA/W,IAAAA,CAAK6Y,EAAAA,CAAa5Z,KAAAA,CAAMe,IAAAA,EAAMb,IAEvByW;gBAAAA;gBAuBT,IAAMuD,IAAa,WAAWnb,CAAAA,CAAK,EAAA,CAAG8a,WAAAA,KAAgB9a,EAAK6C,KAAAA,CAAM;gBAEjE6J,EAAMrL,SAAAA,CAAU8Z,EAAAA,GAAc;oBAC5B,IAAMha,IAAOR,MAAMU,SAAAA,CAAUwB,KAAAA,CAAMvB,IAAAA,CAAK3C,YAClCqP,IAAW7M,EAAKsG,GAAAA,IAEhBmQ,IAAS,EAAA;oBAQf,OANAzW,EAAKmD,IAAAA,CAAK,SAACoU,CAAAA,EAAGsC,CAAAA,EAAIrC,CAAAA,EAAGC,CAAAA,EAAGqC,CAAAA,EAAIC,CAAAA,EAAInC,CAAAA;wBAC1B/K,EAAS0K,GAAGsC,GAAIrC,GAAGC,GAAGqC,GAAIC,GAAInC,MAAInB,EAAOtT,IAAAA,CAAKoU;oBACpD,IAEA1W,IAAAA,CAAK6Y,EAAAA,CAAa5Z,KAAAA,CAAMe,IAAAA,EAAMb,IAEvByW;gBAAAA;gBA0BT,IAAMwD,IAAa,WAAWpb,CAAAA,CAAK,EAAA,CAAG8a,WAAAA,KAAgB9a,EAAK6C,KAAAA,CAAM;gBAEjE6J,EAAMrL,SAAAA,CAAU+Z,EAAAA,GAAc;oBAC5B,IAiBIpN,GACAkK,GAlBA/W,IAAOR,MAAMU,SAAAA,CAAUwB,KAAAA,CAAMvB,IAAAA,CAAK3C;oBAEtC,IAAIwC,EAAKrC,MAAAA,GAAS,KAAKqC,EAAKrC,MAAAA,GAAS,GACnC,MAAM,IAAI+K,EACCuR,SAAAA,MAAAA,CAAAA,GAAAA,+DAAAA,MAAAA,CAAwEja,EAAKrC,MAAAA,EACvF;oBAGH,IACmC,cAAA,OAA1BqC,CAAAA,CAAKA,EAAKrC,MAAAA,GAAS,EAAA,IACO,cAAA,OAA1BqC,CAAAA,CAAKA,EAAKrC,MAAAA,GAAS,EAAA,EAE1B,MAAM,IAAI+K,EACCuR,SAAAA,MAAAA,CAAAA,GACV;oBAMiB,MAAhBja,EAAKrC,MAAAA,GACPkP,CAAAA,IAAW7M,CAAAA,CAAK,EAAA,EAChB+W,IAAe/W,CAAAA,CAAK,EAAA,EACpBA,IAAO,EAAA,AAAA,IACkB,MAAhBA,EAAKrC,MAAAA,GACdkP,CAAAA,IAAW7M,CAAAA,CAAK,EAAA,EAChB+W,IAAe/W,CAAAA,CAAK,EAAA,EACpBA,IAAO;wBAACA,CAAAA,CAAK,EAAA;qBAAA,AAAA,IACY,MAAhBA,EAAKrC,MAAAA,IACdkP,CAAAA,IAAW7M,CAAAA,CAAK,EAAA,EAChB+W,IAAe/W,CAAAA,CAAK,EAAA,EACpBA,IAAO;wBAACA,CAAAA,CAAK,EAAA;wBAAIA,CAAAA,CAAK,EAAA;qBAAA,AAAA;oBAGxB,IAAIgX,IAAcD;oBAQlB,OANA/W,EAAKmD,IAAAA,CAAK,SAACoU,CAAAA,EAAGsC,CAAAA,EAAIrC,CAAAA,EAAGC,CAAAA,EAAGqC,CAAAA,EAAIC,CAAAA,EAAInC,CAAAA;wBAC9BZ,IAAcnK,EAASmK,GAAaO,GAAGsC,GAAIrC,GAAGC,GAAGqC,GAAIC,GAAInC;oBAC3D,IAEA/W,IAAAA,CAAK6Y,EAAAA,CAAa5Z,KAAAA,CAAMe,IAAAA,EAAMb,IAEvBgX;gBAAAA;YAEX,EAiQsB9E,GAAOzC,IAxP7B,SAAwBlE,CAAAA,EAAOkE,CAAAA;gBAC7B,IAAO5Q,IAAyB4Q,EAAzB5Q,IAAAA,EAAMb,IAAmByR,EAAnBzR,IAAAA,EAAMyO,IAAagD,EAAbhD,SAAAA,EAEb0N,IAAe,SAAStb,CAAAA,CAAK,EAAA,CAAG8a,WAAAA,KAAgB9a,EAAK6C,KAAAA,CAAM,GAAA;gBAsBjE6J,EAAMrL,SAAAA,CAAUia,EAAAA,GAAgB,SAAUpc,CAAAA,EAAQR,CAAAA,EAAQsP,CAAAA;oBAExD,IAAa,YAAT7O,KAAkC,YAAd6C,IAAAA,CAAK7C,IAAAA,IAAoBA,MAAS6C,IAAAA,CAAK7C,IAAAA,EAC7D,OAAA,CAAO;oBAET,IAAyB,MAArBR,UAAUG,MAAAA,EAEZ,OAAOoQ,GAAAA,CAAY,GAAMlN,IAAAA,EAAM7C,GAD/B6O,IAAW9O;oBAIb,IAAyB,MAArBP,UAAUG,MAAAA,EAAc;wBAC1BI,IAAS,KAAKA,GACd8O,IAAWtP;wBAEX,IAAMwN,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIJ;wBAEjC,IAAA,KAAwB,MAAbgN,GACT,MAAM,IAAIhC,EACCoR,SAAAA,MAAAA,CAAAA,GAAqCpc,0BAAAA,MAAAA,CAAAA,GAC/C;wBAIH,OAAOoQ,GAAAA,CACL,GACAtN,IAAAA,CAAKuL,KAAAA,EACI,YAATpO,IAAmB6C,IAAAA,CAAK7C,IAAAA,GAAOA,GAC/ByO,GACA1B,GACA8B;oBAEJ;oBAEA,IAAyB,MAArBrP,UAAUG,MAAAA,EAAc;wBAC1BI,IAAS,KAAKA,GACdR,IAAS,KAAKA;wBAEd,IAAMU,IAAa4C,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIJ;wBAEnC,IAAA,CAAKE,GACH,MAAM,IAAI8K,EACCoR,SAAAA,MAAAA,CAAAA,GAAsCpc,2BAAAA,MAAAA,CAAAA,GAChD;wBAEH,IAAA,CAAK8C,IAAAA,CAAK3C,MAAAA,CAAOiR,GAAAA,CAAI5R,IACnB,MAAM,IAAIwL,EAAAA,SAAAA,MAAAA,CACCoR,GAAY,2BAAA5Z,MAAAA,CAA0BhD,GAChD;wBAGH,OAAOkR,GAAAA,CACL,GACAzQ,GACA6C,IAAAA,CAAKuL,KAAAA,EACLK,GACAxO,GACAV,GACAsP;oBAEJ;oBAEA,MAAM,IAAInE,EACCyR,SAAAA,MAAAA,CAAAA,GAAAA,sDAAAA,MAAAA,CAAiE3c,UAAUG,MAAAA,EACrF;gBAAA;gBAuBH,IAAMyc,IAAW,SAASvb,CAAAA,CAAK,EAAA,CAAG8a,WAAAA,KAAgB9a,EAAK6C,KAAAA,CAAM,GAAA;gBAE7D6J,EAAMrL,SAAAA,CAAUka,EAAAA,GAAY;oBAC1B,IAAMpa,IAAOR,MAAMU,SAAAA,CAAUwB,KAAAA,CAAMvB,IAAAA,CAAK3C,YAClCqP,IAAW7M,EAAKsG,GAAAA;oBAQtB,OANAtG,EAAKmD,IAAAA,CAAK,SAACoU,CAAAA,EAAGsC,CAAAA,EAAIrC,CAAAA,EAAGC,CAAAA,EAAGqC,CAAAA,EAAIC,CAAAA,EAAInC,CAAAA;wBAC9B,OAAO/K,EAAS0K,GAAGsC,GAAIrC,GAAGC,GAAGqC,GAAIC,GAAInC;oBACvC,IAAA,CAAA,CAEc/W,IAAAA,CAAKsZ,EAAAA,CAAcra,KAAAA,CAAMe,IAAAA,EAAMb;gBAAAA;gBA2B/C,IAAMqa,IAAY,UAAUxb,CAAAA,CAAK,EAAA,CAAG8a,WAAAA,KAAgB9a,EAAK6C,KAAAA,CAAM,GAAA;gBAE/D6J,EAAMrL,SAAAA,CAAUma,EAAAA,GAAa;oBAC3B,IAAMra,IAAOR,MAAMU,SAAAA,CAAUwB,KAAAA,CAAMvB,IAAAA,CAAK3C,YAClCqP,IAAW7M,EAAKsG,GAAAA;oBAQtB,OANAtG,EAAKmD,IAAAA,CAAK,SAACoU,CAAAA,EAAGsC,CAAAA,EAAIrC,CAAAA,EAAGC,CAAAA,EAAGqC,CAAAA,EAAIC,CAAAA,EAAInC,CAAAA;wBAC9B,OAAA,CAAQ/K,EAAS0K,GAAGsC,GAAIrC,GAAGC,GAAGqC,GAAIC,GAAInC;oBACxC,IAAA,CAEc/W,IAAAA,CAAKsZ,EAAAA,CAAcra,KAAAA,CAAMe,IAAAA,EAAMb;gBAAAA;YAMjD,EAqFmBkS,GAAOzC,IA7E1B,SAAmClE,CAAAA,EAAOkE,CAAAA;gBACxC,IAAa8K,IAAiC9K,EAAvC5Q,IAAAA,EAAoBb,IAAmByR,EAAnBzR,IAAAA,EAAMyO,IAAagD,EAAbhD,SAAAA,EAE3B5N,IAAO0b,EAAa7Y,KAAAA,CAAM,GAAA,MAAS;gBAkBzC6J,EAAMrL,SAAAA,CAAUrB,EAAAA,GAAQ,SAAUd,CAAAA,EAAQR,CAAAA;oBAExC,IAAa,YAATS,KAAkC,YAAd6C,IAAAA,CAAK7C,IAAAA,IAAoBA,MAAS6C,IAAAA,CAAK7C,IAAAA,EAC7D,OAAOgH,EAASmC,KAAAA;oBAElB,IAAA,CAAK3J,UAAUG,MAAAA,EAAQ,OAAOuQ,GAAmBrN,IAAAA,EAAM7C;oBAEvD,IAAyB,MAArBR,UAAUG,MAAAA,EAAc;wBAC1BI,IAAS,KAAKA;wBAEd,IAAME,IAAa4C,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIJ;wBAEnC,IAAA,CAAKE,GACH,MAAM,IAAI8K,EACClK,SAAAA,MAAAA,CAAAA,GAA6Bd,0BAAAA,MAAAA,CAAAA,GACvC;wBAGH,OAAOyQ,GAA0BxQ,GAAMyO,GAAWxO;oBACpD;oBAEA,IAAyB,MAArBT,UAAUG,MAAAA,EAAc;wBAC1BI,IAAS,KAAKA,GACdR,IAAS,KAAKA;wBAEd,IAAMU,IAAa4C,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIJ;wBAEnC,IAAA,CAAKE,GACH,MAAM,IAAI8K,EACClK,SAAAA,MAAAA,CAAAA,GAA8Bd,2BAAAA,MAAAA,CAAAA,GACxC;wBAEH,IAAA,CAAK8C,IAAAA,CAAK3C,MAAAA,CAAOiR,GAAAA,CAAI5R,IACnB,MAAM,IAAIwL,EAAAA,SAAAA,MAAAA,CACClK,GAAI,2BAAA0B,MAAAA,CAA0BhD,GACxC;wBAGH,OAAOoR,GAA0B3Q,GAAMyO,GAAWxO,GAAYV;oBAChE;oBAEA,MAAM,IAAImL,EACC7J,SAAAA,MAAAA,CAAAA,GAAAA,sDAAAA,MAAAA,CAAyDrB,UAAUG,MAAAA,EAC7E;gBAAA;YAEL,EAY8BuU,GAAOzC;QACnC;IACF,EIuvD2ByC,KH53EZ,SAAwCA,CAAAA;QACrDtD,GAAoB8D,OAAAA,CAAQ,SAAAjD,CAAAA;YAC1BD,GAA2B0C,GAAOzC,IAlPtC,SAA+BlE,CAAAA,EAAOkE,CAAAA;gBACpC,IAAO5Q,IAAyB4Q,EAAzB5Q,IAAAA,EAAMb,IAAmByR,EAAnBzR,IAAAA,EAAMyO,IAAagD,EAAbhD,SAAAA,EAEbiN,IAAc,YAAY7a,CAAAA,CAAK,EAAA,CAAG8a,WAAAA,KAAgB9a,EAAK6C,KAAAA,CAAM,GAAA;gBAWnE6J,EAAMrL,SAAAA,CAAUwZ,EAAAA,GAAe,SAAUhK,CAAAA,EAAM7C,CAAAA;oBAE7C,IAAa,YAAT7O,KAAkC,YAAd6C,IAAAA,CAAK7C,IAAAA,IAAoBA,MAAS6C,IAAAA,CAAK7C,IAAAA,EAA/D;wBAEA0R,IAAO,KAAKA;wBAEZ,IAAM3E,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIuR;wBAEjC,IAAA,KAAwB,MAAb3E,GACT,MAAM,IAAIhC,EACC2Q,SAAAA,MAAAA,CAAAA,GAAoChK,0BAAAA,MAAAA,CAAAA,GAC9C;wBAGHN,GAAAA,CACE,GACS,YAATpR,IAAmB6C,IAAAA,CAAK7C,IAAAA,GAAOA,GAC/ByO,GACA1B,GACA8B;oBAjBmE;gBAAA;gBA6BvE,IAAM+M,IAAU,QAAQ/a,CAAAA,CAAK,EAAA,CAAG8a,WAAAA,KAAgB9a,EAAK6C,KAAAA,CAAM;gBAE3D6J,EAAMrL,SAAAA,CAAU0Z,EAAAA,GAAW,SAAUlK,CAAAA,EAAM7C,CAAAA;oBAEzC,IAAM4J,IAAS,EAAA;oBAMf,OAJA5V,IAAAA,CAAK6Y,EAAAA,CAAahK,GAAM,SAAChL,CAAAA,EAAG4S,CAAAA;wBAC1Bb,EAAOtT,IAAAA,CAAK0J,EAASnI,GAAG4S;oBAC1B,IAEOb;gBAAAA;gBAWT,IAAMuD,IAAa,WAAWnb,CAAAA,CAAK,EAAA,CAAG8a,WAAAA,KAAgB9a,EAAK6C,KAAAA,CAAM;gBAEjE6J,EAAMrL,SAAAA,CAAU8Z,EAAAA,GAAc,SAAUtK,CAAAA,EAAM7C,CAAAA;oBAC5C,IAAM4J,IAAS,EAAA;oBAMf,OAJA5V,IAAAA,CAAK6Y,EAAAA,CAAahK,GAAM,SAAChL,CAAAA,EAAG4S,CAAAA;wBACtBzK,EAASnI,GAAG4S,MAAIb,EAAOtT,IAAAA,CAAKuB;oBAClC,IAEO+R;gBAAAA;gBAWT,IAAMwD,IAAa,WAAWpb,CAAAA,CAAK,EAAA,CAAG8a,WAAAA,KAAgB9a,EAAK6C,KAAAA,CAAM;gBAEjE6J,EAAMrL,SAAAA,CAAU+Z,EAAAA,GAAc,SAAUvK,CAAAA,EAAM7C,CAAAA,EAAUkK,CAAAA;oBACtD,IAAIvZ,UAAUG,MAAAA,GAAS,GACrB,MAAM,IAAI+K,EACCuR,SAAAA,MAAAA,CAAAA,GACV;oBAEH,IAAIjD,IAAcD;oBAMlB,OAJAlW,IAAAA,CAAK6Y,EAAAA,CAAahK,GAAM,SAAChL,CAAAA,EAAG4S,CAAAA;wBAC1BN,IAAcnK,EAASmK,GAAatS,GAAG4S;oBACzC,IAEON;gBAAAA;YAEX,EA6I0B9E,GAAOzC,IApIjC,SAA4BlE,CAAAA,EAAOkE,CAAAA;gBACjC,IAAO5Q,IAAyB4Q,EAAzB5Q,IAAAA,EAAMb,IAAmByR,EAAnBzR,IAAAA,EAAMyO,IAAagD,EAAbhD,SAAAA,EAEbkO,IAAsB9b,CAAAA,CAAK,EAAA,CAAG8a,WAAAA,KAAgB9a,EAAK6C,KAAAA,CAAM,GAAA,KAEzDkZ,IAAW,SAASD;gBAW1BpP,EAAMrL,SAAAA,CAAU0a,EAAAA,GAAY,SAAUlL,CAAAA,EAAM7C,CAAAA;oBAE1C,IAAa,YAAT7O,KAAkC,YAAd6C,IAAAA,CAAK7C,IAAAA,IAAoBA,MAAS6C,IAAAA,CAAK7C,IAAAA,EAA/D;wBAEA0R,IAAO,KAAKA;wBAEZ,IAAM3E,IAAWlK,IAAAA,CAAK3C,MAAAA,CAAOC,GAAAA,CAAIuR;wBAEjC,IAAA,KAAwB,MAAb3E,GACT,MAAM,IAAIhC,EACC6R,SAAAA,MAAAA,CAAAA,GAAiClL,0BAAAA,MAAAA,CAAAA,GAC3C;wBAGH,OAAON,GAAAA,CACL,GACS,YAATpR,IAAmB6C,IAAAA,CAAK7C,IAAAA,GAAOA,GAC/ByO,GACA1B,GACA8B;oBAjBmE;gBAAA;gBA+BvE,IAAMuN,IAAW,SAASO;gBAE1BpP,EAAMrL,SAAAA,CAAUka,EAAAA,GAAY,SAAU1K,CAAAA,EAAM7C,CAAAA;oBAG1C,OAAA,CAAA,CAFchM,IAAAA,CAAK+Z,EAAAA,CAAUlL,GAAM7C;gBAAAA;gBAiBrC,IAAMwN,IAAY,UAAUM;gBAE5BpP,EAAMrL,SAAAA,CAAUma,EAAAA,GAAa,SAAU3K,CAAAA,EAAM7C,CAAAA;oBAK3C,OAAA,CAJchM,IAAAA,CAAK+Z,EAAAA,CAAUlL,GAAM,SAAChL,CAAAA,EAAG4S,CAAAA;wBACrC,OAAA,CAAQzK,EAASnI,GAAG4S;oBACtB;gBAAA;YAMJ,EAqDuBpF,GAAOzC,IAC1BI,GAA8BqC,GAAOzC;QACvC;IACF,EG03E+ByC;ICr6F/B,IAGM6I,KAAa,SAAAC,CAAAA;QACjB,SAAAD,EAAY3I,CAAAA;YACV,IAAM6I,IAAe3d,EAAO;gBAACU,MAAM;YAAA,GAAaoU;YAEhD,IAAI,WAAW6I,KAAAA,CAAuC,MAAvBA,EAAa7O,KAAAA,EAC1C,MAAM,IAAI1D,EACR;YAGJ,IAA0B,eAAtBuS,EAAajd,IAAAA,EACf,MAAM,IAAI0K,EACR,uCACEuS,EAAajd,IAAAA,GACb;YACF,OAEJgd,EAAA7a,IAAAA,CAAAU,IAAAA,EAAMoa,MAAapa,IACrB;QAAA;QAAC,OAjBgB2H,EAAAuS,GAAAC,IAiBhBD;IAAA,EAjByB7I,KAmBtBgJ,KAAe,SAAAC,CAAAA;QACnB,SAAAD,EAAY9I,CAAAA;YACV,IAAM6I,IAAe3d,EAAO;gBAACU,MAAM;YAAA,GAAeoU;YAElD,IAAI,WAAW6I,KAAAA,CAAuC,MAAvBA,EAAa7O,KAAAA,EAC1C,MAAM,IAAI1D,EACR;YAGJ,IAA0B,iBAAtBuS,EAAajd,IAAAA,EACf,MAAM,IAAI0K,EACR,yCACEuS,EAAajd,IAAAA,GACb;YACF,OAEJmd,EAAAhb,IAAAA,CAAAU,IAAAA,EAAMoa,MAAapa,IACrB;QAAA;QAAC,OAjBkB2H,EAAA0S,GAAAC,IAiBlBD;IAAA,EAjB2BhJ,KAmBxBkJ,KAAU,SAAAC,CAAAA;QACd,SAAAD,EAAYhJ,CAAAA;YACV,IAAM6I,IAAe3d,EAAO;gBAAC8O,OAAAA,CAAO;YAAA,GAAOgG;YAE3C,IAAI,WAAW6I,KAAAA,CAAuC,MAAvBA,EAAa7O,KAAAA,EAC1C,MAAM,IAAI1D,EACR;YACA,OAEJ2S,EAAAlb,IAAAA,CAAAU,IAAAA,EAAMoa,MAAapa,IACrB;QAAA;QAAC,OAVa2H,EAAA4S,GAAAC,IAUbD;IAAA,EAVsBlJ,KAYnBoJ,KAAkB,SAAAC,CAAAA;QACtB,SAAAD,EAAYlJ,CAAAA;YACV,IAAM6I,IAAe3d,EAAO;gBAACU,MAAM;gBAAYoO,OAAAA,CAAO;YAAA,GAAOgG;YAE7D,IAAI,WAAW6I,KAAAA,CAAuC,MAAvBA,EAAa7O,KAAAA,EAC1C,MAAM,IAAI1D,EACR;YAGJ,IAA0B,eAAtBuS,EAAajd,IAAAA,EACf,MAAM,IAAI0K,EACR,4CACEuS,EAAajd,IAAAA,GACb;YACF,OAEJud,EAAApb,IAAAA,CAAAU,IAAAA,EAAMoa,MAAapa,IACrB;QAAA;QAAC,OAjBqB2H,EAAA8S,GAAAC,IAiBrBD;IAAA,EAjB8BpJ,KAmB3BsJ,KAAoB,SAAAC,CAAAA;QACxB,SAAAD,EAAYpJ,CAAAA;YACV,IAAM6I,IAAe3d,EAAO;gBAACU,MAAM;gBAAcoO,OAAAA,CAAO;YAAA,GAAOgG;YAE/D,IAAI,WAAW6I,KAAAA,CAAuC,MAAvBA,EAAa7O,KAAAA,EAC1C,MAAM,IAAI1D,EACR;YAGJ,IAA0B,iBAAtBuS,EAAajd,IAAAA,EACf,MAAM,IAAI0K,EACR,8CACEuS,EAAajd,IAAAA,GACb;YACF,OAEJyd,EAAAtb,IAAAA,CAAAU,IAAAA,EAAMoa,MAAapa,IACrB;QAAA;QAAC,OAjBuB2H,EAAAgT,GAAAC,IAiBvBD;IAAA,EAjBgCtJ;IAuBnC,SAASwJ,GAAuBnQ,CAAAA;QAQ9BA,EAAMmC,IAAAA,GAAO,SAAUjC,CAAAA,EAAM2G,CAAAA;YAE3B,IAAM6I,IAAe3d,EAAO,CAAA,GAAImO,EAAK2G,OAAAA,EAASA,IAExCuJ,IAAW,IAAIpQ,EAAM0P;YAG3B,OAFAU,EAAQ,MAAA,CAAQlQ,IAETkQ;QAAAA;IAEX;IAAA,OAEAD,GAAuBxJ,KACvBwJ,GAAuBX,KACvBW,GAAuBR,KACvBQ,GAAuBN,KACvBM,GAAuBJ,KACvBI,GAAuBF,KAEvBtJ,GAAMA,KAAAA,GAAQA,IACdA,GAAM6I,aAAAA,GAAgBA,IACtB7I,GAAMgJ,eAAAA,GAAkBA,IACxBhJ,GAAMkJ,UAAAA,GAAaA,IACnBlJ,GAAMoJ,kBAAAA,GAAqBA,IAC3BpJ,GAAMsJ,oBAAAA,GAAuBA,IAE7BtJ,GAAMxJ,0BAAAA,GAA6BA,GACnCwJ,GAAMnJ,kBAAAA,GAAqBA,GAC3BmJ,GAAMhJ,eAAAA,GAAkBA,GhBxHxB;AAAA;;;AiB1BA,mBAAmB;;;AAOnB,qDAAa;AANb;AAEA,CAAA,GAAA,kBAAO,AAAD,EAAE,GAAG,CAAC;IAAE,WAAW;AAAG;AAIrB,MAAM;IAIT,YAAY,CAA8C,EAAE,IAAmB,CAAE;QAC7E,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,aAAa;YACb,IAAI,IAAI,CAAC,IAAI,KAAK,QACd,IAAI,CAAC,KAAK,GAAG,EAAE,SAAS;iBAExB,IAAI,CAAC,KAAK,GAAG,EAAE,QAAQ;eAExB,IAAI,aAAa,CAAA,GAAA,kBAAO,AAAD;YAC1B,IAAI,IAAI,CAAC,IAAI,KAAK,QACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA,GAAA,kBAAO,AAAD,EAAE;iBAEzB,IAAI,CAAC,KAAK,GAAG,EAAE,QAAQ;eAG3B,IAAI,IAAI,CAAC,IAAI,KAAK,QACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA,GAAA,kBAAO,AAAD,EAAE;aAEzB,IAAI,CAAC,KAAK,GAAG,OAAO;IAGhC;IAEA,OAAc,KAAK,CAA8C,EAAE,IAAmB,EAAmB;QACrG,OAAO,IAAI,gBAAgB,GAAG;IAClC;IAEO,IAAI,KAAwC,EAAmB;QAClE,IAAI,IAAI,CAAC,IAAI,KAAK,UAAU,IAAI,CAAC,KAAK,YAAY,CAAA,GAAA,kBAAO,AAAD,GAAG;YACvD,MAAM,eAAe,AAAC,iBAAiB,kBAAmB,MAAM,SAAS,KAAK,IAAI,CAAA,GAAA,kBAAO,AAAD,EAAE;YAC1F,OAAO,IAAI,gBAAgB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,eAAe;QAC7D,OAAO;YACH,MAAM,cAAc,AAAC,iBAAiB,kBAAmB,MAAM,QAAQ,KAAK,OAAO;YACnF,OAAO,IAAI,gBAAgB,AAAC,IAAI,CAAC,KAAK,GAAc,aAAa;QACrE;IACJ;IAEO,SAAS,KAAwC,EAAmB;QACvE,IAAI,IAAI,CAAC,IAAI,KAAK,UAAU,IAAI,CAAC,KAAK,YAAY,CAAA,GAAA,kBAAO,AAAD,GAAG;YACvD,MAAM,eAAe,AAAC,iBAAiB,kBAAmB,MAAM,SAAS,KAAK,IAAI,CAAA,GAAA,kBAAO,AAAD,EAAE;YAC1F,OAAO,IAAI,gBAAgB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,eAAe;QAC7D,OAAO;YACH,MAAM,cAAc,AAAC,iBAAiB,kBAAmB,MAAM,QAAQ,KAAK,OAAO;YACnF,OAAO,IAAI,gBAAgB,AAAC,IAAI,CAAC,KAAK,GAAc,aAAa;QACrE;IACJ;IAEO,SAAS,KAAwC,EAAmB;QACvE,IAAI,IAAI,CAAC,IAAI,KAAK,UAAU,IAAI,CAAC,KAAK,YAAY,CAAA,GAAA,kBAAO,AAAD,GAAG;YACvD,MAAM,eAAe,AAAC,iBAAiB,kBAAmB,MAAM,SAAS,KAAK,IAAI,CAAA,GAAA,kBAAO,AAAD,EAAE;YAC1F,OAAO,IAAI,gBAAgB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,eAAe;QAC7D,OAAO;YACH,MAAM,cAAc,AAAC,iBAAiB,kBAAmB,MAAM,QAAQ,KAAK,OAAO;YACnF,OAAO,IAAI,gBAAgB,AAAC,IAAI,CAAC,KAAK,GAAc,aAAa;QACrE;IACJ;IAEO,OAAO,KAAwC,EAAmB;QACrE,IAAI,IAAI,CAAC,IAAI,KAAK,UAAU,IAAI,CAAC,KAAK,YAAY,CAAA,GAAA,kBAAO,AAAD,GAAG;YACvD,MAAM,eAAe,AAAC,iBAAiB,kBAAmB,MAAM,SAAS,KAAK,IAAI,CAAA,GAAA,kBAAO,AAAD,EAAE;YAC1F,IAAI,aAAa,MAAM,IAAI,OAAO,IAAI,gBAAgB,IAAI,CAAA,GAAA,kBAAO,AAAD,EAAE,IAAI;YACtE,OAAO,IAAI,gBAAgB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,eAAe;QACnE,OAAO;YACH,MAAM,cAAc,AAAC,iBAAiB,kBAAmB,MAAM,QAAQ,KAAK,OAAO;YACnF,IAAI,gBAAgB,GAAG,OAAO,IAAI,gBAAgB,IAAI,CAAC,KAAK,KAAK,IAAI,IAAK,AAAC,IAAI,CAAC,KAAK,GAAc,IAAI,WAAW,CAAC,UAAW;YAC9H,OAAO,IAAI,gBAAgB,AAAC,IAAI,CAAC,KAAK,GAAc,aAAa;QACrE;IACJ;IAEA,OAAc,OAAO,CAAoC,EAAE,CAAoC,EAAE,IAAmB,EAAmB;QACnI,MAAM,OAAO,IAAI,gBAAgB,GAAG;QACpC,MAAM,OAAO,IAAI,gBAAgB,GAAG;QACpC,OAAO,KAAK,MAAM,CAAC;IACvB;IAEO,UAAU,KAAwC,EAAc;QACnE,MAAM,uBAAuB,AAAC,iBAAiB,kBAAmB,QAAQ,IAAI,gBAAgB,OAAO,IAAI,CAAC,IAAI;QAE9G,IAAI,IAAI,CAAC,IAAI,KAAK,UAAU,IAAI,CAAC,KAAK,YAAY,CAAA,GAAA,kBAAO,AAAD,GACpD,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,qBAAqB,SAAS;aACxD;YACH,MAAM,UAAU,IAAI,CAAC,KAAK;YAC1B,MAAM,WAAW,qBAAqB,QAAQ;YAC9C,IAAI,UAAU,UAAU,OAAO;YAC/B,IAAI,UAAU,UAAU,OAAO;YAC/B,OAAO;QACX;IACJ;IAEO,UAAU,KAAwC,EAAW;QAChE,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW;IACrC;IACO,WAAW,KAAwC,EAAW;QACjE,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW;IACrC;IACO,cAAc,KAAwC,EAAW;QACpE,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW;IACrC;IACO,oBAAoB,KAAwC,EAAW;QAC1E,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU;IACpC;IACO,uBAAuB,KAAwC,EAAW;QAC7E,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU;IACpC;IAEO,SAAkB;QACrB,IAAI,IAAI,CAAC,KAAK,YAAY,CAAA,GAAA,kBAAO,AAAD,GAC5B,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM;QAE5B,OAAO,IAAI,CAAC,KAAK,KAAK;IAC1B;IAEO,aAAsB;QACzB,IAAI,IAAI,CAAC,KAAK,YAAY,CAAA,GAAA,kBAAO,AAAD,GAC5B,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU;QAEhC,OAAO,AAAC,IAAI,CAAC,KAAK,GAAc;IACpC;IAEO,aAAsB;QACzB,IAAI,IAAI,CAAC,KAAK,YAAY,CAAA,GAAA,kBAAO,AAAD,GAC5B,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU;QAEhC,OAAO,AAAC,IAAI,CAAC,KAAK,GAAc;IACpC;IAEO,MAAuB;QAC1B,IAAI,IAAI,CAAC,KAAK,YAAY,CAAA,GAAA,kBAAO,AAAD,GAC5B,OAAO,IAAI,gBAAgB,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI;QAE1D,OAAO,IAAI,gBAAgB,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,GAAa,IAAI,CAAC,IAAI;IACxE;IAEO,WAAmB;QACtB,IAAI,IAAI,CAAC,KAAK,YAAY,CAAA,GAAA,kBAAO,AAAD,GAC5B,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ;QAE9B,OAAO,IAAI,CAAC,KAAK;IACrB;IAEO,YAAqB;QACxB,IAAI,IAAI,CAAC,KAAK,YAAY,CAAA,GAAA,kBAAO,AAAD,GAC5B,OAAO,IAAI,CAAA,GAAA,kBAAO,AAAD,EAAE,IAAI,CAAC,KAAK;QAEjC,OAAO,IAAI,CAAA,GAAA,kBAAO,AAAD,EAAE,IAAI,CAAC,KAAK;IACjC;IAEO,SAAS,SAAkB,EAAU;QACxC,IAAI,IAAI,CAAC,KAAK,YAAY,CAAA,GAAA,kBAAO,AAAD,GAC5B,OAAO,YAAY,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,aAAa,IAAI,CAAC,KAAK,CAAC,QAAQ;QAE9E,OAAO,YAAY,AAAC,IAAI,CAAC,KAAK,CAAY,WAAW,CAAC,aAAa,AAAC,IAAI,CAAC,KAAK,CAAY,QAAQ;IACtG;AACJ;;;ACpKE,CAAA,SAAU,WAAW;IACrB;IAGA;;;;;;GAMC,GAGD,kGAAkG;IAGhG,kCAAkC;IAClC,uEAAuE;IACzE,IAAI,YAAY,MAEd,mFAAmF;IACnF,0FAA0F;IAC1F,aAAa,KAEb,4BAA4B;IAC5B,WAAW,oBAEX,6CAA6C;IAC7C,OAAO,sgCAEP,oBAAoB;IACpB,KAAK,sgCAGL,mEAAmE;IACnE,WAAW;QAET,sEAAsE;QACtE,qFAAqF;QAErF,8FAA8F;QAC9F,4CAA4C;QAC5C,WAAW;QAEX,uDAAuD;QACvD,EAAE;QACF,qCAAqC;QACrC,mCAAmC;QACnC,wCAAwC;QACxC,wCAAwC;QACxC,oEAAoE;QACpE,sEAAsE;QACtE,wFAAwF;QACxF,mFAAmF;QACnF,mFAAmF;QACnF,EAAE;QACF,OAAO;QACP,0BAA0B;QAC1B,8CAA8C;QAC9C,UAAU;QAEV,8DAA8D;QAC9D,uFAAuF;QACvF,qDAAqD;QACrD,EAAE;QACF,wFAAwF;QACxF,+EAA+E;QAC/E,0EAA0E;QAC1E,gDAAgD;QAChD,qFAAqF;QACrF,EAAE;QACF,0FAA0F;QAC1F,8FAA8F;QAC9F,iDAAiD;QACjD,QAAQ;QAER,mFAAmF;QACnF,yBAAyB;QACzB,UAAU;QAEV,iFAAiF;QACjF,yBAAyB;QACzB,UAAW;QAEX,sEAAsE;QACtE,qCAAqC;QACrC,MAAM,CAAC;QAEP,uEAAuE;QACvE,qDAAqD;QACrD,MAAM;QAEN,kFAAkF;QAClF,QAAQ,MAA+B,aAAa;IACtD,GAGF,kGAAkG;IAGhG,SAAS,SAAS,YAAY,UAC9B,WAAW,MAEX,eAAe,mBACf,kBAAkB,eAAe,sBACjC,yBAAyB,eAAe,4BACxC,oBAAoB,eAAe,sBACnC,MAAM,oBAEN,YAAY,KAAK,KAAK,EACtB,UAAU,KAAK,GAAG,EAElB,WAAW,8CACX,QAAQ,0DACR,UAAU,iDACV,YAAY,sCAEZ,OAAO,KACP,WAAW,GACX,mBAAmB,kBAEnB,iBAAiB,KAAK,MAAM,GAAG,GAC/B,eAAe,GAAG,MAAM,GAAG,GAE3B,2BAA2B;IAC3B,IAAI;QAAE,aAAa;IAAI;IAGzB,4BAA4B;IAG5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6DC,GAGD;;;GAGC,GACD,EAAE,aAAa,GAAG,EAAE,GAAG,GAAG;QACxB,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI;QACjC,IAAI,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG;QACnB,OAAO,SAAS;IAClB;IAGA;;;;GAIC,GACD,EAAE,IAAI,GAAG;QACP,OAAO,SAAS,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG;IAC1D;IAGA;;;;;;;GAOC,GACD,EAAE,SAAS,GAAG,EAAE,KAAK,GAAG,SAAU,GAAG,EAAE,GAAG;QACxC,IAAI,GACF,IAAI,IAAI,EACR,OAAO,EAAE,WAAW;QACtB,MAAM,IAAI,KAAK;QACf,MAAM,IAAI,KAAK;QACf,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO,IAAI,KAAK;QACtC,IAAI,IAAI,EAAE,CAAC,MAAM,MAAM,MAAM,kBAAkB;QAC/C,IAAI,EAAE,GAAG,CAAC;QACV,OAAO,IAAI,IAAI,MAAM,EAAE,GAAG,CAAC,OAAO,IAAI,MAAM,IAAI,KAAK;IACvD;IAGA;;;;;;;GAOC,GACD,EAAE,UAAU,GAAG,EAAE,GAAG,GAAG,SAAU,CAAC;QAChC,IAAI,GAAG,GAAG,KAAK,KACb,IAAI,IAAI,EACR,KAAK,EAAE,CAAC,EACR,KAAK,AAAC,CAAA,IAAI,IAAI,EAAE,WAAW,CAAC,EAAC,EAAG,CAAC,EACjC,KAAK,EAAE,CAAC,EACR,KAAK,EAAE,CAAC;QAEV,2BAA2B;QAC3B,IAAI,CAAC,MAAM,CAAC,IACV,OAAO,CAAC,MAAM,CAAC,KAAK,MAAM,OAAO,KAAK,KAAK,OAAO,KAAK,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI;QAGhF,eAAe;QACf,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,GAAG,KAAK,EAAE,CAAC,EAAE,GAAG,CAAC,KAAK;QAExD,gBAAgB;QAChB,IAAI,OAAO,IAAI,OAAO;QAEtB,qBAAqB;QACrB,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,KAAK,IAAI,IAAI;QAEjD,MAAM,GAAG,MAAM;QACf,MAAM,GAAG,MAAM;QAEf,0BAA0B;QAC1B,IAAK,IAAI,GAAG,IAAI,MAAM,MAAM,MAAM,KAAK,IAAI,GAAG,EAAE,EAAG;YACjD,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,KAAK,IAAI,IAAI;QAC3D;QAEA,mBAAmB;QACnB,OAAO,QAAQ,MAAM,IAAI,MAAM,MAAM,KAAK,IAAI,IAAI;IACpD;IAGA;;;;;;;;;;;;GAYC,GACD,EAAE,MAAM,GAAG,EAAE,GAAG,GAAG;QACjB,IAAI,IAAI,IACN,IAAI,IAAI,EACR,OAAO,EAAE,WAAW;QAEtB,IAAI,CAAC,EAAE,CAAC,EAAE,OAAO,IAAI,KAAK;QAE1B,uBAAuB;QACvB,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,OAAO,IAAI,KAAK;QAE7B,KAAK,KAAK,SAAS;QACnB,KAAK,KAAK,QAAQ;QAClB,KAAK,SAAS,GAAG,KAAK,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM;QAC9C,KAAK,QAAQ,GAAG;QAEhB,IAAI,OAAO,MAAM,iBAAiB,MAAM;QAExC,KAAK,SAAS,GAAG;QACjB,KAAK,QAAQ,GAAG;QAEhB,OAAO,SAAS,YAAY,KAAK,YAAY,IAAI,EAAE,GAAG,KAAK,GAAG,IAAI,IAAI;IACxE;IAGA;;;;;;;;;;;;;;;GAeC,GACD,EAAE,QAAQ,GAAG,EAAE,IAAI,GAAG;QACpB,IAAI,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,SACjC,IAAI,IAAI,EACR,OAAO,EAAE,WAAW;QAEtB,IAAI,CAAC,EAAE,QAAQ,MAAM,EAAE,MAAM,IAAI,OAAO,IAAI,KAAK;QACjD,WAAW;QAEX,oBAAoB;QACpB,IAAI,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,GAAG,GAAG,IAAI;QAE9B,gCAAgC;QAChC,yEAAyE;QAC1E,IAAI,CAAC,KAAK,KAAK,GAAG,CAAC,MAAM,IAAI,GAAG;YAC9B,IAAI,eAAe,EAAE,CAAC;YACtB,IAAI,EAAE,CAAC;YAEP,mEAAmE;YACnE,IAAI,IAAI,AAAC,CAAA,IAAI,EAAE,MAAM,GAAG,CAAA,IAAK,GAAG,KAAM,KAAK,KAAK,KAAK,KAAK,MAAM;YAChE,IAAI,QAAQ,GAAG,IAAI;YAEnB,4DAA4D;YAC5D,IAAI,UAAU,AAAC,CAAA,IAAI,CAAA,IAAK,KAAM,CAAA,IAAI,KAAM,CAAA,IAAI,IAAI,KAAK,CAAA,CAAC;YAEtD,IAAI,KAAK,IAAI,GACX,IAAI,OAAO;iBACN;gBACL,IAAI,EAAE,aAAa;gBACnB,IAAI,EAAE,KAAK,CAAC,GAAG,EAAE,OAAO,CAAC,OAAO,KAAK;YACvC;YAEA,IAAI,IAAI,KAAK;YACb,EAAE,CAAC,GAAG,EAAE,CAAC;QACX,OACE,IAAI,IAAI,KAAK,EAAE,QAAQ;QAGzB,KAAK,AAAC,CAAA,IAAI,KAAK,SAAS,AAAD,IAAK;QAE5B,mBAAmB;QACnB,iCAAiC;QACjC,OAAS;YACP,IAAI;YACJ,KAAK,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC;YACtB,UAAU,GAAG,IAAI,CAAC;YAClB,IAAI,OAAO,QAAQ,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,QAAQ,IAAI,CAAC,KAAK,KAAK,GAAG;YAE/D,uDAAuD;YACvD,IAAI,eAAe,EAAE,CAAC,EAAE,KAAK,CAAC,GAAG,QAAQ,AAAC,CAAA,IAAI,eAAe,EAAE,CAAC,CAAA,EAAG,KAAK,CAAC,GAAG,KAAK;gBAC/E,IAAI,EAAE,KAAK,CAAC,KAAK,GAAG,KAAK;gBAEzB,4FAA4F;gBAC5F,kEAAkE;gBAClE,IAAI,KAAK,UAAU,CAAC,OAAO,KAAK,QAAQ;oBAEtC,yFAAyF;oBACzF,+BAA+B;oBAC/B,IAAI,CAAC,KAAK;wBACR,SAAS,GAAG,IAAI,GAAG;wBAEnB,IAAI,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI;4BAC7B,IAAI;4BACJ;wBACF;oBACF;oBAEA,MAAM;oBACN,MAAM;gBACR,OAAO;oBAEL,iFAAiF;oBACjF,8DAA8D;oBAC9D,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,KAAK;wBAE7C,wCAAwC;wBACxC,SAAS,GAAG,IAAI,GAAG;wBACnB,IAAI,CAAC,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;oBAC9B;oBAEA;gBACF;YACF;QACF;QAEA,WAAW;QAEX,OAAO,SAAS,GAAG,GAAG,KAAK,QAAQ,EAAE;IACvC;IAGA;;;GAGC,GACD,EAAE,aAAa,GAAG,EAAE,EAAE,GAAG;QACvB,IAAI,GACF,IAAI,IAAI,CAAC,CAAC,EACV,IAAI;QAEN,IAAI,GAAG;YACL,IAAI,EAAE,MAAM,GAAG;YACf,IAAI,AAAC,CAAA,IAAI,UAAU,IAAI,CAAC,CAAC,GAAG,SAAQ,IAAK;YAEzC,0DAA0D;YAC1D,IAAI,CAAC,CAAC,EAAE;YACR,IAAI,GAAG,MAAO,IAAI,MAAM,GAAG,KAAK,GAAI;YACpC,IAAI,IAAI,GAAG,IAAI;QACjB;QAEA,OAAO;IACT;IAGA;;;;;;;;;;;;;;;;;;;;GAoBC,GACD,EAAE,SAAS,GAAG,EAAE,GAAG,GAAG,SAAU,CAAC;QAC/B,OAAO,OAAO,IAAI,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC;IAC3C;IAGA;;;;GAIC,GACD,EAAE,kBAAkB,GAAG,EAAE,QAAQ,GAAG,SAAU,CAAC;QAC7C,IAAI,IAAI,IAAI,EACV,OAAO,EAAE,WAAW;QACtB,OAAO,SAAS,OAAO,GAAG,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,KAAK,SAAS,EAAE,KAAK,QAAQ;IAChF;IAGA;;;GAGC,GACD,EAAE,MAAM,GAAG,EAAE,EAAE,GAAG,SAAU,CAAC;QAC3B,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO;IACzB;IAGA;;;;GAIC,GACD,EAAE,KAAK,GAAG;QACR,OAAO,SAAS,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG;IAC1D;IAGA;;;;GAIC,GACD,EAAE,WAAW,GAAG,EAAE,EAAE,GAAG,SAAU,CAAC;QAChC,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK;IACvB;IAGA;;;;GAIC,GACD,EAAE,oBAAoB,GAAG,EAAE,GAAG,GAAG,SAAU,CAAC;QAC1C,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC;QACjB,OAAO,KAAK,KAAK,MAAM;IACzB;IAGA;;;;;;;;;;;;;;;;;;;;;;;;GAwBC,GACD,EAAE,gBAAgB,GAAG,EAAE,IAAI,GAAG;QAC5B,IAAI,GAAG,GAAG,IAAI,IAAI,KAChB,IAAI,IAAI,EACR,OAAO,EAAE,WAAW,EACpB,MAAM,IAAI,KAAK;QAEjB,IAAI,CAAC,EAAE,QAAQ,IAAI,OAAO,IAAI,KAAK,EAAE,CAAC,GAAG,IAAI,IAAI;QACjD,IAAI,EAAE,MAAM,IAAI,OAAO;QAEvB,KAAK,KAAK,SAAS;QACnB,KAAK,KAAK,QAAQ;QAClB,KAAK,SAAS,GAAG,KAAK,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM;QAC9C,KAAK,QAAQ,GAAG;QAChB,MAAM,EAAE,CAAC,CAAC,MAAM;QAEhB,8DAA8D;QAC9D,gDAAgD;QAEhD,sEAAsE;QACtE,qEAAqE;QACrE,IAAI,MAAM,IAAI;YACZ,IAAI,KAAK,IAAI,CAAC,MAAM;YACpB,IAAI,AAAC,CAAA,IAAI,QAAQ,GAAG,EAAC,EAAG,QAAQ;QAClC,OAAO;YACL,IAAI;YACJ,IAAI;QACN;QAEA,IAAI,aAAa,MAAM,GAAG,EAAE,KAAK,CAAC,IAAI,IAAI,KAAK,IAAI;QAEnD,6BAA6B;QAC7B,IAAI,SACF,IAAI,GACJ,KAAK,IAAI,KAAK;QAChB,MAAO,KAAM;YACX,UAAU,EAAE,KAAK,CAAC;YAClB,IAAI,IAAI,KAAK,CAAC,QAAQ,KAAK,CAAC,GAAG,KAAK,CAAC,QAAQ,KAAK,CAAC;QACrD;QAEA,OAAO,SAAS,GAAG,KAAK,SAAS,GAAG,IAAI,KAAK,QAAQ,GAAG,IAAI;IAC9D;IAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6BC,GACD,EAAE,cAAc,GAAG,EAAE,IAAI,GAAG;QAC1B,IAAI,GAAG,IAAI,IAAI,KACb,IAAI,IAAI,EACR,OAAO,EAAE,WAAW;QAEtB,IAAI,CAAC,EAAE,QAAQ,MAAM,EAAE,MAAM,IAAI,OAAO,IAAI,KAAK;QAEjD,KAAK,KAAK,SAAS;QACnB,KAAK,KAAK,QAAQ;QAClB,KAAK,SAAS,GAAG,KAAK,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM;QAC9C,KAAK,QAAQ,GAAG;QAChB,MAAM,EAAE,CAAC,CAAC,MAAM;QAEhB,IAAI,MAAM,GACR,IAAI,aAAa,MAAM,GAAG,GAAG,GAAG;aAC3B;YAEL,qEAAqE;YACrE,6CAA6C;YAC7C,mCAAmC;YAEnC,0EAA0E;YAC1E,gEAAgE;YAChE,oCAAoC;YAEpC,sEAAsE;YACtE,IAAI,MAAM,KAAK,IAAI,CAAC;YACpB,IAAI,IAAI,KAAK,KAAK,IAAI;YAEtB,IAAI,EAAE,KAAK,CAAC,IAAI,QAAQ,GAAG;YAC3B,IAAI,aAAa,MAAM,GAAG,GAAG,GAAG;YAEhC,6BAA6B;YAC7B,IAAI,SACF,KAAK,IAAI,KAAK,IACd,MAAM,IAAI,KAAK,KACf,MAAM,IAAI,KAAK;YACjB,MAAO,KAAM;gBACX,UAAU,EAAE,KAAK,CAAC;gBAClB,IAAI,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,KAAK,CAAC,SAAS,IAAI,CAAC;YAC5D;QACF;QAEA,KAAK,SAAS,GAAG;QACjB,KAAK,QAAQ,GAAG;QAEhB,OAAO,SAAS,GAAG,IAAI,IAAI;IAC7B;IAGA;;;;;;;;;;;;;;;GAeC,GACD,EAAE,iBAAiB,GAAG,EAAE,IAAI,GAAG;QAC7B,IAAI,IAAI,IACN,IAAI,IAAI,EACR,OAAO,EAAE,WAAW;QAEtB,IAAI,CAAC,EAAE,QAAQ,IAAI,OAAO,IAAI,KAAK,EAAE,CAAC;QACtC,IAAI,EAAE,MAAM,IAAI,OAAO,IAAI,KAAK;QAEhC,KAAK,KAAK,SAAS;QACnB,KAAK,KAAK,QAAQ;QAClB,KAAK,SAAS,GAAG,KAAK;QACtB,KAAK,QAAQ,GAAG;QAEhB,OAAO,OAAO,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,KAAK,SAAS,GAAG,IAAI,KAAK,QAAQ,GAAG;IACzE;IAGA;;;;;;;;;;;;;;;;;;GAkBC,GACD,EAAE,aAAa,GAAG,EAAE,IAAI,GAAG;QACzB,IAAI,IAAI,IAAI,EACV,OAAO,EAAE,WAAW,EACpB,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC,IAChB,KAAK,KAAK,SAAS,EACnB,KAAK,KAAK,QAAQ;QAEpB,IAAI,MAAM,IACR,OAAO,MAAM,IAET,EAAE,KAAK,KAAK,MAAM,MAAM,IAAI,MAAM,IAAI,KAAK,KAE3C,IAAI,KAAK;QAGf,IAAI,EAAE,MAAM,IAAI,OAAO,MAAM,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC;QAErD,8DAA8D;QAE9D,KAAK,SAAS,GAAG,KAAK;QACtB,KAAK,QAAQ,GAAG;QAEhB,qDAAqD;QACrD,IAAI,IAAI,KAAK,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,IAAI,IAAI,GAAG,IAAI;QAEnD,KAAK,SAAS,GAAG;QACjB,KAAK,QAAQ,GAAG;QAEhB,OAAO,EAAE,KAAK,CAAC;IACjB;IAGA;;;;;;;;;;;;;;;;;;GAkBC,GACD,EAAE,uBAAuB,GAAG,EAAE,KAAK,GAAG;QACpC,IAAI,IAAI,IACN,IAAI,IAAI,EACR,OAAO,EAAE,WAAW;QAEtB,IAAI,EAAE,GAAG,CAAC,IAAI,OAAO,IAAI,KAAK,EAAE,EAAE,CAAC,KAAK,IAAI;QAC5C,IAAI,CAAC,EAAE,QAAQ,IAAI,OAAO,IAAI,KAAK;QAEnC,KAAK,KAAK,SAAS;QACnB,KAAK,KAAK,QAAQ;QAClB,KAAK,SAAS,GAAG,KAAK,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,MAAM;QACxD,KAAK,QAAQ,GAAG;QAChB,WAAW;QAEX,IAAI,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;QAEpC,WAAW;QACX,KAAK,SAAS,GAAG;QACjB,KAAK,QAAQ,GAAG;QAEhB,OAAO,EAAE,EAAE;IACb;IAGA;;;;;;;;;;;;;;;GAeC,GACD,EAAE,qBAAqB,GAAG,EAAE,KAAK,GAAG;QAClC,IAAI,IAAI,IACN,IAAI,IAAI,EACR,OAAO,EAAE,WAAW;QAEtB,IAAI,CAAC,EAAE,QAAQ,MAAM,EAAE,MAAM,IAAI,OAAO,IAAI,KAAK;QAEjD,KAAK,KAAK,SAAS;QACnB,KAAK,KAAK,QAAQ;QAClB,KAAK,SAAS,GAAG,KAAK,IAAI,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,MAAM;QAC5D,KAAK,QAAQ,GAAG;QAChB,WAAW;QAEX,IAAI,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;QAEnC,WAAW;QACX,KAAK,SAAS,GAAG;QACjB,KAAK,QAAQ,GAAG;QAEhB,OAAO,EAAE,EAAE;IACb;IAGA;;;;;;;;;;;;;;;;;;GAkBC,GACD,EAAE,wBAAwB,GAAG,EAAE,KAAK,GAAG;QACrC,IAAI,IAAI,IAAI,KAAK,KACf,IAAI,IAAI,EACR,OAAO,EAAE,WAAW;QAEtB,IAAI,CAAC,EAAE,QAAQ,IAAI,OAAO,IAAI,KAAK;QACnC,IAAI,EAAE,CAAC,IAAI,GAAG,OAAO,IAAI,KAAK,EAAE,GAAG,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,EAAE,MAAM,KAAK,IAAI;QAEzE,KAAK,KAAK,SAAS;QACnB,KAAK,KAAK,QAAQ;QAClB,MAAM,EAAE,EAAE;QAEV,IAAI,KAAK,GAAG,CAAC,KAAK,MAAM,IAAI,CAAC,EAAE,CAAC,GAAG,GAAG,OAAO,SAAS,IAAI,KAAK,IAAI,IAAI,IAAI;QAE3E,KAAK,SAAS,GAAG,MAAM,MAAM,EAAE,CAAC;QAEhC,IAAI,OAAO,EAAE,IAAI,CAAC,IAAI,IAAI,KAAK,GAAG,KAAK,CAAC,IAAI,MAAM,IAAI;QAEtD,KAAK,SAAS,GAAG,KAAK;QACtB,KAAK,QAAQ,GAAG;QAEhB,IAAI,EAAE,EAAE;QAER,KAAK,SAAS,GAAG;QACjB,KAAK,QAAQ,GAAG;QAEhB,OAAO,EAAE,KAAK,CAAC;IACjB;IAGA;;;;;;;;;;;;;;;;;;;;GAoBC,GACD,EAAE,WAAW,GAAG,EAAE,IAAI,GAAG;QACvB,IAAI,QAAQ,GACV,IAAI,IACJ,IAAI,IAAI,EACR,OAAO,EAAE,WAAW;QAEtB,IAAI,EAAE,MAAM,IAAI,OAAO,IAAI,KAAK;QAEhC,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC;QAChB,KAAK,KAAK,SAAS;QACnB,KAAK,KAAK,QAAQ;QAElB,IAAI,MAAM,IAAI;YAEZ,WAAW;YACX,IAAI,MAAM,GAAG;gBACX,SAAS,MAAM,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC;gBACvC,OAAO,CAAC,GAAG,EAAE,CAAC;gBACd,OAAO;YACT;YAEA,sBAAsB;YACtB,OAAO,IAAI,KAAK;QAClB;QAEA,6DAA6D;QAE7D,KAAK,SAAS,GAAG,KAAK;QACtB,KAAK,QAAQ,GAAG;QAEhB,IAAI,EAAE,GAAG,CAAC,IAAI,KAAK,GAAG,KAAK,CAAC,EAAE,KAAK,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI;QAE5D,KAAK,SAAS,GAAG;QACjB,KAAK,QAAQ,GAAG;QAEhB,OAAO,EAAE,KAAK,CAAC;IACjB;IAGA;;;;;;;;;;;;;;;;;GAiBC,GACD,EAAE,cAAc,GAAG,EAAE,IAAI,GAAG;QAC1B,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,KAAK,IAC7B,IAAI,IAAI,EACR,OAAO,EAAE,WAAW,EACpB,KAAK,KAAK,SAAS,EACnB,KAAK,KAAK,QAAQ;QAEpB,IAAI,CAAC,EAAE,QAAQ,IAAI;YACjB,IAAI,CAAC,EAAE,CAAC,EAAE,OAAO,IAAI,KAAK;YAC1B,IAAI,KAAK,KAAK,cAAc;gBAC1B,IAAI,MAAM,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC;gBAClC,EAAE,CAAC,GAAG,EAAE,CAAC;gBACT,OAAO;YACT;QACF,OAAO,IAAI,EAAE,MAAM,IACjB,OAAO,IAAI,KAAK;aACX,IAAI,EAAE,GAAG,GAAG,EAAE,CAAC,MAAM,KAAK,KAAK,cAAc;YAClD,IAAI,MAAM,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC;YAClC,EAAE,CAAC,GAAG,EAAE,CAAC;YACT,OAAO;QACT;QAEA,KAAK,SAAS,GAAG,MAAM,KAAK;QAC5B,KAAK,QAAQ,GAAG;QAEhB,gFAAgF;QAEhF,qBAAqB;QACrB,oBAAoB;QACpB,8CAA8C;QAE9C,IAAI,KAAK,GAAG,CAAC,IAAI,MAAM,WAAW,IAAI;QAEtC,IAAK,IAAI,GAAG,GAAG,EAAE,EAAG,IAAI,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;QAE7D,WAAW;QAEX,IAAI,KAAK,IAAI,CAAC,MAAM;QACpB,IAAI;QACJ,KAAK,EAAE,KAAK,CAAC;QACb,IAAI,IAAI,KAAK;QACb,KAAK;QAEL,4CAA4C;QAC5C,MAAO,MAAM,IAAK;YAChB,KAAK,GAAG,KAAK,CAAC;YACd,IAAI,EAAE,KAAK,CAAC,GAAG,GAAG,CAAC,KAAK;YAExB,KAAK,GAAG,KAAK,CAAC;YACd,IAAI,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK;YAEvB,IAAI,EAAE,CAAC,CAAC,EAAE,KAAK,KAAK,GAAG,IAAK,IAAI,GAAG,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,IAAI;QAC1D;QAEA,IAAI,GAAG,IAAI,EAAE,KAAK,CAAC,KAAM,IAAI;QAE7B,WAAW;QAEX,OAAO,SAAS,GAAG,KAAK,SAAS,GAAG,IAAI,KAAK,QAAQ,GAAG,IAAI;IAC9D;IAGA;;;GAGC,GACD,EAAE,QAAQ,GAAG;QACX,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC;IACjB;IAGA;;;GAGC,GACD,EAAE,SAAS,GAAG,EAAE,KAAK,GAAG;QACtB,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,UAAU,IAAI,CAAC,CAAC,GAAG,YAAY,IAAI,CAAC,CAAC,CAAC,MAAM,GAAG;IACpE;IAGA;;;GAGC,GACD,EAAE,KAAK,GAAG;QACR,OAAO,CAAC,IAAI,CAAC,CAAC;IAChB;IAGA;;;GAGC,GACD,EAAE,UAAU,GAAG,EAAE,KAAK,GAAG;QACvB,OAAO,IAAI,CAAC,CAAC,GAAG;IAClB;IAGA;;;GAGC,GACD,EAAE,UAAU,GAAG,EAAE,KAAK,GAAG;QACvB,OAAO,IAAI,CAAC,CAAC,GAAG;IAClB;IAGA;;;GAGC,GACD,EAAE,MAAM,GAAG;QACT,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK;IACnC;IAGA;;;GAGC,GACD,EAAE,QAAQ,GAAG,EAAE,EAAE,GAAG,SAAU,CAAC;QAC7B,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK;IACvB;IAGA;;;GAGC,GACD,EAAE,iBAAiB,GAAG,EAAE,GAAG,GAAG,SAAU,CAAC;QACvC,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK;IACvB;IAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6BC,GACD,EAAE,SAAS,GAAG,EAAE,GAAG,GAAG,SAAU,IAAI;QAClC,IAAI,UAAU,GAAG,aAAa,GAAG,KAAK,KAAK,IAAI,GAC7C,MAAM,IAAI,EACV,OAAO,IAAI,WAAW,EACtB,KAAK,KAAK,SAAS,EACnB,KAAK,KAAK,QAAQ,EAClB,QAAQ;QAEV,sBAAsB;QACtB,IAAI,QAAQ,MAAM;YAChB,OAAO,IAAI,KAAK;YAChB,WAAW;QACb,OAAO;YACL,OAAO,IAAI,KAAK;YAChB,IAAI,KAAK,CAAC;YAEV,+DAA+D;YAC/D,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,KAAK,EAAE,CAAC,IAAI,OAAO,IAAI,KAAK;YAE7D,WAAW,KAAK,EAAE,CAAC;QACrB;QAEA,IAAI,IAAI,CAAC;QAET,uCAAuC;QACvC,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,EAAE,CAAC,IACrC,OAAO,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,KAAK,IAAI,IAAI,CAAC,IAAI,IAAI,MAAM,IAAI,IAAI,IAAI;QAGvE,2FAA2F;QAC3F,uBAAuB;QACvB,IAAI;YACF,IAAI,EAAE,MAAM,GAAG,GACb,MAAM;iBACD;gBACL,IAAK,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,OAAO,GAAI,KAAK;gBACnC,MAAM,MAAM;YACd;;QAGF,WAAW;QACX,KAAK,KAAK;QACV,MAAM,iBAAiB,KAAK;QAC5B,cAAc,WAAW,QAAQ,MAAM,KAAK,MAAM,iBAAiB,MAAM;QAEzE,0CAA0C;QAC1C,IAAI,OAAO,KAAK,aAAa,IAAI;QAEjC,yFAAyF;QACzF,+BAA+B;QAC/B,EAAE;QACF,8FAA8F;QAC9F,yFAAyF;QACzF,kFAAkF;QAClF,2DAA2D;QAC3D,EAAE;QACF,wDAAwD;QACxD,yEAAyE;QACzE,+FAA+F;QAC/F,+FAA+F;QAC/F,2FAA2F;QAC3F,sBAAsB;QACtB,IAAI,oBAAoB,EAAE,CAAC,EAAE,IAAI,IAAI,KAEnC,GAAG;YACD,MAAM;YACN,MAAM,iBAAiB,KAAK;YAC5B,cAAc,WAAW,QAAQ,MAAM,KAAK,MAAM,iBAAiB,MAAM;YACzE,IAAI,OAAO,KAAK,aAAa,IAAI;YAEjC,IAAI,CAAC,KAAK;gBAER,yEAAyE;gBACzE,IAAI,CAAC,eAAe,EAAE,CAAC,EAAE,KAAK,CAAC,IAAI,GAAG,IAAI,MAAM,KAAK,MACnD,IAAI,SAAS,GAAG,KAAK,GAAG;gBAG1B;YACF;QACF,QAAS,oBAAoB,EAAE,CAAC,EAAE,KAAK,IAAI,KAAK;QAGlD,WAAW;QAEX,OAAO,SAAS,GAAG,IAAI;IACzB;IAGA;;;;;;;;;GASC,GAGD;;;;;;;;;GASC,GAGD;;;;;;;;;;;;;;;;;;;;GAoBC,GACD,EAAE,KAAK,GAAG,EAAE,GAAG,GAAG,SAAU,CAAC;QAC3B,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,IAAI,IAAI,IAAI,MAAM,IAC5C,IAAI,IAAI,EACR,OAAO,EAAE,WAAW;QAEtB,IAAI,IAAI,KAAK;QAEb,6BAA6B;QAC7B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;YAEhB,+BAA+B;YAC/B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,IAAI,KAAK;iBAG1B,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC;iBAKnB,IAAI,IAAI,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI;YAE3C,OAAO;QACT;QAEA,qBAAqB;QACrB,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE;YACd,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC;YACV,OAAO,EAAE,IAAI,CAAC;QAChB;QAEA,KAAK,EAAE,CAAC;QACR,KAAK,EAAE,CAAC;QACR,KAAK,KAAK,SAAS;QACnB,KAAK,KAAK,QAAQ;QAElB,uBAAuB;QACvB,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YAEpB,mDAAmD;YACnD,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC;iBAGhB,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,IAAI,KAAK;iBAIxB,OAAO,IAAI,KAAK,OAAO,IAAI,KAAK;YAErC,OAAO,WAAW,SAAS,GAAG,IAAI,MAAM;QAC1C;QAEA,2DAA2D;QAE3D,gCAAgC;QAChC,IAAI,UAAU,EAAE,CAAC,GAAG;QACpB,KAAK,UAAU,EAAE,CAAC,GAAG;QAErB,KAAK,GAAG,KAAK;QACb,IAAI,KAAK;QAET,kCAAkC;QAClC,IAAI,GAAG;YACL,OAAO,IAAI;YAEX,IAAI,MAAM;gBACR,IAAI;gBACJ,IAAI,CAAC;gBACL,MAAM,GAAG,MAAM;YACjB,OAAO;gBACL,IAAI;gBACJ,IAAI;gBACJ,MAAM,GAAG,MAAM;YACjB;YAEA,mFAAmF;YACnF,sFAAsF;YACtF,8EAA8E;YAC9E,IAAI,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,KAAK,WAAW,OAAO;YAE9C,IAAI,IAAI,GAAG;gBACT,IAAI;gBACJ,EAAE,MAAM,GAAG;YACb;YAEA,uCAAuC;YACvC,EAAE,OAAO;YACT,IAAK,IAAI,GAAG,KAAM,EAAE,IAAI,CAAC;YACzB,EAAE,OAAO;QAEX,4BAA4B;QAC5B,OAAO;YAEL,wDAAwD;YAExD,IAAI,GAAG,MAAM;YACb,MAAM,GAAG,MAAM;YACf,OAAO,IAAI;YACX,IAAI,MAAM,MAAM;YAEhB,IAAK,IAAI,GAAG,IAAI,KAAK,IACnB,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE;gBAClB,OAAO,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE;gBACpB;YACF;YAGF,IAAI;QACN;QAEA,IAAI,MAAM;YACR,IAAI;YACJ,KAAK;YACL,KAAK;YACL,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC;QACZ;QAEA,MAAM,GAAG,MAAM;QAEf,mCAAmC;QACnC,wFAAwF;QACxF,IAAK,IAAI,GAAG,MAAM,GAAG,KAAK,IAAI,GAAG,EAAE,EAAG,EAAE,CAAC,MAAM,GAAG;QAElD,uBAAuB;QACvB,IAAK,IAAI,GAAG,MAAM,EAAE,IAAI,GAAI;YAE1B,IAAI,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE;gBACnB,IAAK,IAAI,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE,KAAK,GAAI,EAAE,CAAC,EAAE,GAAG,OAAO;gBAChD,EAAE,EAAE,CAAC,EAAE;gBACP,EAAE,CAAC,EAAE,IAAI;YACX;YAEA,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;QAChB;QAEA,yBAAyB;QACzB,MAAO,EAAE,CAAC,EAAE,IAAI,KAAK,GAAI,GAAG,GAAG;QAE/B,wDAAwD;QACxD,MAAO,EAAE,CAAC,EAAE,KAAK,GAAG,GAAG,KAAK,GAAI,EAAE;QAElC,QAAQ;QACR,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,IAAI,KAAK,OAAO,IAAI,KAAK;QAE5C,EAAE,CAAC,GAAG;QACN,EAAE,CAAC,GAAG,kBAAkB,IAAI;QAE5B,OAAO,WAAW,SAAS,GAAG,IAAI,MAAM;IAC1C;IAGA;;;;;;;;;;;;;;;;;;;;;;;GAuBC,GACD,EAAE,MAAM,GAAG,EAAE,GAAG,GAAG,SAAU,CAAC;QAC5B,IAAI,GACF,IAAI,IAAI,EACR,OAAO,EAAE,WAAW;QAEtB,IAAI,IAAI,KAAK;QAEb,0DAA0D;QAC1D,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,OAAO,IAAI,KAAK;QAEpD,yCAAyC;QACzC,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EACxB,OAAO,SAAS,IAAI,KAAK,IAAI,KAAK,SAAS,EAAE,KAAK,QAAQ;QAG5D,iDAAiD;QACjD,WAAW;QAEX,IAAI,KAAK,MAAM,IAAI,GAAG;YAEpB,sDAAsD;YACtD,oDAAoD;YACpD,IAAI,OAAO,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG;YAC7B,EAAE,CAAC,IAAI,EAAE,CAAC;QACZ,OACE,IAAI,OAAO,GAAG,GAAG,GAAG,KAAK,MAAM,EAAE;QAGnC,IAAI,EAAE,KAAK,CAAC;QAEZ,WAAW;QAEX,OAAO,EAAE,KAAK,CAAC;IACjB;IAGA;;;;;GAKC,GACD,EAAE,kBAAkB,GAAG,EAAE,GAAG,GAAG;QAC7B,OAAO,mBAAmB,IAAI;IAChC;IAGA;;;;GAIC,GACD,EAAE,gBAAgB,GAAG,EAAE,EAAE,GAAG;QAC1B,OAAO,iBAAiB,IAAI;IAC9B;IAGA;;;;GAIC,GACD,EAAE,OAAO,GAAG,EAAE,GAAG,GAAG;QAClB,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI;QACjC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC;QACV,OAAO,SAAS;IAClB;IAGA;;;;;;;;;;;;;;;;;;;;GAoBC,GACD,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,SAAU,CAAC;QAC1B,IAAI,OAAO,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,IAAI,IAAI,IACtC,IAAI,IAAI,EACR,OAAO,EAAE,WAAW;QAEtB,IAAI,IAAI,KAAK;QAEb,6BAA6B;QAC7B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;YAEhB,+BAA+B;YAC/B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,IAAI,KAAK;iBAM1B,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,IAAI,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI;YAErD,OAAO;QACT;QAEC,qBAAqB;QACtB,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE;YACd,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC;YACV,OAAO,EAAE,KAAK,CAAC;QACjB;QAEA,KAAK,EAAE,CAAC;QACR,KAAK,EAAE,CAAC;QACR,KAAK,KAAK,SAAS;QACnB,KAAK,KAAK,QAAQ;QAElB,uBAAuB;QACvB,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YAEpB,yBAAyB;YACzB,6BAA6B;YAC7B,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,IAAI,KAAK;YAEzB,OAAO,WAAW,SAAS,GAAG,IAAI,MAAM;QAC1C;QAEA,2DAA2D;QAE3D,gCAAgC;QAChC,IAAI,UAAU,EAAE,CAAC,GAAG;QACpB,IAAI,UAAU,EAAE,CAAC,GAAG;QAEpB,KAAK,GAAG,KAAK;QACb,IAAI,IAAI;QAER,kCAAkC;QAClC,IAAI,GAAG;YAEL,IAAI,IAAI,GAAG;gBACT,IAAI;gBACJ,IAAI,CAAC;gBACL,MAAM,GAAG,MAAM;YACjB,OAAO;gBACL,IAAI;gBACJ,IAAI;gBACJ,MAAM,GAAG,MAAM;YACjB;YAEA,wEAAwE;YACxE,IAAI,KAAK,IAAI,CAAC,KAAK;YACnB,MAAM,IAAI,MAAM,IAAI,IAAI,MAAM;YAE9B,IAAI,IAAI,KAAK;gBACX,IAAI;gBACJ,EAAE,MAAM,GAAG;YACb;YAEA,qFAAqF;YACrF,EAAE,OAAO;YACT,MAAO,KAAM,EAAE,IAAI,CAAC;YACpB,EAAE,OAAO;QACX;QAEA,MAAM,GAAG,MAAM;QACf,IAAI,GAAG,MAAM;QAEb,4EAA4E;QAC5E,IAAI,MAAM,IAAI,GAAG;YACf,IAAI;YACJ,IAAI;YACJ,KAAK;YACL,KAAK;QACP;QAEA,0FAA0F;QAC1F,IAAK,QAAQ,GAAG,GAAI;YAClB,QAAQ,AAAC,CAAA,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,KAAI,IAAK,OAAO;YACnD,EAAE,CAAC,EAAE,IAAI;QACX;QAEA,IAAI,OAAO;YACT,GAAG,OAAO,CAAC;YACX,EAAE;QACJ;QAEA,yBAAyB;QACzB,6DAA6D;QAC7D,IAAK,MAAM,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE,IAAI,IAAI,GAAI,GAAG,GAAG;QAE7C,EAAE,CAAC,GAAG;QACN,EAAE,CAAC,GAAG,kBAAkB,IAAI;QAE5B,OAAO,WAAW,SAAS,GAAG,IAAI,MAAM;IAC1C;IAGA;;;;;GAKC,GACD,EAAE,SAAS,GAAG,EAAE,EAAE,GAAG,SAAU,CAAC;QAC9B,IAAI,GACF,IAAI,IAAI;QAEV,IAAI,MAAM,KAAK,KAAK,MAAM,CAAC,CAAC,KAAK,MAAM,KAAK,MAAM,GAAG,MAAM,MAAM,kBAAkB;QAEnF,IAAI,EAAE,CAAC,EAAE;YACP,IAAI,aAAa,EAAE,CAAC;YACpB,IAAI,KAAK,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI,EAAE,CAAC,GAAG;QAClC,OACE,IAAI;QAGN,OAAO;IACT;IAGA;;;;GAIC,GACD,EAAE,KAAK,GAAG;QACR,IAAI,IAAI,IAAI,EACV,OAAO,EAAE,WAAW;QAEtB,OAAO,SAAS,IAAI,KAAK,IAAI,EAAE,CAAC,GAAG,GAAG,KAAK,QAAQ;IACrD;IAGA;;;;;;;;;;;;;;GAcC,GACD,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG;QACf,IAAI,IAAI,IACN,IAAI,IAAI,EACR,OAAO,EAAE,WAAW;QAEtB,IAAI,CAAC,EAAE,QAAQ,IAAI,OAAO,IAAI,KAAK;QACnC,IAAI,EAAE,MAAM,IAAI,OAAO,IAAI,KAAK;QAEhC,KAAK,KAAK,SAAS;QACnB,KAAK,KAAK,QAAQ;QAClB,KAAK,SAAS,GAAG,KAAK,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM;QAC9C,KAAK,QAAQ,GAAG;QAEhB,IAAI,KAAK,MAAM,iBAAiB,MAAM;QAEtC,KAAK,SAAS,GAAG;QACjB,KAAK,QAAQ,GAAG;QAEhB,OAAO,SAAS,WAAW,IAAI,EAAE,GAAG,KAAK,GAAG,IAAI,IAAI;IACtD;IAGA;;;;;;;;;;;GAWC,GACD,EAAE,UAAU,GAAG,EAAE,IAAI,GAAG;QACtB,IAAI,GAAG,GAAG,IAAI,GAAG,KAAK,GACpB,IAAI,IAAI,EACR,IAAI,EAAE,CAAC,EACP,IAAI,EAAE,CAAC,EACP,IAAI,EAAE,CAAC,EACP,OAAO,EAAE,WAAW;QAEtB,8BAA8B;QAC9B,IAAI,MAAM,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EACxB,OAAO,IAAI,KAAK,CAAC,KAAK,IAAI,KAAM,CAAA,CAAC,KAAK,CAAC,CAAC,EAAE,AAAD,IAAK,MAAM,IAAI,IAAI,IAAI;QAGlE,WAAW;QAEX,oBAAoB;QACpB,IAAI,KAAK,IAAI,CAAC,CAAC;QAEf,gCAAgC;QAChC,0EAA0E;QAC1E,IAAI,KAAK,KAAK,KAAK,IAAI,GAAG;YACxB,IAAI,eAAe;YAEnB,IAAI,AAAC,CAAA,EAAE,MAAM,GAAG,CAAA,IAAK,KAAK,GAAG,KAAK;YAClC,IAAI,KAAK,IAAI,CAAC;YACd,IAAI,UAAU,AAAC,CAAA,IAAI,CAAA,IAAK,KAAM,CAAA,IAAI,KAAK,IAAI,CAAA;YAE3C,IAAI,KAAK,IAAI,GACX,IAAI,OAAO;iBACN;gBACL,IAAI,EAAE,aAAa;gBACnB,IAAI,EAAE,KAAK,CAAC,GAAG,EAAE,OAAO,CAAC,OAAO,KAAK;YACvC;YAEA,IAAI,IAAI,KAAK;QACf,OACE,IAAI,IAAI,KAAK,EAAE,QAAQ;QAGzB,KAAK,AAAC,CAAA,IAAI,KAAK,SAAS,AAAD,IAAK;QAE5B,4BAA4B;QAC5B,OAAS;YACP,IAAI;YACJ,IAAI,EAAE,IAAI,CAAC,OAAO,GAAG,GAAG,KAAK,GAAG,IAAI,KAAK,CAAC;YAE1C,uDAAuD;YACvD,IAAI,eAAe,EAAE,CAAC,EAAE,KAAK,CAAC,GAAG,QAAQ,AAAC,CAAA,IAAI,eAAe,EAAE,CAAC,CAAA,EAAG,KAAK,CAAC,GAAG,KAAK;gBAC/E,IAAI,EAAE,KAAK,CAAC,KAAK,GAAG,KAAK;gBAEzB,uFAAuF;gBACvF,sEAAsE;gBACtE,IAAI,KAAK,UAAU,CAAC,OAAO,KAAK,QAAQ;oBAEtC,yFAAyF;oBACzF,+BAA+B;oBAC/B,IAAI,CAAC,KAAK;wBACR,SAAS,GAAG,IAAI,GAAG;wBAEnB,IAAI,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI;4BACpB,IAAI;4BACJ;wBACF;oBACF;oBAEA,MAAM;oBACN,MAAM;gBACR,OAAO;oBAEL,iFAAiF;oBACjF,8DAA8D;oBAC9D,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,KAAK;wBAE7C,wCAAwC;wBACxC,SAAS,GAAG,IAAI,GAAG;wBACnB,IAAI,CAAC,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC;oBACrB;oBAEA;gBACF;YACF;QACF;QAEA,WAAW;QAEX,OAAO,SAAS,GAAG,GAAG,KAAK,QAAQ,EAAE;IACvC;IAGA;;;;;;;;;;;;GAYC,GACD,EAAE,OAAO,GAAG,EAAE,GAAG,GAAG;QAClB,IAAI,IAAI,IACN,IAAI,IAAI,EACR,OAAO,EAAE,WAAW;QAEtB,IAAI,CAAC,EAAE,QAAQ,IAAI,OAAO,IAAI,KAAK;QACnC,IAAI,EAAE,MAAM,IAAI,OAAO,IAAI,KAAK;QAEhC,KAAK,KAAK,SAAS;QACnB,KAAK,KAAK,QAAQ;QAClB,KAAK,SAAS,GAAG,KAAK;QACtB,KAAK,QAAQ,GAAG;QAEhB,IAAI,EAAE,GAAG;QACT,EAAE,CAAC,GAAG;QACN,IAAI,OAAO,GAAG,IAAI,KAAK,GAAG,KAAK,CAAC,EAAE,KAAK,CAAC,IAAI,IAAI,IAAI,KAAK,IAAI;QAE7D,KAAK,SAAS,GAAG;QACjB,KAAK,QAAQ,GAAG;QAEhB,OAAO,SAAS,YAAY,KAAK,YAAY,IAAI,EAAE,GAAG,KAAK,GAAG,IAAI,IAAI;IACxE;IAGA;;;;;;;;;;;;;;;;;;;;GAoBC,GACD,EAAE,KAAK,GAAG,EAAE,GAAG,GAAG,SAAU,CAAC;QAC3B,IAAI,OAAO,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,KACjC,IAAI,IAAI,EACR,OAAO,EAAE,WAAW,EACpB,KAAK,EAAE,CAAC,EACR,KAAK,AAAC,CAAA,IAAI,IAAI,KAAK,EAAC,EAAG,CAAC;QAE1B,EAAE,CAAC,IAAI,EAAE,CAAC;QAET,uCAAuC;QACxC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,EAEhC,OAAO,IAAI,KAAK,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAI5D,MAIA,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG;QAGnC,IAAI,UAAU,EAAE,CAAC,GAAG,YAAY,UAAU,EAAE,CAAC,GAAG;QAChD,MAAM,GAAG,MAAM;QACf,MAAM,GAAG,MAAM;QAEf,wCAAwC;QACxC,IAAI,MAAM,KAAK;YACb,IAAI;YACJ,KAAK;YACL,KAAK;YACL,KAAK;YACL,MAAM;YACN,MAAM;QACR;QAEA,0CAA0C;QAC1C,IAAI,EAAE;QACN,KAAK,MAAM;QACX,IAAK,IAAI,IAAI,KAAM,EAAE,IAAI,CAAC;QAE1B,YAAY;QACZ,IAAK,IAAI,KAAK,EAAE,KAAK,GAAI;YACvB,QAAQ;YACR,IAAK,IAAI,MAAM,GAAG,IAAI,GAAI;gBACxB,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,IAAI,EAAE,GAAG;gBACnC,CAAC,CAAC,IAAI,GAAG,IAAI,OAAO;gBACpB,QAAQ,IAAI,OAAO;YACrB;YAEA,CAAC,CAAC,EAAE,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,GAAG,KAAI,IAAK,OAAO;QACjC;QAEA,yBAAyB;QACzB,MAAO,CAAC,CAAC,CAAC,EAAE,GAAG,EAAG,EAAE,GAAG;QAEvB,IAAI,OAAO,EAAE;aACR,EAAE,KAAK;QAEZ,EAAE,CAAC,GAAG;QACN,EAAE,CAAC,GAAG,kBAAkB,GAAG;QAE3B,OAAO,WAAW,SAAS,GAAG,KAAK,SAAS,EAAE,KAAK,QAAQ,IAAI;IACjE;IAGA;;;;;;;;;GASC,GACD,EAAE,QAAQ,GAAG,SAAU,EAAE,EAAE,EAAE;QAC3B,OAAO,eAAe,IAAI,EAAE,GAAG,IAAI;IACrC;IAGA;;;;;;;;;GASC,GACD,EAAE,eAAe,GAAG,EAAE,IAAI,GAAG,SAAU,EAAE,EAAE,EAAE;QAC3C,IAAI,IAAI,IAAI,EACV,OAAO,EAAE,WAAW;QAEtB,IAAI,IAAI,KAAK;QACb,IAAI,OAAO,KAAK,GAAG,OAAO;QAE1B,WAAW,IAAI,GAAG;QAElB,IAAI,OAAO,KAAK,GAAG,KAAK,KAAK,QAAQ;aAChC,WAAW,IAAI,GAAG;QAEvB,OAAO,SAAS,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG;IACnC;IAGA;;;;;;;GAOC,GACD,EAAE,aAAa,GAAG,SAAU,EAAE,EAAE,EAAE;QAChC,IAAI,KACF,IAAI,IAAI,EACR,OAAO,EAAE,WAAW;QAEtB,IAAI,OAAO,KAAK,GACd,MAAM,eAAe,GAAG;aACnB;YACL,WAAW,IAAI,GAAG;YAElB,IAAI,OAAO,KAAK,GAAG,KAAK,KAAK,QAAQ;iBAChC,WAAW,IAAI,GAAG;YAEvB,IAAI,SAAS,IAAI,KAAK,IAAI,KAAK,GAAG;YAClC,MAAM,eAAe,GAAG,MAAM,KAAK;QACrC;QAEA,OAAO,EAAE,KAAK,MAAM,CAAC,EAAE,MAAM,KAAK,MAAM,MAAM;IAChD;IAGA;;;;;;;;;;;;;;;GAeC,GACD,EAAE,OAAO,GAAG,SAAU,EAAE,EAAE,EAAE;QAC1B,IAAI,KAAK,GACP,IAAI,IAAI,EACR,OAAO,EAAE,WAAW;QAEtB,IAAI,OAAO,KAAK,GACd,MAAM,eAAe;aAChB;YACL,WAAW,IAAI,GAAG;YAElB,IAAI,OAAO,KAAK,GAAG,KAAK,KAAK,QAAQ;iBAChC,WAAW,IAAI,GAAG;YAEvB,IAAI,SAAS,IAAI,KAAK,IAAI,KAAK,EAAE,CAAC,GAAG,GAAG;YACxC,MAAM,eAAe,GAAG,OAAO,KAAK,EAAE,CAAC,GAAG;QAC5C;QAEA,sFAAsF;QACtF,oCAAoC;QACpC,OAAO,EAAE,KAAK,MAAM,CAAC,EAAE,MAAM,KAAK,MAAM,MAAM;IAChD;IAGA;;;;;;;;;;GAUC,GACD,EAAE,UAAU,GAAG,SAAU,IAAI;QAC3B,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GACzC,IAAI,IAAI,EACR,KAAK,EAAE,CAAC,EACR,OAAO,EAAE,WAAW;QAEtB,IAAI,CAAC,IAAI,OAAO,IAAI,KAAK;QAEzB,KAAK,KAAK,IAAI,KAAK;QACnB,KAAK,KAAK,IAAI,KAAK;QAEnB,IAAI,IAAI,KAAK;QACb,IAAI,EAAE,CAAC,GAAG,aAAa,MAAM,EAAE,CAAC,GAAG;QACnC,IAAI,IAAI;QACR,EAAE,CAAC,CAAC,EAAE,GAAG,QAAQ,IAAI,IAAI,IAAI,WAAW,IAAI;QAE5C,IAAI,QAAQ,MAEV,kDAAkD;QAClD,OAAO,IAAI,IAAI,IAAI;aACd;YACL,IAAI,IAAI,KAAK;YACb,IAAI,CAAC,EAAE,KAAK,MAAM,EAAE,EAAE,CAAC,KAAK,MAAM,MAAM,kBAAkB;YAC1D,OAAO,EAAE,EAAE,CAAC,KAAM,IAAI,IAAI,IAAI,KAAM;QACtC;QAEA,WAAW;QACX,IAAI,IAAI,KAAK,eAAe;QAC5B,KAAK,KAAK,SAAS;QACnB,KAAK,SAAS,GAAG,IAAI,GAAG,MAAM,GAAG,WAAW;QAE5C,OAAU;YACR,IAAI,OAAO,GAAG,GAAG,GAAG,GAAG;YACvB,KAAK,GAAG,IAAI,CAAC,EAAE,KAAK,CAAC;YACrB,IAAI,GAAG,GAAG,CAAC,SAAS,GAAG;YACvB,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK,GAAG,IAAI,CAAC,EAAE,KAAK,CAAC;YACrB,KAAK;YACL,KAAK;YACL,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC;YACpB,IAAI;QACN;QAEA,KAAK,OAAO,KAAK,KAAK,CAAC,KAAK,IAAI,GAAG,GAAG;QACtC,KAAK,GAAG,IAAI,CAAC,GAAG,KAAK,CAAC;QACtB,KAAK,GAAG,IAAI,CAAC,GAAG,KAAK,CAAC;QACtB,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC;QAEjB,2DAA2D;QAC3D,IAAI,OAAO,IAAI,IAAI,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,OAAO,IAAI,IAAI,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,MAAM,IAC7E;YAAC;YAAI;SAAG,GAAG;YAAC;YAAI;SAAG;QAEzB,KAAK,SAAS,GAAG;QACjB,WAAW;QAEX,OAAO;IACT;IAGA;;;;;;;;;GASC,GACD,EAAE,aAAa,GAAG,EAAE,KAAK,GAAG,SAAU,EAAE,EAAE,EAAE;QAC1C,OAAO,eAAe,IAAI,EAAE,IAAI,IAAI;IACtC;IAGA;;;;;;;;;;;;;;;GAeC,GACD,EAAE,SAAS,GAAG,SAAU,CAAC,EAAE,EAAE;QAC3B,IAAI,IAAI,IAAI,EACV,OAAO,EAAE,WAAW;QAEtB,IAAI,IAAI,KAAK;QAEb,IAAI,KAAK,MAAM;YAEb,gCAAgC;YAChC,IAAI,CAAC,EAAE,CAAC,EAAE,OAAO;YAEjB,IAAI,IAAI,KAAK;YACb,KAAK,KAAK,QAAQ;QACpB,OAAO;YACL,IAAI,IAAI,KAAK;YACb,IAAI,OAAO,KAAK,GACd,KAAK,KAAK,QAAQ;iBAElB,WAAW,IAAI,GAAG;YAGpB,0DAA0D;YAC1D,IAAI,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,GAAG,IAAI;YAE3B,qFAAqF;YACrF,IAAI,CAAC,EAAE,CAAC,EAAE;gBACR,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC;gBAClB,OAAO;YACT;QACF;QAEA,8DAA8D;QAC9D,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE;YACV,WAAW;YACX,IAAI,OAAO,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,CAAC;YACjC,WAAW;YACX,SAAS;QAEX,gDAAgD;QAChD,OAAO;YACL,EAAE,CAAC,GAAG,EAAE,CAAC;YACT,IAAI;QACN;QAEA,OAAO;IACT;IAGA;;;;GAIC,GACD,EAAE,QAAQ,GAAG;QACX,OAAO,CAAC,IAAI;IACd;IAGA;;;;;;;;;GASC,GACD,EAAE,OAAO,GAAG,SAAU,EAAE,EAAE,EAAE;QAC1B,OAAO,eAAe,IAAI,EAAE,GAAG,IAAI;IACrC;IAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA0CC,GACD,EAAE,OAAO,GAAG,EAAE,GAAG,GAAG,SAAU,CAAC;QAC7B,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GACnB,IAAI,IAAI,EACR,OAAO,EAAE,WAAW,EACpB,KAAK,CAAE,CAAA,IAAI,IAAI,KAAK,EAAC;QAEvB,+BAA+B;QAC/B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,OAAO,IAAI,KAAK,QAAQ,CAAC,GAAG;QAEpE,IAAI,IAAI,KAAK;QAEb,IAAI,EAAE,EAAE,CAAC,IAAI,OAAO;QAEpB,KAAK,KAAK,SAAS;QACnB,KAAK,KAAK,QAAQ;QAElB,IAAI,EAAE,EAAE,CAAC,IAAI,OAAO,SAAS,GAAG,IAAI;QAEpC,aAAa;QACb,IAAI,UAAU,EAAE,CAAC,GAAG;QAEpB,0EAA0E;QAC1E,IAAI,KAAK,EAAE,CAAC,CAAC,MAAM,GAAG,KAAK,AAAC,CAAA,IAAI,KAAK,IAAI,CAAC,KAAK,EAAC,KAAM,kBAAkB;YACtE,IAAI,OAAO,MAAM,GAAG,GAAG;YACvB,OAAO,EAAE,CAAC,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,SAAS,GAAG,IAAI;QACxD;QAEA,IAAI,EAAE,CAAC;QAEP,mBAAmB;QACnB,IAAI,IAAI,GAAG;YAET,yBAAyB;YACzB,IAAI,IAAI,EAAE,CAAC,CAAC,MAAM,GAAG,GAAG,OAAO,IAAI,KAAK;YAExC,+EAA+E;YAC/E,IAAI,AAAC,CAAA,EAAE,CAAC,CAAC,EAAE,GAAG,CAAA,KAAM,GAAG,IAAI;YAE3B,cAAc;YACd,IAAI,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,IAAI,KAAK,EAAE,CAAC,CAAC,MAAM,IAAI,GAAG;gBAC9C,EAAE,CAAC,GAAG;gBACN,OAAO;YACT;QACF;QAEA,4BAA4B;QAC5B,sCAAsC;QACtC,+CAA+C;QAC/C,oDAAoD;QACpD,IAAI,QAAQ,CAAC,GAAG;QAChB,IAAI,KAAK,KAAK,CAAC,SAAS,KACpB,UAAU,KAAM,CAAA,KAAK,GAAG,CAAC,OAAO,eAAe,EAAE,CAAC,KAAK,KAAK,IAAI,GAAG,EAAE,CAAC,GAAG,CAAA,KACzE,IAAI,KAAK,IAAI,IAAI,CAAC;QAEtB,2FAA2F;QAE3F,sBAAsB;QACtB,IAAI,IAAI,KAAK,IAAI,GAAG,KAAK,IAAI,KAAK,IAAI,GAAG,GAAG,OAAO,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI;QAE5E,WAAW;QACX,KAAK,QAAQ,GAAG,EAAE,CAAC,GAAG;QAEtB,qFAAqF;QACrF,sFAAsF;QACtF,qDAAqD;QACrD,8EAA8E;QAC9E,IAAI,KAAK,GAAG,CAAC,IAAI,AAAC,CAAA,IAAI,EAAC,EAAG,MAAM;QAEhC,yBAAyB;QACzB,IAAI,mBAAmB,EAAE,KAAK,CAAC,iBAAiB,GAAG,KAAK,KAAK;QAE7D,2DAA2D;QAC3D,IAAI,EAAE,CAAC,EAAE;YAEP,gEAAgE;YAChE,IAAI,SAAS,GAAG,KAAK,GAAG;YAExB,+FAA+F;YAC/F,cAAc;YACd,IAAI,oBAAoB,EAAE,CAAC,EAAE,IAAI,KAAK;gBACpC,IAAI,KAAK;gBAET,iEAAiE;gBACjE,IAAI,SAAS,mBAAmB,EAAE,KAAK,CAAC,iBAAiB,GAAG,IAAI,KAAK,IAAI,IAAI,GAAG;gBAEhF,2FAA2F;gBAC3F,IAAI,CAAC,eAAe,EAAE,CAAC,EAAE,KAAK,CAAC,KAAK,GAAG,KAAK,MAAM,KAAK,MACrD,IAAI,SAAS,GAAG,KAAK,GAAG;YAE5B;QACF;QAEA,EAAE,CAAC,GAAG;QACN,WAAW;QACX,KAAK,QAAQ,GAAG;QAEhB,OAAO,SAAS,GAAG,IAAI;IACzB;IAGA;;;;;;;;;;GAUC,GACD,EAAE,WAAW,GAAG,SAAU,EAAE,EAAE,EAAE;QAC9B,IAAI,KACF,IAAI,IAAI,EACR,OAAO,EAAE,WAAW;QAEtB,IAAI,OAAO,KAAK,GACd,MAAM,eAAe,GAAG,EAAE,CAAC,IAAI,KAAK,QAAQ,IAAI,EAAE,CAAC,IAAI,KAAK,QAAQ;aAC/D;YACL,WAAW,IAAI,GAAG;YAElB,IAAI,OAAO,KAAK,GAAG,KAAK,KAAK,QAAQ;iBAChC,WAAW,IAAI,GAAG;YAEvB,IAAI,SAAS,IAAI,KAAK,IAAI,IAAI;YAC9B,MAAM,eAAe,GAAG,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,KAAK,QAAQ,EAAE;QAC7D;QAEA,OAAO,EAAE,KAAK,MAAM,CAAC,EAAE,MAAM,KAAK,MAAM,MAAM;IAChD;IAGA;;;;;;;;;;;;;GAaC,GACD,EAAE,mBAAmB,GAAG,EAAE,IAAI,GAAG,SAAU,EAAE,EAAE,EAAE;QAC/C,IAAI,IAAI,IAAI,EACV,OAAO,EAAE,WAAW;QAEtB,IAAI,OAAO,KAAK,GAAG;YACjB,KAAK,KAAK,SAAS;YACnB,KAAK,KAAK,QAAQ;QACpB,OAAO;YACL,WAAW,IAAI,GAAG;YAElB,IAAI,OAAO,KAAK,GAAG,KAAK,KAAK,QAAQ;iBAChC,WAAW,IAAI,GAAG;QACzB;QAEA,OAAO,SAAS,IAAI,KAAK,IAAI,IAAI;IACnC;IAGA;;;;;;GAMC,GACD,EAAE,QAAQ,GAAG;QACX,IAAI,IAAI,IAAI,EACV,OAAO,EAAE,WAAW,EACpB,MAAM,eAAe,GAAG,EAAE,CAAC,IAAI,KAAK,QAAQ,IAAI,EAAE,CAAC,IAAI,KAAK,QAAQ;QAEtE,OAAO,EAAE,KAAK,MAAM,CAAC,EAAE,MAAM,KAAK,MAAM,MAAM;IAChD;IAGA;;;GAGC,GACD,EAAE,SAAS,GAAG,EAAE,KAAK,GAAG;QACtB,OAAO,SAAS,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG;IAC1D;IAGA;;;;GAIC,GACD,EAAE,OAAO,GAAG,EAAE,MAAM,GAAG;QACrB,IAAI,IAAI,IAAI,EACV,OAAO,EAAE,WAAW,EACpB,MAAM,eAAe,GAAG,EAAE,CAAC,IAAI,KAAK,QAAQ,IAAI,EAAE,CAAC,IAAI,KAAK,QAAQ;QAEtE,OAAO,EAAE,KAAK,KAAK,MAAM,MAAM;IACjC;IAGA,wFAAwF;IAGxF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2CC,GAGD,SAAS,eAAe,CAAC;QACvB,IAAI,GAAG,GAAG,IACR,kBAAkB,EAAE,MAAM,GAAG,GAC7B,MAAM,IACN,IAAI,CAAC,CAAC,EAAE;QAEV,IAAI,kBAAkB,GAAG;YACvB,OAAO;YACP,IAAK,IAAI,GAAG,IAAI,iBAAiB,IAAK;gBACpC,KAAK,CAAC,CAAC,EAAE,GAAG;gBACZ,IAAI,WAAW,GAAG,MAAM;gBACxB,IAAI,GAAG,OAAO,cAAc;gBAC5B,OAAO;YACT;YAEA,IAAI,CAAC,CAAC,EAAE;YACR,KAAK,IAAI;YACT,IAAI,WAAW,GAAG,MAAM;YACxB,IAAI,GAAG,OAAO,cAAc;QAC9B,OAAO,IAAI,MAAM,GACf,OAAO;QAGT,mCAAmC;QACnC,MAAO,IAAI,OAAO,GAAI,KAAK;QAE3B,OAAO,MAAM;IACf;IAGA,SAAS,WAAW,CAAC,EAAE,GAAG,EAAE,GAAG;QAC7B,IAAI,MAAM,CAAC,CAAC,KAAK,IAAI,OAAO,IAAI,KAC9B,MAAM,MAAM,kBAAkB;IAElC;IAGA;;;;GAIC,GACD,SAAS,oBAAoB,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,SAAS;QAC9C,IAAI,IAAI,GAAG,GAAG;QAEd,mDAAmD;QACnD,IAAK,IAAI,CAAC,CAAC,EAAE,EAAE,KAAK,IAAI,KAAK,GAAI,EAAE;QAEnC,gDAAgD;QAChD,IAAI,EAAE,IAAI,GAAG;YACX,KAAK;YACL,KAAK;QACP,OAAO;YACL,KAAK,KAAK,IAAI,CAAC,AAAC,CAAA,IAAI,CAAA,IAAK;YACzB,KAAK;QACP;QAEA,gDAAgD;QAChD,iEAAiE;QACjE,kDAAkD;QAClD,IAAI,QAAQ,IAAI,WAAW;QAC3B,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI;QAEjB,IAAI,aAAa;YACf,IAAI,IAAI,GAAG;gBACT,IAAI,KAAK,GAAG,KAAK,KAAK,MAAM;qBACvB,IAAI,KAAK,GAAG,KAAK,KAAK,KAAK;gBAChC,IAAI,KAAK,KAAK,MAAM,SAAS,KAAK,KAAK,MAAM,SAAS,MAAM,SAAS,MAAM;YAC7E,OACE,IAAI,AAAC,CAAA,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,CAAA,KACpD,AAAC,CAAA,CAAC,CAAC,KAAK,EAAE,GAAG,IAAI,MAAM,CAAA,KAAM,QAAQ,IAAI,IAAI,KAAK,KAChD,AAAC,CAAA,MAAM,IAAI,KAAK,MAAM,CAAA,KAAM,AAAC,CAAA,CAAC,CAAC,KAAK,EAAE,GAAG,IAAI,MAAM,CAAA,KAAM;eAG/D,IAAI,IAAI,GAAG;YACT,IAAI,KAAK,GAAG,KAAK,KAAK,OAAO;iBACxB,IAAI,KAAK,GAAG,KAAK,KAAK,MAAM;iBAC5B,IAAI,KAAK,GAAG,KAAK,KAAK,KAAK;YAChC,IAAI,AAAC,CAAA,aAAa,KAAK,CAAA,KAAM,MAAM,QAAQ,CAAC,aAAa,KAAK,KAAK,MAAM;QAC3E,OACE,IAAI,AAAC,CAAA,AAAC,CAAA,aAAa,KAAK,CAAA,KAAM,KAAK,KAAK,KACxC,AAAC,CAAC,aAAa,KAAK,KAAM,KAAK,KAAK,IAAI,CAAA,KACtC,AAAC,CAAA,CAAC,CAAC,KAAK,EAAE,GAAG,IAAI,OAAO,CAAA,KAAM,QAAQ,IAAI,IAAI,KAAK;QAIzD,OAAO;IACT;IAGA,kEAAkE;IAClE,mDAAmD;IACnD,mDAAmD;IACnD,SAAS,YAAY,GAAG,EAAE,MAAM,EAAE,OAAO;QACvC,IAAI,GACF,MAAM;YAAC;SAAE,EACT,MACA,IAAI,GACJ,OAAO,IAAI,MAAM;QAEnB,MAAO,IAAI,MAAO;YAChB,IAAK,OAAO,IAAI,MAAM,EAAE,QAAS,GAAG,CAAC,KAAK,IAAI;YAC9C,GAAG,CAAC,EAAE,IAAI,SAAS,OAAO,CAAC,IAAI,MAAM,CAAC;YACtC,IAAK,IAAI,GAAG,IAAI,IAAI,MAAM,EAAE,IAC1B,IAAI,GAAG,CAAC,EAAE,GAAG,UAAU,GAAG;gBACxB,IAAI,GAAG,CAAC,IAAI,EAAE,KAAK,KAAK,GAAG,GAAG,CAAC,IAAI,EAAE,GAAG;gBACxC,GAAG,CAAC,IAAI,EAAE,IAAI,GAAG,CAAC,EAAE,GAAG,UAAU;gBACjC,GAAG,CAAC,EAAE,IAAI;YACZ;QAEJ;QAEA,OAAO,IAAI,OAAO;IACpB;IAGA;;;;GAIC,GACD,SAAS,OAAO,IAAI,EAAE,CAAC;QACrB,IAAI,GAAG,KAAK;QAEZ,IAAI,EAAE,MAAM,IAAI,OAAO;QAEvB,4DAA4D;QAC5D,gDAAgD;QAEhD,sEAAsE;QACtE,MAAM,EAAE,CAAC,CAAC,MAAM;QAChB,IAAI,MAAM,IAAI;YACZ,IAAI,KAAK,IAAI,CAAC,MAAM;YACpB,IAAI,AAAC,CAAA,IAAI,QAAQ,GAAG,EAAC,EAAG,QAAQ;QAClC,OAAO;YACL,IAAI;YACJ,IAAI;QACN;QAEA,KAAK,SAAS,IAAI;QAElB,IAAI,aAAa,MAAM,GAAG,EAAE,KAAK,CAAC,IAAI,IAAI,KAAK;QAE/C,6BAA6B;QAC7B,IAAK,IAAI,IAAI,GAAG,KAAM;YACpB,IAAI,QAAQ,EAAE,KAAK,CAAC;YACpB,IAAI,MAAM,KAAK,CAAC,OAAO,KAAK,CAAC,OAAO,KAAK,CAAC,GAAG,IAAI,CAAC;QACpD;QAEA,KAAK,SAAS,IAAI;QAElB,OAAO;IACT;IAGA;;GAEC,GACD,IAAI,SAAS,AAAC;QAEZ,uDAAuD;QACvD,SAAS,gBAAgB,CAAC,EAAE,CAAC,EAAE,IAAI;YACjC,IAAI,MACF,QAAQ,GACR,IAAI,EAAE,MAAM;YAEd,IAAK,IAAI,EAAE,KAAK,IAAI,KAAM;gBACxB,OAAO,CAAC,CAAC,EAAE,GAAG,IAAI;gBAClB,CAAC,CAAC,EAAE,GAAG,OAAO,OAAO;gBACrB,QAAQ,OAAO,OAAO;YACxB;YAEA,IAAI,OAAO,EAAE,OAAO,CAAC;YAErB,OAAO;QACT;QAEA,SAAS,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE;YAC3B,IAAI,GAAG;YAEP,IAAI,MAAM,IACR,IAAI,KAAK,KAAK,IAAI;iBACb;gBACL,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IACtB,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE;oBAChB,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,IAAI;oBACtB;gBACF;YAEJ;YAEA,OAAO;QACT;QAEA,SAAS,SAAS,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI;YAC9B,IAAI,IAAI;YAER,qBAAqB;YACrB,MAAO,MAAO;gBACZ,CAAC,CAAC,GAAG,IAAI;gBACT,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI;gBACxB,CAAC,CAAC,GAAG,GAAG,IAAI,OAAO,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG;YAClC;YAEA,wBAAwB;YACxB,MAAO,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,MAAM,GAAG,GAAI,EAAE,KAAK;QACxC;QAEA,OAAO,SAAU,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI;YACrC,IAAI,KAAK,GAAG,GAAG,GAAG,SAAS,MAAM,MAAM,OAAO,GAAG,IAAI,KAAK,MAAM,MAAM,IAAI,GAAG,IAAI,IAAI,KACnF,IAAI,IACJ,OAAO,EAAE,WAAW,EACpB,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,IACxB,KAAK,EAAE,CAAC,EACR,KAAK,EAAE,CAAC;YAEV,6BAA6B;YAC7B,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,EAEhC,OAAO,IAAI,KACT,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAK,CAAA,KAAK,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,GAAG,CAAC,EAAC,IAAK,MAEpD,wEAAwE;YACxE,MAAM,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,KAAK,OAAO,IAAI,OAAO;YAGhD,IAAI,MAAM;gBACR,UAAU;gBACV,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC;YACf,OAAO;gBACL,OAAO;gBACP,UAAU;gBACV,IAAI,UAAU,EAAE,CAAC,GAAG,WAAW,UAAU,EAAE,CAAC,GAAG;YACjD;YAEA,KAAK,GAAG,MAAM;YACd,KAAK,GAAG,MAAM;YACd,IAAI,IAAI,KAAK;YACb,KAAK,EAAE,CAAC,GAAG,EAAE;YAEb,0CAA0C;YAC1C,4EAA4E;YAC5E,IAAK,IAAI,GAAG,EAAE,CAAC,EAAE,IAAK,CAAA,EAAE,CAAC,EAAE,IAAI,CAAA,GAAI;YAEnC,IAAI,EAAE,CAAC,EAAE,GAAI,CAAA,EAAE,CAAC,EAAE,IAAI,CAAA,GAAI;YAE1B,IAAI,MAAM,MAAM;gBACd,KAAK,KAAK,KAAK,SAAS;gBACxB,KAAK,KAAK,QAAQ;YACpB,OAAO,IAAI,IACT,KAAK,KAAM,CAAA,EAAE,CAAC,GAAG,EAAE,CAAC,AAAD,IAAK;iBAExB,KAAK;YAGP,IAAI,KAAK,GAAG;gBACV,GAAG,IAAI,CAAC;gBACR,OAAO;YACT,OAAO;gBAEL,oEAAoE;gBACpE,KAAK,KAAK,UAAU,IAAI;gBACxB,IAAI;gBAEJ,gBAAgB;gBAChB,IAAI,MAAM,GAAG;oBACX,IAAI;oBACJ,KAAK,EAAE,CAAC,EAAE;oBACV;oBAEA,kBAAkB;oBAClB,MAAO,AAAC,CAAA,IAAI,MAAM,CAAA,KAAM,MAAM,IAAK;wBACjC,IAAI,IAAI,OAAQ,CAAA,EAAE,CAAC,EAAE,IAAI,CAAA;wBACzB,EAAE,CAAC,EAAE,GAAG,IAAI,KAAK;wBACjB,IAAI,IAAI,KAAK;oBACf;oBAEA,OAAO,KAAK,IAAI;gBAElB,iBAAiB;gBACjB,OAAO;oBAEL,gEAAgE;oBAChE,IAAI,OAAQ,CAAA,EAAE,CAAC,EAAE,GAAG,CAAA,IAAK;oBAEzB,IAAI,IAAI,GAAG;wBACT,KAAK,gBAAgB,IAAI,GAAG;wBAC5B,KAAK,gBAAgB,IAAI,GAAG;wBAC5B,KAAK,GAAG,MAAM;wBACd,KAAK,GAAG,MAAM;oBAChB;oBAEA,KAAK;oBACL,MAAM,GAAG,KAAK,CAAC,GAAG;oBAClB,OAAO,IAAI,MAAM;oBAEjB,kDAAkD;oBAClD,MAAO,OAAO,IAAK,GAAG,CAAC,OAAO,GAAG;oBAEjC,KAAK,GAAG,KAAK;oBACb,GAAG,OAAO,CAAC;oBACX,MAAM,EAAE,CAAC,EAAE;oBAEX,IAAI,EAAE,CAAC,EAAE,IAAI,OAAO,GAAG,EAAE;oBAEzB,GAAG;wBACD,IAAI;wBAEJ,iCAAiC;wBACjC,MAAM,QAAQ,IAAI,KAAK,IAAI;wBAE3B,0BAA0B;wBAC1B,IAAI,MAAM,GAAG;4BAEX,4BAA4B;4BAC5B,OAAO,GAAG,CAAC,EAAE;4BACb,IAAI,MAAM,MAAM,OAAO,OAAO,OAAQ,CAAA,GAAG,CAAC,EAAE,IAAI,CAAA;4BAEhD,wEAAwE;4BACxE,IAAI,OAAO,MAAM;4BAEjB,cAAc;4BACd,0CAA0C;4BAC1C,sDAAsD;4BACtD,2BAA2B;4BAC3B,uCAAuC;4BACvC,0CAA0C;4BAC1C,0DAA0D;4BAE1D,IAAI,IAAI,GAAG;gCACT,IAAI,KAAK,MAAM,IAAI,OAAO;gCAE1B,mCAAmC;gCACnC,OAAO,gBAAgB,IAAI,GAAG;gCAC9B,QAAQ,KAAK,MAAM;gCACnB,OAAO,IAAI,MAAM;gCAEjB,iCAAiC;gCACjC,MAAM,QAAQ,MAAM,KAAK,OAAO;gCAEhC,uBAAuB;gCACvB,IAAI,OAAO,GAAG;oCACZ;oCAEA,iCAAiC;oCACjC,SAAS,MAAM,KAAK,QAAQ,KAAK,IAAI,OAAO;gCAC9C;4BACF,OAAO;gCAEL,aAAa;gCACb,oFAAoF;gCACpF,4EAA4E;gCAC5E,IAAI,KAAK,GAAG,MAAM,IAAI;gCACtB,OAAO,GAAG,KAAK;4BACjB;4BAEA,QAAQ,KAAK,MAAM;4BACnB,IAAI,QAAQ,MAAM,KAAK,OAAO,CAAC;4BAE/B,mCAAmC;4BACnC,SAAS,KAAK,MAAM,MAAM;4BAE1B,uCAAuC;4BACvC,IAAI,OAAO,IAAI;gCACb,OAAO,IAAI,MAAM;gCAEjB,qCAAqC;gCACrC,MAAM,QAAQ,IAAI,KAAK,IAAI;gCAE3B,+DAA+D;gCAC/D,IAAI,MAAM,GAAG;oCACX;oCAEA,mCAAmC;oCACnC,SAAS,KAAK,KAAK,OAAO,KAAK,IAAI,MAAM;gCAC3C;4BACF;4BAEA,OAAO,IAAI,MAAM;wBACnB,OAAO,IAAI,QAAQ,GAAG;4BACpB;4BACA,MAAM;gCAAC;6BAAE;wBACX,EAAK,4BAA4B;wBAEjC,8CAA8C;wBAC9C,EAAE,CAAC,IAAI,GAAG;wBAEV,wBAAwB;wBACxB,IAAI,OAAO,GAAG,CAAC,EAAE,EACf,GAAG,CAAC,OAAO,GAAG,EAAE,CAAC,GAAG,IAAI;6BACnB;4BACL,MAAM;gCAAC,EAAE,CAAC,GAAG;6BAAC;4BACd,OAAO;wBACT;oBAEF,QAAS,AAAC,CAAA,OAAO,MAAM,GAAG,CAAC,EAAE,KAAK,KAAK,CAAA,KAAM,MAAM;oBAEnD,OAAO,GAAG,CAAC,EAAE,KAAK,KAAK;gBACzB;gBAEA,gBAAgB;gBAChB,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,KAAK;YACtB;YAEA,8DAA8D;YAC9D,IAAI,WAAW,GAAG;gBAChB,EAAE,CAAC,GAAG;gBACN,UAAU;YACZ,OAAO;gBAEL,6DAA6D;gBAC7D,IAAK,IAAI,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE,KAAK,IAAI,KAAK,GAAI;gBACzC,EAAE,CAAC,GAAG,IAAI,IAAI,UAAU;gBAExB,SAAS,GAAG,KAAK,KAAK,EAAE,CAAC,GAAG,IAAI,IAAI,IAAI;YAC1C;YAEA,OAAO;QACT;IACF;IAGA;;;GAGC,GACA,SAAS,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,WAAW;QACvC,IAAI,QAAQ,GAAG,GAAG,GAAG,IAAI,SAAS,GAAG,IAAI,KACvC,OAAO,EAAE,WAAW;QAEtB,0CAA0C;QAC1C,KAAK,IAAI,MAAM,MAAM;YACnB,KAAK,EAAE,CAAC;YAER,gBAAgB;YAChB,IAAI,CAAC,IAAI,OAAO;YAEhB,iFAAiF;YACjF,sDAAsD;YACtD,iCAAiC;YACjC,qCAAqC;YACrC,2FAA2F;YAC3F,0BAA0B;YAC1B,6EAA6E;YAE7E,2DAA2D;YAC3D,IAAK,SAAS,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE,KAAK,IAAI,KAAK,GAAI;YAC9C,IAAI,KAAK;YAET,iDAAiD;YACjD,IAAI,IAAI,GAAG;gBACT,KAAK;gBACL,IAAI;gBACJ,IAAI,EAAE,CAAC,MAAM,EAAE;gBAEf,0CAA0C;gBAC1C,KAAK,IAAI,QAAQ,IAAI,SAAS,IAAI,KAAK,KAAK;YAC9C,OAAO;gBACL,MAAM,KAAK,IAAI,CAAC,AAAC,CAAA,IAAI,CAAA,IAAK;gBAC1B,IAAI,GAAG,MAAM;gBACb,IAAI,OAAO,GAAG;oBACZ,IAAI,aAAa;wBAEf,uEAAuE;wBACvE,MAAO,OAAO,KAAM,GAAG,IAAI,CAAC;wBAC5B,IAAI,KAAK;wBACT,SAAS;wBACT,KAAK;wBACL,IAAI,IAAI,WAAW;oBACrB,OACE,MAAM;gBAEV,OAAO;oBACL,IAAI,IAAI,EAAE,CAAC,IAAI;oBAEf,iCAAiC;oBACjC,IAAK,SAAS,GAAG,KAAK,IAAI,KAAK,GAAI;oBAEnC,gCAAgC;oBAChC,KAAK;oBAEL,4DAA4D;oBAC5D,kEAAkE;oBAClE,IAAI,IAAI,WAAW;oBAEnB,0CAA0C;oBAC1C,KAAK,IAAI,IAAI,IAAI,IAAI,QAAQ,IAAI,SAAS,IAAI,KAAK,KAAK;gBAC1D;YACF;YAEA,0DAA0D;YAC1D,cAAc,eAAe,KAAK,KAChC,EAAE,CAAC,MAAM,EAAE,KAAK,KAAK,KAAM,CAAA,IAAI,IAAI,IAAI,IAAI,QAAQ,IAAI,SAAS,IAAI,EAAC;YAEvE,4FAA4F;YAC5F,0FAA0F;YAC1F,iBAAiB;YAEjB,UAAU,KAAK,IACX,AAAC,CAAA,MAAM,WAAU,KAAO,CAAA,MAAM,KAAK,MAAO,CAAA,EAAE,CAAC,GAAG,IAAI,IAAI,CAAA,CAAC,IACzD,KAAK,KAAK,MAAM,KAAM,CAAA,MAAM,KAAK,eAAe,MAAM,KAGtD,AAAE,CAAA,IAAI,IAAI,IAAI,IAAI,IAAI,QAAQ,IAAI,SAAS,KAAK,IAAI,EAAE,CAAC,MAAM,EAAE,AAAD,IAAK,KAAM,KACvE,MAAO,CAAA,EAAE,CAAC,GAAG,IAAI,IAAI,CAAA,CAAC;YAE5B,IAAI,KAAK,KAAK,CAAC,EAAE,CAAC,EAAE,EAAE;gBACpB,GAAG,MAAM,GAAG;gBACZ,IAAI,SAAS;oBAEX,gCAAgC;oBAChC,MAAM,EAAE,CAAC,GAAG;oBAEZ,mCAAmC;oBACnC,EAAE,CAAC,EAAE,GAAG,QAAQ,IAAI,AAAC,CAAA,WAAW,KAAK,QAAO,IAAK;oBACjD,EAAE,CAAC,GAAG,CAAC,MAAM;gBACf,OAEE,QAAQ;gBACR,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG;gBAGhB,OAAO;YACT;YAEA,wBAAwB;YACxB,IAAI,KAAK,GAAG;gBACV,GAAG,MAAM,GAAG;gBACZ,IAAI;gBACJ;YACF,OAAO;gBACL,GAAG,MAAM,GAAG,MAAM;gBAClB,IAAI,QAAQ,IAAI,WAAW;gBAE3B,uDAAuD;gBACvD,gDAAgD;gBAChD,EAAE,CAAC,IAAI,GAAG,IAAI,IAAI,AAAC,CAAA,IAAI,QAAQ,IAAI,SAAS,KAAK,QAAQ,IAAI,KAAK,CAAA,IAAK,IAAI;YAC7E;YAEA,IAAI,SAAS;gBACX,OAEE,yDAAyD;gBACzD,IAAI,OAAO,GAAG;oBAEZ,mDAAmD;oBACnD,IAAK,IAAI,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE,KAAK,IAAI,KAAK,GAAI;oBACzC,IAAI,EAAE,CAAC,EAAE,IAAI;oBACb,IAAK,IAAI,GAAG,KAAK,IAAI,KAAK,GAAI;oBAE9B,sCAAsC;oBACtC,IAAI,KAAK,GAAG;wBACV,EAAE,CAAC;wBACH,IAAI,EAAE,CAAC,EAAE,IAAI,MAAM,EAAE,CAAC,EAAE,GAAG;oBAC7B;oBAEA;gBACF,OAAO;oBACL,EAAE,CAAC,IAAI,IAAI;oBACX,IAAI,EAAE,CAAC,IAAI,IAAI,MAAM;oBACrB,EAAE,CAAC,MAAM,GAAG;oBACZ,IAAI;gBACN;YAEJ;YAEA,yBAAyB;YACzB,IAAK,IAAI,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE,EAAE,KAAK,GAAI,GAAG,GAAG;QAC5C;QAEA,IAAI,UAAU;YAEZ,YAAY;YACZ,IAAI,EAAE,CAAC,GAAG,KAAK,IAAI,EAAE;gBAEnB,YAAY;gBACZ,EAAE,CAAC,GAAG;gBACN,EAAE,CAAC,GAAG;YAER,aAAa;YACb,OAAO,IAAI,EAAE,CAAC,GAAG,KAAK,IAAI,EAAE;gBAE1B,QAAQ;gBACR,EAAE,CAAC,GAAG;gBACN,EAAE,CAAC,GAAG;oBAAC;iBAAE;YACT,yBAAyB;YAC3B,EAAE,+BAA+B;QACnC;QAEA,OAAO;IACT;IAGA,SAAS,eAAe,CAAC,EAAE,KAAK,EAAE,EAAE;QAClC,IAAI,CAAC,EAAE,QAAQ,IAAI,OAAO,kBAAkB;QAC5C,IAAI,GACF,IAAI,EAAE,CAAC,EACP,MAAM,eAAe,EAAE,CAAC,GACxB,MAAM,IAAI,MAAM;QAElB,IAAI,OAAO;YACT,IAAI,MAAM,AAAC,CAAA,IAAI,KAAK,GAAE,IAAK,GACzB,MAAM,IAAI,MAAM,CAAC,KAAK,MAAM,IAAI,KAAK,CAAC,KAAK,cAAc;iBACpD,IAAI,MAAM,GACf,MAAM,IAAI,MAAM,CAAC,KAAK,MAAM,IAAI,KAAK,CAAC;YAGxC,MAAM,MAAO,CAAA,EAAE,CAAC,GAAG,IAAI,MAAM,IAAG,IAAK,EAAE,CAAC;QAC1C,OAAO,IAAI,IAAI,GAAG;YAChB,MAAM,OAAO,cAAc,CAAC,IAAI,KAAK;YACrC,IAAI,MAAM,AAAC,CAAA,IAAI,KAAK,GAAE,IAAK,GAAG,OAAO,cAAc;QACrD,OAAO,IAAI,KAAK,KAAK;YACnB,OAAO,cAAc,IAAI,IAAI;YAC7B,IAAI,MAAM,AAAC,CAAA,IAAI,KAAK,IAAI,CAAA,IAAK,GAAG,MAAM,MAAM,MAAM,cAAc;QAClE,OAAO;YACL,IAAI,AAAC,CAAA,IAAI,IAAI,CAAA,IAAK,KAAK,MAAM,IAAI,KAAK,CAAC,GAAG,KAAK,MAAM,IAAI,KAAK,CAAC;YAC/D,IAAI,MAAM,AAAC,CAAA,IAAI,KAAK,GAAE,IAAK,GAAG;gBAC5B,IAAI,IAAI,MAAM,KAAK,OAAO;gBAC1B,OAAO,cAAc;YACvB;QACF;QAEA,OAAO;IACT;IAGA,6DAA6D;IAC7D,SAAS,kBAAkB,MAAM,EAAE,CAAC;QAClC,IAAI,IAAI,MAAM,CAAC,EAAE;QAEjB,kEAAkE;QAClE,IAAM,KAAK,UAAU,KAAK,IAAI,KAAK,GAAI;QACvC,OAAO;IACT;IAGA,SAAS,QAAQ,IAAI,EAAE,EAAE,EAAE,EAAE;QAC3B,IAAI,KAAK,gBAAgB;YAEvB,sDAAsD;YACtD,WAAW;YACX,IAAI,IAAI,KAAK,SAAS,GAAG;YACzB,MAAM,MAAM;QACd;QACA,OAAO,SAAS,IAAI,KAAK,OAAO,IAAI,GAAG;IACzC;IAGA,SAAS,MAAM,IAAI,EAAE,EAAE,EAAE,EAAE;QACzB,IAAI,KAAK,cAAc,MAAM,MAAM;QACnC,OAAO,SAAS,IAAI,KAAK,KAAK,IAAI,IAAI;IACxC;IAGA,SAAS,aAAa,MAAM;QAC1B,IAAI,IAAI,OAAO,MAAM,GAAG,GACtB,MAAM,IAAI,WAAW;QAEvB,IAAI,MAAM,CAAC,EAAE;QAEb,iBAAiB;QACjB,IAAI,GAAG;YAEL,0DAA0D;YAC1D,MAAO,IAAI,MAAM,GAAG,KAAK,GAAI;YAE7B,8CAA8C;YAC9C,IAAK,IAAI,MAAM,CAAC,EAAE,EAAE,KAAK,IAAI,KAAK,GAAI;QACxC;QAEA,OAAO;IACT;IAGA,SAAS,cAAc,CAAC;QACtB,IAAI,KAAK;QACT,MAAO,KAAM,MAAM;QACnB,OAAO;IACT;IAGA;;;;;;GAMC,GACD,SAAS,OAAO,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;QAC5B,IAAI,aACF,IAAI,IAAI,KAAK,IAEb,sDAAsD;QACtD,6DAA6D;QAC7D,IAAI,KAAK,IAAI,CAAC,KAAK,WAAW;QAEhC,WAAW;QAEX,OAAS;YACP,IAAI,IAAI,GAAG;gBACT,IAAI,EAAE,KAAK,CAAC;gBACZ,IAAI,SAAS,EAAE,CAAC,EAAE,IAAI,cAAc;YACtC;YAEA,IAAI,UAAU,IAAI;YAClB,IAAI,MAAM,GAAG;gBAEX,2FAA2F;gBAC3F,IAAI,EAAE,CAAC,CAAC,MAAM,GAAG;gBACjB,IAAI,eAAe,EAAE,CAAC,CAAC,EAAE,KAAK,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE;gBACzC;YACF;YAEA,IAAI,EAAE,KAAK,CAAC;YACZ,SAAS,EAAE,CAAC,EAAE;QAChB;QAEA,WAAW;QAEX,OAAO;IACT;IAGA,SAAS,MAAM,CAAC;QACd,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,GAAG,EAAE,GAAG;IAC/B;IAGA;;GAEC,GACD,SAAS,SAAS,IAAI,EAAE,IAAI,EAAE,CAAC;QAC7B,IAAI,GAAG,GACL,IAAI,IAAI,KAAK,IAAI,CAAC,EAAE,GACpB,IAAI;QAEN,MAAO,EAAE,IAAI,KAAK,MAAM,EAAG;YACzB,IAAI,IAAI,KAAK,IAAI,CAAC,EAAE;YAEpB,OAAO;YACP,IAAI,CAAC,EAAE,CAAC,EAAE;gBACR,IAAI;gBACJ;YACF;YAEA,IAAI,EAAE,GAAG,CAAC;YAEV,IAAI,MAAM,KAAK,MAAM,KAAK,EAAE,CAAC,KAAK,GAChC,IAAI;QAER;QAEA,OAAO;IACT;IAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BC,GACD,SAAS,mBAAmB,CAAC,EAAE,EAAE;QAC/B,IAAI,aAAa,OAAO,GAAG,KAAK,KAAK,GAAG,KACtC,MAAM,GACN,IAAI,GACJ,IAAI,GACJ,OAAO,EAAE,WAAW,EACpB,KAAK,KAAK,QAAQ,EAClB,KAAK,KAAK,SAAS;QAErB,kBAAkB;QAClB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,GAAG,IAE3B,OAAO,IAAI,KAAK,EAAE,CAAC,GACf,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,EAAE,CAAC,GAAG,IAAI,IAAI,IAAI,IAChC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI;QAGlC,IAAI,MAAM,MAAM;YACd,WAAW;YACX,MAAM;QACR,OACE,MAAM;QAGR,IAAI,IAAI,KAAK;QAEb,sBAAsB;QACtB,MAAO,EAAE,CAAC,GAAG,GAAI;YAEf,cAAc;YACd,IAAI,EAAE,KAAK,CAAC;YACZ,KAAK;QACP;QAEA,qFAAqF;QACrF,+DAA+D;QAC/D,QAAQ,KAAK,GAAG,CAAC,QAAQ,GAAG,MAAM,KAAK,IAAI,GAAG,IAAI,IAAI;QACtD,OAAO;QACP,cAAc,MAAM,MAAM,IAAI,KAAK;QACnC,KAAK,SAAS,GAAG;QAEjB,OAAS;YACP,MAAM,SAAS,IAAI,KAAK,CAAC,IAAI,KAAK;YAClC,cAAc,YAAY,KAAK,CAAC,EAAE;YAClC,IAAI,IAAI,IAAI,CAAC,OAAO,KAAK,aAAa,KAAK;YAE3C,IAAI,eAAe,EAAE,CAAC,EAAE,KAAK,CAAC,GAAG,SAAS,eAAe,IAAI,CAAC,EAAE,KAAK,CAAC,GAAG,MAAM;gBAC7E,IAAI;gBACJ,MAAO,IAAK,MAAM,SAAS,IAAI,KAAK,CAAC,MAAM,KAAK;gBAEhD,2DAA2D;gBAC3D,iEAAiE;gBACjE,uCAAuC;gBACvC,2FAA2F;gBAC3F,sDAAsD;gBACtD,IAAI,MAAM,MAAM;oBAEd,IAAI,MAAM,KAAK,oBAAoB,IAAI,CAAC,EAAE,MAAM,OAAO,IAAI,MAAM;wBAC/D,KAAK,SAAS,GAAG,OAAO;wBACxB,cAAc,MAAM,IAAI,IAAI,KAAK;wBACjC,IAAI;wBACJ;oBACF,OACE,OAAO,SAAS,KAAK,KAAK,SAAS,GAAG,IAAI,IAAI,WAAW;gBAE7D,OAAO;oBACL,KAAK,SAAS,GAAG;oBACjB,OAAO;gBACT;YACF;YAEA,MAAM;QACR;IACF;IAGA;;;;;;;;;;;;;;GAcC,GACD,SAAS,iBAAiB,CAAC,EAAE,EAAE;QAC7B,IAAI,GAAG,IAAI,aAAa,GAAG,WAAW,KAAK,KAAK,GAAG,KAAK,IAAI,IAC1D,IAAI,GACJ,QAAQ,IACR,IAAI,GACJ,KAAK,EAAE,CAAC,EACR,OAAO,EAAE,WAAW,EACpB,KAAK,KAAK,QAAQ,EAClB,KAAK,KAAK,SAAS;QAErB,0CAA0C;QAC1C,IAAI,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,KAAK,GAAG,MAAM,IAAI,GACjE,OAAO,IAAI,KAAK,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,IAAI,IAAI,MAAM,KAAK,IAAI;QAGpE,IAAI,MAAM,MAAM;YACd,WAAW;YACX,MAAM;QACR,OACE,MAAM;QAGR,KAAK,SAAS,GAAG,OAAO;QACxB,IAAI,eAAe;QACnB,KAAK,EAAE,MAAM,CAAC;QAEd,IAAI,KAAK,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,QAAQ;YAE9B,sBAAsB;YACtB,wEAAwE;YACxE,6CAA6C;YAC7C,2FAA2F;YAC3F,yFAAyF;YACzF,2EAA2E;YAC3E,iCAAiC;YAEjC,4DAA4D;YAC5D,2DAA2D;YAC3D,+BAA+B;YAC/B,MAAO,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,EAAE,MAAM,CAAC,KAAK,EAAG;gBACtD,IAAI,EAAE,KAAK,CAAC;gBACZ,IAAI,eAAe,EAAE,CAAC;gBACtB,KAAK,EAAE,MAAM,CAAC;gBACd;YACF;YAEA,IAAI,EAAE,CAAC;YAEP,IAAI,KAAK,GAAG;gBACV,IAAI,IAAI,KAAK,OAAO;gBACpB;YACF,OACE,IAAI,IAAI,KAAK,KAAK,MAAM,EAAE,KAAK,CAAC;QAEpC,OAAO;YAEL,4FAA4F;YAC5F,uFAAuF;YACvF,gDAAgD;YAChD,IAAI,QAAQ,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,IAAI;YACzC,IAAI,iBAAiB,IAAI,KAAK,KAAK,MAAM,EAAE,KAAK,CAAC,KAAK,MAAM,OAAO,IAAI,CAAC;YACxE,KAAK,SAAS,GAAG;YAEjB,OAAO,MAAM,OAAO,SAAS,GAAG,IAAI,IAAI,WAAW,QAAQ;QAC7D;QAEA,qCAAqC;QACrC,KAAK;QAEL,iBAAiB;QACjB,mEAAmE;QACnE,yCAAyC;QACzC,MAAM,YAAY,IAAI,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,KAAK;QACzD,KAAK,SAAS,EAAE,KAAK,CAAC,IAAI,KAAK;QAC/B,cAAc;QAEd,OAAS;YACP,YAAY,SAAS,UAAU,KAAK,CAAC,KAAK,KAAK;YAC/C,IAAI,IAAI,IAAI,CAAC,OAAO,WAAW,IAAI,KAAK,cAAc,KAAK;YAE3D,IAAI,eAAe,EAAE,CAAC,EAAE,KAAK,CAAC,GAAG,SAAS,eAAe,IAAI,CAAC,EAAE,KAAK,CAAC,GAAG,MAAM;gBAC7E,MAAM,IAAI,KAAK,CAAC;gBAEhB,uFAAuF;gBACvF,2FAA2F;gBAC3F,IAAI,MAAM,GAAG,MAAM,IAAI,IAAI,CAAC,QAAQ,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,IAAI;gBACjE,MAAM,OAAO,KAAK,IAAI,KAAK,IAAI,KAAK;gBAEpC,kFAAkF;gBAClF,kEAAkE;gBAClE,kEAAkE;gBAClE,uCAAuC;gBACvC,gFAAgF;gBAChF,sDAAsD;gBACtD,IAAI,MAAM,MAAM;oBACd,IAAI,oBAAoB,IAAI,CAAC,EAAE,MAAM,OAAO,IAAI,MAAM;wBACpD,KAAK,SAAS,GAAG,OAAO;wBACxB,IAAI,YAAY,IAAI,OAAO,GAAG,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,KAAK;wBACzD,KAAK,SAAS,EAAE,KAAK,CAAC,IAAI,KAAK;wBAC/B,cAAc,MAAM;oBACtB,OACE,OAAO,SAAS,KAAK,KAAK,SAAS,GAAG,IAAI,IAAI,WAAW;gBAE7D,OAAO;oBACL,KAAK,SAAS,GAAG;oBACjB,OAAO;gBACT;YACF;YAEA,MAAM;YACN,eAAe;QACjB;IACF;IAGA,kBAAkB;IAClB,SAAS,kBAAkB,CAAC;QAC1B,YAAY;QACZ,OAAO,OAAO,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG;IAC5B;IAGA;;GAEC,GACD,SAAS,aAAa,CAAC,EAAE,GAAG;QAC1B,IAAI,GAAG,GAAG;QAEV,0FAA0F;QAE1F,iBAAiB;QACjB,IAAI,AAAC,CAAA,IAAI,IAAI,OAAO,CAAC,IAAG,IAAK,IAAI,MAAM,IAAI,OAAO,CAAC,KAAK;QAExD,oBAAoB;QACpB,IAAI,AAAC,CAAA,IAAI,IAAI,MAAM,CAAC,KAAI,IAAK,GAAG;YAE9B,sBAAsB;YACtB,IAAI,IAAI,GAAG,IAAI;YACf,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI;YACpB,MAAM,IAAI,SAAS,CAAC,GAAG;QACzB,OAAO,IAAI,IAAI,GAEb,WAAW;QACX,IAAI,IAAI,MAAM;QAGhB,2BAA2B;QAC3B,IAAK,IAAI,GAAG,IAAI,UAAU,CAAC,OAAO,IAAI;QAEtC,4BAA4B;QAC5B,IAAK,MAAM,IAAI,MAAM,EAAE,IAAI,UAAU,CAAC,MAAM,OAAO,IAAI,EAAE;QACzD,MAAM,IAAI,KAAK,CAAC,GAAG;QAEnB,IAAI,KAAK;YACP,OAAO;YACP,EAAE,CAAC,GAAG,IAAI,IAAI,IAAI;YAClB,EAAE,CAAC,GAAG,EAAE;YAER,iBAAiB;YAEjB,6BAA6B;YAC7B,qEAAqE;YACrE,IAAI,AAAC,CAAA,IAAI,CAAA,IAAK;YACd,IAAI,IAAI,GAAG,KAAK;YAEhB,IAAI,IAAI,KAAK;gBACX,IAAI,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG;gBAC9B,IAAK,OAAO,UAAU,IAAI,KAAM,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,KAAK;gBAC5D,MAAM,IAAI,KAAK,CAAC;gBAChB,IAAI,WAAW,IAAI,MAAM;YAC3B,OACE,KAAK;YAGP,MAAO,KAAM,OAAO;YACpB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;YAEV,IAAI,UAAU;gBAEZ,YAAY;gBACZ,IAAI,EAAE,CAAC,GAAG,EAAE,WAAW,CAAC,IAAI,EAAE;oBAE5B,YAAY;oBACZ,EAAE,CAAC,GAAG;oBACN,EAAE,CAAC,GAAG;gBAER,aAAa;gBACb,OAAO,IAAI,EAAE,CAAC,GAAG,EAAE,WAAW,CAAC,IAAI,EAAE;oBAEnC,QAAQ;oBACR,EAAE,CAAC,GAAG;oBACN,EAAE,CAAC,GAAG;wBAAC;qBAAE;gBACT,kCAAkC;gBACpC,EAAE,wCAAwC;YAC5C;QACF,OAAO;YAEL,QAAQ;YACR,EAAE,CAAC,GAAG;YACN,EAAE,CAAC,GAAG;gBAAC;aAAE;QACX;QAEA,OAAO;IACT;IAGA;;GAEC,GACD,SAAS,WAAW,CAAC,EAAE,GAAG;QACxB,IAAI,MAAM,MAAM,SAAS,GAAG,SAAS,KAAK,GAAG,IAAI;QAEjD,IAAI,IAAI,OAAO,CAAC,OAAO,IAAI;YACzB,MAAM,IAAI,OAAO,CAAC,gBAAgB;YAClC,IAAI,UAAU,IAAI,CAAC,MAAM,OAAO,aAAa,GAAG;QAClD,OAAO,IAAI,QAAQ,cAAc,QAAQ,OAAO;YAC9C,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC,GAAG;YACjB,EAAE,CAAC,GAAG;YACN,EAAE,CAAC,GAAG;YACN,OAAO;QACT;QAEA,IAAI,MAAM,IAAI,CAAC,MAAO;YACpB,OAAO;YACP,MAAM,IAAI,WAAW;QACvB,OAAO,IAAI,SAAS,IAAI,CAAC,MACvB,OAAO;aACF,IAAI,QAAQ,IAAI,CAAC,MACtB,OAAO;aAEP,MAAM,MAAM,kBAAkB;QAGhC,mCAAmC;QACnC,IAAI,IAAI,MAAM,CAAC;QAEf,IAAI,IAAI,GAAG;YACT,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI;YACnB,MAAM,IAAI,SAAS,CAAC,GAAG;QACzB,OACE,MAAM,IAAI,KAAK,CAAC;QAGlB,+FAA+F;QAC/F,kCAAkC;QAClC,IAAI,IAAI,OAAO,CAAC;QAChB,UAAU,KAAK;QACf,OAAO,EAAE,WAAW;QAEpB,IAAI,SAAS;YACX,MAAM,IAAI,OAAO,CAAC,KAAK;YACvB,MAAM,IAAI,MAAM;YAChB,IAAI,MAAM;YAEV,qDAAqD;YACrD,UAAU,OAAO,MAAM,IAAI,KAAK,OAAO,GAAG,IAAI;QAChD;QAEA,KAAK,YAAY,KAAK,MAAM;QAC5B,KAAK,GAAG,MAAM,GAAG;QAEjB,yBAAyB;QACzB,IAAK,IAAI,IAAI,EAAE,CAAC,EAAE,KAAK,GAAG,EAAE,EAAG,GAAG,GAAG;QACrC,IAAI,IAAI,GAAG,OAAO,IAAI,KAAK,EAAE,CAAC,GAAG;QACjC,EAAE,CAAC,GAAG,kBAAkB,IAAI;QAC5B,EAAE,CAAC,GAAG;QACN,WAAW;QAEX,wEAAwE;QACxE,sFAAsF;QACtF,oEAAoE;QACpE,8FAA8F;QAC9F,2FAA2F;QAC3F,yEAAyE;QACzE,IAAI,SAAS,IAAI,OAAO,GAAG,SAAS,MAAM;QAE1C,mDAAmD;QACnD,IAAI,GAAG,IAAI,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,KAAK,KAAK,QAAQ,GAAG,KAAK,QAAQ,GAAG,CAAC,GAAG;QACrE,WAAW;QAEX,OAAO;IACT;IAGA;;;;GAIC,GACD,SAAS,KAAK,IAAI,EAAE,CAAC;QACnB,IAAI,GACF,MAAM,EAAE,CAAC,CAAC,MAAM;QAElB,IAAI,MAAM,GACR,OAAO,EAAE,MAAM,KAAK,IAAI,aAAa,MAAM,GAAG,GAAG;QAGnD,qEAAqE;QACrE,2DAA2D;QAC3D,4DAA4D;QAE5D,sEAAsE;QACtE,IAAI,MAAM,KAAK,IAAI,CAAC;QACpB,IAAI,IAAI,KAAK,KAAK,IAAI;QAEtB,IAAI,EAAE,KAAK,CAAC,IAAI,QAAQ,GAAG;QAC3B,IAAI,aAAa,MAAM,GAAG,GAAG;QAE7B,6BAA6B;QAC7B,IAAI,QACF,KAAK,IAAI,KAAK,IACd,MAAM,IAAI,KAAK,KACf,MAAM,IAAI,KAAK;QACjB,MAAO,KAAM;YACX,SAAS,EAAE,KAAK,CAAC;YACjB,IAAI,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC,OAAO,KAAK,CAAC,IAAI,KAAK,CAAC,QAAQ,KAAK,CAAC;QAC3D;QAEA,OAAO;IACT;IAGA,+DAA+D;IAC/D,SAAS,aAAa,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY;QAC/C,IAAI,GAAG,GAAG,GAAG,IACX,IAAI,GACJ,KAAK,KAAK,SAAS,EACnB,IAAI,KAAK,IAAI,CAAC,KAAK;QAErB,WAAW;QACX,KAAK,EAAE,KAAK,CAAC;QACb,IAAI,IAAI,KAAK;QAEb,OAAS;YACP,IAAI,OAAO,EAAE,KAAK,CAAC,KAAK,IAAI,KAAK,MAAM,MAAM,IAAI;YACjD,IAAI,eAAe,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC;YACvC,IAAI,OAAO,EAAE,KAAK,CAAC,KAAK,IAAI,KAAK,MAAM,MAAM,IAAI;YACjD,IAAI,EAAE,IAAI,CAAC;YAEX,IAAI,EAAE,CAAC,CAAC,EAAE,KAAK,KAAK,GAAG;gBACrB,IAAK,IAAI,GAAG,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,IAAI;gBACjC,IAAI,KAAK,IAAI;YACf;YAEA,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ;QACF;QAEA,WAAW;QACX,EAAE,CAAC,CAAC,MAAM,GAAG,IAAI;QAEjB,OAAO;IACT;IAGA,4CAA4C;IAC5C,SAAS,QAAQ,CAAC,EAAE,CAAC;QACnB,IAAI,IAAI;QACR,MAAO,EAAE,EAAG,KAAK;QACjB,OAAO;IACT;IAGA,6EAA6E;IAC7E,SAAS,iBAAiB,IAAI,EAAE,CAAC;QAC/B,IAAI,GACF,QAAQ,EAAE,CAAC,GAAG,GACd,KAAK,MAAM,MAAM,KAAK,SAAS,EAAE,IACjC,SAAS,GAAG,KAAK,CAAC;QAEpB,IAAI,EAAE,GAAG;QAET,IAAI,EAAE,GAAG,CAAC,SAAS;YACjB,WAAW,QAAQ,IAAI;YACvB,OAAO;QACT;QAEA,IAAI,EAAE,QAAQ,CAAC;QAEf,IAAI,EAAE,MAAM,IACV,WAAW,QAAQ,IAAI;aAClB;YACL,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC;YAEpB,cAAc;YACd,IAAI,EAAE,GAAG,CAAC,SAAS;gBACjB,WAAW,MAAM,KAAM,QAAQ,IAAI,IAAM,QAAQ,IAAI;gBACrD,OAAO;YACT;YAEA,WAAW,MAAM,KAAM,QAAQ,IAAI,IAAM,QAAQ,IAAI;QACvD;QAEA,OAAO,EAAE,KAAK,CAAC,IAAI,GAAG;IACxB;IAGA;;;;GAIC,GACD,SAAS,eAAe,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE;QACxC,IAAI,MAAM,GAAG,GAAG,GAAG,KAAK,SAAS,KAAK,IAAI,GACxC,OAAO,EAAE,WAAW,EACpB,QAAQ,OAAO,KAAK;QAEtB,IAAI,OAAO;YACT,WAAW,IAAI,GAAG;YAClB,IAAI,OAAO,KAAK,GAAG,KAAK,KAAK,QAAQ;iBAChC,WAAW,IAAI,GAAG;QACzB,OAAO;YACL,KAAK,KAAK,SAAS;YACnB,KAAK,KAAK,QAAQ;QACpB;QAEA,IAAI,CAAC,EAAE,QAAQ,IACb,MAAM,kBAAkB;aACnB;YACL,MAAM,eAAe;YACrB,IAAI,IAAI,OAAO,CAAC;YAEhB,wFAAwF;YACxF,gEAAgE;YAChE,0DAA0D;YAC1D,yDAAyD;YAEzD,IAAI,OAAO;gBACT,OAAO;gBACP,IAAI,WAAW,IACb,KAAK,KAAK,IAAI;qBACT,IAAI,WAAW,GACpB,KAAK,KAAK,IAAI;YAElB,OACE,OAAO;YAGT,6FAA6F;YAC7F,2CAA2C;YAE3C,eAAe;YACf,IAAI,KAAK,GAAG;gBACV,MAAM,IAAI,OAAO,CAAC,KAAK;gBACvB,IAAI,IAAI,KAAK;gBACb,EAAE,CAAC,GAAG,IAAI,MAAM,GAAG;gBACnB,EAAE,CAAC,GAAG,YAAY,eAAe,IAAI,IAAI;gBACzC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,MAAM;YAClB;YAEA,KAAK,YAAY,KAAK,IAAI;YAC1B,IAAI,MAAM,GAAG,MAAM;YAEnB,yBAAyB;YACzB,MAAO,EAAE,CAAC,EAAE,IAAI,IAAI,GAAI,GAAG,GAAG;YAE9B,IAAI,CAAC,EAAE,CAAC,EAAE,EACR,MAAM,QAAQ,SAAS;iBAClB;gBACL,IAAI,IAAI,GACN;qBACK;oBACL,IAAI,IAAI,KAAK;oBACb,EAAE,CAAC,GAAG;oBACN,EAAE,CAAC,GAAG;oBACN,IAAI,OAAO,GAAG,GAAG,IAAI,IAAI,GAAG;oBAC5B,KAAK,EAAE,CAAC;oBACR,IAAI,EAAE,CAAC;oBACP,UAAU;gBACZ;gBAEA,6EAA6E;gBAC7E,IAAI,EAAE,CAAC,GAAG;gBACV,IAAI,OAAO;gBACX,UAAU,WAAW,EAAE,CAAC,KAAK,EAAE,KAAK,KAAK;gBAEzC,UAAU,KAAK,IACX,AAAC,CAAA,MAAM,KAAK,KAAK,OAAM,KAAO,CAAA,OAAO,KAAK,OAAQ,CAAA,EAAE,CAAC,GAAG,IAAI,IAAI,CAAA,CAAC,IACjE,IAAI,KAAK,MAAM,KAAM,CAAA,OAAO,KAAK,WAAW,OAAO,KAAK,EAAE,CAAC,KAAK,EAAE,GAAG,KACrE,OAAQ,CAAA,EAAE,CAAC,GAAG,IAAI,IAAI,CAAA,CAAC;gBAE3B,GAAG,MAAM,GAAG;gBAEZ,IAAI,SAEF,0EAA0E;gBAC1E,MAAO,EAAE,EAAE,CAAC,EAAE,GAAG,GAAG,OAAO,GAAI;oBAC7B,EAAE,CAAC,GAAG,GAAG;oBACT,IAAI,CAAC,IAAI;wBACP,EAAE;wBACF,GAAG,OAAO,CAAC;oBACb;gBACF;gBAGF,4BAA4B;gBAC5B,IAAK,MAAM,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE,EAAE;gBAEtC,gCAAgC;gBAChC,IAAK,IAAI,GAAG,MAAM,IAAI,IAAI,KAAK,IAAK,OAAO,SAAS,MAAM,CAAC,EAAE,CAAC,EAAE;gBAEhE,8BAA8B;gBAC9B,IAAI,OAAO;oBACT,IAAI,MAAM;wBACR,IAAI,WAAW,MAAM,WAAW,GAAG;4BACjC,IAAI,WAAW,KAAK,IAAI;4BACxB,IAAK,EAAE,KAAK,MAAM,GAAG,MAAO,OAAO;4BACnC,KAAK,YAAY,KAAK,MAAM;4BAC5B,IAAK,MAAM,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE,EAAE;4BAEtC,4BAA4B;4BAC5B,IAAK,IAAI,GAAG,MAAM,MAAM,IAAI,KAAK,IAAK,OAAO,SAAS,MAAM,CAAC,EAAE,CAAC,EAAE;wBACpE,OACE,MAAM,IAAI,MAAM,CAAC,KAAK,MAAM,IAAI,KAAK,CAAC;;oBAI1C,MAAO,MAAO,CAAA,IAAI,IAAI,MAAM,IAAG,IAAK;gBACtC,OAAO,IAAI,IAAI,GAAG;oBAChB,MAAO,EAAE,GAAI,MAAM,MAAM;oBACzB,MAAM,OAAO;gBACf,OAAO;oBACL,IAAI,EAAE,IAAI,KAAK,IAAK,KAAK,KAAK,KAAO,OAAO;yBACvC,IAAI,IAAI,KAAK,MAAM,IAAI,KAAK,CAAC,GAAG,KAAK,MAAM,IAAI,KAAK,CAAC;gBAC5D;YACF;YAEA,MAAM,AAAC,CAAA,WAAW,KAAK,OAAO,WAAW,IAAI,OAAO,WAAW,IAAI,OAAO,EAAC,IAAK;QAClF;QAEA,OAAO,EAAE,CAAC,GAAG,IAAI,MAAM,MAAM;IAC/B;IAGA,iCAAiC;IACjC,SAAS,SAAS,GAAG,EAAE,GAAG;QACxB,IAAI,IAAI,MAAM,GAAG,KAAK;YACpB,IAAI,MAAM,GAAG;YACb,OAAO;QACT;IACF;IAGA,kBAAkB;IAGlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA0CC,GAGD;;;;;GAKC,GACD,SAAS,IAAI,CAAC;QACZ,OAAO,IAAI,IAAI,CAAC,GAAG,GAAG;IACxB;IAGA;;;;;GAKC,GACD,SAAS,KAAK,CAAC;QACb,OAAO,IAAI,IAAI,CAAC,GAAG,IAAI;IACzB;IAGA;;;;;;GAMC,GACD,SAAS,MAAM,CAAC;QACd,OAAO,IAAI,IAAI,CAAC,GAAG,KAAK;IAC1B;IAGA;;;;;;;GAOC,GACD,SAAS,IAAI,CAAC,EAAE,CAAC;QACf,OAAO,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC;IAC1B;IAGA;;;;;;GAMC,GACD,SAAS,KAAK,CAAC;QACb,OAAO,IAAI,IAAI,CAAC,GAAG,IAAI;IACzB;IAGA;;;;;;GAMC,GACD,SAAS,MAAM,CAAC;QACd,OAAO,IAAI,IAAI,CAAC,GAAG,KAAK;IAC1B;IAGA;;;;;;GAMC,GACD,SAAS,KAAK,CAAC;QACb,OAAO,IAAI,IAAI,CAAC,GAAG,IAAI;IACzB;IAGA;;;;;;GAMC,GACD,SAAS,MAAM,CAAC;QACd,OAAO,IAAI,IAAI,CAAC,GAAG,KAAK;IAC1B;IAGA;;;;;;;;;;;;;;;;;;;;;;;;GAwBC,GACD,SAAS,MAAM,CAAC,EAAE,CAAC;QACjB,IAAI,IAAI,IAAI,CAAC;QACb,IAAI,IAAI,IAAI,CAAC;QACb,IAAI,GACF,KAAK,IAAI,CAAC,SAAS,EACnB,KAAK,IAAI,CAAC,QAAQ,EAClB,MAAM,KAAK;QAEb,aAAa;QACb,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EACd,IAAI,IAAI,IAAI,CAAC;aAGR,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;YACvB,IAAI,MAAM,IAAI,EAAE,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,OAAO;YAC/C,EAAE,CAAC,GAAG,EAAE,CAAC;QAEX,4BAA4B;QAC5B,OAAO,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,MAAM,IAAI;YAC7B,IAAI,EAAE,CAAC,GAAG,IAAI,MAAM,IAAI,EAAE,IAAI,MAAM,IAAI,IAAI,CAAC;YAC7C,EAAE,CAAC,GAAG,EAAE,CAAC;QAEX,4BAA4B;QAC5B,OAAO,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,MAAM,IAAI;YAC7B,IAAI,MAAM,IAAI,EAAE,KAAK,GAAG,KAAK,CAAC;YAC9B,EAAE,CAAC,GAAG,EAAE,CAAC;QAEX,2BAA2B;QAC3B,OAAO,IAAI,EAAE,CAAC,GAAG,GAAG;YAClB,IAAI,CAAC,SAAS,GAAG;YACjB,IAAI,CAAC,QAAQ,GAAG;YAChB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,KAAK;YAChC,IAAI,MAAM,IAAI,EAAE,KAAK;YACrB,IAAI,CAAC,SAAS,GAAG;YACjB,IAAI,CAAC,QAAQ,GAAG;YAChB,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC;QACpC,OACE,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,KAAK;QAGlC,OAAO;IACT;IAGA;;;;;;GAMC,GACD,SAAS,KAAK,CAAC;QACb,OAAO,IAAI,IAAI,CAAC,GAAG,IAAI;IACzB;IAGA;;;;;GAKC,GACD,SAAS,KAAK,CAAC;QACb,OAAO,SAAS,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,GAAG;IAC5C;IAGA;;;;;;;GAOC,GACD,SAAS,MAAM,CAAC,EAAE,GAAG,EAAE,GAAG;QACxB,OAAO,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK;IAChC;IAGA;;;;;;;;;;;;;;;;;GAiBC,GACD,SAAS,OAAO,GAAG;QACjB,IAAI,CAAC,OAAO,OAAO,QAAQ,UAAU,MAAM,MAAM,eAAe;QAChE,IAAI,GAAG,GAAG,GACR,cAAc,IAAI,QAAQ,KAAK,MAC/B,KAAK;YACH;YAAa;YAAG;YAChB;YAAY;YAAG;YACf;YAAY,CAAC;YAAW;YACxB;YAAY;YAAG;YACf;YAAQ;YAAG;YACX;YAAQ,CAAC;YAAW;YACpB;YAAU;YAAG;SACd;QAEH,IAAK,IAAI,GAAG,IAAI,GAAG,MAAM,EAAE,KAAK,EAAG;YACjC,IAAI,IAAI,EAAE,CAAC,EAAE,EAAE,aAAa,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE;YACjD,IAAI,AAAC,CAAA,IAAI,GAAG,CAAC,EAAE,AAAD,MAAO,KAAK,GAAG;gBAC3B,IAAI,UAAU,OAAO,KAAK,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,KAAK,EAAE,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,EAAE,GAAG;qBACjE,MAAM,MAAM,kBAAkB,IAAI,OAAO;YAChD;QACF;QAEA,IAAI,IAAI,UAAU,aAAa,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE;QACpD,IAAI,AAAC,CAAA,IAAI,GAAG,CAAC,EAAE,AAAD,MAAO,KAAK,GAAG;YAC3B,IAAI,MAAM,QAAQ,MAAM,SAAS,MAAM,KAAK,MAAM;gBAChD,IAAI,GAAG;oBACL,IAAI,OAAO,UAAU,eAAe,UACjC,CAAA,OAAO,eAAe,IAAI,OAAO,WAAW,AAAD,GAC5C,IAAI,CAAC,EAAE,GAAG;yBAEV,MAAM,MAAM;gBAEhB,OACE,IAAI,CAAC,EAAE,GAAG;mBAGZ,MAAM,MAAM,kBAAkB,IAAI,OAAO;QAE7C;QAEA,OAAO,IAAI;IACb;IAGA;;;;;;GAMC,GACD,SAAS,IAAI,CAAC;QACZ,OAAO,IAAI,IAAI,CAAC,GAAG,GAAG;IACxB;IAGA;;;;;;GAMC,GACD,SAAS,KAAK,CAAC;QACb,OAAO,IAAI,IAAI,CAAC,GAAG,IAAI;IACzB;IAGA;;;;GAIC,GACD,SAAS,MAAM,GAAG;QAChB,IAAI,GAAG,GAAG;QAEV;;;;;;KAMC,GACD,SAAS,QAAQ,CAAC;YAChB,IAAI,GAAG,GAAG,GACR,IAAI,IAAI;YAEV,8BAA8B;YAC9B,IAAI,CAAE,CAAA,aAAa,OAAM,GAAI,OAAO,IAAI,QAAQ;YAEhD,2FAA2F;YAC3F,0BAA0B;YAC1B,EAAE,WAAW,GAAG;YAEhB,IAAI,kBAAkB,IAAI;gBACxB,EAAE,CAAC,GAAG,EAAE,CAAC;gBAET,IAAI,UAAU;oBACZ,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,QAAQ,IAAI,EAAE;wBAE9B,YAAY;wBACZ,EAAE,CAAC,GAAG;wBACN,EAAE,CAAC,GAAG;oBACR,OAAO,IAAI,EAAE,CAAC,GAAG,QAAQ,IAAI,EAAE;wBAE7B,QAAQ;wBACR,EAAE,CAAC,GAAG;wBACN,EAAE,CAAC,GAAG;4BAAC;yBAAE;oBACX,OAAO;wBACL,EAAE,CAAC,GAAG,EAAE,CAAC;wBACT,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK;oBACjB;gBACF,OAAO;oBACL,EAAE,CAAC,GAAG,EAAE,CAAC;oBACT,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,KAAK,EAAE,CAAC;gBAC/B;gBAEA;YACF;YAEA,IAAI,OAAO;YAEX,IAAI,MAAM,UAAU;gBAClB,IAAI,MAAM,GAAG;oBACX,EAAE,CAAC,GAAG,IAAI,IAAI,IAAI,KAAK;oBACvB,EAAE,CAAC,GAAG;oBACN,EAAE,CAAC,GAAG;wBAAC;qBAAE;oBACT;gBACF;gBAEA,IAAI,IAAI,GAAG;oBACT,IAAI,CAAC;oBACL,EAAE,CAAC,GAAG;gBACR,OACE,EAAE,CAAC,GAAG;gBAGR,gCAAgC;gBAChC,IAAI,MAAM,CAAC,CAAC,KAAK,IAAI,KAAK;oBACxB,IAAK,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,KAAK,GAAI;oBAErC,IAAI,UAAU;wBACZ,IAAI,IAAI,QAAQ,IAAI,EAAE;4BACpB,EAAE,CAAC,GAAG;4BACN,EAAE,CAAC,GAAG;wBACR,OAAO,IAAI,IAAI,QAAQ,IAAI,EAAE;4BAC3B,EAAE,CAAC,GAAG;4BACN,EAAE,CAAC,GAAG;gCAAC;6BAAE;wBACX,OAAO;4BACL,EAAE,CAAC,GAAG;4BACN,EAAE,CAAC,GAAG;gCAAC;6BAAE;wBACX;oBACF,OAAO;wBACL,EAAE,CAAC,GAAG;wBACN,EAAE,CAAC,GAAG;4BAAC;yBAAE;oBACX;oBAEA;gBACF;gBAEA,mBAAmB;gBACnB,IAAI,IAAI,MAAM,GAAG;oBACf,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG;oBACd,EAAE,CAAC,GAAG;oBACN,EAAE,CAAC,GAAG;oBACN;gBACF;gBAEA,OAAO,aAAa,GAAG,EAAE,QAAQ;YACnC;YAEA,IAAI,MAAM,UAAU;gBAClB,IAAI,AAAC,CAAA,IAAI,EAAE,UAAU,CAAC,EAAC,MAAO,IAAI;oBAChC,IAAI,EAAE,KAAK,CAAC;oBACZ,EAAE,CAAC,GAAG;gBACR,OAAO;oBACL,IAAI,MAAM,IAAI,IAAI,EAAE,KAAK,CAAC,IAAK,YAAY;oBAC3C,EAAE,CAAC,GAAG;gBACR;gBAEA,OAAO,UAAU,IAAI,CAAC,KAAK,aAAa,GAAG,KAAK,WAAW,GAAG;YAChE;YAEA,IAAI,MAAM,UAAU;gBAClB,IAAI,IAAI,GAAG;oBACT,IAAI,CAAC;oBACL,EAAE,CAAC,GAAG;gBACR,OACE,EAAE,CAAC,GAAG;gBAGR,OAAO,aAAa,GAAG,EAAE,QAAQ;YACnC;YAEA,MAAM,MAAM,kBAAkB;QAChC;QAEA,QAAQ,SAAS,GAAG;QAEpB,QAAQ,QAAQ,GAAG;QACnB,QAAQ,UAAU,GAAG;QACrB,QAAQ,UAAU,GAAG;QACrB,QAAQ,WAAW,GAAG;QACtB,QAAQ,aAAa,GAAG;QACxB,QAAQ,eAAe,GAAG;QAC1B,QAAQ,eAAe,GAAG;QAC1B,QAAQ,eAAe,GAAG;QAC1B,QAAQ,gBAAgB,GAAG;QAC3B,QAAQ,MAAM,GAAG;QAEjB,QAAQ,MAAM,GAAG,QAAQ,GAAG,GAAG;QAC/B,QAAQ,KAAK,GAAG;QAChB,QAAQ,SAAS,GAAG;QAEpB,QAAQ,GAAG,GAAG;QACd,QAAQ,IAAI,GAAG;QACf,QAAQ,KAAK,GAAG,OAAc,MAAM;QACpC,QAAQ,GAAG,GAAG;QACd,QAAQ,IAAI,GAAG;QACf,QAAQ,KAAK,GAAG,OAAc,MAAM;QACpC,QAAQ,IAAI,GAAG;QACf,QAAQ,KAAK,GAAG,OAAc,MAAM;QACpC,QAAQ,KAAK,GAAG;QAChB,QAAQ,IAAI,GAAG,MAAe,MAAM;QACpC,QAAQ,IAAI,GAAG;QACf,QAAQ,KAAK,GAAG;QAChB,QAAQ,GAAG,GAAG;QACd,QAAQ,IAAI,GAAG,MAAe,MAAM;QACpC,QAAQ,GAAG,GAAG;QACd,QAAQ,GAAG,GAAG;QACd,QAAQ,KAAK,GAAG;QAChB,QAAQ,KAAK,GAAG,OAAc,MAAM;QACpC,QAAQ,EAAE,GAAG;QACb,QAAQ,GAAG,GAAG;QACd,QAAQ,KAAK,GAAG,OAAc,MAAM;QACpC,QAAQ,IAAI,GAAG,MAAe,MAAM;QACpC,QAAQ,GAAG,GAAG;QACd,QAAQ,GAAG,GAAG;QACd,QAAQ,GAAG,GAAG;QACd,QAAQ,GAAG,GAAG;QACd,QAAQ,GAAG,GAAG;QACd,QAAQ,MAAM,GAAG;QACjB,QAAQ,KAAK,GAAG;QAChB,QAAQ,IAAI,GAAG,MAAe,MAAM;QACpC,QAAQ,GAAG,GAAG;QACd,QAAQ,IAAI,GAAG,MAAe,MAAM;QACpC,QAAQ,IAAI,GAAG;QACf,QAAQ,GAAG,GAAG;QACd,QAAQ,GAAG,GAAG;QACd,QAAQ,GAAG,GAAG;QACd,QAAQ,IAAI,GAAG,MAAe,MAAM;QACpC,QAAQ,KAAK,GAAG,OAAc,MAAM;QAEpC,IAAI,QAAQ,KAAK,GAAG,MAAM,CAAC;QAC3B,IAAI,KACF;YAAA,IAAI,IAAI,QAAQ,KAAK,MAAM;gBACzB,KAAK;oBAAC;oBAAa;oBAAY;oBAAY;oBAAY;oBAAQ;oBAAQ;oBAAU;iBAAS;gBAC1F,IAAK,IAAI,GAAG,IAAI,GAAG,MAAM,EAAG,IAAI,CAAC,IAAI,cAAc,CAAC,IAAI,EAAE,CAAC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE;YACpF;QAAA;QAGF,QAAQ,MAAM,CAAC;QAEf,OAAO;IACT;IAGA;;;;;;;GAOC,GACD,SAAS,IAAI,CAAC,EAAE,CAAC;QACf,OAAO,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC;IACzB;IAGA;;;;;;GAMC,GACD,SAAS,IAAI,CAAC;QACZ,OAAO,IAAI,IAAI,CAAC,GAAG,GAAG;IACxB;IAGA;;;;;GAKC,GACD,SAAS,MAAM,CAAC;QACd,OAAO,SAAS,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,GAAG;IAC5C;IAGA;;;;;;;;GAQC,GACD,SAAS;QACP,IAAI,GAAG,GACL,IAAI,IAAI,IAAI,CAAC;QAEf,WAAW;QAEX,IAAK,IAAI,GAAG,IAAI,UAAU,MAAM,EAAG;YACjC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI;YAC3B,IAAI,CAAC,EAAE,CAAC,EAAE;gBACR,IAAI,EAAE,CAAC,EAAE;oBACP,WAAW;oBACX,OAAO,IAAI,IAAI,CAAC,IAAI;gBACtB;gBACA,IAAI;YACN,OAAO,IAAI,EAAE,CAAC,EACZ,IAAI,EAAE,IAAI,CAAC,EAAE,KAAK,CAAC;QAEvB;QAEA,WAAW;QAEX,OAAO,EAAE,IAAI;IACf;IAGA;;;;GAIC,GACD,SAAS,kBAAkB,GAAG;QAC5B,OAAO,eAAe,WAAW,OAAO,IAAI,WAAW,KAAK,OAAO;IACrE;IAGA;;;;;;GAMC,GACD,SAAS,GAAG,CAAC;QACX,OAAO,IAAI,IAAI,CAAC,GAAG,EAAE;IACvB;IAGA;;;;;;;;;GASC,GACD,SAAS,IAAI,CAAC,EAAE,CAAC;QACf,OAAO,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC;IACzB;IAGA;;;;;;GAMC,GACD,SAAS,KAAK,CAAC;QACb,OAAO,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC;IACzB;IAGA;;;;;;GAMC,GACD,SAAS,MAAM,CAAC;QACd,OAAO,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC;IACzB;IAGA;;;;;GAKC,GACD,SAAS;QACP,OAAO,SAAS,IAAI,EAAE,WAAW;IACnC;IAGA;;;;;GAKC,GACD,SAAS;QACP,OAAO,SAAS,IAAI,EAAE,WAAW;IACnC;IAGA;;;;;;;GAOC,GACD,SAAS,IAAI,CAAC,EAAE,CAAC;QACf,OAAO,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC;IACzB;IAGA;;;;;;;GAOC,GACD,SAAS,IAAI,CAAC,EAAE,CAAC;QACf,OAAO,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC;IACzB;IAGA;;;;;;;GAOC,GACD,SAAS,IAAI,CAAC,EAAE,CAAC;QACf,OAAO,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC;IACzB;IAGA;;;;;;;GAOC,GACD,SAAS,OAAO,EAAE;QAChB,IAAI,GAAG,GAAG,GAAG,GACX,IAAI,GACJ,IAAI,IAAI,IAAI,CAAC,IACb,KAAK,EAAE;QAET,IAAI,OAAO,KAAK,GAAG,KAAK,IAAI,CAAC,SAAS;aACjC,WAAW,IAAI,GAAG;QAEvB,IAAI,KAAK,IAAI,CAAC,KAAK;QAEnB,IAAI,CAAC,IAAI,CAAC,MAAM,EACd,MAAO,IAAI,GAAI,EAAE,CAAC,IAAI,GAAG,KAAK,MAAM,KAAK,MAAM;aAG1C,IAAI,OAAO,eAAe,EAAE;YACjC,IAAI,OAAO,eAAe,CAAC,IAAI,YAAY;YAE3C,MAAO,IAAI,GAAI;gBACb,IAAI,CAAC,CAAC,EAAE;gBAER,sBAAsB;gBACtB,yEAAyE;gBACzE,IAAI,KAAK,QACP,CAAC,CAAC,EAAE,GAAG,OAAO,eAAe,CAAC,IAAI,YAAY,GAAG,CAAC,EAAE;qBAGpD,uBAAuB;gBACvB,4BAA4B;gBAC5B,EAAE,CAAC,IAAI,GAAG,IAAI;YAElB;QAEF,yCAAyC;QACzC,OAAO,IAAI,OAAO,WAAW,EAAE;YAE7B,SAAS;YACT,IAAI,OAAO,WAAW,CAAC,KAAK;YAE5B,MAAO,IAAI,GAAI;gBAEb,sBAAsB;gBACtB,IAAI,CAAC,CAAC,EAAE,GAAI,CAAA,CAAC,CAAC,IAAI,EAAE,IAAI,CAAA,IAAM,CAAA,CAAC,CAAC,IAAI,EAAE,IAAI,EAAC,IAAM,CAAA,AAAC,CAAA,CAAC,CAAC,IAAI,EAAE,GAAG,IAAG,KAAM,EAAC;gBAEvE,wEAAwE;gBACxE,IAAI,KAAK,QACP,OAAO,WAAW,CAAC,GAAG,IAAI,CAAC,GAAG;qBACzB;oBAEL,uBAAuB;oBACvB,4BAA4B;oBAC5B,GAAG,IAAI,CAAC,IAAI;oBACZ,KAAK;gBACP;YACF;YAEA,IAAI,IAAI;QACV,OACE,MAAM,MAAM;QAGd,IAAI,EAAE,CAAC,EAAE,EAAE;QACX,MAAM;QAEN,oDAAoD;QACpD,IAAI,KAAK,IAAI;YACX,IAAI,QAAQ,IAAI,WAAW;YAC3B,EAAE,CAAC,EAAE,GAAG,AAAC,CAAA,IAAI,IAAI,CAAA,IAAK;QACxB;QAEA,wCAAwC;QACxC,MAAO,EAAE,CAAC,EAAE,KAAK,GAAG,IAAK,GAAG,GAAG;QAE/B,QAAQ;QACR,IAAI,IAAI,GAAG;YACT,IAAI;YACJ,KAAK;gBAAC;aAAE;QACV,OAAO;YACL,IAAI;YAEJ,uEAAuE;YACvE,MAAO,EAAE,CAAC,EAAE,KAAK,GAAG,KAAK,SAAU,GAAG,KAAK;YAE3C,uEAAuE;YACvE,IAAK,IAAI,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE,KAAK,IAAI,KAAK,GAAI;YAEzC,iEAAiE;YACjE,IAAI,IAAI,UAAU,KAAK,WAAW;QACpC;QAEA,EAAE,CAAC,GAAG;QACN,EAAE,CAAC,GAAG;QAEN,OAAO;IACT;IAGA;;;;;;;GAOC,GACD,SAAS,MAAM,CAAC;QACd,OAAO,SAAS,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ;IACzD;IAGA;;;;;;;;;;GAUC,GACD,SAAS,KAAK,CAAC;QACb,IAAI,IAAI,IAAI,CAAC;QACb,OAAO,EAAE,CAAC,GAAI,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,GAAI,EAAE,CAAC,IAAI;IACjD;IAGA;;;;;;GAMC,GACD,SAAS,IAAI,CAAC;QACZ,OAAO,IAAI,IAAI,CAAC,GAAG,GAAG;IACxB;IAGA;;;;;;GAMC,GACD,SAAS,KAAK,CAAC;QACb,OAAO,IAAI,IAAI,CAAC,GAAG,IAAI;IACzB;IAGA;;;;;;GAMC,GACD,SAAS,KAAK,CAAC;QACb,OAAO,IAAI,IAAI,CAAC,GAAG,IAAI;IACzB;IAGA;;;;;;;GAOC,GACD,SAAS,IAAI,CAAC,EAAE,CAAC;QACf,OAAO,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC;IACzB;IAGA;;;;;;;;GAQC,GACD,SAAS;QACP,IAAI,IAAI,GACN,OAAO,WACP,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE;QAEtB,WAAW;QACX,MAAO,EAAE,CAAC,IAAI,EAAE,IAAI,KAAK,MAAM,EAAG,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE;QACpD,WAAW;QAEX,OAAO,SAAS,GAAG,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ;IAClD;IAGA;;;;;;GAMC,GACD,SAAS,IAAI,CAAC;QACZ,OAAO,IAAI,IAAI,CAAC,GAAG,GAAG;IACxB;IAGA;;;;;;GAMC,GACD,SAAS,KAAK,CAAC;QACb,OAAO,IAAI,IAAI,CAAC,GAAG,IAAI;IACzB;IAGA;;;;;GAKC,GACD,SAAS,MAAM,CAAC;QACd,OAAO,SAAS,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,GAAG;IAC5C;IAGA,oDAAoD;IACpD,UAAU,MAAM;IAChB,QAAQ,SAAS,CAAC,WAAW,GAAG;IAChC,OAAO,CAAC,UAAU,GAAG,QAAQ,OAAO,GAAG;IAEvC,0DAA0D;IAC1D,OAAO,IAAI,QAAQ;IACnB,KAAK,IAAI,QAAQ;IAGjB,UAAU;IAGV,OAAO;IACP,IAAI,OAAO,UAAU,cAAc,OAAO,GAAG,EAC3C,OAAO;QACL,OAAO;IACT;SAGK,IAAoC,OAAO,OAAO,EAAE;QACzD,IAAI,OAAO,UAAU,cAAc,OAAO,OAAO,QAAQ,IAAI,UAAU;YACrE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,8BAA8B,GAAG,EAAE,QAAQ;YAC3D,CAAC,CAAC,OAAO,WAAW,CAAC,GAAG;QAC1B;QAEA,OAAO,OAAO,GAAG;IAEnB,WAAW;IACX,OAAO;QACL,IAAI,CAAC,aACH,cAAc,OAAO,QAAQ,eAAe,QAAQ,KAAK,IAAI,IAAI,OAAO,OAAO;QAGjF,aAAa,YAAY,OAAO;QAChC,QAAQ,UAAU,GAAG;YACnB,YAAY,OAAO,GAAG;YACtB,OAAO;QACT;QAEA,YAAY,OAAO,GAAG;IACxB;AACF,CAAA,EAAG,IAAI;;;ACt1JP,sBAAsB;;;6CAMV;+CAQA;sDAKC;kDAED;4DAMA;wDAmFC;4DAiBA;AAzHN,IAAA,AAAK,iCAAA;;;;;;WAAA;;AAQL,IAAA,AAAK,mCAAA;;;;WAAA;;AAKL,MAAM,mBAAmB,OAAO,IAAI,CAAC,WAAW,MAAM,GAAG;AAEzD,IAAA,AAAK,sCAAA;;;;WAAA;;AAML,IAAA,AAAK,gDAAA;;;;;WAAA;;AAmFL,MAAM,qBAA0C;IACnD,WAAW;IAAQ,MAAM,KAAK,GAAG;IAAI,uBAAuB;IAAG,kCAAkC;IACjG,2BAA2B;IAAM,4BAA4B;IAAM,6BAA6B;IAChG,iCAAiC;IAAM,iBAAiB;IAAM,+BAA+B;IAC7F,oBAAoB;IAAK,aAAa;IAAG,sBAAsB;IAC/D,2BAA2B;IAAM,2BAA2B;IAC5D,gCAAgC;AACpC;AAUO,MAAM,yBAAiJ;IAC1J,GAAoB,EAAE;QAClB,GAAoB,EAAE;QACtB,GAAoB,EAAE;YAAE,OAAO;YAAkC,eAAe;QAAI;QACpF,GAAmB,EAAE;IACzB;IACA,GAAoB,EAAE;QAClB,GAAoB,EAAE;YAAE,OAAO;YAAkC,eAAe;QAAI;QACpF,GAAoB,EAAE;QACtB,GAAmB,EAAE;IACzB;IACA,GAAmB,EAAE;QACjB,GAAoB,EAAE;QACtB,GAAoB,EAAE;QACtB,GAAmB,EAAE;YAAE,OAAO;YAAsC,eAAe;QAAI;IAC3F;AACJ;;;AC/IA,sBAAsB;;;iDAcT;AAZb;AACA;AAOA;AACA;AAGO,MAAM,cAAoB;IAC7B,MAAM;IACN,aAAa;IACb,WAAW,CAAA,GAAA,0BAAe,AAAD,EAAE,IAAI,CAAC,KAAK;IACrC,cAAc,CAAC,OAAO,MAAQ,MAAM,KAAK,GAAG,GAAG,CAAC,uBAAuB;IACvE,OAAO,CAAC,OAAO;QACX,MAAM,cAAc,CAAA,GAAA,yBAAa,AAAD,EAAE;QAClC,MAAM,YAAY,IAAI,aAAa;QAEnC,kCAAkC;QAClC,iEAAiE;QACjE,IAAI,eAAe,CAAA,GAAA,sBAAS,AAAD,EAAE,QAAQ;QACrC,MAAM,kBAAkB,IAAI,MAAM;QAClC,IAAI,kBAAkB,OAClB,eAAe,CAAA,GAAA,sBAAS,AAAD,EAAE,QAAQ;aAC9B,IAAI,kBAAkB,MACzB,eAAe,CAAA,GAAA,sBAAS,AAAD,EAAE,OAAO;QAEpC,uBAAuB;QAEvB,IAAI,iBAAiB,CAAC,aAAa,WAAW,AAAC,IAAI,MAAM,KAAK,MAAO,IAAI,IAAI,WAAW;QAExF,IAAI,qBAAqB,CAAC;QAC1B,MAAM,aAAa,IAAI,0BAA0B,CAAC;QAElD,OAAO;YAAC;gBACJ,WAAW;gBACX,gBAAgB;oBAAC;iBAAU;gBAC3B,MAAM,CAAA,GAAA,0BAAe,AAAD,EAAE,WAAW;gBACjC,iBAAiB;gBACjB;YACJ;SAAE;IACN;AACJ;;;AC/CA,oBAAoB;;;AAKpB;;;;;;;CAOC,GACD,qDAAgB;AAZhB;AAYO,SAAS,gBAAgB,QAAgB,EAAE,GAAkB;IAChE,MAAM,cAAc,SAAS,KAAK,CAAC,IAAI,CAAC,EAAE;IAC1C,MAAM,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK;IAC5C,OAAO,OAAO,KAAK,SAAS,GAAG,CAAA,GAAA,0BAAe,AAAD,EAAE,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,SAAS,GAAG,iCAAiC;AACnH;;;ACjBA,qBAAqB;;;AAYrB;;;;;;CAMC,GACD,mDAAgB;AAlBhB;;AACA;AACA;AAgBO,SAAS,cAAc,aAAqD;IAC/E,MAAM,WAAW,IAAI,CAAA,GAAA,0BAAK,AAAD,EAAmC;QAAE,OAAO;QAAO,gBAAgB;IAAM;IAElG,cAAc,WAAW,CAAC,CAAC,MAAM;QAC7B,+DAA+D;QAC/D,4EAA4E;QAC5E,MAAM,WAA6B;YAC/B,IAAI,MAAM,EAAE,IAAI;YAChB,UAAU,MAAM,QAAQ,IAAI;YAC5B,WAAW,MAAM,SAAS,IAAI,CAAA,GAAA,sBAAS,AAAD,EAAE,QAAQ;YAChD,cAAc,MAAM,YAAY,IAAI;YACpC,SAAS,MAAM,OAAO,IAAI;YAC1B,QAAQ,MAAM,MAAM,GAAG,CAAA,GAAA,0BAAe,AAAD,EAAE,IAAI,CAAC,MAAM,MAAM,EAAE,MAAM,MAAM,CAAC,IAAI,IAAI,CAAA,GAAA,0BAAe,AAAD,EAAE,IAAI,CAAC,GAAG;YACvG,QAAQ,MAAM,MAAM,IAAI,CAAA,GAAA,oBAAO,AAAD,EAAE,mBAAmB;YACnD,cAAc,MAAM,YAAY,IAAI,CAAA,GAAA,yBAAY,AAAD,EAAE,IAAI;YACrD,oBAAoB,MAAM,kBAAkB,GAAG,CAAA,GAAA,0BAAe,AAAD,EAAE,IAAI,CAAC,MAAM,kBAAkB,EAAE,MAAM,kBAAkB,CAAC,IAAI,IAAI;YAC/H,gBAAgB,MAAM,cAAc,GAAG,CAAA,GAAA,0BAAe,AAAD,EAAE,IAAI,CAAC,MAAM,cAAc,EAAE,MAAM,cAAc,CAAC,IAAI,IAAI;QACnH;QACA,SAAS,OAAO,CAAC,MAAM;IAC3B;IAEA,cAAc,WAAW,CAAC,CAAC,SAAS,OAAO,QAAQ;QAC/C,IAAI,SAAS,OAAO,CAAC,WAAW,SAAS,OAAO,CAAC,SAAS;YACtD,oEAAoE;YACpE,MAAM,eAA8B;gBAChC,gBAAgB,MAAM,cAAc,GAAG,CAAA,GAAA,0BAAe,AAAD,EAAE,IAAI,CAAC,MAAM,cAAc,EAAE,MAAM,cAAc,CAAC,IAAI,IAAI,CAAA,GAAA,0BAAe,AAAD,EAAE,IAAI,CAAC,GAAG;gBACvI,wBAAwB,MAAM,sBAAsB,IAAI,CAAA,GAAA,mCAAsB,AAAD,EAAE,OAAO;gBACtF,oBAAoB,MAAM,kBAAkB,GAAG,CAAA,GAAA,0BAAe,AAAD,EAAE,IAAI,CAAC,MAAM,kBAAkB,EAAE,MAAM,kBAAkB,CAAC,IAAI,IAAI;gBAC/H,gBAAgB,MAAM,cAAc,GAAG,CAAA,GAAA,0BAAe,AAAD,EAAE,IAAI,CAAC,MAAM,cAAc,EAAE,MAAM,cAAc,CAAC,IAAI,IAAI;YACnH;YACA,SAAS,cAAc,CAAC,SAAS,QAAQ,QAAQ;QACrD;IACJ;IACA,OAAO;AACX;;;ACrDA,sBAAsB;;;iDAeT;AAbb;AACA;AAQA;AACA;AAGO,MAAM,cAAoB;IAC7B,MAAM;IACN,aAAa;IACb,WAAW,CAAA,GAAA,0BAAe,AAAD,EAAE,IAAI,CAAC,KAAK;IACrC,cAAc,CAAC,QAAU,MAAM,KAAK,IAAI;IACxC,OAAO,CAAC,OAAO;QACX,MAAM,UAA6B,EAAE;QACrC,MAAM,QAAQ,MAAM,KAAK;QACzB,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAC9B,IAAK,IAAI,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;YACvC,MAAM,QAAQ,KAAK,CAAC,EAAE,EAAE,QAAQ,KAAK,CAAC,EAAE;YACxC,MAAM,WAAW,MAAM,iBAAiB,CAAC;YACzC,MAAM,WAAW,MAAM,iBAAiB,CAAC;YAEzC,qCAAqC;YACrC,IAAI,OAAO,SAAS,OAAO,KAAK,YAAY,OAAO,SAAS,OAAO,KAAK,UACpE;YAGJ,MAAM,qBAAqB,CAAA,GAAA,mCAAsB,AAAD,CAAC,CAAC,SAAS,SAAS,CAAC;YACrE,MAAM,oBAAoB,qBAAqB,kBAAkB,CAAC,SAAS,SAAS,CAAC,GAAG;YAExF,IAAI,sBAAsB,aAAa,sBAAsB,OACzD;YAGJ,IAAI,kBAAkB,CAAA,GAAA,mCAAsB,AAAD,EAAE,OAAO;YACpD,IAAI,qBAAqB;YACzB,IAAI,OAAO,sBAAsB,UAAU;gBACvC,kBAAkB,kBAAkB,OAAO;gBAC3C,qBAAqB,kBAAkB,aAAa;YACxD;YAEA,IAAI,SAAS,QAAQ,KAAK,SAAS,QAAQ,IACvC,CAAC,MAAM,OAAO,CAAC,OAAO,UACtB,MAAM,MAAM,CAAC,SAAS,SAAS,OAAO,IACtC,MAAM,MAAM,CAAC,SAAS,SAAS,OAAO,EAAE;gBAExC,MAAM,cAAc,CAAA,GAAA,yBAAa,AAAD,EAAE;gBAClC,MAAM,+BAA+B;gBACrC,MAAM,iBAAiB,CAAA,GAAA,0BAAe,AAAD,EAAE,IAAI,CAAC,+BAA+B,oBAAoB,IAAI,MAAM,CAAC,SAAS;gBAEnH,YAAY,OAAO,CAAC,OAAO,OAAO;oBAC9B;oBACA,wBAAwB;gBAC5B;gBACA,IAAI,qBAAqB,CAAC;gBAC1B,MAAM,aAAa,IAAI,0BAA0B,CAAC;gBAClD,QAAQ,IAAI,CAAC;oBACT,WAAW;oBACX,gBAAgB;wBAAC;wBAAO;qBAAM,CAAC,IAAI;oBACnC,MAAM,CAAA,GAAA,0BAAe,AAAD,EAAE,WAAW;oBACjC,iBAAiB;oBACjB;gBACJ;YACJ;QACJ;QAEJ,OAAO;IACX;AACJ;;;AC3EA,2BAA2B;;;sDAad;AAXb;AAOA;AACA;AAGO,MAAM,mBAAyB;IAClC,MAAK;IACL,aAAY;IACZ,WAAU,CAAA,GAAA,0BAAe,AAAD,EAAE,IAAI,CAAC,KAAI;IACnC,cAAa,CAAC,IAAI,EAAE,IAAI,GAAC;IACzB,OAAM,CAAC,GAAE;QACL,MAAM,MAAsB,EAAE;QAC9B,EAAE,WAAW,CAAC,CAAC,IAAG,IAAG,IAAG;YACpB,MAAM,MAAI,EAAE,iBAAiB,CAAC;YAC9B,MAAM,MAAI,EAAE,iBAAiB,CAAC;YAE9B,qCAAqC;YACrC,IAAI,CAAC,OAAO,CAAC,KAAK;YAElB,IAAG,IAAI,QAAQ,KAAG,IAAI,QAAQ,IAAE,EAAE,MAAM,CAAC,QAAM,KAAG,EAAE,MAAM,CAAC,QAAM,GAAE;gBAC/D,MAAM,KAAK,CAAA,GAAA,yBAAa,AAAD,EAAE,IAAI,uBAAuB;gBACpD,GAAG,QAAQ,CAAC;gBACZ,GAAG,QAAQ,CAAC;gBACZ,EAAE,qBAAqB,CAAC;gBACxB,MAAM,IAAE,EAAE,0BAA0B,CAAC;gBACrC,IAAI,IAAI,CAAC;oBACL,WAAU;oBACV,gBAAe;wBAAC;wBAAG;qBAAG,CAAC,IAAI;oBAC3B,MAAK,CAAA,GAAA,0BAAe,AAAD,EAAE,gBAAe;oBACpC,iBAAgB;oBAChB,YAAW;gBACf;YACJ;QACJ;QACA,OAAO;IACX;AACJ;;;AC5CA,yBAAyB;;;oDAeZ;AAbb;AACA;AAQA;AACA;AAGO,MAAM,iBAAuB;IAChC,MAAK;IACL,aAAY;IACZ,WAAU,CAAA,GAAA,0BAAe,AAAD,EAAE,IAAI,CAAC,KAAI;IACnC,cAAa,CAAC,GAAE,IAAI,EAAE,KAAK,GAAC,KAAI,CAAA,EAAE,MAAM,CAAC,yBAAyB,IAAE,EAAE,MAAM,CAAC,0BAA0B,IAAE,EAAE,MAAM,CAAC,2BAA2B,AAAD;IAC5I,OAAM,CAAC,GAAE;QACL,MAAM,MAAsB,EAAE;QAE9B,EAAE,WAAW,CAAC,CAAC,KAAI;YACf,IAAI;gBACA,IAAI,OAAO,EAAE,OAAO,KAAK,YAAY,MAAM,EAAE,OAAO,KAAK,OAAO,EAAE,YAAY,KAAK,YAAY,MAAM,EAAE,YAAY,GAAG;oBAClH,QAAQ,IAAI,CAAC,CAAC,+BAA+B,EAAE,IAAI,gDAAgD,CAAC;oBACpG;gBACJ;gBAEA,MAAM,KAAG,EAAE,MAAM,CAAC,QAAQ;gBAC1B,MAAM,KAAG,EAAE,OAAO;gBAClB,MAAM,MAAI,EAAE,YAAY;gBACxB,IAAI,QAAM,KAAK,KAAK,CAAC,MAAI,EAAE,MAAM,CAAC,kBAAkB;gBACpD,QAAM,KAAK,GAAG,CAAC,OAAM,EAAE,MAAM,CAAC,oBAAoB;gBAClD,QAAM,KAAK,GAAG,CAAC,EAAE,MAAM,CAAC,WAAW,EAAC;gBACpC,MAAM,MAAI,EAAE,MAAM,CAAC;gBACnB,IAAI,KAAG,CAAA,GAAA,0BAAe,AAAD,EAAE,cAAa;gBAEpC,sDAAsD;gBACtD,IAAG,EAAE,MAAM,CAAC,yBAAyB,EAAC;oBAClC,0DAA0D;oBAC1D,+DAA+D;oBAC/D,MAAM,qBAAqB,KAAK,OAAO,OAAO,MAAM,KAAK;oBACzD,IAAG,oBAAmB;wBAClB,MAAM,KAAG,CAAA,GAAA,yBAAa,AAAD,EAAE;wBACvB,GAAG,gBAAgB,CAAC,KAAI,WAAU,KAAG;wBACrC,EAAE,qBAAqB,CAAC;wBACxB,MAAM,IAAE,EAAE,0BAA0B,CAAC;wBACrC,IAAI,IAAI,CAAC;4BAAC,WAAU;4BAAwB,gBAAe;gCAAC;6BAAI;4BAAC,MAAK,GAAG,GAAG,CAAC;4BAAK,iBAAgB;4BAAG,YAAW;wBAAC;oBACrH;oBAEA,sDAAsD;oBACtD,MAAM,uBAAuB,KAAK,OAAO,KAAK,EAAE,MAAM,CAAC,WAAW,IAAI,MAAM;oBAC5E,IAAG,sBAAqB;wBACpB,MAAM,KAAG,CAAA,GAAA,yBAAa,AAAD,EAAE;wBACvB,GAAG,gBAAgB,CAAC,KAAI,WAAU,KAAK,GAAG,CAAC,EAAE,MAAM,CAAC,WAAW,EAAC,KAAG;wBACnE,EAAE,qBAAqB,CAAC;wBACxB,MAAM,IAAE,EAAE,0BAA0B,CAAC;wBACrC,IAAI,IAAI,CAAC;4BAAC,WAAU;4BAA0B,gBAAe;gCAAC;6BAAI;4BAAC,MAAK,GAAG,GAAG,CAAC;4BAAK,iBAAgB;4BAAG,YAAW;wBAAC;oBACvH;gBACJ;gBAEA,+DAA+D;gBAC/D,MAAM,aAAa,EAAE,iBAAiB,CAAC;gBAEvC,IAAG,EAAE,MAAM,CAAC,0BAA0B,IAAI,aAAa,EAAE,MAAM,CAAC,kCAAkC,EAAC;oBAC/F,MAAM,KAAG,CAAA,GAAA,yBAAa,AAAD,EAAE;oBACvB,GAAG,gBAAgB,CAAC,KAAI,YAAW,EAAE,QAAQ,GAAC;oBAC9C,EAAE,qBAAqB,CAAC;oBACxB,MAAM,IAAE,EAAE,0BAA0B,CAAC;oBACrC,IAAI,IAAI,CAAC;wBAAC,WAAU;wBAA2B,gBAAe;4BAAC;yBAAI;wBAAC,MAAK,GAAG,GAAG,CAAC;wBAAK,iBAAgB;wBAAG,YAAW;oBAAC;gBACxH;gBACA,IAAG,EAAE,MAAM,CAAC,2BAA2B,IAAI,aAAa,EAAE,MAAM,CAAC,oCAAoC,EAAC;oBAClG,MAAM,KAAG,CAAA,GAAA,yBAAa,AAAD,EAAE;oBACvB,MAAM,MAAI,AAAC,CAAA,EAAE,SAAS,GAAC,CAAA,IAAG,CAAA,GAAA,6BAAgB,AAAD;oBACzC,GAAG,gBAAgB,CAAC,KAAI,aAAY;oBACpC,EAAE,qBAAqB,CAAC;oBACxB,MAAM,IAAE,EAAE,0BAA0B,CAAC;oBACrC,IAAI,IAAI,CAAC;wBAAC,WAAU,CAAC,qBAAqB,EAAE,CAAA,GAAA,sBAAS,AAAD,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI;wBAAC,gBAAe;4BAAC;yBAAI;wBAAC,MAAK,GAAG,GAAG,CAAC;wBAAK,iBAAgB;wBAAG,YAAW;oBAAC;gBACpJ;YACJ,EAAE,OAAO,OAAO;gBACZ,QAAQ,KAAK,CAAC,CAAC,yCAAyC,EAAE,IAAI,CAAC,CAAC,EAAE;YACtE;QACJ;QACA,OAAO;IACX;AACJ;;;ACvFA,6BAA6B;;;wDAgBhB;AAdb;AACA;AASA;AACA;AAGO,MAAM,qBAA2B;IACpC,MAAK;IACL,aAAY;IACZ,WAAU,CAAA,GAAA,0BAAe,AAAD,EAAE,IAAI,CAAC,KAAI;IACnC,cAAa,CAAC,GAAE,IAAI,EAAE,KAAK,GAAC,KAAG,EAAE,MAAM,CAAC,+BAA+B;IACvE,OAAM,CAAC,GAAE;QACL,MAAM,MAAsB,EAAE;QAE9B,EAAE,WAAW,CAAC,CAAC,KAAI;YACf,IAAI;gBACA,qCAAqC;gBACrC,IAAI,OAAO,EAAE,MAAM,KAAK,YAAY,OAAO,EAAE,MAAM,EAAE,eAAe,UAChE;gBAGJ,MAAM,aAAa,EAAE,iBAAiB,CAAC;gBACvC,MAAM,cAAc,EAAE,MAAM;gBAE5B,qFAAqF;gBACrF,sFAAsF;gBACtF,8DAA8D;gBAC9D,MAAM,eAAe,EAAE,MAAM,IAAI,CAAA,GAAA,oBAAO,AAAD,EAAE,mBAAmB,IACzC,aAAa,EAAE,MAAM,CAAC,mCAAmC,IACzD,cAAc,MAAM,sDAAsD;gBAE7F,IAAG,cAAa;oBACZ,MAAM,KAAG,CAAA,GAAA,yBAAa,AAAD,EAAE;oBACvB,gEAAgE;oBAChE,MAAM,MAAI,AAAC,CAAA,EAAE,SAAS,GAAG,KAAK,KAAK,CAAC,EAAE,MAAM,KAAM,CAAA,CAAA,GAAA,6BAAgB,AAAD,IAAI,CAAA,KAAM,CAAA,IAAK,CAAA,GAAA,6BAAgB,AAAD;oBAE/F,IAAG,QAAQ,EAAE,SAAS,EAAC;wBACnB,GAAG,gBAAgB,CAAC,KAAI,aAAY;wBACpC,gGAAgG;wBAChG,EAAE,qBAAqB,CAAC;wBACxB,MAAM,IAAE,EAAE,0BAA0B,CAAC;wBACrC,IAAI,IAAI,CAAC;4BACL,WAAU,CAAC,4BAA4B,EAAE,CAAA,GAAA,sBAAS,AAAD,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI;4BACvE,gBAAe;gCAAC;6BAAI;4BACpB,MAAK,CAAA,GAAA,0BAAe,AAAD,EAAE,kBAAiB;4BACtC,iBAAgB;4BAChB,YAAW;wBACf;oBACJ;gBACJ;YACJ,EAAE,OAAO,OAAO;gBACX,QAAQ,KAAK,CAAC,CAAC,6CAA6C,EAAE,IAAI,CAAC,CAAC,EAAE;YAC3E;QACJ;QACA,OAAO;IACX;AACJ;;;AClEA,uBAAuB;;;kDAaV;AAXb;AAOA;AACA;AAGO,MAAM,eAAqB;IAC9B,MAAK;IACL,aAAY;IACZ,WAAU,CAAA,GAAA,0BAAe,AAAD,EAAE,IAAI,CAAC,KAAI;IACnC,cAAa,CAAC,GAAE,IAAI,EAAE,KAAK,IAAE,KAAG,EAAE,MAAM,CAAC,eAAe;IACxD,OAAM,CAAC,GAAE;QACL,MAAM,MAAsB,EAAE;QAC9B,EAAE,WAAW,CAAC,CAAC;YACX,6EAA6E;YAC7E,IAAG,EAAE,MAAM,CAAC,cAAY,GAAE;gBACtB,MAAM,YAAU,EAAE,SAAS,CAAC;gBAC5B,IAAG,UAAU,MAAM,KAAG,GAAE;oBACpB,MAAM,WAAS,SAAS,CAAC,EAAE;oBAC3B,MAAM,WAAS,SAAS,CAAC,EAAE;oBAE3B,wEAAwE;oBACxE,oFAAoF;oBACpF,IAAG,aAAa,YAAY,CAAC,EAAE,OAAO,CAAC,UAAU,WAAU;wBACvD,MAAM,KAAK,CAAA,GAAA,yBAAa,AAAD,EAAE,IAAI,uBAAuB;wBAEpD,kEAAkE;wBAClE,GAAG,QAAQ,CAAC;wBAEZ,0EAA0E;wBAC1E,EAAE,qBAAqB,CAAC;wBAExB,MAAM,IAAE,EAAE,0BAA0B,CAAC;wBAErC,IAAI,IAAI,CAAC;4BACL,WAAU;4BACV,gBAAe;gCAAC;gCAAS;gCAAS;6BAAS,CAAC,IAAI;4BAChD,MAAK,CAAA,GAAA,0BAAe,AAAD,EAAE,YAAW;4BAChC,iBAAgB;4BAChB,YAAW;wBACf;oBACJ;gBACJ;YACJ;QACJ;QACA,OAAO;IACX;AACJ;;;ACtDA,wBAAwB;;;AAwCxB,sDAAgB;AA0FhB,0CAAgB;AAjIhB;AACA;AAQA;AAMA,SAAS,mBAAmB,EAAqB,EAAE,EAAqB;IACpE,IAAG,GAAG,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,KAAK,EAAE,OAAO;IACnC,IAAG,GAAG,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,KAAK,EAAE,OAAO;IAEnC,IAAG,GAAG,CAAC,CAAC,KAAK,KAAK,CAAA,GAAA,oBAAO,AAAD,EAAE,qBAAqB,IAAI,GAAG,QAAQ,IAAI,GAAG,QAAQ,EAAC;QAC1E,MAAM,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC,GAAG,QAAQ;QAChD,IAAG,WAAW,GAAG,OAAO;IAC5B;IAEA,MAAM,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,UAAU;IACzD,IAAG,YAAY,GAAG,OAAO;IAEzB,MAAM,QAAQ,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC;IACjC,IAAG,UAAU,GAAG,OAAO;IAEvB,MAAM,aAAa,GAAG,WAAW,CAAC,SAAS,CAAC,GAAG,WAAW;IAC1D,IAAG,eAAe,GAAG,OAAO;IAE5B,MAAM,WAAW,GAAG,2BAA2B,CAAC,SAAS,CAAC,GAAG,2BAA2B;IACxF,IAAG,aAAa,GAAG,OAAO;IAE1B,OAAO;AACX;AAEO,SAAS,iBAAiB,GAAkB,EAAE,OAA0B,EAAE,iBAAoC;IACjH,IAAG,QAAQ,MAAM,KAAG,GAAE,OAAO;IAC7B,QAAQ,IAAI,CAAC,CAAC,GAAE;QACZ,MAAM,WAAW,mBAAmB,EAAE,UAAU,EAAE,EAAE,UAAU;QAC9D,IAAI,aAAa,GAAG,OAAO,CAAC;QAE5B,IAAI,EAAE,SAAS,KAAK,aAAa,EAAE,SAAS,KAAK,WAAW,OAAO;QACnE,IAAI,EAAE,SAAS,KAAK,aAAa,EAAE,SAAS,KAAK,WAAW,OAAO;QAEnE,IAAI,IAAI,MAAM,CAAC,6BAA6B,IAAI,EAAE,kBAAkB,IAAI,EAAE,kBAAkB,EAAE;YAC1F,MAAM,aAAa,EAAE,kBAAkB,CAAC,SAAS,CAAC,EAAE,kBAAkB;YACtE,IAAI,eAAe,GAAG,OAAO,CAAC;QAClC;QAEA,MAAM,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI;QACxC,IAAI,aAAa,GAAG,OAAO;QAE3B,IAAI,EAAE,SAAS,GAAG,EAAE,SAAS,EAAE,OAAO;QACtC,IAAI,EAAE,SAAS,GAAG,EAAE,SAAS,EAAE,OAAO;QAEtC,MAAM,SAAS,EAAE,cAAc,CAAC,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC;QACpD,MAAM,SAAS,EAAE,cAAc,CAAC,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC;QACpD,IAAI,SAAS,QAAQ,OAAO;QAC5B,IAAI,SAAS,QAAQ,OAAO;QAE5B,OAAO;IACX;IAEA,MAAM,aAAa,OAAO,CAAC,EAAE;IAC7B,MAAM,sBAAsB,mBAAmB,WAAW,UAAU,EAAC;IACrE,IAAG,sBAAsB,GAAG,OAAO;SAAgB;QAAC,IAAG,IAAI,KAAK,CAAC,KAAK,GAAG,KAAK,IAAI,YAAY,GAAG,IAAG;YAAC,MAAM,KAAG,QAAQ,IAAI,CAAC,CAAA,IAAG,EAAE,SAAS,KAAG;YAAW,IAAG,IAAI;gBAAA,IAAG,GAAG,UAAU,CAAC,CAAC,CAAC,KAAK,IAAE,kBAAkB,CAAC,CAAC,KAAK,IAAE,QAAQ,MAAM,KAAG,GAAE;oBAAC,IAAG,GAAG,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,GAAG,CAAC,OAAK,GAAG,OAAO;gBAAI;YAAA;QAAE;QAAC,OAAO;IAAW;AACxU;AAEA,SAAS,yBAAyB,OAA0B,EAAE,OAAiC;IAC3F,IAAG,CAAC,SAAS,OAAM;QAAC,SAAQ,QAAQ,CAAC,CAAC,KAAK;QAAC,YAAW,QAAQ,CAAC,CAAC,UAAU,CAAC,QAAQ;QAAG,YAAW,QAAQ,CAAC,CAAC,QAAQ;QAAG,aAAY,QAAQ,WAAW,CAAC,QAAQ;IAAE;IACjK,OAAM;QAAC,SAAQ,QAAQ,CAAC,CAAC,KAAK,GAAC,QAAQ,CAAC,CAAC,KAAK;QAAC,YAAW,QAAQ,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,QAAQ;QAAG,YAAW,QAAQ,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,QAAQ;QAAG,aAAY,QAAQ,WAAW,CAAC,QAAQ,CAAC,QAAQ,WAAW,EAAE,QAAQ;IAAE;AACzP;AAEA,SAAS,iBAAiB,GAAkB,EAAE,QAAgB,EAAE,KAAsB;IAClF,IAAG,CAAC,IAAI,MAAM,CAAC,6BAA6B,EAAC;IAC7C,MAAM,eAAa,IAAI,KAAK,CAAC,IAAI,CAAC,CAAA,IAAG,SAAS,UAAU,CAAC,EAAE,IAAI,IAAI;IACnE,IAAG,CAAC,cAAa;IACjB,MAAM,KAAG,IAAI,YAAY,CAAC,GAAG,CAAC;IAAe,IAAG,CAAC,IAAI;IACrD,IAAI,KAAG,CAAA,GAAA,0BAAe,AAAD,EAAE,IAAI,CAAC,GAAE,IAAI,MAAM,CAAC,SAAS;IAClD,IAAG,MAAM,OAAO,GAAC,GAAE,KAAG,GAAG,GAAG,CAAC,GAAG,CAAC,gCAAgC,CAAC,QAAQ,CAAC;SACtE,IAAG,MAAM,OAAO,KAAG,GAAE;QACtB,IAAG,MAAM,UAAU,GAAC,OAAM,KAAG,GAAG,GAAG,CAAC,GAAG,CAAC,gCAAgC;QACxE,IAAG,MAAM,UAAU,GAAC,KAAG,KAAK,GAAG,CAAC,MAAM,UAAU,IAAE,OAAM,KAAG,GAAG,GAAG,CAAC,GAAG,CAAC,gCAAgC,CAAC,QAAQ,CAAC;QAChH,IAAG,MAAM,WAAW,GAAC,OAAM,KAAG,GAAG,GAAG,CAAC,GAAG,CAAC,gCAAgC,CAAC,QAAQ,CAAC;IACvF,OACI,KAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,gCAAgC,CAAC,QAAQ,CAAC;IAEjE,IAAI,KAAG,GAAG,GAAG,CAAC;IAAI,IAAG,GAAG,UAAU,MAAI,GAAG,MAAM,IAAG,KAAG,CAAA,GAAA,0BAAe,AAAD,EAAE,IAAI,CAAC,MAAK,IAAI,MAAM,CAAC,SAAS;IACnG,IAAI,YAAY,CAAC,GAAG,CAAC,cAAa;AACtC;AAEA,SAAS,qBAAqB,GAAkB;IAC5C,IAAG,CAAC,IAAI,MAAM,CAAC,6BAA6B,IAAE,IAAI,KAAK,CAAC,MAAM,KAAG,GAAE;IACnE,IAAI,MAAI,IAAI,CAAA,GAAA,0BAAe,AAAD,EAAE,GAAE,IAAI,MAAM,CAAC,SAAS;IAClD,IAAI,YAAY,CAAC,OAAO,CAAC,CAAA,IAAG,MAAI,IAAI,GAAG,CAAC;IACxC,IAAG,IAAI,MAAM,MAAI,IAAI,UAAU,IAAG;QAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAA,IAAG,IAAI,YAAY,CAAC,GAAG,CAAC,EAAE,IAAI,EAAC,IAAI,CAAA,GAAA,0BAAe,AAAD,EAAE,KAAI,IAAI,MAAM,CAAC,SAAS;QAAI;IAAO;IAC3I,MAAM,KAAG,IAAI,CAAA,GAAA,0BAAe,AAAD,EAAE,IAAI,KAAK,CAAC,MAAM,EAAC,IAAI,MAAM,CAAC,SAAS;IAClE,IAAI,YAAY,CAAC,OAAO,CAAC,CAAC,GAAE;QAAM,IAAI,YAAY,CAAC,GAAG,CAAC,IAAG,EAAE,MAAM,CAAC,KAAK,QAAQ,CAAC;IAAK;AAC1F;AAEA,SAAS,yBAAyB,GAAkB;IAChD,MAAM,WAAqB,EAAE;IAC7B,IAAI,uBAAuB,CAAC,OAAO,CAAC,CAAC,QAAQ;QACzC,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,SACnB,SAAS,IAAI,CAAC;IAEtB;IACA,SAAS,OAAO,CAAC,CAAA;QACb,IAAI,uBAAuB,CAAC,MAAM,CAAC;QACnC,IAAI,gBAAgB,CAAC,MAAM,CAAC;IAChC;IAEA,IAAI,KAAK,CAAC,WAAW,CAAC,CAAC,QAAQ;QAC3B,MAAM,aAAa,IAAI,gBAAgB,CAAC,GAAG,CAAC;QAC5C,MAAM,gBAAgB,MAAM,MAAM;QAClC,IAAI,cAAc,cAAc,sBAAsB,CAAC,aAAa;YAChE,MAAM,eAAe,IAAI,uBAAuB,CAAC,GAAG,CAAC,WAAW;YAChE,IAAI,uBAAuB,CAAC,GAAG,CAAC,QAAQ,eAAe;QAC3D,OACI,IAAI,uBAAuB,CAAC,GAAG,CAAC,QAAQ;QAE5C,IAAI,gBAAgB,CAAC,GAAG,CAAC,QAAQ;IACrC;AACJ;AAEO,SAAS,KAAK,GAAkB;IACnC,IAAG,IAAI,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,uBAAuB,IAAI,IAAI,YAAY,IAAI,GAAG,CAAC,oBAAoB,EAAC;QAC7F,MAAM,IAAE,IAAI,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,uBAAuB,GAAG,qBAAqB;QAC7E,CAAA,GAAA,wCAAqB,AAAD,EAAE;QACtB,OAAO;YAAC,MAAK;YAAK,QAAO;YAAE,YAAW,CAAA,GAAA,6CAA0B,AAAD,EAAE;QAAI;IACzE;IAEA,CAAA,GAAA,wCAAqB,AAAD,EAAE;IACtB,yBAAyB;IAEzB,MAAM,oBAAoB,CAAA,GAAA,6CAA0B,AAAD,EAAE;IACrD,MAAM,mBAAmB,CAAA,GAAA,+BAAY,AAAD,EAAE,IAAI,KAAK;IAE/C,IAAG,IAAI,KAAK,CAAC,KAAK,GAAG,KAAK,IAAI,mBAAmB,CAAC,GAAG,CAAC,qBAAqB,IAAI,mBAAmB,CAAC,GAAG,CAAC,kBAAmB,IAAI,GAAG,IAAI,YAAY,EAC7I,OAAO;QAAC,MAAK;QAAK,QAAO;QAAc,YAAW;IAAiB;IAGvE,IAAG,IAAI,KAAK,CAAC,KAAK,KAAK,GAAE;QACrB,MAAM,MAAI,IAAI,aAAa;QAC3B,IAAI,iBAAiB,CAAC,IAAI,KAAK,EAAC,KAAI,AAAC,IAAI,MAAM,KAAG,MAAK,IAAE;QACzD,CAAA,GAAA,wCAAqB,AAAD,EAAE;QACtB,IAAI,YAAY;QAChB,MAAM,MAAI,CAAA,GAAA,6CAA0B,AAAD,EAAE;QACrC,IAAI,gBAAgB,CAAC,GAAG,CAAC,KAAK,IAAI,WAAW;QAC7C,MAAM,MAAI,yBAAyB,KAAI;QACvC,MAAM,KAAc;YAAC,WAAU;YAAmB,gBAAe;gBAAC;aAAI;YAAC,MAAK,CAAA,GAAA,0BAAe,AAAD,EAAE,IAAI,CAAC,GAAE,IAAI,MAAM,CAAC,SAAS;YAAE,aAAY,IAAI,YAAY;YAAC,kBAAiB;QAAG;QAC1K,IAAI,kBAAkB,CAAC,IAAI,CAAC;QAC5B,IAAG,IAAI,KAAK,CAAC,KAAK,GAAG,GAAG,IAAI,mBAAmB,CAAC,GAAG,CAAC,CAAA,GAAA,+BAAY,AAAD,EAAE,IAAI,KAAK,GAAE;YAAC,MAAK,IAAI,YAAY;YAAC,YAAW;QAAG;QACjH,IAAI,eAAe,GAAC;QACpB,OAAO;YAAC,MAAK;YAAM,YAAW;YAAI,aAAY;QAAE;IACpD;IAEA,IAAI,eAAe,GAAC;IACpB,IAAI,mBAAmB,CAAC,GAAG,CAAC,kBAAiB;QAAC,MAAK,IAAI,YAAY;QAAC,YAAW;IAAiB;IAEhG,MAAM,KAAqB,EAAE;IAC7B,IAAI,KAAK,CAAC,OAAO,CAAC,CAAA;QACd,IAAG,EAAE,YAAY,CAAC,IAAI,KAAK,EAAC,MAAK;YAC7B,MAAM,MAAI,EAAE,KAAK,CAAC,IAAI,KAAK,EAAC;YAC5B,IAAI,OAAO,CAAC,CAAA;gBACR,MAAM,MAAI,IAAI,KAAK,CAAC,IAAI,CAAC,CAAA,KAAI,EAAE,SAAS,CAAC,UAAU,CAAC,GAAG,IAAI,IAAI;gBAC/D,EAAE,kBAAkB,GAAC,MAAI,IAAI,YAAY,CAAC,GAAG,CAAC,OAAK;YACvD;YACA,GAAG,IAAI,IAAI;QACf;IACJ;IAEA,IAAG,GAAG,MAAM,KAAG,GAAE;QACb,QAAQ,KAAK,CAAC,CAAC,YAAY,EAAE,IAAI,YAAY,CAAC,0CAA0C,CAAC,EAAE,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC;QACrH,OAAM;YAAC,MAAK;YAAK,QAAO;YAAsB,YAAW;QAAiB;IAC9E;IAEA,MAAM,KAAG,iBAAiB,KAAK,IAAG;IAClC,IAAG,CAAC,IAAG;QACH,QAAQ,KAAK,CAAC,CAAC,YAAY,EAAE,IAAI,YAAY,CAAC,iCAAiC,EAAE,GAAG,MAAM,CAAC,6BAA6B,CAAC,EAAE,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC;QACrJ,OAAM;YAAC,MAAK;YAAK,QAAO;YAAyB,YAAW;QAAiB;IACjF;IAEA,IAAI,KAAK,GAAC,GAAG,eAAe;IAC5B,IAAI,YAAY;IAChB,MAAM,OAAK,CAAA,GAAA,6CAA0B,AAAD,EAAE;IACtC,MAAM,MAAI,yBAAyB,MAAK,IAAI,eAAe;IAC3D,MAAM,KAAc;QAAC,WAAU,GAAG,SAAS;QAAC,gBAAe,GAAG,cAAc;QAAC,MAAK,GAAG,IAAI;QAAC,aAAY,IAAI,YAAY;QAAC,kBAAiB;IAAG;IAC3I,IAAI,kBAAkB,CAAC,IAAI,CAAC;IAC5B,IAAG,IAAI,MAAM,CAAC,6BAA6B,EAAC;QAAC,iBAAiB,KAAK,GAAG,SAAS,EAAC;QAAK,IAAG,IAAI,YAAY,GAAC,GAAG,CAAC,qCAAqC,KAAG,GAAG,qBAAqB;IAAM;IACnL,IAAI,eAAe,GAAC;IACpB,OAAM;QAAC,MAAK;QAAM,YAAW;QAAK,aAAY;IAAE;AACpD;;;ACrMA,4BAA4B;;;AAY5B,6BAA6B;AAE7B,kEAAgB;AAgChB,2DAAgB;AAqEhB,iCAAiC;AAEjC,gEAAgB;AAoChB,kDAAgB;AAvJhB;AACA;AAWO,SAAS,6BAA6B,MAAc,EAAE,KAA6C,EAAE,GAAkB;IAC1H,MAAM,QAAQ,MAAM,iBAAiB,CAAC;IACtC,MAAM,SAAS,MAAM,MAAM,CAAC;IAC5B,IAAI,SAAS;IAEb,IAAI,OAAO,MAAM,OAAO,KAAK,YAAY,MAAM,MAAM,OAAO,KACxD,OAAO,MAAM,YAAY,KAAK,YAAY,MAAM,MAAM,YAAY,GAAI;QACtE,QAAQ,KAAK,CAAC,CAAC,oCAAoC,EAAE,OAAO,qCAAqC,EAAE,MAAM,OAAO,CAAC,KAAK,EAAE,MAAM,YAAY,CAAC,wBAAwB,CAAC;QACpK,OAAO,IAAI,CAAA,GAAA,0BAAe,AAAD,EAAE,IAAI,IAAI,MAAM,CAAC,SAAS;IACvD;IAEA,MAAM,uBAAuB,MAAM,OAAO,GAAG;IAC7C,IAAI,uBAAuB,GAAG,UAAU;IACxC,IAAI,SAAS,MAAM,OAAO,EAAE,UAAU,AAAC,CAAA,SAAS,MAAM,OAAO,AAAD,IAAK;IAEjE,MAAM,4BAA4B,KAAK,GAAG,CAAE,KAAK,KAAK,CAAC,MAAM,YAAY,GAAG,IAAI,MAAM,CAAC,kBAAkB,GAAG,IAAI,MAAM,CAAC,oBAAoB;IAC3I,IAAI,MAAM,OAAO,GAAG,2BAChB,UAAU,AAAC,CAAA,MAAM,OAAO,GAAG,yBAAwB,IAAK;SACrD,IAAI,MAAM,OAAO,GAAG,MAAM,YAAY,EACxC,UAAU,AAAC,CAAA,MAAM,OAAO,GAAG,MAAM,YAAY,AAAD,IAAK;IAGtD,IAAI,SAAS,GAAG;QACZ,IAAI,wBAAwB;QAC5B,MAAM,eAAe,CAAC,QAAQ,CAAC,IAAI;YAAS,IAAI,GAAG,QAAQ,KAAK,MAAM,QAAQ,EAAE;QAAyB;QACzG,IAAI,0BAA0B,QAC1B,UAAU,IAAI,MAAM,CAAC,8BAA8B;IAE3D;IACA,OAAO,IAAI,CAAA,GAAA,0BAAe,AAAD,EAAE,QAAQ,IAAI,MAAM,CAAC,SAAS;AAC3D;AAEO,SAAS,sBAAsB,GAAkB;IACpD,MAAM,QAAQ,IAAI,KAAK;IACvB,MAAM,oBAAkD,IAAI;IAC5D,MAAM,WAAW,CAAC,CAAA;QACd,kBAAkB,GAAG,CAAC,QAAQ,6BAA6B,QAAQ,OAAO;IAC9E;IAEA,IAAI,IAAI,MAAM,CAAC,yBAAyB,IAAI,IAAI,MAAM,CAAC,yBAAyB,GAAG,KAAK,MAAM,IAAI,GAAG,GAAG;QACpG,MAAM,gCAA8D,IAAI;QACxE,MAAM,WAAW,CAAC,CAAA,SAAU,8BAA8B,GAAG,CAAC,QAAQ,CAAA,GAAA,0BAAe,AAAD,EAAE,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,SAAS;QAElH,MAAM,WAAW,CAAC,CAAA;YACd,MAAM,wBAAwB,kBAAkB,GAAG,CAAC;YACpD,IAAI,sBAAsB,aAAa,CAAC,GAAG,CAAC,wCAAwC,GAChF,MAAM,eAAe,CAAC,cAAc,CAAC,gBAAgB;gBACjD,MAAM,gBAAgB;gBACtB,MAAM,mBAAmB,CAAA,GAAA,0BAAe,AAAD,EAAE,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,cAAc,cAAc,CAAC,GAAG,CAAC;gBAC/G,MAAM,8BAA8B,sBAAsB,QAAQ,CAAC,IAAI,MAAM,CAAC,yBAAyB,EAAE,QAAQ,CAAC;gBAClH,MAAM,oBAAoB,8BAA8B,GAAG,CAAC;gBAC5D,8BAA8B,GAAG,CAAC,gBAAgB,kBAAkB,GAAG,CAAC;YAC5E;QAER;QACA,MAAM,WAAW,CAAC,CAAA;YACd,MAAM,cAAc,kBAAkB,GAAG,CAAC,QAAS,GAAG,CAAC,8BAA8B,GAAG,CAAC;YACzF,MAAM,gBAAgB,CAAC,QAAQ,UAAU;QAC7C;IACJ,OACI,MAAM,WAAW,CAAC,CAAA;QACd,MAAM,gBAAgB,CAAC,QAAQ,UAAU,kBAAkB,GAAG,CAAC;IACnE;AAER;AAEA,4BAA4B;AAE5B,SAAS,kBAAkB,CAAyC,EAAE,GAAkB;IACpF,IAAG,EAAE,KAAK,GAAC,GAAE,OAAM;QAAC,MAAK;QAAM,OAAM,IAAI,CAAA,GAAA,0BAAe,AAAD,EAAE,GAAE,IAAI,MAAM,CAAC,SAAS;IAAC;IAChF,IAAI,OAAK,IAAI,CAAA,GAAA,0BAAe,AAAD,EAAE,GAAE,IAAI,MAAM,CAAC,SAAS;IACnD,IAAI,MAAI;IACR,KAAI,MAAM,MAAM,EAAE,KAAK,GAAG;QACtB,MAAM,QAAM,EAAE,SAAS,CAAC;QACxB,KAAI,MAAM,MAAM,MAAM;YAClB,IAAG,OAAK,IAAG;YACX,KAAI,MAAM,MAAM,EAAE,SAAS,CAAC,IAAI;gBAC5B,IAAG,OAAK,MAAI,OAAK,IAAG;gBACpB,IAAG,EAAE,OAAO,CAAC,IAAG,KAAI;oBAChB,MAAM,KAAG;wBAAC;wBAAG;wBAAG;qBAAG;oBACnB,MAAM,MAAI,EAAE,iBAAiB,CAAC;oBAC9B,MAAM,MAAI,GAAG,KAAK,CAAC,CAAA;wBACf,MAAM,IAAE,EAAE,iBAAiB,CAAC;wBAC5B,OAAO,EAAE,SAAS,KAAG,IAAI,SAAS,IAAE,EAAE,QAAQ,KAAG,IAAI,QAAQ,IAAG,EAAE,MAAM,CAAC,QAAM;oBACnF;oBACA,IAAG,KAAI;wBACH,MAAI;wBACJ,MAAM,KAAG,IAAI,CAAA,GAAA,0BAAe,AAAD,EAAE,MAAK,GAAK,IAAI,MAAM,CAAC,SAAS;wBAC3D,IAAG,GAAG,SAAS,CAAC,QAAM,GAAE,OAAK;oBACjC;gBACJ;YACJ;QACJ;IACJ;IACA,OAAM;QAAC,MAAK;QAAI,OAAM;IAAI;AAC9B;AAEA,SAAS,kBAAkB,CAAyC;IAChE,OAAO;QAAE,MAAM;QAAO,YAAY,EAAE;IAAC;AACzC;AAIO,SAAS,2BAA2B,GAAkB;IACzD,MAAM,IAAI,IAAI,KAAK;IACnB,MAAM,IAAE,EAAE,KAAK;IAAC,MAAM,KAAG,EAAE,IAAI;IAAC,MAAM,IAAE,IAAI,CAAA,GAAA,0BAAe,AAAD,EAAE,IAAE,IAAG,IAAI,MAAM,CAAC,SAAS;IACrF,IAAI,MAAI;IACR,EAAE,WAAW,CAAC,CAAC,IAAG,IAAG,GAAE;QACnB,MAAM,SAAS,EAAE,iBAAiB,CAAC;QACnC,MAAM,SAAS,EAAE,iBAAiB,CAAC;QACnC,IAAG,UAAU,UAAU,OAAO,QAAQ,KAAK,OAAO,QAAQ,EAAC;IAC/D;IACA,MAAM,IAAE,CAAA,GAAA,0BAAe,AAAD,EAAE,MAAM,CAAC,KAAI,EAAE,MAAM,KAAG,IAAE,EAAE,QAAQ,IAAG,IAAI,MAAM,CAAC,SAAS;IACjF,IAAI,KAAW,CAAA,GAAA,oBAAO,AAAD,EAAE,SAAS;IAChC,IAAI,MAAI;QAAC,MAAK;QAAM,OAAM,IAAI,CAAA,GAAA,0BAAe,AAAD,EAAE,GAAE,IAAI,MAAM,CAAC,SAAS;IAAC;IAErE,IAAG,IAAE,GAAE;QACH,KAAG,CAAA,GAAA,oBAAO,AAAD,EAAE,mBAAmB;QAC9B,MAAM,KAAG,aAAa;QACtB,IAAG,IAAI,mBAAmB,CAAC,GAAG,CAAC,OAAO,IAAI,mBAAmB,CAAC,GAAG,CAAC,IAAK,IAAI,GAAG,IAAI,YAAY,EAC1F,KAAG,CAAA,GAAA,oBAAO,AAAD,EAAE,qBAAqB;aAC7B;YACH,MAAI,kBAAkB,GAAG;YACzB,IAAG,IAAI,IAAI,EAAC,KAAG,CAAA,GAAA,oBAAO,AAAD,EAAE,qBAAqB;QAChD;IACJ;IACA,IAAI,KAAG,CAAA,GAAA,0BAAe,AAAD,EAAE,IAAI,CAAC,GAAE,IAAI,MAAM,CAAC,SAAS;IAClD,EAAE,WAAW,CAAC,CAAA;QACV,MAAM,KAAG,EAAE,gBAAgB,CAAC,KAAI;QAChC,IAAG,IAAG,KAAG,GAAG,GAAG,CAAC;IACpB;IACA,IAAI,OAAK,CAAA,GAAA,0BAAe,AAAD,EAAE,IAAI,CAAC,GAAE,IAAI,MAAM,CAAC,SAAS;IACpD,EAAE,WAAW,CAAC,CAAC,IAAG;QACd,MAAM,MAAI,EAAE,cAAc;QAC1B,IAAG,KAAI,OAAK,KAAK,GAAG,CAAC;IACzB;IACA,OAAM;QAAC;QAAE,GAAE;YAAC,OAAM;YAAG,YAAW;QAAC;QAAE,aAAY;QAAG,6BAA4B;QAAK,UAAS,IAAI,KAAK;IAAA;AACzG;AAEO,SAAS,aAAa,CAAyC;IAClE,MAAM,cAAc,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC,GAAE,IAAI,SAAS,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,IAAE,SAAS,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,CAAA;QAAM,MAAM,IAAE,EAAE,iBAAiB,CAAC;QAAwB,OAAM,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,QAAQ,IAAI;IAAC;IAChQ,MAAM,cAAc,EAAE,KAAK,GAAG,GAAG,CAAC,CAAA;QAAI,MAAK,CAAC,GAAE,EAAE,GAAC,EAAE,WAAW,CAAC,GAAG,IAAI;QAAG,MAAM,KAAG,EAAE,iBAAiB,CAAC;QAAmB,MAAM,IAAE,GAAG,cAAc,GAAC,GAAG,cAAc,CAAC,QAAQ,GAAG,OAAO,CAAC,KAAG;QAAM,MAAM,IAAE,GAAG,sBAAsB,KAAG,YAAU,CAAA,GAAA,mCAAsB,AAAD,CAAC,CAAC,GAAG,sBAAsB,CAAC,GAAC;QAAM,OAAM,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG;IAAC,GAAG,IAAI;IAC7U,OAAM,GAAG,YAAY,IAAI,CAAC,KAAK,CAAC,EAAE,YAAY,IAAI,CAAC,MAAM;AAC7D;;;AC7JA,0BAA0B;;;AAsB1B,+CAAgB;AArBhB;;AACA;AACA;;AAEA,SAAS,eAAe,KAA6C,EAAE,SAAsD,EAAE,KAAa,EAAE,MAAc;IACxJ,MAAM,QAAQ,MAAM,KAAK;IACzB,MAAM,QAAQ,MAAM,MAAM;IAC1B,IAAI,UAAU,GAAG;IAEjB,MAAM,YAAY,AAAC,IAAI,KAAK,EAAE,GAAI;IAClC,MAAM,eAAe,UAAU,IAAI,IAAK,QAAQ,KAAK,OAAO;IAC5D,MAAM,eAAe,KAAK,GAAG,CAAC,OAAO,UAAU;IAE/C,MAAM,OAAO,CAAC,CAAC,MAAM;QACjB,SAAS,CAAC,KAAK,GAAG;YACd,GAAG,QAAQ,IAAK,CAAA,QAAQ,IAAI,eAAe,KAAK,GAAG,CAAC,IAAI,aAAa,CAAA;YACrE,GAAG,SAAS,IAAK,CAAA,QAAQ,IAAI,eAAe,KAAK,GAAG,CAAC,IAAI,aAAa,CAAA;QAC1E;IACJ;AACJ;AAEO,SAAS,UAAU,KAA6C,EAAE,MAAyB;IAC9F,MAAM,MAAM,OAAO,UAAU,CAAC;IAC9B,IAAI,CAAC,KAAK;QACN,QAAQ,KAAK,CAAC;QACd;IACJ;IAEA,MAAM,QAAQ,OAAO,KAAK;IAC1B,MAAM,SAAS,OAAO,MAAM;IAC5B,IAAI,SAAS,CAAC,GAAG,GAAG,OAAO;IAE3B,IAAI,MAAM,KAAK,KAAK,GAAG;IAEvB,MAAM,YAAyD,CAAC;IAEhE,IAAI,MAAM,KAAK,GAAG,GAAG;QACjB,MAAM,cAAc,IAAI,CAAA,GAAA,0BAAK,AAAD;QAC5B,MAAM,WAAW,CAAC,CAAC,MAAM;YACrB,YAAY,OAAO,CAAC,MAAM;gBAAE,GAAG,KAAK;YAAC;YACrC,IAAI,CAAC,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,MAC7C,YAAY,gBAAgB,CAAC,MAAM,KAAK,AAAC,CAAA,KAAK,MAAM,KAAK,GAAE,IAAK,QAAQ;YAE5E,IAAI,CAAC,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,MAC7C,YAAY,gBAAgB,CAAC,MAAM,KAAK,AAAC,CAAA,KAAK,MAAM,KAAK,GAAE,IAAK,SAAS;QAEjF;QACA,MAAM,WAAW,CAAC,CAAC,SAAS,OAAO,QAAQ;YACvC,IAAG,YAAY,OAAO,CAAC,WAAW,YAAY,OAAO,CAAC;gBACjD,IAAI,CAAC,YAAY,OAAO,CAAC,QAAO,SAC7B,YAAY,cAAc,CAAC,SAAS,QAAQ,QAAQ;oBAAC,GAAG,KAAK;gBAAA;qBAE7D,YAAY,mBAAmB,CAAC,SAAS;oBAAC,GAAG,KAAK;gBAAA;;QAG9D;QAEA,IAAI,MAAM,KAAK,GAAG,KAAK,MAAM,KAAK,GAAG,KACjC,IAAI;YACC,CAAA,GAAA,2CAAW,AAAD,EAAE,MAAM,CAAC,aAAa;gBAC7B,YAAY,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,KAAK,MAAM,KAAK,GAAG;gBACrD,UAAU;oBACN,SAAS;oBACT,qBAAqB;oBACrB,cAAc;oBACd,mBAAmB,MAAM,KAAK,GAAG;oBACjC,gBAAgB;oBAChB,UAAU,IAAI,KAAK,GAAG,CAAC,MAAM,KAAK,GAAG;oBACrC,aAAa;oBACb,YAAY;gBAChB;YACJ;YACA,YAAY,WAAW,CAAC,CAAC,MAAM;gBAC3B,MAAM,cAAc,KAAK,GAAG,CAAC,OAAO,UAAW,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,MAAM,KAAK,IAAI;gBACrF,SAAS,CAAC,KAAK,GAAG;oBACd,GAAG,MAAM,CAAC,GAAG,cAAc,QAAQ;oBACnC,GAAG,MAAM,CAAC,GAAG,cAAc,SAAS;gBACxC;YACJ;QACJ,EAAE,OAAO,GAAG;YACR,QAAQ,KAAK,CAAC,wDAAwD;YACtE,eAAe,OAAO,WAAW,OAAO;QAC5C;aAEA,eAAe,OAAO,WAAW,OAAO;IAEhD;IAEA,aAAa;IACb,IAAI,WAAW,GAAG;IAClB,MAAM,WAAW,CAAC,CAAC,OAAO,OAAO,QAAQ;QACrC,MAAM,SAAS,SAAS,CAAC,OAAO;QAChC,MAAM,SAAS,SAAS,CAAC,OAAO;QAChC,IAAI,UAAU,QAAQ;YAClB,IAAI,SAAS;YACb,IAAI,MAAM,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC;YAC7B,IAAI,MAAM,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC;YAC7B,MAAM,aAAa,MAAM,cAAc,CAAC,QAAQ;YAChD,IAAI,SAAS,GAAG,KAAK,GAAG,CAAC,KAAK,MAAM,aAAa;YACjD,IAAI,MAAM;QACd;IACJ;IACA,IAAI,SAAS,GAAG;IAEhB,aAAa;IACb,MAAM,WAAW,CAAC,CAAC,MAAM;QACrB,MAAM,MAAM,SAAS,CAAC,KAAK;QAC3B,IAAI,CAAC,KAAK;YACN,SAAS,CAAC,KAAK,GAAG;gBAAE,GAAG,KAAK,MAAM,KAAK;gBAAO,GAAG,KAAK,MAAM,KAAK;YAAO;YACxE,QAAQ,IAAI,CAAC,CAAC,gCAAgC,EAAE,KAAK,kBAAkB,CAAC;QAC5E;QAEA,MAAM,aAAa,MAAM,SAAS,KAAK,CAAA,GAAA,sBAAS,AAAD,EAAE,OAAO,GAAG,MAAO,MAAM,SAAS,KAAK,CAAA,GAAA,sBAAS,AAAD,EAAE,QAAQ,GAAG,IAAI;QAC/G,MAAM,YAAY,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,QAAQ,KAAK;QAC3D,MAAM,eAAe,KAAK,GAAG,CAAC,KAAK,IAAI,YAAY;QACnD,MAAM,SAAS,KAAK,GAAG,CAAC,KAAK,aAAa;QAE1C,IAAI,SAAS;QACb,IAAI,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,GAAG,IAAI,KAAK,EAAE;QAEpE,IAAI,SAAS,GAAG,MAAM,QAAQ,KAAK,IAAI,YAAY;QACnD,IAAI,MAAM,SAAS,KAAK,CAAA,GAAA,sBAAS,AAAD,EAAE,QAAQ,EAAE,IAAI,SAAS,GAAG;aACvD,IAAI,MAAM,SAAS,KAAK,CAAA,GAAA,sBAAS,AAAD,EAAE,OAAO,EAAE,IAAI,SAAS,GAAG;QAEhE,IAAI,IAAI;QAER,IAAI,MAAM,MAAM,IAAI,CAAA,GAAA,oBAAO,AAAD,EAAE,qBAAqB,EAAE;YAC/C,IAAI,WAAW,GAAG,MAAM,MAAM,KAAK,CAAA,GAAA,oBAAO,AAAD,EAAE,qBAAqB,GAAG,YAAa,MAAM,MAAM,KAAK,CAAA,GAAA,oBAAO,AAAD,EAAE,qBAAqB,GAAG,YAAY;YAC7I,IAAI,SAAS,GAAG,MAAM,MAAM,KAAK,CAAA,GAAA,oBAAO,AAAD,EAAE,qBAAqB,GAAG,MAAM;YACvE,IAAI,MAAM;QACd;IACJ;AACJ;;;ACrIA;;;;;CAKC,GACD,IAAI,UAAU,QAAQ;AACtB,IAAI,yBACF,QAAQ,oBAA4B,sBAAsB;AAC5D,IAAI,UAAU,QAAQ;AACtB,IAAI,UAAU,QAAQ;AAEtB,IAAI,mBAAmB,QAAQ;AAE/B;;;;;;;;;;;CAWC,GACD,SAAS,0BAA0B,MAAM,EAAE,KAAK,EAAE,MAAM;IACtD,IAAI,CAAC,QAAQ,QACX,MAAM,IAAI,MACR;IAGJ,IAAI,OAAO,WAAW,UAAU,SAAS;QAAC,YAAY;IAAM;IAE5D,IAAI,aAAa,OAAO,UAAU;IAElC,IAAI,OAAO,eAAe,UACxB,MAAM,IAAI,MACR;IAGJ,IAAI,cAAc,GAChB,MAAM,IAAI,MACR;IAGJ,IAAI,gBAAgB,uBAClB,mBAAmB,SAAS,OAAO,aAAa,GAAG,UACnD,SAAS;IAEX,IAAI,gBACF,OAAO,OAAO,aAAa,KAAK,aAAa,OAAO,aAAa,GAAG;IAEtE,sBAAsB;IACtB,IAAI,WAAW,QAAQ,MAAM,CAAC,CAAC,GAAG,kBAAkB,OAAO,QAAQ;IACnE,IAAI,kBAAkB,QAAQ,gBAAgB,CAAC;IAE/C,IAAI,iBACF,MAAM,IAAI,MACR,oCAAoC,gBAAgB,OAAO;IAG/D,oBAAoB;IACpB,IAAI,WAAW,QAAQ,iBAAiB,CAAC,OAAO;IAEhD,IAAI;IAEJ,YAAY;IACZ,IAAK,IAAI,GAAG,IAAI,YAAY,IAC1B,QAAQ,UAAU,SAAS,KAAK,EAAE,SAAS,KAAK;IAElD,WAAW;IACX,IAAI,QAAQ;QACV,QAAQ,mBAAmB,CAAC,OAAO,SAAS,KAAK,EAAE;QACnD;IACF;IAEA,OAAO,QAAQ,oBAAoB,CAAC,OAAO,SAAS,KAAK;AAC3D;AAEA;;;;;CAKC,GACD,SAAS,cAAc,KAAK;IAC1B,IAAI,QAAQ,OAAO,UAAU,WAAW,QAAQ,MAAM,KAAK;IAE3D,OAAO;QACL,mBAAmB,QAAQ;QAC3B,mBAAmB;QACnB,SAAS;QACT,cAAc;QACd,UAAU,IAAI,KAAK,GAAG,CAAC;IACzB;AACF;AAEA;;CAEC,GACD,IAAI,oBAAoB,0BAA0B,IAAI,CAAC,MAAM;AAC7D,kBAAkB,MAAM,GAAG,0BAA0B,IAAI,CAAC,MAAM;AAChE,kBAAkB,aAAa,GAAG;AAElC,OAAO,OAAO,GAAG;;;ACzGjB;;;;;;CAMC,GAED;;;;;CAKC,GACD,OAAO,OAAO,GAAG,SAAS,QAAQ,KAAK;IACrC,OACE,UAAU,QACV,OAAO,UAAU,YACjB,OAAO,MAAM,wBAAwB,KAAK,cAC1C,OAAO,MAAM,QAAQ,KAAK,cAC1B,OAAO,MAAM,KAAK,KAAK;AAE3B;;;ACtBA;;;;;CAKC,GACD,SAAS,aAAa,KAAK;IACzB,4CAA4C;IAC5C,IAAI,OAAO,UAAU,YAAY,MAAM,QAAQ,OAAO;IAEtD,OAAO;AACT;AAEA,SAAS,sBAAsB,cAAc,EAAE,YAAY;IACzD,IAAI,SAAS,CAAC;IAEd,IAAI,kBAAkB,SAAU,CAAC;QAC/B,IAAI,OAAO,MAAM,aAAa,OAAO;QAErC,OAAO;IACT;IAEA,IAAI,OAAO,iBAAiB,YAAY,kBAAkB;IAE1D,IAAI,MAAM,SAAU,UAAU;QAC5B,OAAO,gBAAgB,UAAU,CAAC,eAAe;IACnD;IAEA,IAAI,gBAAgB;QAClB,OAAO,gBAAgB;IACzB;IAEA,IAAI,OAAO,mBAAmB,UAAU;QACtC,OAAO,cAAc,GAAG;QACxB,OAAO,SAAS,GAAG,SAAU,KAAK,EAAE,IAAI;YACtC,OAAO,IAAI,MAAM,iBAAiB,CAAC;QACrC;QACA,OAAO,SAAS,GAAG,SAAU,IAAI,EAAE,UAAU;YAC3C,OAAO,IAAI;QACb;IACF,OAAO,IAAI,OAAO,mBAAmB,YAAY;QAC/C,OAAO,cAAc,GAAG;YACtB,MAAM,IAAI,MACR;QAEJ;QACA,OAAO,SAAS,GAAG,SAAU,KAAK,EAAE,IAAI;YACtC,OAAO,gBACL,eAAe,MAAM,MAAM,iBAAiB,CAAC;QAEjD;QACA,OAAO,SAAS,GAAG,SAAU,IAAI,EAAE,UAAU;YAC3C,OAAO,gBAAgB,eAAe,MAAM;QAC9C;IACF,OAAO;QACL,OAAO,cAAc,GAAG;QACxB,OAAO,SAAS,GAAG;QACnB,OAAO,SAAS,GAAG;IACrB;IAEA,OAAO;AACT;AAEA,SAAS,sBAAsB,cAAc,EAAE,YAAY;IACzD,IAAI,SAAS,CAAC;IAEd,IAAI,kBAAkB,SAAU,CAAC;QAC/B,IAAI,OAAO,MAAM,aAAa,OAAO;QAErC,OAAO;IACT;IAEA,IAAI,OAAO,iBAAiB,YAAY,kBAAkB;IAE1D,IAAI,MAAM,SAAU,UAAU;QAC5B,OAAO,gBAAgB,UAAU,CAAC,eAAe;IACnD;IAEA,IAAI,gBAAgB;QAClB,OAAO,gBAAgB;IACzB;IAEA,IAAI,OAAO,mBAAmB,UAAU;QACtC,OAAO,cAAc,GAAG;QACxB,OAAO,SAAS,GAAG,SAAU,KAAK,EAAE,IAAI;YACtC,OAAO,IAAI,MAAM,iBAAiB,CAAC;QACrC;QACA,OAAO,SAAS,GAAG,SAAU,IAAI,EAAE,UAAU;YAC3C,OAAO,IAAI;QACb;QACA,OAAO,gBAAgB,GAAG,OAAO,SAAS;QAC1C,OAAO,gBAAgB,GAAG,OAAO,SAAS;IAC5C,OAAO,IAAI,OAAO,mBAAmB,YAAY;QAC/C,OAAO,cAAc,GAAG;YACtB,MAAM,IAAI,MACR;QAEJ;QACA,OAAO,SAAS,GAAG,SAAU,KAAK,EAAE,IAAI;YACtC,qCAAqC;YACrC,IAAI,cAAc,MAAM,WAAW,CAAC;YACpC,OAAO,gBACL,eACE,MACA,MAAM,iBAAiB,CAAC,OACxB,WAAW,CAAC,EAAE,EACd,WAAW,CAAC,EAAE,EACd,MAAM,iBAAiB,CAAC,WAAW,CAAC,EAAE,GACtC,MAAM,iBAAiB,CAAC,WAAW,CAAC,EAAE,GACtC,MAAM,YAAY,CAAC;QAGzB;QACA,OAAO,SAAS,GAAG,SAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YAChD,OAAO,gBAAgB,eAAe,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI;QAC5D;QACA,OAAO,gBAAgB,GAAG,SAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAC5C,OAAO,gBAAgB,eAAe,GAAG,GAAG,GAAG;QACjD;QACA,OAAO,gBAAgB,GAAG,SAAU,CAAC,EAAE,CAAC;YACtC,OAAO,gBAAgB,eAAe,GAAG;QAC3C;IACF,OAAO;QACL,OAAO,cAAc,GAAG;QACxB,OAAO,SAAS,GAAG;QACnB,OAAO,SAAS,GAAG;QACnB,OAAO,gBAAgB,GAAG;IAC5B;IAEA,OAAO;AACT;AAEA,QAAQ,qBAAqB,GAAG;AAChC,QAAQ,qBAAqB,GAAG;AAChC,QAAQ,sBAAsB,GAAG,SAAU,IAAI;IAC7C,OAAO,sBAAsB,MAAM;AACrC;;;ACxIA,mCAAmC,GACnC;;;;;CAKC,GAED;;CAEC,GACD,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,cAAc;AAClB,IAAI,cAAc;AAClB,IAAI,YAAY;AAChB,IAAI,mBAAmB;AACvB,IAAI,YAAY;AAChB,IAAI,aAAa;AAEjB,IAAI,cAAc;AAClB,IAAI,cAAc;AAClB,IAAI,cAAc;AAElB,IAAI,cAAc;AAClB,IAAI,kBAAkB;AACtB,IAAI,kBAAkB;AACtB,IAAI,cAAc;AAClB,IAAI,sBAAsB;AAC1B,IAAI,qBAAqB;AACzB,IAAI,cAAc;AAClB,IAAI,uBAAuB;AAC3B,IAAI,uBAAuB;AAE3B,IAAI,uBAAuB;AAE3B;;CAEC,GACD,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,MAAM;AAEV,IAAI,YAAY;AAEhB;;;;;;;CAOC,GACD,OAAO,OAAO,GAAG,SAAS,QAAQ,OAAO,EAAE,UAAU,EAAE,UAAU;IAC/D,yBAAyB;IACzB,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG;IAElC,IAAI,QAAQ,WAAW,MAAM,EAC3B,OAAO,WAAW,MAAM;IAE1B,IAAI,cAAc,QAAQ,WAAW;IAErC,IAAI,eAAe,QAAQ,cAAc,GAAG,QAAQ,cAAc;IAElE,IAAI,yBAAyB,aAAa,OAAO,OAAO,KAAK,UAAU;IAEvE,IAAI,eAAe,EAAE;IAErB,8BAA8B;IAC9B,+BAA+B;IAE/B,6CAA6C;IAC7C,IAAK,IAAI,GAAG,IAAI,OAAO,KAAK,IAAK;QAC/B,UAAU,CAAC,IAAI,YAAY,GAAG,UAAU,CAAC,IAAI,QAAQ;QACrD,UAAU,CAAC,IAAI,YAAY,GAAG,UAAU,CAAC,IAAI,QAAQ;QACrD,UAAU,CAAC,IAAI,QAAQ,GAAG;QAC1B,UAAU,CAAC,IAAI,QAAQ,GAAG;IAC5B;IAEA,kDAAkD;IAClD,IAAI,QAAQ,8BAA8B,EAAE;QAC1C,0BAA0B;QAC1B,IAAK,IAAI,GAAG,IAAI,OAAO,KAAK,IAC1B,2BAA2B,UAAU,CAAC,IAAI,UAAU;QAGtD,2BAA2B,QAAQ;IACrC;IAEA,gCAAgC;IAChC,gCAAgC;IAEhC,IAAI,QAAQ,iBAAiB,EAAE;QAC7B,aAAa;QACb,IAAI,OAAO,UACT,OAAO,CAAC,UACR,OAAO,UACP,OAAO,CAAC,UACR,GACA,IACA;QAEF,+BAA+B;QAC/B,IAAK,IAAI,GAAG,IAAI,OAAO,KAAK,IAAK;YAC/B,OAAO,KAAK,GAAG,CAAC,MAAM,UAAU,CAAC,IAAI,OAAO;YAC5C,OAAO,KAAK,GAAG,CAAC,MAAM,UAAU,CAAC,IAAI,OAAO;YAC5C,OAAO,KAAK,GAAG,CAAC,MAAM,UAAU,CAAC,IAAI,OAAO;YAC5C,OAAO,KAAK,GAAG,CAAC,MAAM,UAAU,CAAC,IAAI,OAAO;QAC9C;QAEA,mCAAmC;QACnC,IAAI,KAAK,OAAO,MACd,KAAK,OAAO;QACd,IAAI,KAAK,IAAI;YACX,QAAQ,AAAC,CAAA,KAAK,EAAC,IAAK;YACpB,OAAO,OAAO;QAChB,OAAO;YACL,QAAQ,AAAC,CAAA,KAAK,EAAC,IAAK;YACpB,OAAO,OAAO;QAChB;QAEA,mCAAmC;QACnC,YAAY,CAAC,IAAI,YAAY,GAAG;QAChC,YAAY,CAAC,IAAI,gBAAgB,GAAG,AAAC,CAAA,OAAO,IAAG,IAAK;QACpD,YAAY,CAAC,IAAI,gBAAgB,GAAG,AAAC,CAAA,OAAO,IAAG,IAAK;QACpD,YAAY,CAAC,IAAI,YAAY,GAAG,KAAK,GAAG,CAAC,OAAO,MAAM,OAAO;QAC7D,YAAY,CAAC,IAAI,oBAAoB,GAAG;QACxC,YAAY,CAAC,IAAI,mBAAmB,GAAG;QACvC,YAAY,CAAC,IAAI,YAAY,GAAG;QAChC,YAAY,CAAC,IAAI,qBAAqB,GAAG;QACzC,YAAY,CAAC,IAAI,qBAAqB,GAAG;QAEzC,4BAA4B;QAC5B,IAAI;QACJ,IAAK,IAAI,GAAG,IAAI,OAAO,KAAK,IAAK;YAC/B,qCAAqC;YACrC,IAAI;YACJ,sBAAsB;YAEtB,MAAO,KAAM;gBACX,yBAAyB;gBAEzB,+BAA+B;gBAC/B,IAAI,YAAY,CAAC,IAAI,mBAAmB,IAAI,GAAG;oBAC7C,wBAAwB;oBAExB,+CAA+C;oBAC/C,yDAAyD;oBACzD,kBAAkB;oBAElB,yBAAyB;oBACzB,IAAI,UAAU,CAAC,IAAI,OAAO,GAAG,YAAY,CAAC,IAAI,gBAAgB;wBAC5D,IAAI,UAAU,CAAC,IAAI,OAAO,GAAG,YAAY,CAAC,IAAI,gBAAgB,EAC5D,mBAAmB;wBACnB,IAAI,YAAY,CAAC,IAAI,mBAAmB;6BAExC,sBAAsB;wBACtB,IAAI,YAAY,CAAC,IAAI,mBAAmB,GAAG;2BAG7C,IAAI,UAAU,CAAC,IAAI,OAAO,GAAG,YAAY,CAAC,IAAI,gBAAgB,EAC5D,oBAAoB;oBACpB,IAAI,YAAY,CAAC,IAAI,mBAAmB,GAAG,MAAM;yBAEjD,uBAAuB;oBACvB,IAAI,YAAY,CAAC,IAAI,mBAAmB,GAAG,MAAM;oBAIrD,uEAAuE;oBACvE,YAAY,CAAC,IAAI,qBAAqB,GACpC,AAAC,CAAA,YAAY,CAAC,IAAI,qBAAqB,GACrC,YAAY,CAAC,IAAI,YAAY,GAC7B,UAAU,CAAC,IAAI,OAAO,GAAG,UAAU,CAAC,IAAI,UAAU,AAAD,IAClD,CAAA,YAAY,CAAC,IAAI,YAAY,GAAG,UAAU,CAAC,IAAI,UAAU,AAAD;oBAE3D,YAAY,CAAC,IAAI,qBAAqB,GACpC,AAAC,CAAA,YAAY,CAAC,IAAI,qBAAqB,GACrC,YAAY,CAAC,IAAI,YAAY,GAC7B,UAAU,CAAC,IAAI,OAAO,GAAG,UAAU,CAAC,IAAI,UAAU,AAAD,IAClD,CAAA,YAAY,CAAC,IAAI,YAAY,GAAG,UAAU,CAAC,IAAI,UAAU,AAAD;oBAE3D,YAAY,CAAC,IAAI,YAAY,IAAI,UAAU,CAAC,IAAI,UAAU;oBAE1D,gCAAgC;oBAChC,IAAI;oBACJ;gBACF,OACE,+CAA+C;gBAE/C,iCAAiC;gBACjC,IAAI,YAAY,CAAC,IAAI,YAAY,GAAG,GAAG;oBACrC,8BAA8B;oBAC9B,6BAA6B;oBAC7B,YAAY,CAAC,IAAI,YAAY,GAAG;oBAChC;gBACF,OAAO;oBACL,iCAAiC;oBAEjC,oDAAoD;oBACpD,oDAAoD;oBACpD,iDAAiD;oBACjD,mBAAmB;oBAEnB,qBAAqB;oBACrB,YAAY,CAAC,IAAI,mBAAmB,GAAG,IAAI;oBAC3C,IAAI,YAAY,CAAC,IAAI,YAAY,GAAG,GAAG,kBAAkB;oBAEzD,kCAAkC;oBAClC,gCAAgC;oBAEhC,sBAAsB;oBACtB,IAAI,YAAY,CAAC,IAAI,mBAAmB;oBAExC,YAAY,CAAC,IAAI,YAAY,GAAG;oBAChC,YAAY,CAAC,IAAI,gBAAgB,GAC/B,YAAY,CAAC,IAAI,gBAAgB,GAAG;oBACtC,YAAY,CAAC,IAAI,gBAAgB,GAC/B,YAAY,CAAC,IAAI,gBAAgB,GAAG;oBACtC,YAAY,CAAC,IAAI,YAAY,GAAG;oBAChC,YAAY,CAAC,IAAI,oBAAoB,GAAG,IAAI;oBAC5C,YAAY,CAAC,IAAI,mBAAmB,GAAG;oBACvC,YAAY,CAAC,IAAI,YAAY,GAAG;oBAChC,YAAY,CAAC,IAAI,qBAAqB,GAAG;oBACzC,YAAY,CAAC,IAAI,qBAAqB,GAAG;oBAEzC,yBAAyB;oBACzB,KAAK;oBACL,YAAY,CAAC,IAAI,YAAY,GAAG;oBAChC,YAAY,CAAC,IAAI,gBAAgB,GAC/B,YAAY,CAAC,IAAI,gBAAgB,GAAG;oBACtC,YAAY,CAAC,IAAI,gBAAgB,GAC/B,YAAY,CAAC,IAAI,gBAAgB,GAAG;oBACtC,YAAY,CAAC,IAAI,YAAY,GAAG;oBAChC,YAAY,CAAC,IAAI,oBAAoB,GAAG,IAAI;oBAC5C,YAAY,CAAC,IAAI,mBAAmB,GAAG;oBACvC,YAAY,CAAC,IAAI,YAAY,GAAG;oBAChC,YAAY,CAAC,IAAI,qBAAqB,GAAG;oBACzC,YAAY,CAAC,IAAI,qBAAqB,GAAG;oBAEzC,uBAAuB;oBACvB,KAAK;oBACL,YAAY,CAAC,IAAI,YAAY,GAAG;oBAChC,YAAY,CAAC,IAAI,gBAAgB,GAC/B,YAAY,CAAC,IAAI,gBAAgB,GAAG;oBACtC,YAAY,CAAC,IAAI,gBAAgB,GAC/B,YAAY,CAAC,IAAI,gBAAgB,GAAG;oBACtC,YAAY,CAAC,IAAI,YAAY,GAAG;oBAChC,YAAY,CAAC,IAAI,oBAAoB,GAAG,IAAI;oBAC5C,YAAY,CAAC,IAAI,mBAAmB,GAAG;oBACvC,YAAY,CAAC,IAAI,YAAY,GAAG;oBAChC,YAAY,CAAC,IAAI,qBAAqB,GAAG;oBACzC,YAAY,CAAC,IAAI,qBAAqB,GAAG;oBAEzC,0BAA0B;oBAC1B,KAAK;oBACL,YAAY,CAAC,IAAI,YAAY,GAAG;oBAChC,YAAY,CAAC,IAAI,gBAAgB,GAC/B,YAAY,CAAC,IAAI,gBAAgB,GAAG;oBACtC,YAAY,CAAC,IAAI,gBAAgB,GAC/B,YAAY,CAAC,IAAI,gBAAgB,GAAG;oBACtC,YAAY,CAAC,IAAI,YAAY,GAAG;oBAChC,YAAY,CAAC,IAAI,oBAAoB,GACnC,YAAY,CAAC,IAAI,oBAAoB;oBACvC,YAAY,CAAC,IAAI,mBAAmB,GAAG;oBACvC,YAAY,CAAC,IAAI,YAAY,GAAG;oBAChC,YAAY,CAAC,IAAI,qBAAqB,GAAG;oBACzC,YAAY,CAAC,IAAI,qBAAqB,GAAG;oBAEzC,KAAK;oBAEL,oDAAoD;oBACpD,wDAAwD;oBACxD,iCAAiC;oBAEjC,oCAAoC;oBACpC,IACE,UAAU,CAAC,YAAY,CAAC,IAAI,YAAY,GAAG,OAAO,GAClD,YAAY,CAAC,IAAI,gBAAgB;wBAEjC,IACE,UAAU,CAAC,YAAY,CAAC,IAAI,YAAY,GAAG,OAAO,GAClD,YAAY,CAAC,IAAI,gBAAgB,EAEjC,mBAAmB;wBACnB,IAAI,YAAY,CAAC,IAAI,mBAAmB;6BAExC,sBAAsB;wBACtB,IAAI,YAAY,CAAC,IAAI,mBAAmB,GAAG;2BAG7C,IACE,UAAU,CAAC,YAAY,CAAC,IAAI,YAAY,GAAG,OAAO,GAClD,YAAY,CAAC,IAAI,gBAAgB,EAEjC,oBAAoB;oBACpB,IAAI,YAAY,CAAC,IAAI,mBAAmB,GAAG,MAAM;yBAEjD,uBAAuB;oBACvB,IAAI,YAAY,CAAC,IAAI,mBAAmB,GAAG,MAAM;oBAIrD,yEAAyE;oBACzE,YAAY,CAAC,IAAI,YAAY,GAC3B,UAAU,CAAC,YAAY,CAAC,IAAI,YAAY,GAAG,UAAU;oBACvD,YAAY,CAAC,IAAI,qBAAqB,GACpC,UAAU,CAAC,YAAY,CAAC,IAAI,YAAY,GAAG,OAAO;oBACpD,YAAY,CAAC,IAAI,qBAAqB,GACpC,UAAU,CAAC,YAAY,CAAC,IAAI,YAAY,GAAG,OAAO;oBAEpD,YAAY,CAAC,IAAI,YAAY,GAAG,YAAY,CAAC,IAAI,YAAY;oBAC7D,YAAY,CAAC,IAAI,YAAY,GAAG;oBAEhC,yBAAyB;oBACzB,IAAI,UAAU,CAAC,IAAI,OAAO,GAAG,YAAY,CAAC,IAAI,gBAAgB;wBAC5D,IAAI,UAAU,CAAC,IAAI,OAAO,GAAG,YAAY,CAAC,IAAI,gBAAgB,EAC5D,mBAAmB;wBACnB,KAAK,YAAY,CAAC,IAAI,mBAAmB;6BAEzC,sBAAsB;wBACtB,KAAK,YAAY,CAAC,IAAI,mBAAmB,GAAG;2BAG9C,IAAI,UAAU,CAAC,IAAI,OAAO,GAAG,YAAY,CAAC,IAAI,gBAAgB,EAC5D,oBAAoB;oBACpB,KAAK,YAAY,CAAC,IAAI,mBAAmB,GAAG,MAAM;yBAElD,uBAAuB;oBACvB,KAAK,YAAY,CAAC,IAAI,mBAAmB,GAAG,MAAM;oBAItD,IAAI,MAAM;wBACR,0CAA0C;wBAC1C,2CAA2C;wBAC3C,IAAI,uBAAuB;4BACzB,IAAI;4BACJ,UAAU,QAAQ;wBACpB,OAAO;4BACL,gEAAgE;4BAChE,uCAAuC;4BACvC,sBAAsB;4BACtB,OAAO,QAAQ;wBACjB;;oBAGF,+CAA+C;oBAC/C,kBAAkB;oBAClB,YAAY,CAAC,KAAK,YAAY,GAAG;oBACjC;gBACF;YAEJ;QACF;IACF;IAEA,eAAe;IACf,gBAAgB;IAChB,kEAAkE;IAElE,IAAI,QAAQ,iBAAiB,EAAE;QAC7B,cAAc,QAAQ,YAAY;QAElC,qCAAqC;QACrC,IAAK,IAAI,GAAG,IAAI,OAAO,KAAK,IAAK;YAC/B,sCAAsC;YAEtC,IAAI,GAAG,4BAA4B;YACnC,MAAO,KACL,IAAI,YAAY,CAAC,IAAI,mBAAmB,IAAI,GAAG;gBAC7C,6BAA6B;gBAE7B,oEAAoE;gBACpE,WACE,KAAK,GAAG,CACN,UAAU,CAAC,IAAI,OAAO,GAAG,YAAY,CAAC,IAAI,qBAAqB,EAC/D,KAEF,KAAK,GAAG,CACN,UAAU,CAAC,IAAI,OAAO,GAAG,YAAY,CAAC,IAAI,qBAAqB,EAC/D;gBAGJ,IAAI,YAAY,CAAC,IAAI,YAAY;gBAEjC,IAAI,AAAC,IAAI,IAAI,IAAK,WAAW,cAAc;oBACzC,uDAAuD;oBAEvD,QACE,UAAU,CAAC,IAAI,OAAO,GAAG,YAAY,CAAC,IAAI,qBAAqB;oBACjE,QACE,UAAU,CAAC,IAAI,OAAO,GAAG,YAAY,CAAC,IAAI,qBAAqB;oBAEjE,IAAI,gBAAgB,MAAM;wBACxB,oCAAoC;wBACpC,IAAI,WAAW,GAAG;4BAChB,SACE,AAAC,cACC,UAAU,CAAC,IAAI,UAAU,GACzB,YAAY,CAAC,IAAI,YAAY,GAC/B;4BAEF,UAAU,CAAC,IAAI,QAAQ,IAAI,QAAQ;4BACnC,UAAU,CAAC,IAAI,QAAQ,IAAI,QAAQ;wBACrC,OAAO,IAAI,WAAW,GAAG;4BACvB,SACE,AAAC,CAAC,cACA,UAAU,CAAC,IAAI,UAAU,GACzB,YAAY,CAAC,IAAI,YAAY,GAC/B,KAAK,IAAI,CAAC;4BAEZ,UAAU,CAAC,IAAI,QAAQ,IAAI,QAAQ;4BACnC,UAAU,CAAC,IAAI,QAAQ,IAAI,QAAQ;wBACrC;oBACF,OACE,qBAAqB;oBACrB,IAAI,WAAW,GAAG;wBAChB,SACE,AAAC,cACC,UAAU,CAAC,IAAI,UAAU,GACzB,YAAY,CAAC,IAAI,YAAY,GAC/B;wBAEF,UAAU,CAAC,IAAI,QAAQ,IAAI,QAAQ;wBACnC,UAAU,CAAC,IAAI,QAAQ,IAAI,QAAQ;oBACrC;oBAGF,sEAAsE;oBACtE,IAAI,YAAY,CAAC,IAAI,oBAAoB;oBACzC,IAAI,IAAI,GAAG,OAAO,6CAA6C;oBAE/D;gBACF,OAAO;oBACL,6DAA6D;oBAC7D,IAAI,YAAY,CAAC,IAAI,mBAAmB;oBACxC;gBACF;YACF,OAAO;gBACL,+BAA+B;gBAC/B,wDAAwD;gBACxD,KAAK,YAAY,CAAC,IAAI,YAAY;gBAElC,IAAI,MAAM,KAAK,OAAO,GAAG;oBACvB,QAAQ,UAAU,CAAC,IAAI,OAAO,GAAG,UAAU,CAAC,KAAK,OAAO;oBACxD,QAAQ,UAAU,CAAC,IAAI,OAAO,GAAG,UAAU,CAAC,KAAK,OAAO;oBAExD,WAAW,QAAQ,QAAQ,QAAQ;oBAEnC,IAAI,gBAAgB,MAAM;wBACxB,oCAAoC;wBACpC,IAAI,WAAW,GAAG;4BAChB,SACE,AAAC,cACC,UAAU,CAAC,IAAI,UAAU,GACzB,UAAU,CAAC,KAAK,UAAU,GAC5B;4BAEF,UAAU,CAAC,IAAI,QAAQ,IAAI,QAAQ;4BACnC,UAAU,CAAC,IAAI,QAAQ,IAAI,QAAQ;wBACrC,OAAO,IAAI,WAAW,GAAG;4BACvB,SACE,AAAC,CAAC,cACA,UAAU,CAAC,IAAI,UAAU,GACzB,UAAU,CAAC,KAAK,UAAU,GAC5B,KAAK,IAAI,CAAC;4BAEZ,UAAU,CAAC,IAAI,QAAQ,IAAI,QAAQ;4BACnC,UAAU,CAAC,IAAI,QAAQ,IAAI,QAAQ;wBACrC;oBACF,OACE,qBAAqB;oBACrB,IAAI,WAAW,GAAG;wBAChB,SACE,AAAC,cACC,UAAU,CAAC,IAAI,UAAU,GACzB,UAAU,CAAC,KAAK,UAAU,GAC5B;wBAEF,UAAU,CAAC,IAAI,QAAQ,IAAI,QAAQ;wBACnC,UAAU,CAAC,IAAI,QAAQ,IAAI,QAAQ;oBACrC;gBAEJ;gBAEA,sEAAsE;gBACtE,IAAI,YAAY,CAAC,IAAI,oBAAoB;gBAEzC,IAAI,IAAI,GAAG,OAAO,6CAA6C;gBAE/D;YACF;QAEJ;IACF,OAAO;QACL,cAAc,QAAQ,YAAY;QAElC,mBAAmB;QACnB,IAAK,KAAK,GAAG,KAAK,OAAO,MAAM,IAC7B,IAAK,KAAK,GAAG,KAAK,IAAI,MAAM,IAAK;YAC/B,yBAAyB;YACzB,QAAQ,UAAU,CAAC,KAAK,OAAO,GAAG,UAAU,CAAC,KAAK,OAAO;YACzD,QAAQ,UAAU,CAAC,KAAK,OAAO,GAAG,UAAU,CAAC,KAAK,OAAO;YAEzD,IAAI,gBAAgB,MAAM;gBACxB,mCAAmC;gBACnC,WACE,KAAK,IAAI,CAAC,QAAQ,QAAQ,QAAQ,SAClC,UAAU,CAAC,KAAK,UAAU,GAC1B,UAAU,CAAC,KAAK,UAAU;gBAE5B,IAAI,WAAW,GAAG;oBAChB,SACE,AAAC,cACC,UAAU,CAAC,KAAK,UAAU,GAC1B,UAAU,CAAC,KAAK,UAAU,GAC5B,WACA;oBAEF,4BAA4B;oBAC5B,UAAU,CAAC,KAAK,QAAQ,IAAI,QAAQ;oBACpC,UAAU,CAAC,KAAK,QAAQ,IAAI,QAAQ;oBAEpC,UAAU,CAAC,KAAK,QAAQ,IAAI,QAAQ;oBACpC,UAAU,CAAC,KAAK,QAAQ,IAAI,QAAQ;gBACtC,OAAO,IAAI,WAAW,GAAG;oBACvB,SACE,MACA,cACA,UAAU,CAAC,KAAK,UAAU,GAC1B,UAAU,CAAC,KAAK,UAAU;oBAE5B,4BAA4B;oBAC5B,UAAU,CAAC,KAAK,QAAQ,IAAI,QAAQ;oBACpC,UAAU,CAAC,KAAK,QAAQ,IAAI,QAAQ;oBAEpC,UAAU,CAAC,KAAK,QAAQ,IAAI,QAAQ;oBACpC,UAAU,CAAC,KAAK,QAAQ,IAAI,QAAQ;gBACtC;YACF,OAAO;gBACL,qBAAqB;gBACrB,WAAW,KAAK,IAAI,CAAC,QAAQ,QAAQ,QAAQ;gBAE7C,IAAI,WAAW,GAAG;oBAChB,SACE,AAAC,cACC,UAAU,CAAC,KAAK,UAAU,GAC1B,UAAU,CAAC,KAAK,UAAU,GAC5B,WACA;oBAEF,4BAA4B;oBAC5B,UAAU,CAAC,KAAK,QAAQ,IAAI,QAAQ;oBACpC,UAAU,CAAC,KAAK,QAAQ,IAAI,QAAQ;oBAEpC,UAAU,CAAC,KAAK,QAAQ,IAAI,QAAQ;oBACpC,UAAU,CAAC,KAAK,QAAQ,IAAI,QAAQ;gBACtC;YACF;QACF;IAEJ;IAEA,aAAa;IACb,cAAc;IACd,IAAI,QAAQ,OAAO,GAAG,QAAQ,YAAY;IAC1C,cAAc,QAAQ,YAAY;IAClC,IAAK,IAAI,GAAG,IAAI,OAAO,KAAK,IAAK;QAC/B,SAAS;QAET,yBAAyB;QACzB,QAAQ,UAAU,CAAC,IAAI,OAAO;QAC9B,QAAQ,UAAU,CAAC,IAAI,OAAO;QAC9B,WAAW,KAAK,IAAI,CAAC,KAAK,GAAG,CAAC,OAAO,KAAK,KAAK,GAAG,CAAC,OAAO;QAE1D,IAAI,QAAQ,iBAAiB,EAC3B,mBAAmB;QACnB;YAAA,IAAI,WAAW,GAAG,SAAS,cAAc,UAAU,CAAC,IAAI,UAAU,GAAG;QAAC,OAEtE,sCAAsC;QACtC,IAAI,WAAW,GACb,SAAS,AAAC,cAAc,UAAU,CAAC,IAAI,UAAU,GAAG,IAAK;QAG7D,4BAA4B;QAC5B,UAAU,CAAC,IAAI,QAAQ,IAAI,QAAQ;QACnC,UAAU,CAAC,IAAI,QAAQ,IAAI,QAAQ;IACrC;IAEA,gBAAgB;IAChB,iBAAiB;IACjB,cACE,IAAK,CAAA,QAAQ,8BAA8B,GAAG,0BAA0B,CAAA;IAE1E,0BAA0B;IAC1B,uDAAuD;IACvD,IAAK,IAAI,GAAG,IAAI,MAAM,KAAK,IAAK;QAC9B,KAAK,UAAU,CAAC,IAAI,YAAY;QAChC,KAAK,UAAU,CAAC,IAAI,YAAY;QAChC,IAAI,UAAU,CAAC,IAAI,YAAY;QAE/B,wBAAwB;QACxB,MAAM,KAAK,GAAG,CAAC,GAAG,QAAQ,mBAAmB;QAE7C,kBAAkB;QAClB,QAAQ,UAAU,CAAC,KAAK,OAAO,GAAG,UAAU,CAAC,KAAK,OAAO;QACzD,QAAQ,UAAU,CAAC,KAAK,OAAO,GAAG,UAAU,CAAC,KAAK,OAAO;QAEzD,+BAA+B;QAC/B,IAAI,gBAAgB,MAAM;YACxB,WACE,KAAK,IAAI,CAAC,QAAQ,QAAQ,QAAQ,SAClC,UAAU,CAAC,KAAK,UAAU,GAC1B,UAAU,CAAC,KAAK,UAAU;YAE5B,IAAI,QAAQ,UAAU,EAAE;gBACtB,IAAI,QAAQ,8BAA8B,EACxC,wDAAwD;gBACxD;oBAAA,IAAI,WAAW,GACb,SACE,AAAC,CAAC,cAAc,MAAM,KAAK,GAAG,CAAC,IAAI,YACnC,WACA,UAAU,CAAC,KAAK,UAAU;gBAC9B,OAEA,qCAAqC;gBACrC,IAAI,WAAW,GACb,SAAS,AAAC,CAAC,cAAc,MAAM,KAAK,GAAG,CAAC,IAAI,YAAa;YAG/D,OAAO;gBACL,IAAI,QAAQ,8BAA8B,EACxC,wDAAwD;gBACxD;oBAAA,IAAI,WAAW,GACb,SAAS,AAAC,CAAC,cAAc,MAAO,UAAU,CAAC,KAAK,UAAU;gBAC5D,OAEA,qCAAqC;gBACrC,IAAI,WAAW,GACb,SAAS,CAAC,cAAc;YAG9B;QACF,OAAO;YACL,WAAW,KAAK,IAAI,CAAC,KAAK,GAAG,CAAC,OAAO,KAAK,KAAK,GAAG,CAAC,OAAO;YAE1D,IAAI,QAAQ,UAAU,EAAE;gBACtB,IAAI,QAAQ,8BAA8B,EACxC,yCAAyC;gBACzC;oBAAA,IAAI,WAAW,GACb,SACE,AAAC,CAAC,cAAc,MAAM,KAAK,GAAG,CAAC,IAAI,YACnC,WACA,UAAU,CAAC,KAAK,UAAU;gBAC9B,OAEA,sBAAsB;gBACtB,IAAI,WAAW,GACb,SAAS,AAAC,CAAC,cAAc,MAAM,KAAK,GAAG,CAAC,IAAI,YAAa;YAE/D,OACE,IAAI,QAAQ,8BAA8B,EAAE;gBAC1C,uCAAuC;gBACvC,wDAAwD;gBACxD,WAAW;gBACX,SAAS,AAAC,CAAC,cAAc,MAAO,UAAU,CAAC,KAAK,UAAU;YAC5D,OAAO;gBACL,sBAAsB;gBACtB,wDAAwD;gBACxD,WAAW;gBACX,SAAS,CAAC,cAAc;YAC1B;QAEJ;QAEA,4BAA4B;QAC5B,oCAAoC;QACpC,IAAI,WAAW,GAAG;YAChB,4BAA4B;YAC5B,UAAU,CAAC,KAAK,QAAQ,IAAI,QAAQ;YACpC,UAAU,CAAC,KAAK,QAAQ,IAAI,QAAQ;YAEpC,UAAU,CAAC,KAAK,QAAQ,IAAI,QAAQ;YACpC,UAAU,CAAC,KAAK,QAAQ,IAAI,QAAQ;QACtC;IACF;IAEA,kBAAkB;IAClB,mBAAmB;IACnB,IAAI,OAAO,UAAU,UAAU,WAAW,MAAM;IAEhD,kCAAkC;IAClC,IAAI,gBAAgB,MAAM;QACxB,IAAK,IAAI,GAAG,IAAI,OAAO,KAAK,IAC1B,IAAI,UAAU,CAAC,IAAI,WAAW,KAAK,GAAG;YACpC,QAAQ,KAAK,IAAI,CACf,KAAK,GAAG,CAAC,UAAU,CAAC,IAAI,QAAQ,EAAE,KAChC,KAAK,GAAG,CAAC,UAAU,CAAC,IAAI,QAAQ,EAAE;YAGtC,IAAI,QAAQ,WAAW;gBACrB,UAAU,CAAC,IAAI,QAAQ,GACrB,AAAC,UAAU,CAAC,IAAI,QAAQ,GAAG,YAAa;gBAC1C,UAAU,CAAC,IAAI,QAAQ,GACrB,AAAC,UAAU,CAAC,IAAI,QAAQ,GAAG,YAAa;YAC5C;YAEA,WACE,UAAU,CAAC,IAAI,UAAU,GACzB,KAAK,IAAI,CACP,AAAC,CAAA,UAAU,CAAC,IAAI,YAAY,GAAG,UAAU,CAAC,IAAI,QAAQ,AAAD,IAClD,CAAA,UAAU,CAAC,IAAI,YAAY,GAAG,UAAU,CAAC,IAAI,QAAQ,AAAD,IACrD,AAAC,CAAA,UAAU,CAAC,IAAI,YAAY,GAAG,UAAU,CAAC,IAAI,QAAQ,AAAD,IAClD,CAAA,UAAU,CAAC,IAAI,YAAY,GAAG,UAAU,CAAC,IAAI,QAAQ,AAAD;YAG7D,WACE,KAAK,IAAI,CACP,AAAC,CAAA,UAAU,CAAC,IAAI,YAAY,GAAG,UAAU,CAAC,IAAI,QAAQ,AAAD,IAClD,CAAA,UAAU,CAAC,IAAI,YAAY,GAAG,UAAU,CAAC,IAAI,QAAQ,AAAD,IACrD,AAAC,CAAA,UAAU,CAAC,IAAI,YAAY,GAAG,UAAU,CAAC,IAAI,QAAQ,AAAD,IAClD,CAAA,UAAU,CAAC,IAAI,YAAY,GAAG,UAAU,CAAC,IAAI,QAAQ,AAAD,KACvD;YAEN,YAAY,AAAC,MAAM,KAAK,GAAG,CAAC,IAAI,YAAc,CAAA,IAAI,KAAK,IAAI,CAAC,SAAQ;YAEpE,0BAA0B;YAC1B,OACE,UAAU,CAAC,IAAI,OAAO,GACtB,UAAU,CAAC,IAAI,QAAQ,GAAI,CAAA,YAAY,QAAQ,QAAQ,AAAD;YACxD,UAAU,CAAC,IAAI,OAAO,GAAG;YAEzB,OACE,UAAU,CAAC,IAAI,OAAO,GACtB,UAAU,CAAC,IAAI,QAAQ,GAAI,CAAA,YAAY,QAAQ,QAAQ,AAAD;YACxD,UAAU,CAAC,IAAI,OAAO,GAAG;QAC3B;IAEJ,OAAO;QACL,IAAK,IAAI,GAAG,IAAI,OAAO,KAAK,IAC1B,IAAI,UAAU,CAAC,IAAI,WAAW,KAAK,GAAG;YACpC,WACE,UAAU,CAAC,IAAI,UAAU,GACzB,KAAK,IAAI,CACP,AAAC,CAAA,UAAU,CAAC,IAAI,YAAY,GAAG,UAAU,CAAC,IAAI,QAAQ,AAAD,IAClD,CAAA,UAAU,CAAC,IAAI,YAAY,GAAG,UAAU,CAAC,IAAI,QAAQ,AAAD,IACrD,AAAC,CAAA,UAAU,CAAC,IAAI,YAAY,GAAG,UAAU,CAAC,IAAI,QAAQ,AAAD,IAClD,CAAA,UAAU,CAAC,IAAI,YAAY,GAAG,UAAU,CAAC,IAAI,QAAQ,AAAD;YAG7D,WACE,KAAK,IAAI,CACP,AAAC,CAAA,UAAU,CAAC,IAAI,YAAY,GAAG,UAAU,CAAC,IAAI,QAAQ,AAAD,IAClD,CAAA,UAAU,CAAC,IAAI,YAAY,GAAG,UAAU,CAAC,IAAI,QAAQ,AAAD,IACrD,AAAC,CAAA,UAAU,CAAC,IAAI,YAAY,GAAG,UAAU,CAAC,IAAI,QAAQ,AAAD,IAClD,CAAA,UAAU,CAAC,IAAI,YAAY,GAAG,UAAU,CAAC,IAAI,QAAQ,AAAD,KACvD;YAEN,YACE,AAAC,UAAU,CAAC,IAAI,iBAAiB,GAAG,KAAK,GAAG,CAAC,IAAI,YAChD,CAAA,IAAI,KAAK,IAAI,CAAC,SAAQ;YAEzB,4BAA4B;YAC5B,UAAU,CAAC,IAAI,iBAAiB,GAAG,KAAK,GAAG,CACzC,GACA,KAAK,IAAI,CACP,AAAC,YACE,CAAA,KAAK,GAAG,CAAC,UAAU,CAAC,IAAI,QAAQ,EAAE,KACjC,KAAK,GAAG,CAAC,UAAU,CAAC,IAAI,QAAQ,EAAE,EAAC,IACpC,CAAA,IAAI,KAAK,IAAI,CAAC,SAAQ;YAI7B,0BAA0B;YAC1B,OACE,UAAU,CAAC,IAAI,OAAO,GACtB,UAAU,CAAC,IAAI,QAAQ,GAAI,CAAA,YAAY,QAAQ,QAAQ,AAAD;YACxD,UAAU,CAAC,IAAI,OAAO,GAAG;YAEzB,OACE,UAAU,CAAC,IAAI,OAAO,GACtB,UAAU,CAAC,IAAI,QAAQ,GAAI,CAAA,YAAY,QAAQ,QAAQ,AAAD;YACxD,UAAU,CAAC,IAAI,OAAO,GAAG;QAC3B;IAEJ;IAEA,8EAA8E;IAC9E,OAAO,CAAC;AACV;;;ACxxBA;;;;;CAKC,GAED;;CAEC,GACD,IAAI,MAAM;AACV,IAAI,MAAM;AAEV;;;;;;CAMC,GACD,QAAQ,MAAM,GAAG,SAAU,MAAM;IAC/B,SAAS,UAAU,CAAC;IAEpB,IAAI,UAAU,MAAM,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,KAAK,CAAC,IACxD,GACA,GACA;IAEF,IAAK,IAAI,GAAG,IAAI,QAAQ,MAAM,EAAE,IAAI,GAAG,IAAK;QAC1C,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE;QAEjB,IAAK,KAAK,OAAO,CAAC,EAAE,CAAE,MAAM,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC,EAAE;IACjD;IAEA,OAAO;AACT;AAEA;;;;;CAKC,GACD,QAAQ,gBAAgB,GAAG,SAAU,QAAQ;IAC3C,IAAI,gBAAgB,YAAY,OAAO,SAAS,UAAU,KAAK,WAC7D,OAAO;QAAC,SAAS;IAA+C;IAElE,IACE,oCAAoC,YACpC,OAAO,SAAS,8BAA8B,KAAK,WAEnD,OAAO;QACL,SACE;IACJ;IAEF,IAAI,iBAAiB,YAAY,OAAO,SAAS,WAAW,KAAK,WAC/D,OAAO;QAAC,SAAS;IAAgD;IAEnE,IACE,yBAAyB,YACzB,OAAO,SAAS,mBAAmB,KAAK,UAExC,OAAO;QACL,SAAS;IACX;IAEF,IACE,kBAAkB,YAClB,CAAE,CAAA,OAAO,SAAS,YAAY,KAAK,YAAY,SAAS,YAAY,IAAI,CAAA,GAExE,OAAO;QAAC,SAAS;IAAqD;IAExE,IACE,uBAAuB,YACvB,OAAO,SAAS,iBAAiB,KAAK,WAEtC,OAAO;QAAC,SAAS;IAAsD;IAEzE,IACE,aAAa,YACb,CAAE,CAAA,OAAO,SAAS,OAAO,KAAK,YAAY,SAAS,OAAO,IAAI,CAAA,GAE9D,OAAO;QAAC,SAAS;IAAgD;IAEnE,IACE,cAAc,YACd,CAAE,CAAA,OAAO,SAAS,QAAQ,KAAK,YAAY,SAAS,QAAQ,IAAI,CAAA,GAEhE,OAAO;QAAC,SAAS;IAAiD;IAEpE,IACE,uBAAuB,YACvB,OAAO,SAAS,iBAAiB,KAAK,WAEtC,OAAO;QAAC,SAAS;IAAsD;IAEzE,IACE,oBAAoB,YACpB,CACE,CAAA,OAAO,SAAS,cAAc,KAAK,YACnC,SAAS,cAAc,IAAI,CAAA,GAG7B,OAAO;QAAC,SAAS;IAAuD;IAE1E,OAAO;AACT;AAEA;;;;;;CAMC,GACD,QAAQ,iBAAiB,GAAG,SAAU,KAAK,EAAE,aAAa;IACxD,IAAI,QAAQ,MAAM,KAAK;IACvB,IAAI,OAAO,MAAM,IAAI;IACrB,IAAI,QAAQ,CAAC;IACb,IAAI;IAEJ,wEAAwE;IACxE,mBAAmB;IACnB,IAAI,aAAa,IAAI,aAAa,QAAQ;IAC1C,IAAI,aAAa,IAAI,aAAa,OAAO;IAEzC,wBAAwB;IACxB,IAAI;IACJ,MAAM,WAAW,CAAC,SAAU,IAAI,EAAE,IAAI;QACpC,aAAa;QACb,KAAK,CAAC,KAAK,GAAG;QAEd,wBAAwB;QACxB,UAAU,CAAC,EAAE,GAAG,KAAK,CAAC;QACtB,UAAU,CAAC,IAAI,EAAE,GAAG,KAAK,CAAC;QAC1B,UAAU,CAAC,IAAI,EAAE,GAAG,GAAG,KAAK;QAC5B,UAAU,CAAC,IAAI,EAAE,GAAG,GAAG,KAAK;QAC5B,UAAU,CAAC,IAAI,EAAE,GAAG,GAAG,SAAS;QAChC,UAAU,CAAC,IAAI,EAAE,GAAG,GAAG,SAAS;QAChC,UAAU,CAAC,IAAI,EAAE,GAAG,GAAG,OAAO;QAC9B,UAAU,CAAC,IAAI,EAAE,GAAG,GAAG,cAAc;QACrC,UAAU,CAAC,IAAI,EAAE,GAAG,KAAK,IAAI,IAAI;QACjC,UAAU,CAAC,IAAI,EAAE,GAAG,KAAK,KAAK,GAAG,IAAI;QACrC,KAAK;IACP;IAEA,wBAAwB;IACxB,IAAI;IACJ,MAAM,WAAW,CAAC,SAAU,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QAC/D,IAAI,KAAK,KAAK,CAAC,OAAO;QACtB,IAAI,KAAK,KAAK,CAAC,OAAO;QAEtB,IAAI,SAAS,cAAc,MAAM,MAAM,QAAQ,QAAQ,IAAI,IAAI;QAE/D,mDAAmD;QACnD,UAAU,CAAC,KAAK,EAAE,IAAI;QACtB,UAAU,CAAC,KAAK,EAAE,IAAI;QAEtB,wBAAwB;QACxB,UAAU,CAAC,EAAE,GAAG;QAChB,UAAU,CAAC,IAAI,EAAE,GAAG;QACpB,UAAU,CAAC,IAAI,EAAE,GAAG;QACpB,KAAK;IACP;IAEA,OAAO;QACL,OAAO;QACP,OAAO;IACT;AACF;AAEA;;;;;;CAMC,GACD,QAAQ,mBAAmB,GAAG,SAAU,KAAK,EAAE,UAAU,EAAE,aAAa;IACtE,IAAI,IAAI;IAER,MAAM,wBAAwB,CAAC,SAAU,IAAI,EAAE,IAAI;QACjD,KAAK,CAAC,GAAG,UAAU,CAAC,EAAE;QACtB,KAAK,CAAC,GAAG,UAAU,CAAC,IAAI,EAAE;QAE1B,KAAK;QAEL,OAAO,gBAAgB,cAAc,MAAM,QAAQ;IACrD;AACF;AAEA;;;;;CAKC,GACD,QAAQ,kBAAkB,GAAG,SAAU,KAAK,EAAE,UAAU;IACtD,IAAI,IAAI;IAER,MAAM,WAAW,CAAC,SAAU,IAAI,EAAE,IAAI;QACpC,UAAU,CAAC,EAAE,GAAG,KAAK,CAAC;QACtB,UAAU,CAAC,IAAI,EAAE,GAAG,KAAK,CAAC;QAE1B,KAAK;IACP;AACF;AAEA;;;;;;;CAOC,GACD,QAAQ,oBAAoB,GAAG,SAAU,KAAK,EAAE,UAAU,EAAE,aAAa;IACvE,IAAI,QAAQ,MAAM,KAAK,IACrB,YAAY,CAAC;IAEf,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,WAAW,MAAM,EAAE,IAAI,GAAG,KAAK,IAAK;QAC7D,IAAI,eAAe;YACjB,IAAI,UAAU,OAAO,MAAM,CAAC,CAAC,GAAG,MAAM,iBAAiB,CAAC,KAAK,CAAC,EAAE;YAChE,QAAQ,CAAC,GAAG,UAAU,CAAC,EAAE;YACzB,QAAQ,CAAC,GAAG,UAAU,CAAC,IAAI,EAAE;YAC7B,UAAU,cAAc,KAAK,CAAC,EAAE,EAAE;YAClC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG;gBACpB,GAAG,QAAQ,CAAC;gBACZ,GAAG,QAAQ,CAAC;YACd;QACF,OACE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG;YACpB,GAAG,UAAU,CAAC,EAAE;YAChB,GAAG,UAAU,CAAC,IAAI,EAAE;QACtB;QAGF;IACF;IAEA,OAAO;AACT;AAEA;;;;;CAKC,GACD,QAAQ,YAAY,GAAG,SAAS,aAAa,EAAE;IAC7C,IAAI,OAAO,OAAO,GAAG,IAAI,OAAO,SAAS;IACzC,IAAI,OAAO,GAAG,QAAQ;IACtB,IAAI,YAAY,KAAK,eAAe,CAClC,IAAI,KAAK;QAAC,MAAM,OAAO;KAAgB,EAAE;QAAC,MAAM;IAAiB;IAEnE,IAAI,SAAS,IAAI,OAAO;IACxB,KAAK,eAAe,CAAC;IAErB,OAAO;AACT;;;ACpQA;;;CAGC,GACD,OAAO,OAAO,GAAG;IACf,YAAY;IACZ,gCAAgC;IAChC,aAAa;IACb,qBAAqB;IACrB,cAAc;IACd,mBAAmB;IACnB,SAAS;IACT,UAAU;IACV,mBAAmB;IACnB,gBAAgB;AAClB;;;ACfA,+BAA+B;;;AAgB/B,oDAAgB;AAfhB;;AACA;AACA;;AAEA,SAAS,eAAe,KAAc;IAClC,OAAQ;QACJ,KAAK,CAAA,GAAA,oBAAO,AAAD,EAAE,SAAS;YAAE,OAAO;QAC/B,KAAK,CAAA,GAAA,oBAAO,AAAD,EAAE,mBAAmB;YAAE,OAAO;QACzC,KAAK,CAAA,GAAA,oBAAO,AAAD,EAAE,qBAAqB;YAAE,OAAO;QAC3C,KAAK,CAAA,GAAA,oBAAO,AAAD,EAAE,qBAAqB;YAAE,OAAO;QAC3C,KAAK,CAAA,GAAA,oBAAO,AAAD,EAAE,qBAAqB;YAAE,OAAO;QAC3C;YAAS,OAAO;IACpB;AACJ;AAEO,SAAS,eAAe,SAAiE,EAAE,MAAyB;IACvH,MAAM,MAAM,OAAO,UAAU,CAAC;IAC9B,IAAI,CAAC,KAAK;QACN,QAAQ,KAAK,CAAC;QACd;IACJ;IAEA,MAAM,QAAQ,OAAO,KAAK;IAC1B,MAAM,SAAS,OAAO,MAAM;IAC5B,IAAI,SAAS,CAAC,GAAG,GAAG,OAAO;IAE3B,IAAI,UAAU,MAAM,KAAK,GAAG;IAE5B,MAAM,kBAAkB,IAAI,CAAA,GAAA,0BAAK,AAAD;IAChC,UAAU,OAAO,CAAC,CAAC,KAAK;QACpB,MAAM,aAAa,IAAI,UAAU,CAAC,CAAC,CAAC,QAAQ;QAC5C,MAAM,OAAO,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,aAAa,KAAK,MAAM;QAC1D,MAAM,QAAQ,eAAe,IAAI,UAAU,CAAC,CAAC,CAAC,KAAK;QAEnD,gBAAgB,OAAO,CAAC,EAAE,QAAQ,IAAI;YAClC,MAAM;YACN,OAAO;YACP,GAAG,AAAC,CAAA,KAAK,MAAM,KAAK,GAAE,IAAK,QAAQ;YACnC,GAAG,AAAC,CAAA,KAAK,MAAM,KAAK,GAAE,IAAK,SAAS;YACpC,oBAAoB,IAAI,UAAU;QACtC;IACJ;IAEA,IAAI,gBAAgB,KAAK,GAAG,GACxB,IAAI;QACA,CAAA,GAAA,2CAAW,AAAD,EAAE,MAAM,CAAC,iBAAiB;YAChC,YAAY,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,KAAK,gBAAgB,KAAK,GAAG;YAC/D,UAAU;gBACN,SAAS,KAAK,GAAG,CAAC,KAAK,gBAAgB,KAAK,GAAG;gBAC/C,cAAc,KAAK,GAAG,CAAC,OAAO,UAAU,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,gBAAgB,KAAK,IAAI;gBACxF,mBAAmB,gBAAgB,KAAK,GAAG;gBAC3C,gBAAgB;gBAChB,mBAAmB;gBACnB,UAAU,IAAI,KAAK,KAAK,CAAC,gBAAgB,KAAK,GAAE;gBAChD,aAAa;YACjB;QACJ;IACJ,EAAE,OAAO,GAAG;QACR,QAAQ,KAAK,CAAC,yCAAyC;IAC3D;IAGJ,gBAAgB,WAAW,CAAC,CAAC,OAAO;QAChC,MAAM,IAAI,MAAM,CAAC,GAAG,QAAQ;QAC5B,MAAM,IAAI,MAAM,CAAC,GAAG,SAAS;QAE7B,IAAI,SAAS;QACb,IAAI,GAAG,CAAC,GAAG,GAAG,MAAM,IAAI,EAAE,GAAG,IAAI,KAAK,EAAE;QACxC,IAAI,SAAS,GAAG,MAAM,KAAK;QAC3B,IAAI,WAAW,GAAG;QAClB,IAAI,IAAI;QACR,IAAI,WAAW,GAAG;QAClB,IAAI,SAAS,GAAG;QAChB,IAAI,MAAM;IACd;IACA,IAAI,WAAW,GAAG;AACtB;;;AC7EA;;;;;AAKA,GACC,CAAA,CAAC,GAAE;IAAK,cAAY,OAAO,UAAQ,OAAO,GAAG,GAAC,OAAO,EAAE,EAAC,KAAwD,OAAO,OAAO,GAAC;AAAc,CAAA,EAAG,IAAI,EAAC,SAAS;IAAI,IAAI,IAAE,eAAa,OAAO,OAAK,OAAK,eAAa,OAAO,SAAO,SAAO,KAAK,MAAI,IAAE,IAAE,CAAC;IAAE,IAAI,GAAE,IAAE,CAAC,EAAE,QAAQ,IAAE,CAAC,CAAC,EAAE,WAAW,EAAC,IAAE,EAAE,cAAc,IAAE,CAAC,GAAE,IAAE,CAAC,GAAE,IAAE,GAAE,IAAE,CAAC;IAAE,SAAS,EAAE,CAAC;QAAE,IAAI,CAAC,OAAO,GAAC,MAAK,IAAI,CAAC,SAAS,GAAC,CAAC,GAAE,IAAI,CAAC,UAAU,GAAC,CAAC,GAAE,IAAI,CAAC,OAAO,GAAC,CAAC,GAAE,IAAI,CAAC,MAAM,GAAC,MAAK,IAAI,CAAC,UAAU,GAAC,GAAE,IAAI,CAAC,YAAY,GAAC,IAAG,IAAI,CAAC,SAAS,GAAC,GAAE,IAAI,CAAC,MAAM,GAAC,GAAE,IAAI,CAAC,UAAU,GAAC,MAAK,IAAI,CAAC,YAAY,GAAC,CAAC,GAAE,IAAI,CAAC,gBAAgB,GAAC;YAAC,MAAK,EAAE;YAAC,QAAO,EAAE;YAAC,MAAK,CAAC;QAAC,GAAE,CAAA,SAAS,CAAC;YAAE,IAAI,IAAE,EAAE;YAAG,EAAE,SAAS,GAAC,SAAS,EAAE,SAAS,GAAE,EAAE,IAAI,IAAE,EAAE,KAAK,IAAG,CAAA,EAAE,SAAS,GAAC,IAAG;YAAG,IAAI,CAAC,OAAO,GAAC,IAAI,EAAE,IAAG,AAAC,CAAA,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAC,IAAI,AAAD,EAAG,OAAO,GAAC;QAAC,CAAA,EAAE,IAAI,CAAC,IAAI,EAAC,IAAG,IAAI,CAAC,UAAU,GAAC,SAAS,CAAC,EAAC,CAAC;YAAE,IAAI,IAAE,SAAS,IAAI,CAAC,OAAO,CAAC,eAAe,KAAG;YAAE,IAAG,IAAI,CAAC,YAAY,IAAE,IAAE,GAAE;gBAAC,IAAI,IAAE,IAAI,CAAC,OAAO,CAAC,OAAO;gBAAC,KAAI,CAAA,IAAE,IAAI,CAAC,OAAO,CAAC,SAAS,IAAE,KAAI,IAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,GAAE,EAAC,GAAG,IAAE;uBAAI,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC;iBAAG,CAAC,IAAI,CAAC;YAAE;YAAC,IAAI,CAAC,YAAY,IAAE,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB,KAAG,KAAK,MAAK,CAAA,IAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,EAAC,KAAK,CAAA,IAAE,CAAA,GAAG,IAAI,CAAC,YAAY,GAAC,CAAC,GAAE,IAAI,CAAC,OAAO,GAAC,CAAC;YAAE,IAAI,IAAE,IAAI,CAAC,YAAY,GAAC,GAAE,IAAG,CAAA,IAAI,CAAC,YAAY,GAAC,IAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAE,IAAI,CAAC,UAAU,EAAC,CAAC,IAAI,CAAC,SAAS,CAAA;YAAG,IAAG,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,MAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,IAAG;gBAAC,IAAE,EAAE,IAAI,CAAC,MAAM,EAAC,IAAG,CAAA,IAAI,CAAC,SAAS,IAAG,CAAA,IAAI,CAAC,YAAY,GAAC,EAAE,SAAS,CAAC,IAAE,IAAI,CAAC,UAAU,GAAE,IAAI,CAAC,UAAU,GAAC,CAAA,GAAG,KAAG,EAAE,IAAI,IAAG,CAAA,IAAI,CAAC,SAAS,IAAE,EAAE,IAAI,CAAC,MAAM,AAAD,GAAG,IAAI,CAAC,SAAS,IAAE,IAAI,CAAC,OAAO,CAAC,OAAO,IAAE,IAAI,CAAC,SAAS,IAAE,IAAI,CAAC,OAAO,CAAC,OAAO,AAAD;gBAAG,IAAG,GAAE,EAAE,WAAW,CAAC;oBAAC,SAAQ;oBAAE,UAAS,EAAE,SAAS;oBAAC,UAAS;gBAAC;qBAAQ,IAAG,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,KAAG,CAAC,GAAE;oBAAC,IAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAE,IAAI,CAAC,OAAO,GAAE,IAAI,CAAC,OAAO,CAAC,MAAM,MAAI,IAAI,CAAC,OAAO,CAAC,OAAO,IAAG,OAAO,KAAK,CAAA,IAAI,CAAC,OAAO,GAAC,CAAC,CAAA;oBAAG,IAAI,CAAC,gBAAgB,GAAC,IAAE,KAAK;gBAAC;gBAAC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,IAAE,IAAI,CAAC,OAAO,CAAC,KAAK,IAAG,CAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,GAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,GAAE,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,MAAM,GAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,GAAC,EAAE,IAAI,AAAD,GAAG,IAAI,CAAC,UAAU,IAAE,CAAC,KAAG,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,KAAG,KAAG,EAAE,IAAI,CAAC,OAAO,IAAG,CAAA,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,EAAC,IAAI,CAAC,MAAM,GAAE,IAAI,CAAC,UAAU,GAAC,CAAC,CAAA,GAAG,KAAG,KAAG,EAAE,IAAI,CAAC,MAAM,IAAE,IAAI,CAAC,UAAU,IAAG;YAAC;YAAC,IAAI,CAAC,OAAO,GAAC,CAAC;QAAC,GAAE,IAAI,CAAC,UAAU,GAAC,SAAS,CAAC;YAAE,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,IAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAG,KAAG,IAAI,CAAC,OAAO,CAAC,KAAK,IAAE,EAAE,WAAW,CAAC;gBAAC,UAAS,EAAE,SAAS;gBAAC,OAAM;gBAAE,UAAS,CAAC;YAAC;QAAE;IAAC;IAAC,SAAS,EAAE,CAAC;QAAE,IAAI;QAAG,CAAA,IAAE,KAAG,CAAC,CAAA,EAAG,SAAS,IAAG,CAAA,EAAE,SAAS,GAAC,EAAE,eAAe,AAAD,GAAG,EAAE,IAAI,CAAC,IAAI,EAAC,IAAG,IAAI,CAAC,UAAU,GAAC,IAAE;YAAW,IAAI,CAAC,UAAU,IAAG,IAAI,CAAC,YAAY;QAAE,IAAE;YAAW,IAAI,CAAC,UAAU;QAAE,GAAE,IAAI,CAAC,MAAM,GAAC,SAAS,CAAC;YAAE,IAAI,CAAC,MAAM,GAAC,GAAE,IAAI,CAAC,UAAU;QAAE,GAAE,IAAI,CAAC,UAAU,GAAC;YAAW,IAAG,IAAI,CAAC,SAAS,EAAC,IAAI,CAAC,YAAY;iBAAO;gBAAC,IAAG,IAAE,IAAI,gBAAe,IAAI,CAAC,OAAO,CAAC,eAAe,IAAG,CAAA,EAAE,eAAe,GAAC,IAAI,CAAC,OAAO,CAAC,eAAe,AAAD,GAAG,KAAI,CAAA,EAAE,MAAM,GAAC,EAAE,IAAI,CAAC,YAAY,EAAC,IAAI,GAAE,EAAE,OAAO,GAAC,EAAE,IAAI,CAAC,WAAW,EAAC,IAAI,CAAA,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,GAAC,SAAO,OAAM,IAAI,CAAC,MAAM,EAAC,CAAC,IAAG,IAAI,CAAC,OAAO,CAAC,sBAAsB,EAAC;oBAAC,IAAI,GAAE,IAAE,IAAI,CAAC,OAAO,CAAC,sBAAsB;oBAAC,IAAI,KAAK,EAAE,EAAE,gBAAgB,CAAC,GAAE,CAAC,CAAC,EAAE;gBAAC;gBAAC,IAAI;gBAAE,IAAI,CAAC,OAAO,CAAC,SAAS,IAAG,CAAA,IAAE,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,OAAO,CAAC,SAAS,GAAC,GAAE,EAAE,gBAAgB,CAAC,SAAQ,WAAS,IAAI,CAAC,MAAM,GAAC,MAAI,EAAC;gBAAG,IAAG;oBAAC,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB;gBAAC,EAAC,OAAM,GAAE;oBAAC,IAAI,CAAC,WAAW,CAAC,EAAE,OAAO;gBAAC;gBAAC,KAAG,MAAI,EAAE,MAAM,IAAE,IAAI,CAAC,WAAW;YAAE;QAAC,GAAE,IAAI,CAAC,YAAY,GAAC;YAAW,MAAI,EAAE,UAAU,IAAG,CAAA,EAAE,MAAM,GAAC,OAAK,OAAK,EAAE,MAAM,GAAC,IAAI,CAAC,WAAW,KAAI,CAAA,IAAI,CAAC,MAAM,IAAE,IAAI,CAAC,OAAO,CAAC,SAAS,IAAE,EAAE,YAAY,CAAC,MAAM,EAAC,IAAI,CAAC,SAAS,GAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,IAAE,IAAI,CAAC,MAAM,IAAE,AAAC,CAAA,CAAA,IAAG,SAAQ,CAAA,IAAE,EAAE,iBAAiB,CAAC,gBAAe,IAAG,SAAS,EAAE,SAAS,CAAC,EAAE,WAAW,CAAC,OAAK,MAAI,EAAC,EAAG,IAAG,IAAI,CAAC,UAAU,CAAC,EAAE,YAAY,CAAA,CAAC;QAAE,GAAE,IAAI,CAAC,WAAW,GAAC,SAAS,CAAC;YAAE,IAAE,EAAE,UAAU,IAAE;YAAE,IAAI,CAAC,UAAU,CAAC,IAAI,MAAM;QAAG;IAAC;IAAC,SAAS,EAAE,CAAC;QAAG,CAAA,IAAE,KAAG,CAAC,CAAA,EAAG,SAAS,IAAG,CAAA,EAAE,SAAS,GAAC,EAAE,cAAc,AAAD,GAAG,EAAE,IAAI,CAAC,IAAI,EAAC;QAAG,IAAI,GAAE,GAAE,IAAE,eAAa,OAAO;QAAW,IAAI,CAAC,MAAM,GAAC,SAAS,CAAC;YAAE,IAAI,CAAC,MAAM,GAAC,GAAE,IAAE,EAAE,KAAK,IAAE,EAAE,WAAW,IAAE,EAAE,QAAQ,EAAC,IAAG,CAAA,AAAC,CAAA,IAAE,IAAI,UAAS,EAAG,MAAM,GAAC,EAAE,IAAI,CAAC,YAAY,EAAC,IAAI,GAAE,EAAE,OAAO,GAAC,EAAE,IAAI,CAAC,WAAW,EAAC,IAAI,CAAA,IAAG,IAAE,IAAI,gBAAe,IAAI,CAAC,UAAU;QAAE,GAAE,IAAI,CAAC,UAAU,GAAC;YAAW,IAAI,CAAC,SAAS,IAAE,IAAI,CAAC,OAAO,CAAC,OAAO,IAAE,CAAE,CAAA,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,OAAO,CAAC,OAAO,AAAD,KAAI,IAAI,CAAC,UAAU;QAAE,GAAE,IAAI,CAAC,UAAU,GAAC;YAAW,IAAI,IAAE,IAAI,CAAC,MAAM,EAAC,IAAG,CAAA,IAAI,CAAC,OAAO,CAAC,SAAS,IAAG,CAAA,IAAE,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAC,IAAI,CAAC,MAAM,CAAC,IAAI,GAAE,IAAE,EAAE,IAAI,CAAC,GAAE,IAAI,CAAC,MAAM,EAAC,EAAC,GAAG,EAAE,UAAU,CAAC,GAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAA;YAAG,KAAG,IAAI,CAAC,YAAY,CAAC;gBAAC,QAAO;oBAAC,QAAO;gBAAC;YAAC;QAAE,GAAE,IAAI,CAAC,YAAY,GAAC,SAAS,CAAC;YAAE,IAAI,CAAC,MAAM,IAAE,IAAI,CAAC,OAAO,CAAC,SAAS,EAAC,IAAI,CAAC,SAAS,GAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,IAAE,IAAI,CAAC,MAAM,IAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAC,IAAI,CAAC,UAAU,CAAC,EAAE,MAAM,CAAC,MAAM;QAAC,GAAE,IAAI,CAAC,WAAW,GAAC;YAAW,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK;QAAC;IAAC;IAAC,SAAS,EAAE,CAAC;QAAE,IAAI;QAAE,EAAE,IAAI,CAAC,IAAI,EAAC,IAAE,KAAG,CAAC,IAAG,IAAI,CAAC,MAAM,GAAC,SAAS,CAAC;YAAE,OAAO,IAAE,GAAE,IAAI,CAAC,UAAU;QAAE,GAAE,IAAI,CAAC,UAAU,GAAC;YAAW,IAAI,GAAE;YAAE,IAAG,CAAC,IAAI,CAAC,SAAS,EAAC,OAAO,IAAE,IAAI,CAAC,OAAO,CAAC,SAAS,EAAC,IAAE,IAAG,CAAA,IAAE,EAAE,SAAS,CAAC,GAAE,IAAG,EAAE,SAAS,CAAC,EAAC,IAAI,CAAA,IAAE,GAAE,EAAC,GAAG,IAAI,CAAC,SAAS,GAAC,CAAC,GAAE,IAAI,CAAC,UAAU,CAAC;QAAE;IAAC;IAAC,SAAS,EAAE,CAAC;QAAE,EAAE,IAAI,CAAC,IAAI,EAAC,IAAE,KAAG,CAAC;QAAG,IAAI,IAAE,EAAE,EAAC,IAAE,CAAC,GAAE,IAAE,CAAC;QAAE,IAAI,CAAC,KAAK,GAAC;YAAW,EAAE,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAC,YAAW,IAAI,CAAC,MAAM,CAAC,KAAK;QAAE,GAAE,IAAI,CAAC,MAAM,GAAC;YAAW,EAAE,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAC,YAAW,IAAI,CAAC,MAAM,CAAC,MAAM;QAAE,GAAE,IAAI,CAAC,MAAM,GAAC,SAAS,CAAC;YAAE,IAAI,CAAC,MAAM,GAAC,GAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,QAAO,IAAI,CAAC,WAAW,GAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,OAAM,IAAI,CAAC,UAAU,GAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,SAAQ,IAAI,CAAC,YAAY;QAAC,GAAE,IAAI,CAAC,gBAAgB,GAAC;YAAW,KAAG,MAAI,EAAE,MAAM,IAAG,CAAA,IAAI,CAAC,SAAS,GAAC,CAAC,CAAA;QAAE,GAAE,IAAI,CAAC,UAAU,GAAC;YAAW,IAAI,CAAC,gBAAgB,IAAG,EAAE,MAAM,GAAC,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,MAAI,IAAE,CAAC;QAAC,GAAE,IAAI,CAAC,WAAW,GAAC,EAAE,SAAS,CAAC;YAAE,IAAG;gBAAC,EAAE,IAAI,CAAC,YAAU,OAAO,IAAE,IAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAG,KAAI,CAAA,IAAE,CAAC,GAAE,IAAI,CAAC,gBAAgB,IAAG,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,GAAE;YAAE,EAAC,OAAM,GAAE;gBAAC,IAAI,CAAC,YAAY,CAAC;YAAE;QAAC,GAAE,IAAI,GAAE,IAAI,CAAC,YAAY,GAAC,EAAE,SAAS,CAAC;YAAE,IAAI,CAAC,cAAc,IAAG,IAAI,CAAC,UAAU,CAAC;QAAE,GAAE,IAAI,GAAE,IAAI,CAAC,UAAU,GAAC,EAAE;YAAW,IAAI,CAAC,cAAc,IAAG,IAAE,CAAC,GAAE,IAAI,CAAC,WAAW,CAAC;QAAG,GAAE,IAAI,GAAE,IAAI,CAAC,cAAc,GAAC,EAAE;YAAW,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,QAAO,IAAI,CAAC,WAAW,GAAE,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,OAAM,IAAI,CAAC,UAAU,GAAE,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,SAAQ,IAAI,CAAC,YAAY;QAAC,GAAE,IAAI;IAAC;IAAC,SAAS,EAAE,CAAC;QAAE,IAAI,GAAE,GAAE,GAAE,GAAE,IAAE,KAAK,GAAG,CAAC,GAAE,KAAI,IAAE,CAAC,GAAE,IAAE,oDAAmD,IAAE,sNAAqN,IAAE,IAAI,EAAC,IAAE,GAAE,IAAE,GAAE,IAAE,CAAC,GAAE,IAAE,CAAC,GAAE,IAAE,EAAE,EAAC,IAAE;YAAC,MAAK,EAAE;YAAC,QAAO,EAAE;YAAC,MAAK,CAAC;QAAC;QAAE,SAAS,EAAE,CAAC;YAAE,OAAM,aAAW,EAAE,cAAc,GAAC,OAAK,EAAE,IAAI,CAAC,IAAI,IAAI,KAAG,MAAI,EAAE,MAAM,IAAE,MAAI,CAAC,CAAC,EAAE,CAAC,MAAM;QAAA;QAAC,SAAS;YAAI,IAAG,KAAG,KAAI,CAAA,EAAE,aAAY,yBAAwB,+DAA6D,EAAE,gBAAgB,GAAC,MAAK,IAAE,CAAC,CAAA,GAAG,EAAE,cAAc,IAAG,CAAA,EAAE,IAAI,GAAC,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;gBAAE,OAAM,CAAC,EAAE;YAAE,EAAC,GAAG,KAAI;gBAAC,IAAG;oBAAE,IAAG,MAAM,OAAO,CAAC,EAAE,IAAI,CAAC,EAAE,GAAE;wBAAC,IAAI,IAAI,IAAE,GAAE,OAAK,IAAE,EAAE,IAAI,CAAC,MAAM,EAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC;wBAAG,EAAE,IAAI,CAAC,MAAM,CAAC,GAAE;oBAAE,OAAM,EAAE,IAAI,CAAC,OAAO,CAAC;;gBAAG,SAAS,EAAE,CAAC,EAAC,CAAC;oBAAE,EAAE,EAAE,eAAe,KAAI,CAAA,IAAE,EAAE,eAAe,CAAC,GAAE,EAAC,GAAG,EAAE,IAAI,CAAC;gBAAE;YAAC;YAAC,SAAS,EAAE,CAAC,EAAC,CAAC;gBAAE,IAAI,IAAI,IAAE,EAAE,MAAM,GAAC,CAAC,IAAE,EAAE,EAAC,IAAE,GAAE,IAAE,EAAE,MAAM,EAAC,IAAI;oBAAC,IAAI,IAAE,GAAE,IAAE,CAAC,CAAC,EAAE,EAAC,IAAE,AAAC,CAAA,CAAC,GAAE,IAAI,AAAC,CAAA,CAAA,IAAI,CAAA,EAAE,qBAAqB,IAAE,KAAK,MAAI,EAAE,aAAa,CAAC,EAAE,IAAG,CAAA,EAAE,aAAa,CAAC,EAAE,GAAC,EAAE,qBAAqB,CAAC,EAAC,GAAG,CAAC,MAAK,CAAA,EAAE,aAAa,CAAC,EAAE,IAAE,EAAE,aAAa,AAAD,CAAC,CAAC,EAAG,KAAG,WAAS,KAAG,WAAS,KAAG,YAAU,KAAG,YAAU,KAAI,CAAA,AAAC,CAAA,CAAA;4BAAI,IAAG,EAAE,IAAI,CAAC,IAAG;gCAAC,IAAE,WAAW;gCAAG,IAAG,IAAE,KAAG,IAAE,GAAE,OAAO;4BAAC;wBAAC,CAAA,EAAG,KAAG,WAAW,KAAG,EAAE,IAAI,CAAC,KAAG,IAAI,KAAK,KAAG,OAAK,IAAE,OAAK,CAAA,IAAG,CAAA,EAAG,IAAE,EAAE,MAAM,GAAC,KAAG,EAAE,MAAM,GAAC,mBAAiB,CAAC,CAAC,EAAE,GAAC,GAAE,IAAE,EAAE,SAAS,GAAC,EAAE,SAAS,CAAC,GAAE,KAAG;oBAAG,qBAAmB,IAAG,CAAA,CAAC,CAAC,EAAE,GAAC,CAAC,CAAC,EAAE,IAAE,EAAE,EAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAC,IAAG,CAAC,CAAC,EAAE,GAAC;gBAAC;gBAAC,OAAO,EAAE,MAAM,IAAG,CAAA,IAAE,EAAE,MAAM,GAAC,EAAE,iBAAgB,iBAAgB,+BAA6B,EAAE,MAAM,GAAC,wBAAsB,GAAE,IAAE,KAAG,IAAE,EAAE,MAAM,IAAE,EAAE,iBAAgB,gBAAe,8BAA4B,EAAE,MAAM,GAAC,wBAAsB,GAAE,IAAE,EAAC,GAAG;YAAC;YAAC,IAAI;YAAE,KAAI,CAAA,EAAE,MAAM,IAAE,EAAE,aAAa,IAAE,EAAE,SAAS,AAAD,KAAK,CAAA,IAAE,GAAE,CAAC,EAAE,IAAI,CAAC,MAAM,IAAE,MAAM,OAAO,CAAC,EAAE,IAAI,CAAC,EAAE,IAAG,CAAA,EAAE,IAAI,GAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAG,IAAE,EAAE,IAAI,CAAC,MAAM,AAAD,IAAG,EAAE,IAAI,GAAC,EAAE,EAAE,IAAI,EAAC,IAAG,EAAE,MAAM,IAAE,EAAE,IAAI,IAAG,CAAA,EAAE,IAAI,CAAC,MAAM,GAAC,CAAA,GAAG,KAAG,CAAA;QAAE;QAAC,SAAS;YAAI,OAAO,EAAE,MAAM,IAAE,MAAI,EAAE,MAAM;QAAA;QAAC,SAAS,EAAE,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC;YAAE,IAAE;gBAAC,MAAK;gBAAE,MAAK;gBAAE,SAAQ;YAAC;YAAE,KAAK,MAAI,KAAI,CAAA,EAAE,GAAG,GAAC,CAAA,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC;QAAE;QAAC,EAAE,EAAE,IAAI,KAAI,CAAA,IAAE,EAAE,IAAI,EAAC,EAAE,IAAI,GAAC,SAAS,CAAC;YAAE,IAAE,GAAE,MAAI,MAAK,CAAA,KAAI,MAAI,EAAE,IAAI,CAAC,MAAM,IAAG,CAAA,KAAG,EAAE,IAAI,CAAC,MAAM,EAAC,EAAE,OAAO,IAAE,IAAE,EAAE,OAAO,GAAC,EAAE,KAAK,KAAI,CAAA,EAAE,IAAI,GAAC,EAAE,IAAI,CAAC,EAAE,EAAC,EAAE,GAAE,EAAC,CAAC,CAAC;QAAE,CAAA,GAAG,IAAI,CAAC,KAAK,GAAC,SAAS,CAAC,EAAC,CAAC,EAAC,CAAC;YAAE,IAAI,IAAE,EAAE,SAAS,IAAE,KAAI,IAAG,CAAA,EAAE,OAAO,IAAG,CAAA,EAAE,OAAO,GAAC,IAAI,CAAC,gBAAgB,CAAC,GAAE,EAAC,GAAG,IAAE,CAAC,GAAE,EAAE,SAAS,GAAC,EAAE,EAAE,SAAS,KAAI,CAAA,EAAE,SAAS,GAAC,EAAE,SAAS,CAAC,IAAG,EAAE,IAAI,CAAC,SAAS,GAAC,EAAE,SAAS,AAAD,IAAI,CAAA,AAAC,CAAA,IAAE,AAAC,CAAA,CAAC,GAAE,GAAE,GAAE,GAAE;gBAAK,IAAI,GAAE,GAAE,GAAE;gBAAE,IAAE,KAAG;oBAAC;oBAAI;oBAAK;oBAAI;oBAAI,EAAE,UAAU;oBAAC,EAAE,QAAQ;iBAAC;gBAAC,IAAI,IAAI,IAAE,GAAE,IAAE,EAAE,MAAM,EAAC,IAAI;oBAAC,IAAI,IAAI,GAAE,IAAE,CAAC,CAAC,EAAE,EAAC,IAAE,GAAE,IAAE,GAAE,IAAE,GAAE,IAAG,CAAA,IAAE,KAAK,GAAE,IAAI,EAAE;wBAAC,UAAS;wBAAE,WAAU;wBAAE,SAAQ;wBAAE,SAAQ;oBAAE,GAAG,KAAK,CAAC,EAAC,GAAG,IAAE,GAAE,IAAE,EAAE,IAAI,CAAC,MAAM,EAAC,IAAI,KAAG,EAAE,EAAE,IAAI,CAAC,EAAE,IAAE,MAAK,CAAA,IAAE,EAAE,IAAI,CAAC,EAAE,CAAC,MAAM,EAAC,KAAG,GAAE,KAAK,MAAI,IAAE,IAAE,IAAE,IAAE,KAAI,CAAA,KAAG,KAAK,GAAG,CAAC,IAAE,IAAG,IAAE,CAAA,CAAC;oBAAG,IAAE,EAAE,IAAI,CAAC,MAAM,IAAG,CAAA,KAAG,EAAE,IAAI,CAAC,MAAM,GAAC,CAAA,GAAG,AAAC,CAAA,KAAK,MAAI,KAAG,KAAG,CAAA,KAAK,CAAA,KAAK,MAAI,KAAG,IAAE,CAAA,KAAI,OAAK,KAAI,CAAA,IAAE,GAAE,IAAE,GAAE,IAAE,CAAA;gBAAE;gBAAC,OAAM;oBAAC,YAAW,CAAC,CAAE,CAAA,EAAE,SAAS,GAAC,CAAA;oBAAG,eAAc;gBAAC;YAAC,CAAA,EAAG,GAAE,EAAE,OAAO,EAAC,EAAE,cAAc,EAAC,EAAE,QAAQ,EAAC,EAAE,iBAAiB,CAAA,EAAG,UAAU,GAAC,EAAE,SAAS,GAAC,EAAE,aAAa,GAAE,CAAA,IAAE,CAAC,GAAE,EAAE,SAAS,GAAC,EAAE,gBAAgB,AAAD,GAAG,EAAE,IAAI,CAAC,SAAS,GAAC,EAAE,SAAS,AAAD,GAAG,EAAE,EAAC;YAAG,OAAO,EAAE,OAAO,IAAE,EAAE,MAAM,IAAE,EAAE,OAAO,IAAG,IAAE,GAAE,IAAE,IAAI,EAAE,IAAG,IAAE,EAAE,KAAK,CAAC,GAAE,GAAE,IAAG,KAAI,IAAE;gBAAC,MAAK;oBAAC,QAAO,CAAC;gBAAC;YAAC,IAAE,KAAG;gBAAC,MAAK;oBAAC,QAAO,CAAC;gBAAC;YAAC;QAAC,GAAE,IAAI,CAAC,MAAM,GAAC;YAAW,OAAO;QAAC,GAAE,IAAI,CAAC,KAAK,GAAC;YAAW,IAAE,CAAC,GAAE,EAAE,KAAK,IAAG,IAAE,EAAE,EAAE,KAAK,IAAE,KAAG,EAAE,SAAS,CAAC,EAAE,YAAY;QAAG,GAAE,IAAI,CAAC,MAAM,GAAC;YAAW,EAAE,QAAQ,CAAC,OAAO,GAAE,CAAA,IAAE,CAAC,GAAE,EAAE,QAAQ,CAAC,UAAU,CAAC,GAAE,CAAC,EAAC,IAAG,WAAW,EAAE,MAAM,EAAC;QAAE,GAAE,IAAI,CAAC,OAAO,GAAC;YAAW,OAAO;QAAC,GAAE,IAAI,CAAC,KAAK,GAAC;YAAW,IAAE,CAAC,GAAE,EAAE,KAAK,IAAG,EAAE,IAAI,CAAC,OAAO,GAAC,CAAC,GAAE,EAAE,EAAE,QAAQ,KAAG,EAAE,QAAQ,CAAC,IAAG,IAAE;QAAE,GAAE,IAAI,CAAC,gBAAgB,GAAC,SAAS,CAAC,EAAC,CAAC;YAAE,IAAE,EAAE,SAAS,CAAC,GAAE;YAAS,IAAI,IAAE,IAAI,OAAO,EAAE,KAAG,YAAU,EAAE,IAAG,OAAM,IAAE,AAAC,CAAA,IAAE,EAAE,OAAO,CAAC,GAAE,GAAE,EAAG,KAAK,CAAC,OAAM,IAAE,EAAE,KAAK,CAAC,OAAM,IAAE,IAAE,EAAE,MAAM,IAAE,CAAC,CAAC,EAAE,CAAC,MAAM,GAAC,CAAC,CAAC,EAAE,CAAC,MAAM;YAAC,IAAG,MAAI,EAAE,MAAM,IAAE,GAAE,OAAM;YAAK,IAAI,IAAI,IAAE,GAAE,IAAE,GAAE,IAAE,EAAE,MAAM,EAAC,IAAI,SAAO,CAAC,CAAC,EAAE,CAAC,EAAE,IAAE;YAAI,OAAO,KAAG,EAAE,MAAM,GAAC,IAAE,SAAO;QAAI;IAAC;IAAC,SAAS,EAAE,CAAC;QAAE,OAAO,EAAE,OAAO,CAAC,uBAAsB;IAAO;IAAC,SAAS,EAAE,CAAC;QAAE,IAAI,IAAE,AAAC,CAAA,IAAE,KAAG,CAAC,CAAA,EAAG,SAAS,EAAC,IAAE,EAAE,OAAO,EAAC,IAAE,EAAE,QAAQ,EAAC,IAAE,EAAE,IAAI,EAAC,IAAE,EAAE,OAAO,EAAC,IAAE,EAAE,QAAQ,EAAC,IAAE,MAAK,IAAE,CAAC,GAAE,IAAE,QAAM,EAAE,SAAS,GAAC,MAAI,EAAE,SAAS,EAAC,IAAE;QAAE,IAAG,KAAK,MAAI,EAAE,UAAU,IAAG,CAAA,IAAE,EAAE,UAAU,AAAD,GAAG,AAAC,CAAA,YAAU,OAAO,KAAG,KAAG,EAAE,cAAc,CAAC,OAAO,CAAC,EAAC,KAAK,CAAA,IAAE,GAAE,GAAG,MAAI,GAAE,MAAM,IAAI,MAAM;QAAuC,CAAC,MAAI,IAAE,IAAE,MAAI,AAAC,CAAA,YAAU,OAAO,KAAG,KAAG,EAAE,cAAc,CAAC,OAAO,CAAC,EAAC,KAAK,CAAA,IAAE,CAAC,CAAA,GAAG,SAAO,KAAG,SAAO,KAAG,WAAS,KAAI,CAAA,IAAE,IAAG;QAAG,IAAI,IAAE,GAAE,IAAE,CAAC;QAAE,IAAI,CAAC,KAAK,GAAC,SAAS,CAAC,EAAC,CAAC,EAAC,CAAC;YAAE,IAAG,YAAU,OAAO,GAAE,MAAM,IAAI,MAAM;YAA0B,IAAI,IAAE,EAAE,MAAM,EAAC,IAAE,EAAE,MAAM,EAAC,IAAE,EAAE,MAAM,EAAC,IAAE,EAAE,MAAM,EAAC,IAAE,EAAE,IAAG,IAAE,EAAE,EAAC,IAAE,EAAE,EAAC,IAAE,EAAE,EAAC,IAAE,IAAE;YAAE,IAAG,CAAC,GAAE,OAAO;YAAI,IAAG,KAAG,CAAC,MAAI,KAAG,OAAK,EAAE,OAAO,CAAC,IAAG;gBAAC,IAAI,IAAI,IAAE,EAAE,KAAK,CAAC,IAAG,IAAE,GAAE,IAAE,EAAE,MAAM,EAAC,IAAI;oBAAC,IAAG,IAAE,CAAC,CAAC,EAAE,EAAC,KAAG,EAAE,MAAM,EAAC,MAAI,EAAE,MAAM,GAAC,GAAE,KAAG,EAAE,MAAM;yBAAM,IAAG,GAAE,OAAO;oBAAI,IAAG,CAAC,KAAG,EAAE,SAAS,CAAC,GAAE,OAAK,GAAE;wBAAC,IAAG,GAAE;4BAAC,IAAG,IAAE,EAAE,EAAC,EAAE,EAAE,KAAK,CAAC,KAAI,KAAI,GAAE,OAAO;wBAAG,OAAM,EAAE,EAAE,KAAK,CAAC;wBAAI,IAAG,KAAG,KAAG,GAAE,OAAO,IAAE,EAAE,KAAK,CAAC,GAAE,IAAG,EAAE,CAAC;oBAAE;gBAAC;gBAAC,OAAO;YAAG;YAAC,IAAI,IAAI,IAAE,EAAE,OAAO,CAAC,GAAE,IAAG,IAAE,EAAE,OAAO,CAAC,GAAE,IAAG,IAAE,IAAI,OAAO,EAAE,KAAG,EAAE,IAAG,MAAK,IAAE,EAAE,OAAO,CAAC,GAAE,KAAK,IAAG,CAAC,CAAC,EAAE,KAAG,GAAE,IAAI,IAAE,GAAE,MAAM;gBAAC,IAAG,OAAM,CAAA,IAAE,EAAE,OAAO,CAAC,GAAE,IAAE,EAAC,GAAG,OAAO,KAAG,EAAE,IAAI,CAAC;oBAAC,MAAK;oBAAS,MAAK;oBAAgB,SAAQ;oBAA4B,KAAI,EAAE,MAAM;oBAAC,OAAM;gBAAC,IAAG;gBAAI,IAAG,MAAI,IAAE,GAAE,OAAO,EAAE,EAAE,SAAS,CAAC,GAAE,GAAG,OAAO,CAAC,GAAE;gBAAI,IAAG,MAAI,KAAG,CAAC,CAAC,IAAE,EAAE,KAAG,GAAE;qBAAS,IAAG,MAAI,KAAG,MAAI,KAAG,CAAC,CAAC,IAAE,EAAE,KAAG,GAAE;oBAAC,OAAK,KAAG,IAAE,IAAE,KAAI,CAAA,IAAE,EAAE,OAAO,CAAC,GAAE,IAAE,EAAC;oBAAG,IAAI,IAAE,EAAE,OAAM,CAAA,IAAE,OAAK,KAAG,IAAE,IAAE,IAAE,EAAE,OAAO,CAAC,GAAE,IAAE,KAAG,CAAA,IAAG,IAAE,KAAK,GAAG,CAAC,GAAE;oBAAI,IAAG,EAAE,MAAM,CAAC,IAAE,IAAE,GAAE,OAAK,GAAE;wBAAC,EAAE,IAAI,CAAC,EAAE,SAAS,CAAC,GAAE,GAAG,OAAO,CAAC,GAAE,KAAI,CAAC,CAAC,IAAE,IAAE,IAAE,IAAE,EAAE,KAAG,KAAI,CAAA,IAAE,EAAE,OAAO,CAAC,GAAE,EAAC,GAAG,IAAE,EAAE,OAAO,CAAC,GAAE,IAAG,IAAE,EAAE,OAAO,CAAC,GAAE;wBAAG;oBAAK;oBAAC,IAAE,EAAE;oBAAG,IAAG,EAAE,SAAS,CAAC,IAAE,IAAE,GAAE,IAAE,IAAE,IAAE,OAAK,GAAE;wBAAC,IAAG,EAAE,IAAI,CAAC,EAAE,SAAS,CAAC,GAAE,GAAG,OAAO,CAAC,GAAE,KAAI,EAAE,IAAE,IAAE,IAAE,IAAG,IAAE,EAAE,OAAO,CAAC,GAAE,IAAG,IAAE,EAAE,OAAO,CAAC,GAAE,IAAG,KAAI,CAAA,KAAI,CAAA,GAAG,OAAO;wBAAI,IAAG,KAAG,EAAE,MAAM,IAAE,GAAE,OAAO,EAAE,CAAC;wBAAG;oBAAK;oBAAC,EAAE,IAAI,CAAC;wBAAC,MAAK;wBAAS,MAAK;wBAAgB,SAAQ;wBAA8C,KAAI,EAAE,MAAM;wBAAC,OAAM;oBAAC,IAAG;gBAAG;YAAC;iBAAM,IAAG,KAAG,MAAI,EAAE,MAAM,IAAE,EAAE,SAAS,CAAC,GAAE,IAAE,OAAK,GAAE;gBAAC,IAAG,OAAK,GAAE,OAAO;gBAAI,IAAE,IAAE,GAAE,IAAE,EAAE,OAAO,CAAC,GAAE,IAAG,IAAE,EAAE,OAAO,CAAC,GAAE;YAAE,OAAM,IAAG,OAAK,KAAI,CAAA,IAAE,KAAG,OAAK,CAAA,GAAG,EAAE,IAAI,CAAC,EAAE,SAAS,CAAC,GAAE,KAAI,IAAE,IAAE,GAAE,IAAE,EAAE,OAAO,CAAC,GAAE;iBAAO;gBAAC,IAAG,OAAK,GAAE;gBAAM,IAAG,EAAE,IAAI,CAAC,EAAE,SAAS,CAAC,GAAE,KAAI,EAAE,IAAE,IAAG,KAAI,CAAA,KAAI,CAAA,GAAG,OAAO;gBAAI,IAAG,KAAG,EAAE,MAAM,IAAE,GAAE,OAAO,EAAE,CAAC;YAAE;YAAC,OAAO;YAAI,SAAS,EAAE,CAAC;gBAAE,EAAE,IAAI,CAAC,IAAG,IAAE;YAAC;YAAC,SAAS,EAAE,CAAC;gBAAE,IAAI,IAAE;gBAAE,OAAO,IAAE,OAAK,KAAI,CAAA,IAAE,EAAE,SAAS,CAAC,IAAE,GAAE,EAAC,KAAI,OAAK,EAAE,IAAI,KAAG,EAAE,MAAM,GAAC;YAAC;YAAC,SAAS,EAAE,CAAC;gBAAE,OAAO,KAAI,CAAA,KAAK,MAAI,KAAI,CAAA,IAAE,EAAE,SAAS,CAAC,EAAC,GAAG,EAAE,IAAI,CAAC,IAAG,IAAE,GAAE,EAAE,IAAG,KAAG,GAAE,GAAG;YAAG;YAAC,SAAS,EAAE,CAAC;gBAAE,IAAE,GAAE,EAAE,IAAG,IAAE,EAAE,EAAC,IAAE,EAAE,OAAO,CAAC,GAAE;YAAE;YAAC,SAAS,EAAE,CAAC;gBAAE,IAAG,EAAE,MAAM,IAAE,CAAC,KAAG,EAAE,MAAM,IAAE,CAAC,GAAE;oBAAC,IAAI,IAAE,CAAC,CAAC,EAAE,EAAC,IAAE,OAAO,MAAM,CAAC,OAAM,IAAE,IAAI,IAAI;oBAAG,IAAI,IAAE,CAAC;oBAAE,IAAI,IAAI,IAAE,GAAE,IAAE,EAAE,MAAM,EAAC,IAAI;wBAAC,IAAI,IAAE,CAAC,CAAC,EAAE;wBAAC,IAAG,CAAC,CAAC,IAAE,EAAE,EAAE,eAAe,IAAE,EAAE,eAAe,CAAC,GAAE,KAAG,EAAE,EAAC;4BAAC,IAAI,GAAE,IAAE,CAAC,CAAC,EAAE;4BAAC,MAAK,IAAE,IAAE,MAAI,GAAE,KAAI,EAAE,GAAG,CAAC;4BAAK,EAAE,GAAG,CAAC,IAAG,CAAC,CAAC,EAAE,GAAC,GAAE,CAAC,CAAC,EAAE,IAAG,IAAE,CAAC,GAAE,AAAC,CAAA,IAAE,SAAO,IAAE,CAAC,IAAE,CAAA,CAAE,CAAC,EAAE,GAAC;wBAAC,OAAM,CAAC,CAAC,EAAE,GAAC,GAAE,CAAC,CAAC,EAAE,GAAC;wBAAE,EAAE,GAAG,CAAC;oBAAE;oBAAC,KAAG,QAAQ,IAAI,CAAC,yCAAwC,IAAE,CAAC;gBAAC;gBAAC,OAAM;oBAAC,MAAK;oBAAE,QAAO;oBAAE,MAAK;wBAAC,WAAU;wBAAE,WAAU;wBAAE,SAAQ;wBAAE,WAAU,CAAC,CAAC;wBAAE,QAAO,IAAG,CAAA,KAAG,CAAA;wBAAG,gBAAe;oBAAC;gBAAC;YAAC;YAAC,SAAS;gBAAI,EAAE,MAAK,IAAE,EAAE,EAAC,IAAE,EAAE;YAAA;QAAC,GAAE,IAAI,CAAC,KAAK,GAAC;YAAW,IAAE,CAAC;QAAC,GAAE,IAAI,CAAC,YAAY,GAAC;YAAW,OAAO;QAAC;IAAC;IAAC,SAAS,EAAE,CAAC;QAAE,IAAI,IAAE,EAAE,IAAI,EAAC,IAAE,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAC,IAAE,CAAC;QAAE,IAAG,EAAE,KAAK,EAAC,EAAE,SAAS,CAAC,EAAE,KAAK,EAAC,EAAE,IAAI;aAAO,IAAG,EAAE,OAAO,IAAE,EAAE,OAAO,CAAC,IAAI,EAAC;YAAC,IAAI,IAAE;gBAAC,OAAM;oBAAW,IAAE,CAAC,GAAE,EAAE,EAAE,QAAQ,EAAC;wBAAC,MAAK,EAAE;wBAAC,QAAO,EAAE;wBAAC,MAAK;4BAAC,SAAQ,CAAC;wBAAC;oBAAC;gBAAE;gBAAE,OAAM;gBAAE,QAAO;YAAC;YAAE,IAAG,EAAE,EAAE,QAAQ,GAAE;gBAAC,IAAI,IAAI,IAAE,GAAE,IAAE,EAAE,OAAO,CAAC,IAAI,CAAC,MAAM,IAAG,CAAA,EAAE,QAAQ,CAAC;oBAAC,MAAK,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE;oBAAC,QAAO,EAAE,OAAO,CAAC,MAAM;oBAAC,MAAK,EAAE,OAAO,CAAC,IAAI;gBAAA,GAAE,IAAG,CAAC,CAAA,GAAG;gBAAK,OAAO,EAAE,OAAO;YAAA,OAAM,EAAE,EAAE,SAAS,KAAI,CAAA,EAAE,SAAS,CAAC,EAAE,OAAO,EAAC,GAAE,EAAE,IAAI,GAAE,OAAO,EAAE,OAAO,AAAD;QAAE;QAAC,EAAE,QAAQ,IAAE,CAAC,KAAG,EAAE,EAAE,QAAQ,EAAC,EAAE,OAAO;IAAC;IAAC,SAAS,EAAE,CAAC,EAAC,CAAC;QAAE,IAAI,IAAE,CAAC,CAAC,EAAE;QAAC,EAAE,EAAE,YAAY,KAAG,EAAE,YAAY,CAAC,IAAG,EAAE,SAAS,IAAG,OAAO,CAAC,CAAC,EAAE;IAAA;IAAC,SAAS;QAAI,MAAM,IAAI,MAAM;IAAmB;IAAC,SAAS,EAAE,CAAC;QAAE,IAAG,YAAU,OAAO,KAAG,SAAO,GAAE,OAAO;QAAE,IAAI,GAAE,IAAE,MAAM,OAAO,CAAC,KAAG,EAAE,GAAC,CAAC;QAAE,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,GAAC,EAAE,CAAC,CAAC,EAAE;QAAE,OAAO;IAAC;IAAC,SAAS,EAAE,CAAC,EAAC,CAAC;QAAE,OAAO;YAAW,EAAE,KAAK,CAAC,GAAE;QAAU;IAAC;IAAC,SAAS,EAAE,CAAC;QAAE,OAAM,cAAY,OAAO;IAAC;IAAC,OAAO,EAAE,KAAK,GAAC,SAAS,CAAC,EAAC,CAAC;QAAE,IAAI,IAAE,AAAC,CAAA,IAAE,KAAG,CAAC,CAAA,EAAG,aAAa,IAAE,CAAC;QAAE,EAAE,MAAK,CAAA,EAAE,qBAAqB,GAAC,GAAE,IAAE,CAAC,CAAA;QAAG,IAAG,EAAE,aAAa,GAAC,GAAE,EAAE,SAAS,GAAC,CAAC,CAAC,EAAE,EAAE,SAAS,KAAG,EAAE,SAAS,EAAC,CAAC,EAAE,MAAM,IAAE,CAAC,EAAE,iBAAiB,EAAC,OAAO,IAAE,MAAK,EAAE,iBAAiB,EAAC,YAAU,OAAO,IAAG,CAAA,IAAE,AAAC,CAAA,CAAA,IAAG,UAAQ,EAAE,UAAU,CAAC,KAAG,IAAE,EAAE,KAAK,CAAC,EAAC,EAAG,IAAG,IAAE,IAAI,CAAA,EAAE,QAAQ,GAAC,IAAE,CAAA,EAAG,EAAC,IAAG,CAAC,MAAI,EAAE,QAAQ,IAAE,EAAE,EAAE,IAAI,KAAG,EAAE,EAAE,EAAE,IAAE,IAAE,IAAI,EAAE,KAAG,AAAC,CAAA,EAAE,IAAI,IAAE,aAAa,QAAM,aAAa,MAAK,KAAK,CAAA,IAAE,IAAI,EAAE,EAAC,GAAG,EAAE,MAAM,CAAC;QAAI,CAAA,IAAE,AAAC,CAAA;YAAK,IAAI;YAAE,OAAM,CAAC,CAAC,EAAE,iBAAiB,IAAG,CAAA,IAAE,AAAC,CAAA;gBAAK,IAAI,IAAE,EAAE,GAAG,IAAE,EAAE,SAAS,IAAE,MAAK,IAAE,EAAE,QAAQ;gBAAG,OAAO,EAAE,QAAQ,IAAG,CAAA,EAAE,QAAQ,GAAC,EAAE,eAAe,CAAC,IAAI,KAAK;oBAAC;oBAAyO;oBAAI;oBAAE;iBAAO,EAAC;oBAAC,MAAK;gBAAiB,GAAE;YAAE,CAAA,KAAK,AAAC,CAAA,IAAE,IAAI,EAAE,MAAM,CAAC,EAAC,EAAG,SAAS,GAAC,GAAE,EAAE,EAAE,GAAC,KAAI,CAAC,CAAC,EAAE,EAAE,CAAC,GAAC,CAAA;QAAE,CAAA,GAAG,EAAG,QAAQ,GAAC,EAAE,IAAI,EAAC,EAAE,SAAS,GAAC,EAAE,KAAK,EAAC,EAAE,YAAY,GAAC,EAAE,QAAQ,EAAC,EAAE,SAAS,GAAC,EAAE,KAAK,EAAC,EAAE,IAAI,GAAC,EAAE,EAAE,IAAI,GAAE,EAAE,KAAK,GAAC,EAAE,EAAE,KAAK,GAAE,EAAE,QAAQ,GAAC,EAAE,EAAE,QAAQ,GAAE,EAAE,KAAK,GAAC,EAAE,EAAE,KAAK,GAAE,OAAO,EAAE,MAAM,EAAC,EAAE,WAAW,CAAC;YAAC,OAAM;YAAE,QAAO;YAAE,UAAS,EAAE,EAAE;QAAA;IAAE,GAAE,EAAE,OAAO,GAAC,SAAS,CAAC,EAAC,CAAC;QAAE,IAAI,IAAE,CAAC,GAAE,IAAE,CAAC,GAAE,IAAE,KAAI,IAAE,QAAO,IAAE,KAAI,IAAE,IAAE,GAAE,IAAE,CAAC,GAAE,IAAE,MAAK,IAAE,CAAC,GAAE,IAAG,CAAA,AAAC,CAAA;YAAK,IAAG,YAAU,OAAO,GAAE;gBAAC,IAAG,YAAU,OAAO,EAAE,SAAS,IAAE,EAAE,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC;oBAAE,OAAM,OAAK,EAAE,SAAS,CAAC,OAAO,CAAC;gBAAE,GAAG,MAAM,IAAG,CAAA,IAAE,EAAE,SAAS,AAAD,GAAG,aAAW,OAAO,EAAE,MAAM,IAAE,cAAY,OAAO,EAAE,MAAM,IAAE,CAAC,MAAM,OAAO,CAAC,EAAE,MAAM,KAAI,CAAA,IAAE,EAAE,MAAM,AAAD,GAAG,aAAW,OAAO,EAAE,cAAc,IAAE,YAAU,OAAO,EAAE,cAAc,IAAG,CAAA,IAAE,EAAE,cAAc,AAAD,GAAG,YAAU,OAAO,EAAE,OAAO,IAAG,CAAA,IAAE,EAAE,OAAO,AAAD,GAAG,YAAU,OAAO,EAAE,SAAS,IAAG,CAAA,IAAE,EAAE,SAAS,AAAD,GAAG,aAAW,OAAO,EAAE,MAAM,IAAG,CAAA,IAAE,EAAE,MAAM,AAAD,GAAG,MAAM,OAAO,CAAC,EAAE,OAAO,GAAE;oBAAC,IAAG,MAAI,EAAE,OAAO,CAAC,MAAM,EAAC,MAAM,IAAI,MAAM;oBAA2B,IAAE,EAAE,OAAO;gBAAA;gBAAC,KAAK,MAAI,EAAE,UAAU,IAAG,CAAA,IAAE,EAAE,UAAU,GAAC,CAAA,GAAG,EAAE,cAAc,YAAY,SAAO,IAAE,EAAE,cAAc,GAAC,aAAW,OAAO,EAAE,cAAc,IAAE,EAAE,cAAc,IAAG,CAAA,IAAE,iBAAgB;YAAE;QAAC,CAAA,KAAK,IAAI,OAAO,EAAE,IAAG,IAAG;QAAG,YAAU,OAAO,KAAI,CAAA,IAAE,KAAK,KAAK,CAAC,EAAC;QAAG,IAAG,MAAM,OAAO,CAAC,IAAG;YAAC,IAAG,CAAC,EAAE,MAAM,IAAE,MAAM,OAAO,CAAC,CAAC,CAAC,EAAE,GAAE,OAAO,EAAE,MAAK,GAAE;YAAG,IAAG,YAAU,OAAO,CAAC,CAAC,EAAE,EAAC,OAAO,EAAE,KAAG,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,GAAE,GAAE;QAAE,OAAM,IAAG,YAAU,OAAO,GAAE,OAAM,YAAU,OAAO,EAAE,IAAI,IAAG,CAAA,EAAE,IAAI,GAAC,KAAK,KAAK,CAAC,EAAE,IAAI,CAAA,GAAG,MAAM,OAAO,CAAC,EAAE,IAAI,KAAI,CAAA,EAAE,MAAM,IAAG,CAAA,EAAE,MAAM,GAAC,EAAE,IAAI,IAAE,EAAE,IAAI,CAAC,MAAM,IAAE,CAAA,GAAG,EAAE,MAAM,IAAG,CAAA,EAAE,MAAM,GAAC,MAAM,OAAO,CAAC,EAAE,IAAI,CAAC,EAAE,IAAE,EAAE,MAAM,GAAC,YAAU,OAAO,EAAE,IAAI,CAAC,EAAE,GAAC,OAAO,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,IAAE,EAAE,AAAD,GAAG,MAAM,OAAO,CAAC,EAAE,IAAI,CAAC,EAAE,KAAG,YAAU,OAAO,EAAE,IAAI,CAAC,EAAE,IAAG,CAAA,EAAE,IAAI,GAAC;YAAC,EAAE,IAAI;SAAC,AAAD,CAAC,GAAG,EAAE,EAAE,MAAM,IAAE,EAAE,EAAC,EAAE,IAAI,IAAE,EAAE,EAAC;QAAG,MAAM,IAAI,MAAM;QAA0C,SAAS,EAAE,CAAC,EAAC,CAAC,EAAC,CAAC;YAAE,IAAI,IAAE,IAAG,IAAG,CAAA,YAAU,OAAO,KAAI,CAAA,IAAE,KAAK,KAAK,CAAC,EAAC,GAAG,YAAU,OAAO,KAAI,CAAA,IAAE,KAAK,KAAK,CAAC,EAAC,GAAG,MAAM,OAAO,CAAC,MAAI,IAAE,EAAE,MAAM,AAAD,GAAG,IAAE,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,EAAE;YAAE,IAAG,KAAG,GAAE;gBAAC,IAAI,IAAI,IAAE,GAAE,IAAE,EAAE,MAAM,EAAC,IAAI,IAAE,KAAI,CAAA,KAAG,CAAA,GAAG,KAAG,EAAE,CAAC,CAAC,EAAE,EAAC;gBAAG,IAAE,EAAE,MAAM,IAAG,CAAA,KAAG,CAAA;YAAE;YAAC,IAAI,IAAI,IAAE,GAAE,IAAE,EAAE,MAAM,EAAC,IAAI;gBAAC,IAAI,IAAE,AAAC,CAAA,IAAE,IAAE,CAAC,CAAC,EAAE,AAAD,EAAG,MAAM,EAAC,IAAE,CAAC,GAAE,IAAE,IAAE,MAAI,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,MAAM,GAAC,MAAI,CAAC,CAAC,EAAE,CAAC,MAAM;gBAAC,IAAG,KAAG,CAAC,KAAI,CAAA,IAAE,aAAW,IAAE,OAAK,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,IAAI,KAAG,MAAI,CAAC,CAAC,EAAE,CAAC,MAAM,IAAE,MAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,AAAD,GAAG,aAAW,KAAG,GAAE;oBAAC,IAAI,IAAI,IAAE,EAAE,EAAC,IAAE,GAAE,IAAE,GAAE,IAAI;wBAAC,IAAI,IAAE,IAAE,CAAC,CAAC,EAAE,GAAC;wBAAE,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;oBAAC;oBAAC,IAAE,OAAK,EAAE,IAAI,CAAC,IAAI,IAAI;gBAAE;gBAAC,IAAG,CAAC,GAAE;oBAAC,IAAI,IAAI,IAAE,GAAE,IAAE,GAAE,IAAI;wBAAC,IAAE,KAAG,CAAC,KAAI,CAAA,KAAG,CAAA;wBAAG,IAAI,IAAE,KAAG,IAAE,CAAC,CAAC,EAAE,GAAC;wBAAE,KAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAC;oBAAE;oBAAC,IAAE,EAAE,MAAM,GAAC,KAAI,CAAA,CAAC,KAAG,IAAE,KAAG,CAAC,CAAA,KAAK,CAAA,KAAG,CAAA;gBAAE;YAAC;YAAC,OAAO;QAAC;QAAC,SAAS,EAAE,CAAC,EAAC,CAAC;YAAE,IAAI,GAAE;YAAE,OAAO,QAAM,IAAE,KAAG,EAAE,WAAW,KAAG,OAAK,KAAK,SAAS,CAAC,GAAG,KAAK,CAAC,GAAE,MAAK,CAAA,IAAE,CAAC,GAAE,KAAG,YAAU,OAAO,KAAG,EAAE,IAAI,CAAC,MAAK,CAAA,IAAE,MAAI,GAAE,IAAE,CAAC,CAAA,GAAG,IAAE,EAAE,QAAQ,GAAG,OAAO,CAAC,GAAE,IAAG,AAAC,CAAA,IAAE,KAAG,CAAC,MAAI,KAAG,cAAY,OAAO,KAAG,EAAE,GAAE,MAAI,MAAM,OAAO,CAAC,MAAI,CAAC,CAAC,EAAE,IAAE,AAAC,CAAA,CAAC,GAAE;gBAAK,IAAI,IAAI,IAAE,GAAE,IAAE,EAAE,MAAM,EAAC,IAAI,IAAG,KAAG,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,GAAE,OAAM,CAAC;gBAAE,OAAM,CAAC;YAAC,CAAA,EAAG,GAAE,EAAE,cAAc,KAAG,KAAG,EAAE,OAAO,CAAC,MAAI,QAAM,EAAE,MAAM,CAAC,MAAI,QAAM,EAAE,MAAM,CAAC,EAAE,MAAM,GAAC,EAAC,IAAG,IAAE,IAAE,IAAE,CAAA;QAAE;IAAC,GAAE,EAAE,UAAU,GAAC,OAAO,YAAY,CAAC,KAAI,EAAE,QAAQ,GAAC,OAAO,YAAY,CAAC,KAAI,EAAE,eAAe,GAAC,UAAS,EAAE,cAAc,GAAC;QAAC;QAAK;QAAK;QAAI,EAAE,eAAe;KAAC,EAAC,EAAE,iBAAiB,GAAC,CAAC,KAAG,CAAC,CAAC,EAAE,MAAM,EAAC,EAAE,iBAAiB,GAAC,GAAE,EAAE,cAAc,GAAC,UAAS,EAAE,eAAe,GAAC,SAAQ,EAAE,gBAAgB,GAAC,KAAI,EAAE,MAAM,GAAC,GAAE,EAAE,YAAY,GAAC,GAAE,EAAE,eAAe,GAAC,GAAE,EAAE,YAAY,GAAC,GAAE,EAAE,cAAc,GAAC,GAAE,EAAE,sBAAsB,GAAC,GAAE,EAAE,MAAM,IAAG,CAAA,AAAC,CAAA,IAAE,EAAE,MAAM,AAAD,EAAG,EAAE,CAAC,KAAK,GAAC,SAAS,CAAC;QAAE,IAAI,IAAE,EAAE,MAAM,IAAE,CAAC,GAAE,IAAE,EAAE;QAAC,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YAAE,IAAG,CAAE,CAAA,YAAU,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,WAAW,MAAI,WAAS,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,WAAW,MAAI,EAAE,UAAU,AAAD,KAAI,CAAC,IAAI,CAAC,KAAK,IAAE,MAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAC,OAAM,CAAC;YAAE,IAAI,IAAI,IAAE,GAAE,IAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAC,IAAI,EAAE,IAAI,CAAC;gBAAC,MAAK,IAAI,CAAC,KAAK,CAAC,EAAE;gBAAC,WAAU,IAAI;gBAAC,gBAAe,EAAE,MAAM,CAAC,CAAC,GAAE;YAAE;QAAE,IAAG,KAAI,IAAI;QAAC,SAAS;YAAI,IAAG,MAAI,EAAE,MAAM,EAAC,EAAE,EAAE,QAAQ,KAAG,EAAE,QAAQ;iBAAO;gBAAC,IAAI,GAAE,GAAE,GAAE,GAAE,IAAE,CAAC,CAAC,EAAE;gBAAC,IAAG,EAAE,EAAE,MAAM,GAAE;oBAAC,IAAI,IAAE,EAAE,MAAM,CAAC,EAAE,IAAI,EAAC,EAAE,SAAS;oBAAE,IAAG,YAAU,OAAO,GAAE;wBAAC,IAAG,YAAU,EAAE,MAAM,EAAC,OAAO,IAAE,cAAa,IAAE,EAAE,IAAI,EAAC,IAAE,EAAE,SAAS,EAAC,IAAE,EAAE,MAAM,EAAC,KAAK,CAAA,EAAE,EAAE,KAAK,KAAG,EAAE,KAAK,CAAC;4BAAC,MAAK;wBAAC,GAAE,GAAE,GAAE,EAAC;wBAAG,IAAG,WAAS,EAAE,MAAM,EAAC,OAAO,KAAK;wBAAI,YAAU,OAAO,EAAE,MAAM,IAAG,CAAA,EAAE,cAAc,GAAC,EAAE,MAAM,CAAC,EAAE,cAAc,EAAC,EAAE,MAAM,CAAA;oBAAE,OAAM,IAAG,WAAS,GAAE,OAAO,KAAK;gBAAG;gBAAC,IAAI,IAAE,EAAE,cAAc,CAAC,QAAQ;gBAAC,EAAE,cAAc,CAAC,QAAQ,GAAC,SAAS,CAAC;oBAAE,EAAE,MAAI,EAAE,GAAE,EAAE,IAAI,EAAC,EAAE,SAAS,GAAE;gBAAG,GAAE,EAAE,KAAK,CAAC,EAAE,IAAI,EAAC,EAAE,cAAc;YAAC;QAAC;QAAC,SAAS;YAAI,EAAE,MAAM,CAAC,GAAE,IAAG;QAAG;IAAC,CAAA,GAAG,KAAI,CAAA,EAAE,SAAS,GAAC,SAAS,CAAC;QAAE,IAAE,EAAE,IAAI;QAAC,KAAK,MAAI,EAAE,SAAS,IAAE,KAAI,CAAA,EAAE,SAAS,GAAC,EAAE,QAAQ,AAAD;QAAG,YAAU,OAAO,EAAE,KAAK,GAAC,EAAE,WAAW,CAAC;YAAC,UAAS,EAAE,SAAS;YAAC,SAAQ,EAAE,KAAK,CAAC,EAAE,KAAK,EAAC,EAAE,MAAM;YAAE,UAAS,CAAC;QAAC,KAAG,AAAC,CAAA,EAAE,IAAI,IAAE,EAAE,KAAK,YAAY,QAAM,EAAE,KAAK,YAAY,MAAK,KAAK,CAAA,IAAE,EAAE,KAAK,CAAC,EAAE,KAAK,EAAC,EAAE,MAAM,CAAA,KAAI,EAAE,WAAW,CAAC;YAAC,UAAS,EAAE,SAAS;YAAC,SAAQ;YAAE,UAAS,CAAC;QAAC;IAAE,CAAA,GAAG,AAAC,CAAA,EAAE,SAAS,GAAC,OAAO,MAAM,CAAC,EAAE,SAAS,CAAA,EAAG,WAAW,GAAC,GAAE,AAAC,CAAA,EAAE,SAAS,GAAC,OAAO,MAAM,CAAC,EAAE,SAAS,CAAA,EAAG,WAAW,GAAC,GAAE,AAAC,CAAA,EAAE,SAAS,GAAC,OAAO,MAAM,CAAC,EAAE,SAAS,CAAA,EAAG,WAAW,GAAC,GAAE,AAAC,CAAA,EAAE,SAAS,GAAC,OAAO,MAAM,CAAC,EAAE,SAAS,CAAA,EAAG,WAAW,GAAC,GAAE;AAAC","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-1ee1e3e28707d49a.js","src/main.ts","src/ui_elements.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/simulation_controller.ts","src/simulator_core.ts","src/simulator_state.ts","node_modules/graphology/dist/graphology.umd.min.js","node_modules/graphology/src/utils.js","node_modules/events/events.js","node_modules/obliterator/iterator.js","node_modules/obliterator/support.js","node_modules/obliterator/iter.js","node_modules/obliterator/take.js","node_modules/graphology/src/errors.js","node_modules/graphology/src/data.js","node_modules/graphology/src/attributes/nodes.js","node_modules/graphology/src/attributes/edges.js","node_modules/obliterator/chain.js","node_modules/graphology/src/iteration/edges.js","node_modules/graphology/src/iteration/neighbors.js","node_modules/graphology/src/iteration/adjacency.js","node_modules/graphology/src/serialization.js","node_modules/graphology/src/graph.js","node_modules/graphology/src/classes.js","src/precision.ts","node_modules/decimal.js/decimal.js","src/shared_types.ts","src/rule_genesis.ts","src/rule_utils.ts","src/graph_utils.ts","src/rule_bonding.ts","src/rule_annihilation.ts","src/rule_adaptation.ts","src/rule_transformation.ts","src/rule_collapse.ts","src/simulator_step.ts","src/simulator_analysis.ts","src/visualizer_graph.ts","node_modules/graphology-layout-forceatlas2/index.js","node_modules/graphology-utils/is-graph.js","node_modules/graphology-utils/getters.js","node_modules/graphology-layout-forceatlas2/iterate.js","node_modules/graphology-layout-forceatlas2/helpers.js","node_modules/graphology-layout-forceatlas2/defaults.js","src/visualizer_multiverse.ts","node_modules/papaparse/papaparse.min.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SERVER_PORT = 1234;var HMR_SECURE = false;var HMR_ENV_HASH = \"439701173a9199ea\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"4943a1030f289648\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_SERVER_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_SERVER_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */,\n  disposedAssets /*: {|[string]: boolean|} */,\n  assetsToDispose /*: Array<[ParcelRequire, string]> */,\n  assetsToAccept /*: Array<[ParcelRequire, string]> */,\n  bundleNotFound = false;\nfunction getHostname() {\n  return HMR_HOST || (typeof location !== 'undefined' && location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || (typeof location !== 'undefined' ? location.port : HMR_SERVER_PORT);\n}\n\n// eslint-disable-next-line no-redeclare\nlet WebSocket = globalThis.WebSocket;\nif (!WebSocket && typeof module.bundle.root === 'function') {\n  try {\n    // eslint-disable-next-line no-global-assign\n    WebSocket = module.bundle.root('ws');\n  } catch {\n    // ignore.\n  }\n}\nvar hostname = getHostname();\nvar port = getPort();\nvar protocol = HMR_SECURE || typeof location !== 'undefined' && location.protocol === 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif (!parent || !parent.isParcelRequire) {\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      // If we're running in the dev server's node runner, listen for messages on the parent port.\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.on('message', async message => {\n          try {\n            await handleMessage(message);\n            parentPort.postMessage('updated');\n          } catch {\n            parentPort.postMessage('restart');\n          }\n        });\n\n        // After the bundle has finished running, notify the dev server that the HMR update is complete.\n        queueMicrotask(() => parentPort.postMessage('ready'));\n      }\n    } catch {\n      if (typeof WebSocket !== 'undefined') {\n        try {\n          ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n        } catch (err) {\n          // Ignore cloudflare workers error.\n          if (err.message && !err.message.includes('Disallowed operation called within global scope')) {\n            console.error(err.message);\n          }\n        }\n      }\n    }\n  }\n  if (ws) {\n    // $FlowFixMe\n    ws.onmessage = async function (event /*: {data: string, ...} */) {\n      var data /*: HMRMessage */ = JSON.parse(event.data);\n      await handleMessage(data);\n    };\n    if (ws instanceof WebSocket) {\n      ws.onerror = function (e) {\n        if (e.message) {\n          console.error(e.message);\n        }\n      };\n      ws.onclose = function () {\n        console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n      };\n    }\n  }\n}\nasync function handleMessage(data /*: HMRMessage */) {\n  checkedAssets = {} /*: {|[string]: boolean|} */;\n  disposedAssets = {} /*: {|[string]: boolean|} */;\n  assetsToAccept = [];\n  assetsToDispose = [];\n  bundleNotFound = false;\n  if (data.type === 'reload') {\n    fullReload();\n  } else if (data.type === 'update') {\n    // Remove error overlay if there is one\n    if (typeof document !== 'undefined') {\n      removeErrorOverlay();\n    }\n    let assets = data.assets;\n\n    // Handle HMR Update\n    let handled = assets.every(asset => {\n      return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n    });\n\n    // Dispatch a custom event in case a bundle was not found. This might mean\n    // an asset on the server changed and we should reload the page. This event\n    // gives the client an opportunity to refresh without losing state\n    // (e.g. via React Server Components). If e.preventDefault() is not called,\n    // we will trigger a full page reload.\n    if (handled && bundleNotFound && assets.some(a => a.envHash !== HMR_ENV_HASH) && typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n      handled = !window.dispatchEvent(new CustomEvent('parcelhmrreload', {\n        cancelable: true\n      }));\n    }\n    if (handled) {\n      console.clear();\n\n      // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n      if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n        window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n      }\n      await hmrApplyUpdates(assets);\n      hmrDisposeQueue();\n\n      // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n      let processedAssets = {};\n      for (let i = 0; i < assetsToAccept.length; i++) {\n        let id = assetsToAccept[i][1];\n        if (!processedAssets[id]) {\n          hmrAccept(assetsToAccept[i][0], id);\n          processedAssets[id] = true;\n        }\n      }\n    } else fullReload();\n  }\n  if (data.type === 'error') {\n    // Log parcel errors to console\n    for (let ansiDiagnostic of data.diagnostics.ansi) {\n      let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n      console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n    }\n    if (typeof document !== 'undefined') {\n      // Render the fancy html overlay\n      removeErrorOverlay();\n      var overlay = createErrorOverlay(data.diagnostics.html);\n      // $FlowFixMe\n      document.body.appendChild(overlay);\n    }\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"${protocol === 'wss' ? 'https' : 'http'}://${hostname}:${port}/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if (typeof location !== 'undefined' && 'reload' in location) {\n    location.reload();\n  } else if (typeof extCtx !== 'undefined' && extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  } else {\n    try {\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.postMessage('restart');\n      }\n    } catch (err) {\n      console.error('[parcel] ⚠️ An HMR update was not accepted. Please restart the process.');\n    }\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout || typeof document === 'undefined') {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    }\n\n    // Always traverse to the parent bundle, even if we already replaced the asset in this bundle.\n    // This is required in case modules are duplicated. We need to ensure all instances have the updated code.\n    if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  checkedAssets = {};\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else if (a !== null) {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      bundleNotFound = true;\n      return true;\n    }\n    return hmrAcceptCheckOne(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return null;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  if (!cached) {\n    return true;\n  }\n  assetsToDispose.push([bundle, id]);\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n  return false;\n}\nfunction hmrDisposeQueue() {\n  // Dispose all old assets.\n  for (let i = 0; i < assetsToDispose.length; i++) {\n    let id = assetsToDispose[i][1];\n    if (!disposedAssets[id]) {\n      hmrDispose(assetsToDispose[i][0], id);\n      disposedAssets[id] = true;\n    }\n  }\n  assetsToDispose = [];\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    let assetsToAlsoAccept = [];\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      let additionalAssets = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (Array.isArray(additionalAssets) && additionalAssets.length) {\n        assetsToAlsoAccept.push(...additionalAssets);\n      }\n    });\n    if (assetsToAlsoAccept.length) {\n      let handled = assetsToAlsoAccept.every(function (a) {\n        return hmrAcceptCheck(a[0], a[1]);\n      });\n      if (!handled) {\n        return fullReload();\n      }\n      hmrDisposeQueue();\n    }\n  }\n}","// src/main.ts\n\nimport { initializeUI } from './ui_elements';\nimport { SimulationController } from './simulation_controller';\n\n// The main entry point for the application.\n// This script is loaded by index.html as a module.\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    try {\n        // 1. Safely initialize all UI element references after the DOM is loaded.\n        // This will throw an error and stop execution if any element is missing.\n        const ui = initializeUI();\n\n        // 2. Create an instance of the main application controller, passing it the UI elements.\n        const appController = new SimulationController(ui);\n\n        // 3. Start the application logic (sets up initial state and event listeners).\n        appController.start();\n\n    } catch (error) {\n        // If initializeUI throws an error, catch it and display a user-friendly message.\n        console.error(\"Application failed to start:\", error);\n        alert(\"A critical error occurred on startup. Check the developer console for details. This is often caused by a mismatch between expected HTML element IDs and the actual HTML.\");\n    }\n});","// src/ui_elements.ts\n\n// Define a type for the UI elements object for strong typing\nexport interface UIElements {\n    timelineCanvas: HTMLCanvasElement;\n    multiverseCanvas: HTMLCanvasElement;\n    divergenceHighCanvas: HTMLCanvasElement;\n    divergenceNativeCanvas: HTMLCanvasElement;\n    timelineView: HTMLElement;\n    multiverseView: HTMLElement;\n    divergenceView: HTMLElement;\n    modeTimelineBtn: HTMLButtonElement;\n    modeMultiverseBtn: HTMLButtonElement;\n    modeDivergenceBtn: HTMLButtonElement;\n    pauseButton: HTMLButtonElement;\n    exportDataBtn: HTMLButtonElement;\n    currentModeDd: HTMLElement;\n    totalStepsDd: HTMLElement;\n    currentComplexityDd: HTMLElement;\n    currentSLevelDd: HTMLElement;\n    currentRobustnessDd: HTMLElement;\n    currentStressDd: HTMLElement;\n    totalAttemptsDd: HTMLElement;\n    stableUniversesDd: HTMLElement;\n    highestSLevelAchievedDd: HTMLElement;\n    divergenceStepDd: HTMLElement;\n    ruleWeightsUl: HTMLUListElement;\n    cbEnableAdaptValence: HTMLInputElement;\n    cbEnableAdaptPolarity: HTMLInputElement;\n    cbEnableAdaptPrototype: HTMLInputElement;\n    cbEnableTransformPrototype: HTMLInputElement;\n    cbEnableCollapse: HTMLInputElement;\n    cbEnableDynamicRuleWeights: HTMLInputElement;\n    cbEnableStressPropagation: HTMLInputElement;\n}\n\n/**\n * Queries the DOM to find all necessary UI elements and returns them in a structured object.\n * Throws an error if any critical element is not found.\n * @returns The populated UIElements object.\n */\nexport function initializeUI(): UIElements {\n    const ui: UIElements = {\n        timelineCanvas: document.getElementById('timeline-canvas') as HTMLCanvasElement,\n        multiverseCanvas: document.getElementById('multiverse-canvas') as HTMLCanvasElement,\n        divergenceHighCanvas: document.getElementById('divergence-high-canvas') as HTMLCanvasElement,\n        divergenceNativeCanvas: document.getElementById('divergence-native-canvas') as HTMLCanvasElement,\n        timelineView: document.getElementById('timeline-view') as HTMLElement,\n        multiverseView: document.getElementById('multiverse-view') as HTMLElement,\n        divergenceView: document.getElementById('divergence-view') as HTMLElement,\n        modeTimelineBtn: document.getElementById('mode-timeline-btn') as HTMLButtonElement,\n        modeMultiverseBtn: document.getElementById('mode-multiverse-btn') as HTMLButtonElement,\n        modeDivergenceBtn: document.getElementById('mode-divergence-btn') as HTMLButtonElement,\n        pauseButton: document.getElementById('pause-button') as HTMLButtonElement,\n        exportDataBtn: document.getElementById('export-data-btn') as HTMLButtonElement,\n        currentModeDd: document.getElementById('current-mode-dd') as HTMLElement,\n        totalStepsDd: document.getElementById('total-steps-dd') as HTMLElement,\n        currentComplexityDd: document.getElementById('current-complexity-dd') as HTMLElement,\n        currentSLevelDd: document.getElementById('current-s-level-dd') as HTMLElement,\n        currentRobustnessDd: document.getElementById('current-robustness-dd') as HTMLElement,\n        currentStressDd: document.getElementById('current-stress-dd') as HTMLElement,\n        totalAttemptsDd: document.getElementById('total-attempts-dd') as HTMLElement,\n        stableUniversesDd: document.getElementById('stable-universes-dd') as HTMLElement,\n        highestSLevelAchievedDd: document.getElementById('highest-s-level-achieved-dd') as HTMLElement,\n        divergenceStepDd: document.getElementById('divergence-step-dd') as HTMLElement,\n        ruleWeightsUl: document.getElementById('rule-weights-ul') as HTMLUListElement,\n        cbEnableAdaptValence: document.getElementById('cb-enable-adapt-valence') as HTMLInputElement,\n        cbEnableAdaptPolarity: document.getElementById('cb-enable-adapt-polarity') as HTMLInputElement,\n        cbEnableAdaptPrototype: document.getElementById('cb-enable-adapt-prototype') as HTMLInputElement,\n        cbEnableTransformPrototype: document.getElementById('cb-enable-transform-prototype') as HTMLInputElement,\n        cbEnableCollapse: document.getElementById('cb-enable-collapse') as HTMLInputElement,\n        cbEnableDynamicRuleWeights: document.getElementById('cb-enable-dynamic-rule-weights') as HTMLInputElement,\n        cbEnableStressPropagation: document.getElementById('cb-enable-stress-propagation') as HTMLInputElement,\n    };\n\n    // Verify all essential UI elements were found after assignment\n    for (const key in ui) {\n        if (!ui[key as keyof UIElements]) {\n            const kebabCaseId = key.replace(/([A-Z])/g, '-$1').toLowerCase();\n            throw new Error(`FATAL: UI element for '${key}' (expected ID: '${kebabCaseId}') not found in DOM. App cannot start.`);\n        }\n    }\n\n    return ui;\n}","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","// src/simulation_controller.ts\nimport { MVU_Simulator } from './simulator_core';\nimport { \n    SimConfig, \n    PatternDescriptor, \n    S_Level, \n    DEFAULT_SIM_CONFIG \n} from './shared_types';\nimport { drawGraph } from './visualizer_graph';\nimport { drawMultiverse } from './visualizer_multiverse';\nimport Papa from 'papaparse';\nimport { PrecisionNumber } from './precision';\nimport { UIElements } from './ui_elements';\n\nexport class SimulationController {\n    private ui: UIElements;\n    private activeMode: 'timeline' | 'multiverse' | 'divergence' = 'timeline';\n    private isPaused = true;\n    private animationFrameId: number = 0;\n    private readonly SIM_SPEED = 30;\n\n    private timelineSim: MVU_Simulator | null = null;\n    private divergenceSimHigh: MVU_Simulator | null = null;\n    private divergenceSimNative: MVU_Simulator | null = null;\n\n    private multiverseAttempts = 0;\n    private stableUniverses: { descriptor: PatternDescriptor, graphJson: string }[] = [];\n    private highestSLevelOverall: S_Level = S_Level.S0_Vacuum;\n    private divergenceFoundStep: number | null = null;\n\n    constructor(ui: UIElements) {\n        this.ui = ui;\n    }\n\n    public start() {\n        this.setupEventListeners();\n        this.setInitialCheckboxStates();\n        this.initializeSimulators('all', true);\n        this.switchMode('timeline');\n    }\n\n    private getSimulatorConfigFromUI(precisionMode: 'high' | 'native' = 'high', seed?: number): SimConfig {\n        return {\n            precision: precisionMode,\n            seed: seed ?? Date.now() + Math.random() * 100000,\n            enable_adaptation_valence: this.ui.cbEnableAdaptValence.checked,\n            enable_adaptation_polarity: this.ui.cbEnableAdaptPolarity.checked,\n            enable_adaptation_prototype: this.ui.cbEnableAdaptPrototype.checked,\n            enable_transformation_prototype: this.ui.cbEnableTransformPrototype.checked,\n            enable_collapse: this.ui.cbEnableCollapse.checked,\n            enable_dynamic_rule_weighting: this.ui.cbEnableDynamicRuleWeights.checked,\n            enable_stress_propagation: this.ui.cbEnableStressPropagation.checked,\n            initial_proto_valence: undefined, \n            initial_valence_adaptation_ratio: undefined,\n            max_valence_factor: undefined,\n            min_valence: undefined,\n            absolute_max_valence: undefined,\n            stress_propagation_factor: undefined,\n            stress_penalty_homogeneous_env: undefined,\n        };\n    }\n\n    private initializeSimulators(mode: 'timeline' | 'divergence' | 'all' = 'all', forceNewSeedTimeline = false) {\n        if (mode === 'timeline' || mode === 'all') {\n            const currentTimelineSeed = this.timelineSim?.lcg_seed;\n            const timelineSeed = forceNewSeedTimeline || !currentTimelineSeed ? undefined : currentTimelineSeed;\n            this.timelineSim = new MVU_Simulator(this.getSimulatorConfigFromUI('high', timelineSeed));\n            this.timelineSim.reset();\n        }\n        if (mode === 'divergence' || mode === 'all') {\n            this.divergenceSimHigh = new MVU_Simulator(this.getSimulatorConfigFromUI('high', 420));\n            this.divergenceSimNative = new MVU_Simulator(this.getSimulatorConfigFromUI('native', 420));\n            this.divergenceSimHigh.reset();\n            this.divergenceSimNative.reset();\n        }\n    }\n\n    private ensureSimulatorsAreReadyForMode(mode: 'timeline' | 'divergence', forceNewSeedForTimeline = false) {\n        if (mode === 'timeline' && (!this.timelineSim || forceNewSeedForTimeline)) {\n            this.initializeSimulators('timeline', forceNewSeedForTimeline);\n        } else if (mode === 'divergence' && (!this.divergenceSimHigh || !this.divergenceSimNative)) {\n            this.initializeSimulators('divergence');\n        }\n    }\n\n    private mainLoop = () => {\n        if (this.isPaused) {\n            if (this.animationFrameId) cancelAnimationFrame(this.animationFrameId);\n            this.animationFrameId = 0;\n            return;\n        }\n\n        switch (this.activeMode) {\n            case 'timeline': this.runTimelineStep(); break;\n            case 'multiverse': this.runMultiverseBatch(); return; // Multiverse handles its own loop\n            case 'divergence': this.runDivergenceStep(); break;\n        }\n\n        if (!this.isPaused) {\n            this.animationFrameId = requestAnimationFrame(this.mainLoop);\n        }\n    }\n\n    private runTimelineStep() {\n        if (!this.timelineSim) return;\n        const result = this.timelineSim.step();\n        drawGraph(this.timelineSim.graph, this.ui.timelineCanvas);\n        this.updateTimelineStats(result.descriptor);\n        this.updateRuleWeightsDisplay(this.timelineSim.rule_weights);\n\n        if (result.halt) {\n            this.isPaused = true;\n            this.ui.pauseButton.textContent = 'Restart';\n            console.log(`Timeline Halted @ step ${this.timelineSim.step_counter}: ${result.reason}`, result.descriptor ? JSON.parse(JSON.stringify(result.descriptor)) : \"No descriptor\");\n        }\n    }\n\n    private async runMultiverseBatch() {\n        if (this.isPaused) return;\n\n        for (let i = 0; i < 5; i++) {\n            if (this.isPaused) break;\n            const simulator = new MVU_Simulator(this.getSimulatorConfigFromUI('high'));\n            let result;\n            do {\n                result = simulator.step();\n            } while (!result.halt && simulator.step_counter < simulator['MAX_STEPS_PER_SIM']);\n            \n            this.multiverseAttempts++;\n            if (result.descriptor && result.reason !== 'UNBOUNDED_GROWTH' && result.descriptor.C.toNumber() > 1) {\n                this.stableUniverses.push({ descriptor: result.descriptor, graphJson: simulator.getGraphHash(simulator.graph) });\n                if (result.descriptor.S.level > this.highestSLevelOverall) {\n                    this.highestSLevelOverall = result.descriptor.S.level;\n                }\n            }\n            if (i % 2 === 0) await new Promise(r => setTimeout(r, 0));\n        }\n        drawMultiverse(this.stableUniverses, this.ui.multiverseCanvas);\n        this.updateMultiverseStats();\n\n        if (!this.isPaused) {\n            this.animationFrameId = requestAnimationFrame(this.mainLoop);\n        }\n    }\n\n    private runDivergenceStep() {\n        if (!this.divergenceSimHigh || !this.divergenceSimNative) return;\n        const highResult = this.divergenceSimHigh.step();\n        const nativeResult = this.divergenceSimNative.step();\n        drawGraph(this.divergenceSimHigh.graph, this.ui.divergenceHighCanvas);\n        drawGraph(this.divergenceSimNative.graph, this.ui.divergenceNativeCanvas);\n\n        if (!this.divergenceFoundStep) {\n            if (this.divergenceSimHigh.getGraphHash(this.divergenceSimHigh.graph) !== this.divergenceSimNative.getGraphHash(this.divergenceSimNative.graph)) {\n                this.divergenceFoundStep = this.divergenceSimHigh.step_counter;\n            }\n        }\n        this.updateDivergenceStats(highResult.descriptor);\n        this.updateRuleWeightsDisplay(this.divergenceSimHigh.rule_weights);\n\n        if (highResult.halt || nativeResult.halt) {\n            this.isPaused = true;\n            this.ui.pauseButton.textContent = 'Restart';\n        }\n    }\n\n    private updateTimelineStats(descriptor?: PatternDescriptor) {\n        this.ui.totalStepsDd.textContent=this.timelineSim?.step_counter.toString()??'0';if(descriptor){this.ui.currentComplexityDd.textContent=descriptor.C.toNumber().toFixed(0);this.ui.currentSLevelDd.textContent=`S${descriptor.S.level} (${S_Level[descriptor.S.level]})`;this.ui.currentRobustnessDd.textContent=descriptor.S.robustness.toNumber().toFixed(3);this.ui.currentStressDd.textContent=descriptor.totalStress.toNumber().toFixed(2);}else{this.ui.currentComplexityDd.textContent='N/A';this.ui.currentSLevelDd.textContent='N/A';this.ui.currentRobustnessDd.textContent='N/A';this.ui.currentStressDd.textContent='N/A';}\n    }\n    private updateMultiverseStats() {\n        this.ui.totalAttemptsDd.textContent=this.multiverseAttempts.toString();this.ui.stableUniversesDd.textContent=this.stableUniverses.length.toString();this.ui.highestSLevelAchievedDd.textContent=`S${this.highestSLevelOverall} (${S_Level[this.highestSLevelOverall]})`;\n    }\n    private updateDivergenceStats(highDesc?: PatternDescriptor) {\n        this.ui.totalStepsDd.textContent=this.divergenceSimHigh?.step_counter.toString()??'0';if(highDesc){this.ui.currentComplexityDd.textContent=highDesc.C.toNumber().toFixed(0);this.ui.currentSLevelDd.textContent=`S${highDesc.S.level} (${S_Level[highDesc.S.level]})`;this.ui.currentRobustnessDd.textContent=highDesc.S.robustness.toNumber().toFixed(3);this.ui.currentStressDd.textContent=highDesc.totalStress.toNumber().toFixed(2);}else{this.ui.currentComplexityDd.textContent='N/A';this.ui.currentSLevelDd.textContent='N/A';this.ui.currentRobustnessDd.textContent='N/A';this.ui.currentStressDd.textContent='N/A';}\n        if(this.divergenceFoundStep){this.ui.divergenceStepDd.textContent=`Diverged at Step ${this.divergenceFoundStep}`;this.ui.divergenceStepDd.style.color='#ffc107';}else if(!this.isPaused&&this.activeMode==='divergence'){this.ui.divergenceStepDd.textContent='Running...';this.ui.divergenceStepDd.style.color='';}else if(this.isPaused&&this.activeMode==='divergence'&&this.divergenceSimHigh?.step_counter>0){this.ui.divergenceStepDd.textContent='Paused';}else{this.ui.divergenceStepDd.textContent='N/A';this.ui.divergenceStepDd.style.color='';}\n    }\n    private updateRuleWeightsDisplay(weights?: Map<string, PrecisionNumber>) {\n        if(!this.ui.ruleWeightsUl)return;this.ui.ruleWeightsUl.innerHTML='';if(weights&&weights.size>0){weights.forEach((w,rN)=>{const li=document.createElement('li');li.textContent=`${rN}: ${w.toNumber().toFixed(3)}`;this.ui.ruleWeightsUl.appendChild(li);});}else{const li=document.createElement('li');li.textContent=\"N/A\";let noWeighting = false; if(this.activeMode==='timeline'&&this.timelineSim){noWeighting = this.timelineSim.config.enable_dynamic_rule_weighting === false;} else if(this.activeMode==='divergence'&&this.divergenceSimHigh){noWeighting = this.divergenceSimHigh.config.enable_dynamic_rule_weighting === false;} if(noWeighting){li.textContent=\"Weighting Disabled\";}this.ui.ruleWeightsUl.appendChild(li);}\n    }\n\n    private resetCurrentModeSimulators(forceNewSeedForTimeline = false) {\n        if (this.activeMode === 'timeline') {\n            this.timelineSim?.reset();\n            this.ensureSimulatorsAreReadyForMode('timeline', forceNewSeedForTimeline);\n        } else if (this.activeMode === 'divergence') {\n            this.divergenceSimHigh?.reset();\n            this.divergenceSimNative?.reset();\n            this.ensureSimulatorsAreReadyForMode('divergence');\n        }\n    }\n\n    private resetAllStatsForModeSwitch() {\n        this.ui.totalStepsDd.textContent='0';this.ui.currentComplexityDd.textContent='N/A';this.ui.currentSLevelDd.textContent='N/A';this.ui.currentRobustnessDd.textContent='N/A';this.ui.currentStressDd.textContent='N/A';\n        this.divergenceFoundStep=null;this.updateDivergenceStats(); this.updateMultiverseStats(); this.updateRuleWeightsDisplay(); \n    }\n\n    private switchMode(newMode: 'timeline' | 'multiverse' | 'divergence') {\n        this.isPaused=true; if(this.animationFrameId)cancelAnimationFrame(this.animationFrameId); this.animationFrameId=0;\n        this.activeMode=newMode;\n        \n        this.resetAllStatsForModeSwitch(); \n        this.ensureSimulatorsAreReadyForMode(newMode, true);\n\n        document.querySelectorAll('.view').forEach(v=>(v as HTMLElement).style.display='none');\n        document.querySelectorAll('.mode-btn').forEach(b=>b.classList.remove('active'));\n        const vE=document.getElementById(`${newMode}-view`);if(vE)vE.style.display=newMode==='divergence'?'flex':'block';\n        const bE=document.getElementById(`mode-${newMode}-btn`);if(bE)bE.classList.add('active');\n        this.ui.currentModeDd.textContent=newMode.charAt(0).toUpperCase()+newMode.slice(1);\n\n        [this.ui.timelineCanvas,this.ui.multiverseCanvas,this.ui.divergenceHighCanvas,this.ui.divergenceNativeCanvas].forEach(c=>{const ctx=c.getContext('2d');if(ctx)ctx.clearRect(0,0,c.width,c.height);});\n        \n        if(newMode==='timeline' && this.timelineSim) { this.updateTimelineStats(this.timelineSim.last_descriptor ?? undefined); this.updateRuleWeightsDisplay(this.timelineSim.rule_weights); } \n        else if(newMode==='multiverse') { drawMultiverse(this.stableUniverses,this.ui.multiverseCanvas); this.updateRuleWeightsDisplay(); } \n        else if(newMode==='divergence' && this.divergenceSimHigh) { this.updateDivergenceStats(this.divergenceSimHigh.last_descriptor ?? undefined); this.updateRuleWeightsDisplay(this.divergenceSimHigh.rule_weights); }\n        \n        this.ui.pauseButton.textContent = 'Start';\n    }\n\n    private setupEventListeners() {\n        this.ui.pauseButton.addEventListener('click', () => {\n            if(this.ui.pauseButton.textContent==='Start'||this.ui.pauseButton.textContent==='Resume'){\n                this.ensureSimulatorsAreReadyForMode(this.activeMode, this.activeMode === 'timeline' && !this.timelineSim); \n                this.isPaused=false;this.ui.pauseButton.textContent='Pause';this.mainLoop();\n            } else if(this.ui.pauseButton.textContent==='Pause'){\n                this.isPaused=true;this.ui.pauseButton.textContent='Resume';\n            } else if(this.ui.pauseButton.textContent==='Restart'){\n                this.isPaused=true; if(this.animationFrameId)cancelAnimationFrame(this.animationFrameId); this.animationFrameId=0; \n                this.resetCurrentModeSimulators(true); \n                if (this.activeMode === 'timeline' && this.timelineSim) this.updateTimelineStats(this.timelineSim.last_descriptor ?? undefined);\n                else if (this.activeMode === 'divergence' && this.divergenceSimHigh) this.updateDivergenceStats(this.divergenceSimHigh.last_descriptor ?? undefined);\n                this.isPaused=false;this.ui.pauseButton.textContent='Pause';this.mainLoop();\n            }\n        });\n\n        this.ui.modeTimelineBtn.addEventListener('click', () => this.switchMode('timeline'));\n        this.ui.modeMultiverseBtn.addEventListener('click', () => this.switchMode('multiverse'));\n        this.ui.modeDivergenceBtn.addEventListener('click', () => this.switchMode('divergence'));\n\n        this.ui.exportDataBtn.addEventListener('click', () => {\n            if(this.stableUniverses.length===0){alert(\"No stable universes found yet to export.\");return;}\n            const dataToExport=this.stableUniverses.map((uni,i)=>({universe_id:i+1,s_level:uni.descriptor.S.level,s_level_name:S_Level[uni.descriptor.S.level],robustness:uni.descriptor.S.robustness.toNumber(),complexity_C:uni.descriptor.C.toNumber(),total_stress:uni.descriptor.totalStress.toNumber(),total_relation_flow_resistance:uni.descriptor.totalRelationFlowResistance.toNumber(),s2_score:uni.descriptor.s2_score?.toNumber()??0,}));\n            const csv=Papa.unparse(dataToExport);const blob=new Blob([csv],{type:'text/csv;charset=utf-8;'});const link=document.createElement('a');link.href=URL.createObjectURL(blob);link.setAttribute('download','autaxys_multiverse_census.csv');link.click();URL.revokeObjectURL(link.href);\n        });\n\n        const configCheckboxes = [\n            this.ui.cbEnableAdaptValence, this.ui.cbEnableAdaptPolarity, this.ui.cbEnableAdaptPrototype,\n            this.ui.cbEnableTransformPrototype, this.ui.cbEnableCollapse, this.ui.cbEnableDynamicRuleWeights,\n            this.ui.cbEnableStressPropagation\n        ];\n        configCheckboxes.forEach(cb => {\n            cb.addEventListener('change', () => {\n                console.log(`Config changed: ${cb.id} is now ${cb.checked}. Restart simulation or switch mode to apply these settings.`);\n                this.timelineSim = null; this.divergenceSimHigh = null; this.divergenceSimNative = null;\n                if (!this.isPaused) {\n                    this.isPaused = true; \n                    this.ui.pauseButton.textContent = 'Resume (Config Changed)'; \n                    if(this.animationFrameId) cancelAnimationFrame(this.animationFrameId); this.animationFrameId = 0;\n                } else {\n                    if (this.ui.pauseButton.textContent === 'Resume' || this.ui.pauseButton.textContent === 'Pause') { \n                        this.ui.pauseButton.textContent = 'Start (Config Changed)';\n                    }\n                }\n            });\n        });\n    }\n\n    private setInitialCheckboxStates() {\n        this.ui.cbEnableAdaptValence.checked = DEFAULT_SIM_CONFIG.enable_adaptation_valence;\n        this.ui.cbEnableAdaptPolarity.checked = DEFAULT_SIM_CONFIG.enable_adaptation_polarity;\n        this.ui.cbEnableAdaptPrototype.checked = DEFAULT_SIM_CONFIG.enable_adaptation_prototype;\n        this.ui.cbEnableTransformPrototype.checked = DEFAULT_SIM_CONFIG.enable_transformation_prototype;\n        this.ui.cbEnableCollapse.checked = DEFAULT_SIM_CONFIG.enable_collapse;\n        this.ui.cbEnableDynamicRuleWeights.checked = DEFAULT_SIM_CONFIG.enable_dynamic_rule_weighting;\n        this.ui.cbEnableStressPropagation.checked = DEFAULT_SIM_CONFIG.enable_stress_propagation;\n    }\n}","// src/simulator_core.ts\nimport { MVU_Simulator as SimulatorState } from './simulator_state';\nimport { step as performStep } from './simulator_step';\nimport { \n    updateAllNodeStresses as updateAllNodeStressesFunc, \n    calculatePatternDescriptor as calculatePatternDescriptorFunc,\n    getGraphHash as getGraphHashFunc\n} from './simulator_analysis';\nimport { \n    PatternDescriptor, \n    MoveRecord,\n    DistinctionAttrs,\n    RelationAttrs,\n    ProtoType,\n    S_Level,\n    SimConfig\n} from './shared_types';\nimport Graph from 'graphology';\n\nexport class MVU_Simulator extends SimulatorState {\n\n    constructor(config?: Partial<SimConfig>) {\n        super(config);\n    }\n\n    public step(): { halt: boolean, reason?: string, descriptor?: PatternDescriptor, move_record?: MoveRecord } {\n        return performStep(this);\n    }\n\n    public updateAllNodeStresses(graph: Graph<DistinctionAttrs, RelationAttrs> = this.graph): void {\n        updateAllNodeStressesFunc(this);\n    }\n\n    public calculatePatternDescriptor(g: Graph<DistinctionAttrs, RelationAttrs> = this.graph): PatternDescriptor {\n        return calculatePatternDescriptorFunc(this);\n    }\n\n    public getGraphHash(g: Graph<DistinctionAttrs, RelationAttrs> = this.graph): string {\n        return getGraphHashFunc(g);\n    }\n\n    public createDistinction(graph: Graph<DistinctionAttrs, RelationAttrs>, id: string, p: 1 | -1, pv?: number, pt?: ProtoType, sl?: S_Level): void {\n        super.createDistinction(graph, id, p, pv, pt, sl);\n    }\n}","// src/simulator_state.ts\nimport Graph from 'graphology';\nimport { PrecisionNumber, PrecisionMode } from './precision';\nimport { \n    S_Level, ProtoType, SymmetryBias,\n    DistinctionAttrs, RelationAttrs, PatternDescriptor, \n    MoveRecord, SimConfig, DEFAULT_SIM_CONFIG, Rule \n} from './shared_types';\nimport { GenesisRule } from './rule_genesis';\nimport { BondingRule } from './rule_bonding';\nimport { AnnihilationRule } from './rule_annihilation';\nimport { AdaptationRule } from './rule_adaptation';\nimport { TransformationRule } from './rule_transformation';\nimport { CollapseRule } from './rule_collapse';\n\nexport class MVU_Simulator {\n    public config: Required<SimConfig>;\n    public graph: Graph<DistinctionAttrs, RelationAttrs>;\n    public step_counter = 0;\n    public lcg_seed: number; \n    public _next_node_id = 0; // Public for potential test access\n    public graph_state_history: Map<string, { step: number, descriptor: PatternDescriptor }> = new Map();\n    public simulation_history: MoveRecord[] = [];\n    public rule_weights: Map<string, PrecisionNumber>;\n    \n    // Stagnation tracking for advanced rule conditions\n    public node_stagnation_counter: Map<string, number> = new Map();\n    public node_last_stress: Map<string, PrecisionNumber> = new Map();\n\n    public readonly UNBOUNDED_NODE_LIMIT = 75;\n    public readonly MAX_STEPS_PER_SIM = 350;\n    public readonly RULE_WEIGHT_ADJUSTMENT_FACTOR = new PrecisionNumber(0.05, 'high');\n    public readonly RULE_WEIGHT_NORMALIZATION_INTERVAL = 30;\n    \n    public rules: Rule[];\n    public last_descriptor: PatternDescriptor | null = null;\n\n    constructor(config?: Partial<SimConfig>) {\n        this.config = { ...DEFAULT_SIM_CONFIG, ...config };\n        if (this.config.enable_stress_propagation && this.config.stress_propagation_factor < 0) {\n            this.config.stress_propagation_factor = 0;\n        }\n        this.graph = new Graph<DistinctionAttrs, RelationAttrs>({ multi: false, allowSelfLoops: false });\n        this.lcg_seed = this.config.seed ?? Date.now(); \n        this.rules = this.initializeRules();\n        this.rule_weights = new Map();\n        this.rules.forEach(rule => this.rule_weights.set(rule.name, new PrecisionNumber(1.0, this.config.precision)));\n    }\n\n    private initializeRules(): Rule[] {\n        const activeRules: Rule[] = [GenesisRule, BondingRule, AnnihilationRule];\n        if (this.config.enable_adaptation_valence || this.config.enable_adaptation_polarity || this.config.enable_adaptation_prototype) { \n            activeRules.push(AdaptationRule); \n        }\n        if (this.config.enable_transformation_prototype) { \n            activeRules.push(TransformationRule); \n        }\n        if (this.config.enable_collapse) { \n            activeRules.push(CollapseRule); \n        }\n        return activeRules;\n    }\n\n    public reset() {\n        this.graph.clear(); \n        this.step_counter = 0; \n        this._next_node_id = 0; \n        this.graph_state_history.clear();\n        this.simulation_history = []; \n        this.lcg_seed = this.config.seed ?? Date.now();\n        this.rules = this.initializeRules(); \n        this.rule_weights.clear();\n        this.rules.forEach(rule => this.rule_weights.set(rule.name, new PrecisionNumber(1.0, this.config.precision)));\n        this.last_descriptor = null;\n        this.node_stagnation_counter.clear();\n        this.node_last_stress.clear();\n    }\n\n    public random = (): number => {\n        this.lcg_seed = (this.lcg_seed * 1664525 + 1013904223) % 4294967296; \n        return this.lcg_seed / 4294967296;\n    };\n\n    public getNextNodeId(): string { return `d_${this._next_node_id++}`; }\n\n    public getNodeStagnation(nodeId: string): number {\n        return this.node_stagnation_counter.get(nodeId) || 0;\n    }\n\n    public createDistinction(graph: Graph<DistinctionAttrs, RelationAttrs>, id: string, p: 1 | -1, pv?: number, pt?: ProtoType, sl?: S_Level): void {\n        const proVal=pv??this.config.initial_proto_valence;\n        let iniAdaVal=Math.round(proVal*this.config.initial_valence_adaptation_ratio);\n        iniAdaVal=Math.max(this.config.min_valence,iniAdaVal);\n        iniAdaVal=Math.min(iniAdaVal,this.config.absolute_max_valence);\n        \n        graph.addNode(id,{\n            id,\n            polarity:p,\n            protoType:pt??ProtoType.Standard,\n            protoValence:proVal,\n            valence:iniAdaVal,\n            stress:PrecisionNumber.from(iniAdaVal,this.config.precision),\n            sLevel:sl??S_Level.S1_SimpleFixedPoint,\n            symmetryBias:SymmetryBias.None,\n            coherencePotential:PrecisionNumber.from(0.5,this.config.precision),\n            aestheticValue:PrecisionNumber.from(0.5,this.config.precision)\n        });\n    }\n}",null,"/**\n * Graphology Utilities\n * =====================\n *\n * Collection of helpful functions used by the implementation.\n */\n\n/**\n * Object.assign-like polyfill.\n *\n * @param  {object} target       - First object.\n * @param  {object} [...objects] - Objects to merge.\n * @return {object}\n */\nfunction assignPolyfill() {\n  const target = arguments[0];\n\n  for (let i = 1, l = arguments.length; i < l; i++) {\n    if (!arguments[i]) continue;\n\n    for (const k in arguments[i]) target[k] = arguments[i][k];\n  }\n\n  return target;\n}\n\nlet assign = assignPolyfill;\n\nif (typeof Object.assign === 'function') assign = Object.assign;\n\nexport {assign};\n\n/**\n * Function returning the first matching edge for given path.\n * Note: this function does not check the existence of source & target. This\n * must be performed by the caller.\n *\n * @param  {Graph}  graph  - Target graph.\n * @param  {any}    source - Source node.\n * @param  {any}    target - Target node.\n * @param  {string} type   - Type of the edge (mixed, directed or undirected).\n * @return {string|null}\n */\nexport function getMatchingEdge(graph, source, target, type) {\n  const sourceData = graph._nodes.get(source);\n\n  let edge = null;\n\n  if (!sourceData) return edge;\n\n  if (type === 'mixed') {\n    edge =\n      (sourceData.out && sourceData.out[target]) ||\n      (sourceData.undirected && sourceData.undirected[target]);\n  } else if (type === 'directed') {\n    edge = sourceData.out && sourceData.out[target];\n  } else {\n    edge = sourceData.undirected && sourceData.undirected[target];\n  }\n\n  return edge;\n}\n\n/**\n * Checks whether the given value is a plain object.\n *\n * @param  {mixed}   value - Target value.\n * @return {boolean}\n */\nexport function isPlainObject(value) {\n  // NOTE: as per https://github.com/graphology/graphology/issues/149\n  // this function has been loosened not to reject object instances\n  // coming from other JavaScript contexts. It has also been chosen\n  // not to improve it to avoid obvious false positives and avoid\n  // taking a performance hit. People should really use TypeScript\n  // if they want to avoid feeding subtly irrelvant attribute objects.\n  return typeof value === 'object' && value !== null;\n}\n\n/**\n * Checks whether the given object is empty.\n *\n * @param  {object}  o - Target Object.\n * @return {boolean}\n */\nexport function isEmpty(o) {\n  let k;\n\n  for (k in o) return false;\n\n  return true;\n}\n\n/**\n * Creates a \"private\" property for the given member name by concealing it\n * using the `enumerable` option.\n *\n * @param {object} target - Target object.\n * @param {string} name   - Member name.\n */\nexport function privateProperty(target, name, value) {\n  Object.defineProperty(target, name, {\n    enumerable: false,\n    configurable: false,\n    writable: true,\n    value\n  });\n}\n\n/**\n * Creates a read-only property for the given member name & the given getter.\n *\n * @param {object}   target - Target object.\n * @param {string}   name   - Member name.\n * @param {mixed}    value  - The attached getter or fixed value.\n */\nexport function readOnlyProperty(target, name, value) {\n  const descriptor = {\n    enumerable: true,\n    configurable: true\n  };\n\n  if (typeof value === 'function') {\n    descriptor.get = value;\n  } else {\n    descriptor.value = value;\n    descriptor.writable = false;\n  }\n\n  Object.defineProperty(target, name, descriptor);\n}\n\n/**\n * Returns whether the given object constitute valid hints.\n *\n * @param {object} hints - Target object.\n */\nexport function validateHints(hints) {\n  if (!isPlainObject(hints)) return false;\n\n  if (hints.attributes && !Array.isArray(hints.attributes)) return false;\n\n  return true;\n}\n\n/**\n * Creates a function generating incremental ids for edges.\n *\n * @return {function}\n */\nexport function incrementalIdStartingFromRandomByte() {\n  let i = Math.floor(Math.random() * 256) & 0xff;\n\n  return () => {\n    return i++;\n  };\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/**\n * Obliterator Iterator Class\n * ===========================\n *\n * Simple class representing the library's iterators.\n */\n\n/**\n * Iterator class.\n *\n * @constructor\n * @param {function} next - Next function.\n */\nfunction Iterator(next) {\n  if (typeof next !== 'function')\n    throw new Error('obliterator/iterator: expecting a function!');\n\n  this.next = next;\n}\n\n/**\n * If symbols are supported, we add `next` to `Symbol.iterator`.\n */\nif (typeof Symbol !== 'undefined')\n  Iterator.prototype[Symbol.iterator] = function () {\n    return this;\n  };\n\n/**\n * Returning an iterator of the given values.\n *\n * @param  {any...} values - Values.\n * @return {Iterator}\n */\nIterator.of = function () {\n  var args = arguments,\n    l = args.length,\n    i = 0;\n\n  return new Iterator(function () {\n    if (i >= l) return {done: true};\n\n    return {done: false, value: args[i++]};\n  });\n};\n\n/**\n * Returning an empty iterator.\n *\n * @return {Iterator}\n */\nIterator.empty = function () {\n  var iterator = new Iterator(function () {\n    return {done: true};\n  });\n\n  return iterator;\n};\n\n/**\n * Returning an iterator over the given indexed sequence.\n *\n * @param  {string|Array} sequence - Target sequence.\n * @return {Iterator}\n */\nIterator.fromSequence = function (sequence) {\n  var i = 0,\n    l = sequence.length;\n\n  return new Iterator(function () {\n    if (i >= l) return {done: true};\n\n    return {done: false, value: sequence[i++]};\n  });\n};\n\n/**\n * Returning whether the given value is an iterator.\n *\n * @param  {any} value - Value.\n * @return {boolean}\n */\nIterator.is = function (value) {\n  if (value instanceof Iterator) return true;\n\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    typeof value.next === 'function'\n  );\n};\n\n/**\n * Exporting.\n */\nmodule.exports = Iterator;\n","exports.ARRAY_BUFFER_SUPPORT = typeof ArrayBuffer !== 'undefined';\nexports.SYMBOL_SUPPORT = typeof Symbol !== 'undefined';\n","/**\n * Obliterator Iter Function\n * ==========================\n *\n * Function coercing values to an iterator. It can be quite useful when needing\n * to handle iterables and iterators the same way.\n */\nvar Iterator = require('./iterator.js');\nvar support = require('./support.js');\n\nvar ARRAY_BUFFER_SUPPORT = support.ARRAY_BUFFER_SUPPORT;\nvar SYMBOL_SUPPORT = support.SYMBOL_SUPPORT;\n\nfunction iterOrNull(target) {\n  // Indexed sequence\n  if (\n    typeof target === 'string' ||\n    Array.isArray(target) ||\n    (ARRAY_BUFFER_SUPPORT && ArrayBuffer.isView(target))\n  )\n    return Iterator.fromSequence(target);\n\n  // Invalid value\n  if (typeof target !== 'object' || target === null) return null;\n\n  // Iterable\n  if (SYMBOL_SUPPORT && typeof target[Symbol.iterator] === 'function')\n    return target[Symbol.iterator]();\n\n  // Iterator duck-typing\n  if (typeof target.next === 'function') return target;\n\n  // Invalid object\n  return null;\n}\n\nmodule.exports = function iter(target) {\n  var iterator = iterOrNull(target);\n\n  if (!iterator)\n    throw new Error(\n      'obliterator: target is not iterable nor a valid iterator.'\n    );\n\n  return iterator;\n};\n","/* eslint no-constant-condition: 0 */\n/**\n * Obliterator Take Function\n * ==========================\n *\n * Function taking n or every value of the given iterator and returns them\n * into an array.\n */\nvar iter = require('./iter.js');\n\n/**\n * Take.\n *\n * @param  {Iterable} iterable - Target iterable.\n * @param  {number}   [n]      - Optional number of items to take.\n * @return {array}\n */\nmodule.exports = function take(iterable, n) {\n  var l = arguments.length > 1 ? n : Infinity,\n    array = l !== Infinity ? new Array(l) : [],\n    step,\n    i = 0;\n\n  var iterator = iter(iterable);\n\n  while (true) {\n    if (i === l) return array;\n\n    step = iterator.next();\n\n    if (step.done) {\n      if (i !== n) array.length = i;\n\n      return array;\n    }\n\n    array[i++] = step.value;\n  }\n};\n","/**\n * Graphology Custom Errors\n * =========================\n *\n * Defining custom errors for ease of use & easy unit tests across\n * implementations (normalized typology rather than relying on error\n * messages to check whether the correct error was found).\n */\nexport class GraphError extends Error {\n  constructor(message) {\n    super();\n    this.name = 'GraphError';\n    this.message = message;\n  }\n}\n\nexport class InvalidArgumentsGraphError extends GraphError {\n  constructor(message) {\n    super(message);\n    this.name = 'InvalidArgumentsGraphError';\n\n    // This is V8 specific to enhance stack readability\n    if (typeof Error.captureStackTrace === 'function')\n      Error.captureStackTrace(\n        this,\n        InvalidArgumentsGraphError.prototype.constructor\n      );\n  }\n}\n\nexport class NotFoundGraphError extends GraphError {\n  constructor(message) {\n    super(message);\n    this.name = 'NotFoundGraphError';\n\n    // This is V8 specific to enhance stack readability\n    if (typeof Error.captureStackTrace === 'function')\n      Error.captureStackTrace(this, NotFoundGraphError.prototype.constructor);\n  }\n}\n\nexport class UsageGraphError extends GraphError {\n  constructor(message) {\n    super(message);\n    this.name = 'UsageGraphError';\n\n    // This is V8 specific to enhance stack readability\n    if (typeof Error.captureStackTrace === 'function')\n      Error.captureStackTrace(this, UsageGraphError.prototype.constructor);\n  }\n}\n","/**\n * Graphology Internal Data Classes\n * =================================\n *\n * Internal classes hopefully reduced to structs by engines & storing\n * necessary information for nodes & edges.\n *\n * Note that those classes don't rely on the `class` keyword to avoid some\n * cruft introduced by most of ES2015 transpilers.\n */\n\n/**\n * MixedNodeData class.\n *\n * @constructor\n * @param {string} string     - The node's key.\n * @param {object} attributes - Node's attributes.\n */\nexport function MixedNodeData(key, attributes) {\n  // Attributes\n  this.key = key;\n  this.attributes = attributes;\n\n  this.clear();\n}\n\nMixedNodeData.prototype.clear = function () {\n  // Degrees\n  this.inDegree = 0;\n  this.outDegree = 0;\n  this.undirectedDegree = 0;\n  this.undirectedLoops = 0;\n  this.directedLoops = 0;\n\n  // Indices\n  this.in = {};\n  this.out = {};\n  this.undirected = {};\n};\n\n/**\n * DirectedNodeData class.\n *\n * @constructor\n * @param {string} string     - The node's key.\n * @param {object} attributes - Node's attributes.\n */\nexport function DirectedNodeData(key, attributes) {\n  // Attributes\n  this.key = key;\n  this.attributes = attributes;\n\n  this.clear();\n}\n\nDirectedNodeData.prototype.clear = function () {\n  // Degrees\n  this.inDegree = 0;\n  this.outDegree = 0;\n  this.directedLoops = 0;\n\n  // Indices\n  this.in = {};\n  this.out = {};\n};\n\n/**\n * UndirectedNodeData class.\n *\n * @constructor\n * @param {string} string     - The node's key.\n * @param {object} attributes - Node's attributes.\n */\nexport function UndirectedNodeData(key, attributes) {\n  // Attributes\n  this.key = key;\n  this.attributes = attributes;\n\n  this.clear();\n}\n\nUndirectedNodeData.prototype.clear = function () {\n  // Degrees\n  this.undirectedDegree = 0;\n  this.undirectedLoops = 0;\n\n  // Indices\n  this.undirected = {};\n};\n\n/**\n * EdgeData class.\n *\n * @constructor\n * @param {boolean} undirected   - Whether the edge is undirected.\n * @param {string}  string       - The edge's key.\n * @param {string}  source       - Source of the edge.\n * @param {string}  target       - Target of the edge.\n * @param {object}  attributes   - Edge's attributes.\n */\nexport function EdgeData(undirected, key, source, target, attributes) {\n  // Attributes\n  this.key = key;\n  this.attributes = attributes;\n  this.undirected = undirected;\n\n  // Extremities\n  this.source = source;\n  this.target = target;\n}\n\nEdgeData.prototype.attach = function () {\n  let outKey = 'out';\n  let inKey = 'in';\n\n  if (this.undirected) outKey = inKey = 'undirected';\n\n  const source = this.source.key;\n  const target = this.target.key;\n\n  // Handling source\n  this.source[outKey][target] = this;\n\n  if (this.undirected && source === target) return;\n\n  // Handling target\n  this.target[inKey][source] = this;\n};\n\nEdgeData.prototype.attachMulti = function () {\n  let outKey = 'out';\n  let inKey = 'in';\n\n  const source = this.source.key;\n  const target = this.target.key;\n\n  if (this.undirected) outKey = inKey = 'undirected';\n\n  // Handling source\n  const adj = this.source[outKey];\n  const head = adj[target];\n\n  if (typeof head === 'undefined') {\n    adj[target] = this;\n\n    // Self-loop optimization\n    if (!(this.undirected && source === target)) {\n      // Handling target\n      this.target[inKey][source] = this;\n    }\n\n    return;\n  }\n\n  // Prepending to doubly-linked list\n  head.previous = this;\n  this.next = head;\n\n  // Pointing to new head\n  // NOTE: use mutating swap later to avoid lookup?\n  adj[target] = this;\n  this.target[inKey][source] = this;\n};\n\nEdgeData.prototype.detach = function () {\n  const source = this.source.key;\n  const target = this.target.key;\n\n  let outKey = 'out';\n  let inKey = 'in';\n\n  if (this.undirected) outKey = inKey = 'undirected';\n\n  delete this.source[outKey][target];\n\n  // No-op delete in case of undirected self-loop\n  delete this.target[inKey][source];\n};\n\nEdgeData.prototype.detachMulti = function () {\n  const source = this.source.key;\n  const target = this.target.key;\n\n  let outKey = 'out';\n  let inKey = 'in';\n\n  if (this.undirected) outKey = inKey = 'undirected';\n\n  // Deleting from doubly-linked list\n  if (this.previous === undefined) {\n    // We are dealing with the head\n\n    // Should we delete the adjacency entry because it is now empty?\n    if (this.next === undefined) {\n      delete this.source[outKey][target];\n\n      // No-op delete in case of undirected self-loop\n      delete this.target[inKey][source];\n    } else {\n      // Detaching\n      this.next.previous = undefined;\n\n      // NOTE: could avoid the lookups by creating a #.become mutating method\n      this.source[outKey][target] = this.next;\n\n      // No-op delete in case of undirected self-loop\n      this.target[inKey][source] = this.next;\n    }\n  } else {\n    // We are dealing with another list node\n    this.previous.next = this.next;\n\n    // If not last\n    if (this.next !== undefined) {\n      this.next.previous = this.previous;\n    }\n  }\n};\n","/**\n * Graphology Node Attributes methods\n * ===================================\n */\nimport {assign, isPlainObject} from '../utils';\n\nimport {InvalidArgumentsGraphError, NotFoundGraphError} from '../errors';\n\nconst NODE = 0;\nconst SOURCE = 1;\nconst TARGET = 2;\nconst OPPOSITE = 3;\n\nfunction findRelevantNodeData(\n  graph,\n  method,\n  mode,\n  nodeOrEdge,\n  nameOrEdge,\n  add1,\n  add2\n) {\n  let nodeData, edgeData, arg1, arg2;\n\n  nodeOrEdge = '' + nodeOrEdge;\n\n  if (mode === NODE) {\n    nodeData = graph._nodes.get(nodeOrEdge);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.${method}: could not find the \"${nodeOrEdge}\" node in the graph.`\n      );\n\n    arg1 = nameOrEdge;\n    arg2 = add1;\n  } else if (mode === OPPOSITE) {\n    nameOrEdge = '' + nameOrEdge;\n\n    edgeData = graph._edges.get(nameOrEdge);\n\n    if (!edgeData)\n      throw new NotFoundGraphError(\n        `Graph.${method}: could not find the \"${nameOrEdge}\" edge in the graph.`\n      );\n\n    const source = edgeData.source.key;\n    const target = edgeData.target.key;\n\n    if (nodeOrEdge === source) {\n      nodeData = edgeData.target;\n    } else if (nodeOrEdge === target) {\n      nodeData = edgeData.source;\n    } else {\n      throw new NotFoundGraphError(\n        `Graph.${method}: the \"${nodeOrEdge}\" node is not attached to the \"${nameOrEdge}\" edge (${source}, ${target}).`\n      );\n    }\n\n    arg1 = add1;\n    arg2 = add2;\n  } else {\n    edgeData = graph._edges.get(nodeOrEdge);\n\n    if (!edgeData)\n      throw new NotFoundGraphError(\n        `Graph.${method}: could not find the \"${nodeOrEdge}\" edge in the graph.`\n      );\n\n    if (mode === SOURCE) {\n      nodeData = edgeData.source;\n    } else {\n      nodeData = edgeData.target;\n    }\n\n    arg1 = nameOrEdge;\n    arg2 = add1;\n  }\n\n  return [nodeData, arg1, arg2];\n}\n\nfunction attachNodeAttributeGetter(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1) {\n    const [data, name] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1\n    );\n\n    return data.attributes[name];\n  };\n}\n\nfunction attachNodeAttributesGetter(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge) {\n    const [data] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge\n    );\n\n    return data.attributes;\n  };\n}\n\nfunction attachNodeAttributeChecker(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1) {\n    const [data, name] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1\n    );\n\n    return data.attributes.hasOwnProperty(name);\n  };\n}\n\nfunction attachNodeAttributeSetter(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1, add2) {\n    const [data, name, value] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1,\n      add2\n    );\n\n    data.attributes[name] = value;\n\n    // Emitting\n    this.emit('nodeAttributesUpdated', {\n      key: data.key,\n      type: 'set',\n      attributes: data.attributes,\n      name\n    });\n\n    return this;\n  };\n}\n\nfunction attachNodeAttributeUpdater(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1, add2) {\n    const [data, name, updater] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1,\n      add2\n    );\n\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: updater should be a function.`\n      );\n\n    const attributes = data.attributes;\n    const value = updater(attributes[name]);\n\n    attributes[name] = value;\n\n    // Emitting\n    this.emit('nodeAttributesUpdated', {\n      key: data.key,\n      type: 'set',\n      attributes: data.attributes,\n      name\n    });\n\n    return this;\n  };\n}\n\nfunction attachNodeAttributeRemover(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1) {\n    const [data, name] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1\n    );\n\n    delete data.attributes[name];\n\n    // Emitting\n    this.emit('nodeAttributesUpdated', {\n      key: data.key,\n      type: 'remove',\n      attributes: data.attributes,\n      name\n    });\n\n    return this;\n  };\n}\n\nfunction attachNodeAttributesReplacer(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1) {\n    const [data, attributes] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1\n    );\n\n    if (!isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: provided attributes are not a plain object.`\n      );\n\n    data.attributes = attributes;\n\n    // Emitting\n    this.emit('nodeAttributesUpdated', {\n      key: data.key,\n      type: 'replace',\n      attributes: data.attributes\n    });\n\n    return this;\n  };\n}\n\nfunction attachNodeAttributesMerger(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1) {\n    const [data, attributes] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1\n    );\n\n    if (!isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: provided attributes are not a plain object.`\n      );\n\n    assign(data.attributes, attributes);\n\n    // Emitting\n    this.emit('nodeAttributesUpdated', {\n      key: data.key,\n      type: 'merge',\n      attributes: data.attributes,\n      data: attributes\n    });\n\n    return this;\n  };\n}\n\nfunction attachNodeAttributesUpdater(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1) {\n    const [data, updater] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1\n    );\n\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: provided updater is not a function.`\n      );\n\n    data.attributes = updater(data.attributes);\n\n    // Emitting\n    this.emit('nodeAttributesUpdated', {\n      key: data.key,\n      type: 'update',\n      attributes: data.attributes\n    });\n\n    return this;\n  };\n}\n\n/**\n * List of methods to attach.\n */\nconst NODE_ATTRIBUTES_METHODS = [\n  {\n    name: element => `get${element}Attribute`,\n    attacher: attachNodeAttributeGetter\n  },\n  {\n    name: element => `get${element}Attributes`,\n    attacher: attachNodeAttributesGetter\n  },\n  {\n    name: element => `has${element}Attribute`,\n    attacher: attachNodeAttributeChecker\n  },\n  {\n    name: element => `set${element}Attribute`,\n    attacher: attachNodeAttributeSetter\n  },\n  {\n    name: element => `update${element}Attribute`,\n    attacher: attachNodeAttributeUpdater\n  },\n  {\n    name: element => `remove${element}Attribute`,\n    attacher: attachNodeAttributeRemover\n  },\n  {\n    name: element => `replace${element}Attributes`,\n    attacher: attachNodeAttributesReplacer\n  },\n  {\n    name: element => `merge${element}Attributes`,\n    attacher: attachNodeAttributesMerger\n  },\n  {\n    name: element => `update${element}Attributes`,\n    attacher: attachNodeAttributesUpdater\n  }\n];\n\n/**\n * Attach every attributes-related methods to a Graph class.\n *\n * @param {function} Graph - Target class.\n */\nexport default function attachNodeAttributesMethods(Graph) {\n  NODE_ATTRIBUTES_METHODS.forEach(function ({name, attacher}) {\n    // For nodes\n    attacher(Graph, name('Node'), NODE);\n\n    // For sources\n    attacher(Graph, name('Source'), SOURCE);\n\n    // For targets\n    attacher(Graph, name('Target'), TARGET);\n\n    // For opposites\n    attacher(Graph, name('Opposite'), OPPOSITE);\n  });\n}\n","/**\n * Graphology Edge Attributes methods\n * ===================================\n */\nimport {assign, isPlainObject, getMatchingEdge} from '../utils';\n\nimport {\n  InvalidArgumentsGraphError,\n  NotFoundGraphError,\n  UsageGraphError\n} from '../errors';\n\n/**\n * Attach an attribute getter method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributeGetter(Class, method, type) {\n  /**\n   * Get the desired attribute for the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}    element - Target element.\n   * @param  {string} name    - Attribute's name.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source - Source element.\n   * @param  {any}     target - Target element.\n   * @param  {string}  name   - Attribute's name.\n   *\n   * @return {mixed}          - The attribute's value.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, name) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 2) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element;\n      const target = '' + name;\n\n      name = arguments[2];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    return data.attributes[name];\n  };\n}\n\n/**\n * Attach an attributes getter method onto the provided class.\n *\n * @param {function} Class       - Target class.\n * @param {string}   method      - Method name.\n * @param {string}   type        - Type of the edge to find.\n */\nfunction attachEdgeAttributesGetter(Class, method, type) {\n  /**\n   * Retrieves all the target element's attributes.\n   *\n   * Arity 2:\n   * @param  {any}    element - Target element.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source - Source element.\n   * @param  {any}     target - Target element.\n   *\n   * @return {object}          - The element's attributes.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 1) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element,\n        target = '' + arguments[1];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    return data.attributes;\n  };\n}\n\n/**\n * Attach an attribute checker method onto the provided class.\n *\n * @param {function} Class       - Target class.\n * @param {string}   method      - Method name.\n * @param {string}   type        - Type of the edge to find.\n */\nfunction attachEdgeAttributeChecker(Class, method, type) {\n  /**\n   * Checks whether the desired attribute is set for the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}    element - Target element.\n   * @param  {string} name    - Attribute's name.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source - Source element.\n   * @param  {any}     target - Target element.\n   * @param  {string}  name   - Attribute's name.\n   *\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, name) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 2) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element;\n      const target = '' + name;\n\n      name = arguments[2];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    return data.attributes.hasOwnProperty(name);\n  };\n}\n\n/**\n * Attach an attribute setter method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributeSetter(Class, method, type) {\n  /**\n   * Set the desired attribute for the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}    element - Target element.\n   * @param  {string} name    - Attribute's name.\n   * @param  {mixed}  value   - New attribute value.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source - Source element.\n   * @param  {any}     target - Target element.\n   * @param  {string}  name   - Attribute's name.\n   * @param  {mixed}  value   - New attribute value.\n   *\n   * @return {Graph}          - Returns itself for chaining.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, name, value) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 3) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element;\n      const target = '' + name;\n\n      name = arguments[2];\n      value = arguments[3];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    data.attributes[name] = value;\n\n    // Emitting\n    this.emit('edgeAttributesUpdated', {\n      key: data.key,\n      type: 'set',\n      attributes: data.attributes,\n      name\n    });\n\n    return this;\n  };\n}\n\n/**\n * Attach an attribute updater method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributeUpdater(Class, method, type) {\n  /**\n   * Update the desired attribute for the given element (node or edge) using\n   * the provided function.\n   *\n   * Arity 2:\n   * @param  {any}      element - Target element.\n   * @param  {string}   name    - Attribute's name.\n   * @param  {function} updater - Updater function.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}      source  - Source element.\n   * @param  {any}      target  - Target element.\n   * @param  {string}   name    - Attribute's name.\n   * @param  {function} updater - Updater function.\n   *\n   * @return {Graph}            - Returns itself for chaining.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, name, updater) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 3) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element;\n      const target = '' + name;\n\n      name = arguments[2];\n      updater = arguments[3];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: updater should be a function.`\n      );\n\n    data.attributes[name] = updater(data.attributes[name]);\n\n    // Emitting\n    this.emit('edgeAttributesUpdated', {\n      key: data.key,\n      type: 'set',\n      attributes: data.attributes,\n      name\n    });\n\n    return this;\n  };\n}\n\n/**\n * Attach an attribute remover method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributeRemover(Class, method, type) {\n  /**\n   * Remove the desired attribute for the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}    element - Target element.\n   * @param  {string} name    - Attribute's name.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source - Source element.\n   * @param  {any}     target - Target element.\n   * @param  {string}  name   - Attribute's name.\n   *\n   * @return {Graph}          - Returns itself for chaining.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, name) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 2) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element;\n      const target = '' + name;\n\n      name = arguments[2];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    delete data.attributes[name];\n\n    // Emitting\n    this.emit('edgeAttributesUpdated', {\n      key: data.key,\n      type: 'remove',\n      attributes: data.attributes,\n      name\n    });\n\n    return this;\n  };\n}\n\n/**\n * Attach an attribute replacer method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributesReplacer(Class, method, type) {\n  /**\n   * Replace the attributes for the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}    element    - Target element.\n   * @param  {object} attributes - New attributes.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source     - Source element.\n   * @param  {any}     target     - Target element.\n   * @param  {object}  attributes - New attributes.\n   *\n   * @return {Graph}              - Returns itself for chaining.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, attributes) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 2) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element,\n        target = '' + attributes;\n\n      attributes = arguments[2];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    if (!isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: provided attributes are not a plain object.`\n      );\n\n    data.attributes = attributes;\n\n    // Emitting\n    this.emit('edgeAttributesUpdated', {\n      key: data.key,\n      type: 'replace',\n      attributes: data.attributes\n    });\n\n    return this;\n  };\n}\n\n/**\n * Attach an attribute merger method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributesMerger(Class, method, type) {\n  /**\n   * Merge the attributes for the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}    element    - Target element.\n   * @param  {object} attributes - Attributes to merge.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source     - Source element.\n   * @param  {any}     target     - Target element.\n   * @param  {object}  attributes - Attributes to merge.\n   *\n   * @return {Graph}              - Returns itself for chaining.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, attributes) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 2) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element,\n        target = '' + attributes;\n\n      attributes = arguments[2];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    if (!isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: provided attributes are not a plain object.`\n      );\n\n    assign(data.attributes, attributes);\n\n    // Emitting\n    this.emit('edgeAttributesUpdated', {\n      key: data.key,\n      type: 'merge',\n      attributes: data.attributes,\n      data: attributes\n    });\n\n    return this;\n  };\n}\n\n/**\n * Attach an attribute updater method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributesUpdater(Class, method, type) {\n  /**\n   * Update the attributes of the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}      element - Target element.\n   * @param  {function} updater - Updater function.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}      source  - Source element.\n   * @param  {any}      target  - Target element.\n   * @param  {function} updater - Updater function.\n   *\n   * @return {Graph}            - Returns itself for chaining.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, updater) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 2) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element,\n        target = '' + updater;\n\n      updater = arguments[2];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: provided updater is not a function.`\n      );\n\n    data.attributes = updater(data.attributes);\n\n    // Emitting\n    this.emit('edgeAttributesUpdated', {\n      key: data.key,\n      type: 'update',\n      attributes: data.attributes\n    });\n\n    return this;\n  };\n}\n\n/**\n * List of methods to attach.\n */\nconst EDGE_ATTRIBUTES_METHODS = [\n  {\n    name: element => `get${element}Attribute`,\n    attacher: attachEdgeAttributeGetter\n  },\n  {\n    name: element => `get${element}Attributes`,\n    attacher: attachEdgeAttributesGetter\n  },\n  {\n    name: element => `has${element}Attribute`,\n    attacher: attachEdgeAttributeChecker\n  },\n  {\n    name: element => `set${element}Attribute`,\n    attacher: attachEdgeAttributeSetter\n  },\n  {\n    name: element => `update${element}Attribute`,\n    attacher: attachEdgeAttributeUpdater\n  },\n  {\n    name: element => `remove${element}Attribute`,\n    attacher: attachEdgeAttributeRemover\n  },\n  {\n    name: element => `replace${element}Attributes`,\n    attacher: attachEdgeAttributesReplacer\n  },\n  {\n    name: element => `merge${element}Attributes`,\n    attacher: attachEdgeAttributesMerger\n  },\n  {\n    name: element => `update${element}Attributes`,\n    attacher: attachEdgeAttributesUpdater\n  }\n];\n\n/**\n * Attach every attributes-related methods to a Graph class.\n *\n * @param {function} Graph - Target class.\n */\nexport default function attachEdgeAttributesMethods(Graph) {\n  EDGE_ATTRIBUTES_METHODS.forEach(function ({name, attacher}) {\n    // For edges\n    attacher(Graph, name('Edge'), 'mixed');\n\n    // For directed edges\n    attacher(Graph, name('DirectedEdge'), 'directed');\n\n    // For undirected edges\n    attacher(Graph, name('UndirectedEdge'), 'undirected');\n  });\n}\n","/**\n * Obliterator Chain Function\n * ===========================\n *\n * Variadic function combining the given iterables.\n */\nvar Iterator = require('./iterator.js');\nvar iter = require('./iter.js');\n\n/**\n * Chain.\n *\n * @param  {...Iterator} iterables - Target iterables.\n * @return {Iterator}\n */\nmodule.exports = function chain() {\n  var iterables = arguments;\n  var current = null;\n  var i = -1;\n\n  /* eslint-disable no-constant-condition */\n  return new Iterator(function next() {\n    var step = null;\n\n    do {\n      if (current === null) {\n        i++;\n\n        if (i >= iterables.length) return {done: true};\n\n        current = iter(iterables[i]);\n      }\n\n      step = current.next();\n\n      if (step.done === true) {\n        current = null;\n        continue;\n      }\n\n      break;\n    } while (true);\n\n    return step;\n  });\n};\n","/**\n * Graphology Edge Iteration\n * ==========================\n *\n * Attaching some methods to the Graph class to be able to iterate over a\n * graph's edges.\n */\nimport Iterator from 'obliterator/iterator';\nimport chain from 'obliterator/chain';\nimport take from 'obliterator/take';\n\nimport {InvalidArgumentsGraphError, NotFoundGraphError} from '../errors';\n\n/**\n * Definitions.\n */\nconst EDGES_ITERATION = [\n  {\n    name: 'edges',\n    type: 'mixed'\n  },\n  {\n    name: 'inEdges',\n    type: 'directed',\n    direction: 'in'\n  },\n  {\n    name: 'outEdges',\n    type: 'directed',\n    direction: 'out'\n  },\n  {\n    name: 'inboundEdges',\n    type: 'mixed',\n    direction: 'in'\n  },\n  {\n    name: 'outboundEdges',\n    type: 'mixed',\n    direction: 'out'\n  },\n  {\n    name: 'directedEdges',\n    type: 'directed'\n  },\n  {\n    name: 'undirectedEdges',\n    type: 'undirected'\n  }\n];\n\n/**\n * Function iterating over edges from the given object to match one of them.\n *\n * @param {object}   object   - Target object.\n * @param {function} callback - Function to call.\n */\nfunction forEachSimple(breakable, object, callback, avoid) {\n  let shouldBreak = false;\n\n  for (const k in object) {\n    if (k === avoid) continue;\n\n    const edgeData = object[k];\n\n    shouldBreak = callback(\n      edgeData.key,\n      edgeData.attributes,\n      edgeData.source.key,\n      edgeData.target.key,\n      edgeData.source.attributes,\n      edgeData.target.attributes,\n      edgeData.undirected\n    );\n\n    if (breakable && shouldBreak) return edgeData.key;\n  }\n\n  return;\n}\n\nfunction forEachMulti(breakable, object, callback, avoid) {\n  let edgeData, source, target;\n\n  let shouldBreak = false;\n\n  for (const k in object) {\n    if (k === avoid) continue;\n\n    edgeData = object[k];\n\n    do {\n      source = edgeData.source;\n      target = edgeData.target;\n\n      shouldBreak = callback(\n        edgeData.key,\n        edgeData.attributes,\n        source.key,\n        target.key,\n        source.attributes,\n        target.attributes,\n        edgeData.undirected\n      );\n\n      if (breakable && shouldBreak) return edgeData.key;\n\n      edgeData = edgeData.next;\n    } while (edgeData !== undefined);\n  }\n\n  return;\n}\n\n/**\n * Function returning an iterator over edges from the given object.\n *\n * @param  {object}   object - Target object.\n * @return {Iterator}\n */\nfunction createIterator(object, avoid) {\n  const keys = Object.keys(object);\n  const l = keys.length;\n\n  let edgeData;\n  let i = 0;\n\n  return new Iterator(function next() {\n    do {\n      if (!edgeData) {\n        if (i >= l) return {done: true};\n\n        const k = keys[i++];\n\n        if (k === avoid) {\n          edgeData = undefined;\n          continue;\n        }\n\n        edgeData = object[k];\n      } else {\n        edgeData = edgeData.next;\n      }\n    } while (!edgeData);\n\n    return {\n      done: false,\n      value: {\n        edge: edgeData.key,\n        attributes: edgeData.attributes,\n        source: edgeData.source.key,\n        target: edgeData.target.key,\n        sourceAttributes: edgeData.source.attributes,\n        targetAttributes: edgeData.target.attributes,\n        undirected: edgeData.undirected\n      }\n    };\n  });\n}\n\n/**\n * Function iterating over the egdes from the object at given key to match\n * one of them.\n *\n * @param {object}   object   - Target object.\n * @param {mixed}    k        - Neighbor key.\n * @param {function} callback - Callback to use.\n */\nfunction forEachForKeySimple(breakable, object, k, callback) {\n  const edgeData = object[k];\n\n  if (!edgeData) return;\n\n  const sourceData = edgeData.source;\n  const targetData = edgeData.target;\n\n  if (\n    callback(\n      edgeData.key,\n      edgeData.attributes,\n      sourceData.key,\n      targetData.key,\n      sourceData.attributes,\n      targetData.attributes,\n      edgeData.undirected\n    ) &&\n    breakable\n  )\n    return edgeData.key;\n}\n\nfunction forEachForKeyMulti(breakable, object, k, callback) {\n  let edgeData = object[k];\n\n  if (!edgeData) return;\n\n  let shouldBreak = false;\n\n  do {\n    shouldBreak = callback(\n      edgeData.key,\n      edgeData.attributes,\n      edgeData.source.key,\n      edgeData.target.key,\n      edgeData.source.attributes,\n      edgeData.target.attributes,\n      edgeData.undirected\n    );\n\n    if (breakable && shouldBreak) return edgeData.key;\n\n    edgeData = edgeData.next;\n  } while (edgeData !== undefined);\n\n  return;\n}\n\n/**\n * Function returning an iterator over the egdes from the object at given key.\n *\n * @param  {object}   object   - Target object.\n * @param  {mixed}    k        - Neighbor key.\n * @return {Iterator}\n */\nfunction createIteratorForKey(object, k) {\n  let edgeData = object[k];\n\n  if (edgeData.next !== undefined) {\n    return new Iterator(function () {\n      if (!edgeData) return {done: true};\n\n      const value = {\n        edge: edgeData.key,\n        attributes: edgeData.attributes,\n        source: edgeData.source.key,\n        target: edgeData.target.key,\n        sourceAttributes: edgeData.source.attributes,\n        targetAttributes: edgeData.target.attributes,\n        undirected: edgeData.undirected\n      };\n\n      edgeData = edgeData.next;\n\n      return {\n        done: false,\n        value\n      };\n    });\n  }\n\n  return Iterator.of({\n    edge: edgeData.key,\n    attributes: edgeData.attributes,\n    source: edgeData.source.key,\n    target: edgeData.target.key,\n    sourceAttributes: edgeData.source.attributes,\n    targetAttributes: edgeData.target.attributes,\n    undirected: edgeData.undirected\n  });\n}\n\n/**\n * Function creating an array of edges for the given type.\n *\n * @param  {Graph}   graph - Target Graph instance.\n * @param  {string}  type  - Type of edges to retrieve.\n * @return {array}         - Array of edges.\n */\nfunction createEdgeArray(graph, type) {\n  if (graph.size === 0) return [];\n\n  if (type === 'mixed' || type === graph.type) {\n    if (typeof Array.from === 'function')\n      return Array.from(graph._edges.keys());\n\n    return take(graph._edges.keys(), graph._edges.size);\n  }\n\n  const size =\n    type === 'undirected' ? graph.undirectedSize : graph.directedSize;\n\n  const list = new Array(size),\n    mask = type === 'undirected';\n\n  const iterator = graph._edges.values();\n\n  let i = 0;\n  let step, data;\n\n  while (((step = iterator.next()), step.done !== true)) {\n    data = step.value;\n\n    if (data.undirected === mask) list[i++] = data.key;\n  }\n\n  return list;\n}\n\n/**\n * Function iterating over a graph's edges using a callback to match one of\n * them.\n *\n * @param  {Graph}    graph    - Target Graph instance.\n * @param  {string}   type     - Type of edges to retrieve.\n * @param  {function} callback - Function to call.\n */\nfunction forEachEdge(breakable, graph, type, callback) {\n  if (graph.size === 0) return;\n\n  const shouldFilter = type !== 'mixed' && type !== graph.type;\n  const mask = type === 'undirected';\n\n  let step, data;\n  let shouldBreak = false;\n  const iterator = graph._edges.values();\n\n  while (((step = iterator.next()), step.done !== true)) {\n    data = step.value;\n\n    if (shouldFilter && data.undirected !== mask) continue;\n\n    const {key, attributes, source, target} = data;\n\n    shouldBreak = callback(\n      key,\n      attributes,\n      source.key,\n      target.key,\n      source.attributes,\n      target.attributes,\n      data.undirected\n    );\n\n    if (breakable && shouldBreak) return key;\n  }\n\n  return;\n}\n\n/**\n * Function creating an iterator of edges for the given type.\n *\n * @param  {Graph}    graph - Target Graph instance.\n * @param  {string}   type  - Type of edges to retrieve.\n * @return {Iterator}\n */\nfunction createEdgeIterator(graph, type) {\n  if (graph.size === 0) return Iterator.empty();\n\n  const shouldFilter = type !== 'mixed' && type !== graph.type;\n  const mask = type === 'undirected';\n\n  const iterator = graph._edges.values();\n\n  return new Iterator(function next() {\n    let step, data;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      step = iterator.next();\n\n      if (step.done) return step;\n\n      data = step.value;\n\n      if (shouldFilter && data.undirected !== mask) continue;\n\n      break;\n    }\n\n    const value = {\n      edge: data.key,\n      attributes: data.attributes,\n      source: data.source.key,\n      target: data.target.key,\n      sourceAttributes: data.source.attributes,\n      targetAttributes: data.target.attributes,\n      undirected: data.undirected\n    };\n\n    return {value, done: false};\n  });\n}\n\n/**\n * Function iterating over a node's edges using a callback to match one of them.\n *\n * @param  {boolean}  multi     - Whether the graph is multi or not.\n * @param  {string}   type      - Type of edges to retrieve.\n * @param  {string}   direction - In or out?\n * @param  {any}      nodeData  - Target node's data.\n * @param  {function} callback  - Function to call.\n */\nfunction forEachEdgeForNode(\n  breakable,\n  multi,\n  type,\n  direction,\n  nodeData,\n  callback\n) {\n  const fn = multi ? forEachMulti : forEachSimple;\n\n  let found;\n\n  if (type !== 'undirected') {\n    if (direction !== 'out') {\n      found = fn(breakable, nodeData.in, callback);\n\n      if (breakable && found) return found;\n    }\n    if (direction !== 'in') {\n      found = fn(\n        breakable,\n        nodeData.out,\n        callback,\n        !direction ? nodeData.key : undefined\n      );\n\n      if (breakable && found) return found;\n    }\n  }\n\n  if (type !== 'directed') {\n    found = fn(breakable, nodeData.undirected, callback);\n\n    if (breakable && found) return found;\n  }\n\n  return;\n}\n\n/**\n * Function creating an array of edges for the given type & the given node.\n *\n * @param  {boolean} multi     - Whether the graph is multi or not.\n * @param  {string}  type      - Type of edges to retrieve.\n * @param  {string}  direction - In or out?\n * @param  {any}     nodeData  - Target node's data.\n * @return {array}             - Array of edges.\n */\nfunction createEdgeArrayForNode(multi, type, direction, nodeData) {\n  const edges = []; // TODO: possibility to know size beforehand or factorize with map\n\n  forEachEdgeForNode(false, multi, type, direction, nodeData, function (key) {\n    edges.push(key);\n  });\n\n  return edges;\n}\n\n/**\n * Function iterating over a node's edges using a callback.\n *\n * @param  {string}   type      - Type of edges to retrieve.\n * @param  {string}   direction - In or out?\n * @param  {any}      nodeData  - Target node's data.\n * @return {Iterator}\n */\nfunction createEdgeIteratorForNode(type, direction, nodeData) {\n  let iterator = Iterator.empty();\n\n  if (type !== 'undirected') {\n    if (direction !== 'out' && typeof nodeData.in !== 'undefined')\n      iterator = chain(iterator, createIterator(nodeData.in));\n    if (direction !== 'in' && typeof nodeData.out !== 'undefined')\n      iterator = chain(\n        iterator,\n        createIterator(nodeData.out, !direction ? nodeData.key : undefined)\n      );\n  }\n\n  if (type !== 'directed' && typeof nodeData.undirected !== 'undefined') {\n    iterator = chain(iterator, createIterator(nodeData.undirected));\n  }\n\n  return iterator;\n}\n\n/**\n * Function iterating over edges for the given path using a callback to match\n * one of them.\n *\n * @param  {string}   type       - Type of edges to retrieve.\n * @param  {boolean}  multi      - Whether the graph is multi.\n * @param  {string}   direction  - In or out?\n * @param  {NodeData} sourceData - Source node's data.\n * @param  {string}   target     - Target node.\n * @param  {function} callback   - Function to call.\n */\nfunction forEachEdgeForPath(\n  breakable,\n  type,\n  multi,\n  direction,\n  sourceData,\n  target,\n  callback\n) {\n  const fn = multi ? forEachForKeyMulti : forEachForKeySimple;\n\n  let found;\n\n  if (type !== 'undirected') {\n    if (typeof sourceData.in !== 'undefined' && direction !== 'out') {\n      found = fn(breakable, sourceData.in, target, callback);\n\n      if (breakable && found) return found;\n    }\n\n    if (\n      typeof sourceData.out !== 'undefined' &&\n      direction !== 'in' &&\n      (direction || sourceData.key !== target)\n    ) {\n      found = fn(breakable, sourceData.out, target, callback);\n\n      if (breakable && found) return found;\n    }\n  }\n\n  if (type !== 'directed') {\n    if (typeof sourceData.undirected !== 'undefined') {\n      found = fn(breakable, sourceData.undirected, target, callback);\n\n      if (breakable && found) return found;\n    }\n  }\n\n  return;\n}\n\n/**\n * Function creating an array of edges for the given path.\n *\n * @param  {string}   type       - Type of edges to retrieve.\n * @param  {boolean}  multi      - Whether the graph is multi.\n * @param  {string}   direction  - In or out?\n * @param  {NodeData} sourceData - Source node's data.\n * @param  {any}      target     - Target node.\n * @return {array}               - Array of edges.\n */\nfunction createEdgeArrayForPath(type, multi, direction, sourceData, target) {\n  const edges = []; // TODO: possibility to know size beforehand or factorize with map\n\n  forEachEdgeForPath(\n    false,\n    type,\n    multi,\n    direction,\n    sourceData,\n    target,\n    function (key) {\n      edges.push(key);\n    }\n  );\n\n  return edges;\n}\n\n/**\n * Function returning an iterator over edges for the given path.\n *\n * @param  {string}   type       - Type of edges to retrieve.\n * @param  {string}   direction  - In or out?\n * @param  {NodeData} sourceData - Source node's data.\n * @param  {string}   target     - Target node.\n * @param  {function} callback   - Function to call.\n */\nfunction createEdgeIteratorForPath(type, direction, sourceData, target) {\n  let iterator = Iterator.empty();\n\n  if (type !== 'undirected') {\n    if (\n      typeof sourceData.in !== 'undefined' &&\n      direction !== 'out' &&\n      target in sourceData.in\n    )\n      iterator = chain(iterator, createIteratorForKey(sourceData.in, target));\n\n    if (\n      typeof sourceData.out !== 'undefined' &&\n      direction !== 'in' &&\n      target in sourceData.out &&\n      (direction || sourceData.key !== target)\n    )\n      iterator = chain(iterator, createIteratorForKey(sourceData.out, target));\n  }\n\n  if (type !== 'directed') {\n    if (\n      typeof sourceData.undirected !== 'undefined' &&\n      target in sourceData.undirected\n    )\n      iterator = chain(\n        iterator,\n        createIteratorForKey(sourceData.undirected, target)\n      );\n  }\n\n  return iterator;\n}\n\n/**\n * Function attaching an edge array creator method to the Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachEdgeArrayCreator(Class, description) {\n  const {name, type, direction} = description;\n\n  /**\n   * Function returning an array of certain edges.\n   *\n   * Arity 0: Return all the relevant edges.\n   *\n   * Arity 1: Return all of a node's relevant edges.\n   * @param  {any}   node   - Target node.\n   *\n   * Arity 2: Return the relevant edges across the given path.\n   * @param  {any}   source - Source node.\n   * @param  {any}   target - Target node.\n   *\n   * @return {array|number} - The edges or the number of edges.\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[name] = function (source, target) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type)\n      return [];\n\n    if (!arguments.length) return createEdgeArray(this, type);\n\n    if (arguments.length === 1) {\n      source = '' + source;\n\n      const nodeData = this._nodes.get(source);\n\n      if (typeof nodeData === 'undefined')\n        throw new NotFoundGraphError(\n          `Graph.${name}: could not find the \"${source}\" node in the graph.`\n        );\n\n      // Iterating over a node's edges\n      return createEdgeArrayForNode(\n        this.multi,\n        type === 'mixed' ? this.type : type,\n        direction,\n        nodeData\n      );\n    }\n\n    if (arguments.length === 2) {\n      source = '' + source;\n      target = '' + target;\n\n      const sourceData = this._nodes.get(source);\n\n      if (!sourceData)\n        throw new NotFoundGraphError(\n          `Graph.${name}:  could not find the \"${source}\" source node in the graph.`\n        );\n\n      if (!this._nodes.has(target))\n        throw new NotFoundGraphError(\n          `Graph.${name}:  could not find the \"${target}\" target node in the graph.`\n        );\n\n      // Iterating over the edges between source & target\n      return createEdgeArrayForPath(\n        type,\n        this.multi,\n        direction,\n        sourceData,\n        target\n      );\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.${name}: too many arguments (expecting 0, 1 or 2 and got ${arguments.length}).`\n    );\n  };\n}\n\n/**\n * Function attaching a edge callback iterator method to the Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachForEachEdge(Class, description) {\n  const {name, type, direction} = description;\n\n  const forEachName = 'forEach' + name[0].toUpperCase() + name.slice(1, -1);\n\n  /**\n   * Function iterating over the graph's relevant edges by applying the given\n   * callback.\n   *\n   * Arity 1: Iterate over all the relevant edges.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 2: Iterate over all of a node's relevant edges.\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 3: Iterate over the relevant edges across the given path.\n   * @param  {any}      source   - Source node.\n   * @param  {any}      target   - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[forEachName] = function (source, target, callback) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type) return;\n\n    if (arguments.length === 1) {\n      callback = source;\n      return forEachEdge(false, this, type, callback);\n    }\n\n    if (arguments.length === 2) {\n      source = '' + source;\n      callback = target;\n\n      const nodeData = this._nodes.get(source);\n\n      if (typeof nodeData === 'undefined')\n        throw new NotFoundGraphError(\n          `Graph.${forEachName}: could not find the \"${source}\" node in the graph.`\n        );\n\n      // Iterating over a node's edges\n      // TODO: maybe attach the sub method to the instance dynamically?\n      return forEachEdgeForNode(\n        false,\n        this.multi,\n        type === 'mixed' ? this.type : type,\n        direction,\n        nodeData,\n        callback\n      );\n    }\n\n    if (arguments.length === 3) {\n      source = '' + source;\n      target = '' + target;\n\n      const sourceData = this._nodes.get(source);\n\n      if (!sourceData)\n        throw new NotFoundGraphError(\n          `Graph.${forEachName}:  could not find the \"${source}\" source node in the graph.`\n        );\n\n      if (!this._nodes.has(target))\n        throw new NotFoundGraphError(\n          `Graph.${forEachName}:  could not find the \"${target}\" target node in the graph.`\n        );\n\n      // Iterating over the edges between source & target\n      return forEachEdgeForPath(\n        false,\n        type,\n        this.multi,\n        direction,\n        sourceData,\n        target,\n        callback\n      );\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.${forEachName}: too many arguments (expecting 1, 2 or 3 and got ${arguments.length}).`\n    );\n  };\n\n  /**\n   * Function mapping the graph's relevant edges by applying the given\n   * callback.\n   *\n   * Arity 1: Map all the relevant edges.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 2: Map all of a node's relevant edges.\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 3: Map the relevant edges across the given path.\n   * @param  {any}      source   - Source node.\n   * @param  {any}      target   - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const mapName = 'map' + name[0].toUpperCase() + name.slice(1);\n\n  Class.prototype[mapName] = function () {\n    const args = Array.prototype.slice.call(arguments);\n    const callback = args.pop();\n\n    let result;\n\n    // We know the result length beforehand\n    if (args.length === 0) {\n      let length = 0;\n\n      if (type !== 'directed') length += this.undirectedSize;\n      if (type !== 'undirected') length += this.directedSize;\n\n      result = new Array(length);\n\n      let i = 0;\n\n      args.push((e, ea, s, t, sa, ta, u) => {\n        result[i++] = callback(e, ea, s, t, sa, ta, u);\n      });\n    }\n\n    // We don't know the result length beforehand\n    // TODO: we can in some instances of simple graphs, knowing degree\n    else {\n      result = [];\n\n      args.push((e, ea, s, t, sa, ta, u) => {\n        result.push(callback(e, ea, s, t, sa, ta, u));\n      });\n    }\n\n    this[forEachName].apply(this, args);\n\n    return result;\n  };\n\n  /**\n   * Function filtering the graph's relevant edges using the provided predicate\n   * function.\n   *\n   * Arity 1: Filter all the relevant edges.\n   * @param  {function} predicate - Predicate to use.\n   *\n   * Arity 2: Filter all of a node's relevant edges.\n   * @param  {any}      node      - Target node.\n   * @param  {function} predicate - Predicate to use.\n   *\n   * Arity 3: Filter the relevant edges across the given path.\n   * @param  {any}      source    - Source node.\n   * @param  {any}      target    - Target node.\n   * @param  {function} predicate - Predicate to use.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const filterName = 'filter' + name[0].toUpperCase() + name.slice(1);\n\n  Class.prototype[filterName] = function () {\n    const args = Array.prototype.slice.call(arguments);\n    const callback = args.pop();\n\n    const result = [];\n\n    args.push((e, ea, s, t, sa, ta, u) => {\n      if (callback(e, ea, s, t, sa, ta, u)) result.push(e);\n    });\n\n    this[forEachName].apply(this, args);\n\n    return result;\n  };\n\n  /**\n   * Function reducing the graph's relevant edges using the provided accumulator\n   * function.\n   *\n   * Arity 1: Reduce all the relevant edges.\n   * @param  {function} accumulator  - Accumulator to use.\n   * @param  {any}      initialValue - Initial value.\n   *\n   * Arity 2: Reduce all of a node's relevant edges.\n   * @param  {any}      node         - Target node.\n   * @param  {function} accumulator  - Accumulator to use.\n   * @param  {any}      initialValue - Initial value.\n   *\n   * Arity 3: Reduce the relevant edges across the given path.\n   * @param  {any}      source       - Source node.\n   * @param  {any}      target       - Target node.\n   * @param  {function} accumulator  - Accumulator to use.\n   * @param  {any}      initialValue - Initial value.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const reduceName = 'reduce' + name[0].toUpperCase() + name.slice(1);\n\n  Class.prototype[reduceName] = function () {\n    let args = Array.prototype.slice.call(arguments);\n\n    if (args.length < 2 || args.length > 4) {\n      throw new InvalidArgumentsGraphError(\n        `Graph.${reduceName}: invalid number of arguments (expecting 2, 3 or 4 and got ${args.length}).`\n      );\n    }\n\n    if (\n      typeof args[args.length - 1] === 'function' &&\n      typeof args[args.length - 2] !== 'function'\n    ) {\n      throw new InvalidArgumentsGraphError(\n        `Graph.${reduceName}: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.`\n      );\n    }\n\n    let callback;\n    let initialValue;\n\n    if (args.length === 2) {\n      callback = args[0];\n      initialValue = args[1];\n      args = [];\n    } else if (args.length === 3) {\n      callback = args[1];\n      initialValue = args[2];\n      args = [args[0]];\n    } else if (args.length === 4) {\n      callback = args[2];\n      initialValue = args[3];\n      args = [args[0], args[1]];\n    }\n\n    let accumulator = initialValue;\n\n    args.push((e, ea, s, t, sa, ta, u) => {\n      accumulator = callback(accumulator, e, ea, s, t, sa, ta, u);\n    });\n\n    this[forEachName].apply(this, args);\n\n    return accumulator;\n  };\n}\n\n/**\n * Function attaching a breakable edge callback iterator method to the Graph\n * prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachFindEdge(Class, description) {\n  const {name, type, direction} = description;\n\n  const findEdgeName = 'find' + name[0].toUpperCase() + name.slice(1, -1);\n\n  /**\n   * Function iterating over the graph's relevant edges in order to match\n   * one of them using the provided predicate function.\n   *\n   * Arity 1: Iterate over all the relevant edges.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 2: Iterate over all of a node's relevant edges.\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 3: Iterate over the relevant edges across the given path.\n   * @param  {any}      source   - Source node.\n   * @param  {any}      target   - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[findEdgeName] = function (source, target, callback) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type)\n      return false;\n\n    if (arguments.length === 1) {\n      callback = source;\n      return forEachEdge(true, this, type, callback);\n    }\n\n    if (arguments.length === 2) {\n      source = '' + source;\n      callback = target;\n\n      const nodeData = this._nodes.get(source);\n\n      if (typeof nodeData === 'undefined')\n        throw new NotFoundGraphError(\n          `Graph.${findEdgeName}: could not find the \"${source}\" node in the graph.`\n        );\n\n      // Iterating over a node's edges\n      // TODO: maybe attach the sub method to the instance dynamically?\n      return forEachEdgeForNode(\n        true,\n        this.multi,\n        type === 'mixed' ? this.type : type,\n        direction,\n        nodeData,\n        callback\n      );\n    }\n\n    if (arguments.length === 3) {\n      source = '' + source;\n      target = '' + target;\n\n      const sourceData = this._nodes.get(source);\n\n      if (!sourceData)\n        throw new NotFoundGraphError(\n          `Graph.${findEdgeName}:  could not find the \"${source}\" source node in the graph.`\n        );\n\n      if (!this._nodes.has(target))\n        throw new NotFoundGraphError(\n          `Graph.${findEdgeName}:  could not find the \"${target}\" target node in the graph.`\n        );\n\n      // Iterating over the edges between source & target\n      return forEachEdgeForPath(\n        true,\n        type,\n        this.multi,\n        direction,\n        sourceData,\n        target,\n        callback\n      );\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.${findEdgeName}: too many arguments (expecting 1, 2 or 3 and got ${arguments.length}).`\n    );\n  };\n\n  /**\n   * Function iterating over the graph's relevant edges in order to assert\n   * whether any one of them matches the provided predicate function.\n   *\n   * Arity 1: Iterate over all the relevant edges.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 2: Iterate over all of a node's relevant edges.\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 3: Iterate over the relevant edges across the given path.\n   * @param  {any}      source   - Source node.\n   * @param  {any}      target   - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const someName = 'some' + name[0].toUpperCase() + name.slice(1, -1);\n\n  Class.prototype[someName] = function () {\n    const args = Array.prototype.slice.call(arguments);\n    const callback = args.pop();\n\n    args.push((e, ea, s, t, sa, ta, u) => {\n      return callback(e, ea, s, t, sa, ta, u);\n    });\n\n    const found = this[findEdgeName].apply(this, args);\n\n    if (found) return true;\n\n    return false;\n  };\n\n  /**\n   * Function iterating over the graph's relevant edges in order to assert\n   * whether all of them matche the provided predicate function.\n   *\n   * Arity 1: Iterate over all the relevant edges.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 2: Iterate over all of a node's relevant edges.\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 3: Iterate over the relevant edges across the given path.\n   * @param  {any}      source   - Source node.\n   * @param  {any}      target   - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const everyName = 'every' + name[0].toUpperCase() + name.slice(1, -1);\n\n  Class.prototype[everyName] = function () {\n    const args = Array.prototype.slice.call(arguments);\n    const callback = args.pop();\n\n    args.push((e, ea, s, t, sa, ta, u) => {\n      return !callback(e, ea, s, t, sa, ta, u);\n    });\n\n    const found = this[findEdgeName].apply(this, args);\n\n    if (found) return false;\n\n    return true;\n  };\n}\n\n/**\n * Function attaching an edge iterator method to the Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachEdgeIteratorCreator(Class, description) {\n  const {name: originalName, type, direction} = description;\n\n  const name = originalName.slice(0, -1) + 'Entries';\n\n  /**\n   * Function returning an iterator over the graph's edges.\n   *\n   * Arity 0: Iterate over all the relevant edges.\n   *\n   * Arity 1: Iterate over all of a node's relevant edges.\n   * @param  {any}   node   - Target node.\n   *\n   * Arity 2: Iterate over the relevant edges across the given path.\n   * @param  {any}   source - Source node.\n   * @param  {any}   target - Target node.\n   *\n   * @return {array|number} - The edges or the number of edges.\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[name] = function (source, target) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type)\n      return Iterator.empty();\n\n    if (!arguments.length) return createEdgeIterator(this, type);\n\n    if (arguments.length === 1) {\n      source = '' + source;\n\n      const sourceData = this._nodes.get(source);\n\n      if (!sourceData)\n        throw new NotFoundGraphError(\n          `Graph.${name}: could not find the \"${source}\" node in the graph.`\n        );\n\n      // Iterating over a node's edges\n      return createEdgeIteratorForNode(type, direction, sourceData);\n    }\n\n    if (arguments.length === 2) {\n      source = '' + source;\n      target = '' + target;\n\n      const sourceData = this._nodes.get(source);\n\n      if (!sourceData)\n        throw new NotFoundGraphError(\n          `Graph.${name}:  could not find the \"${source}\" source node in the graph.`\n        );\n\n      if (!this._nodes.has(target))\n        throw new NotFoundGraphError(\n          `Graph.${name}:  could not find the \"${target}\" target node in the graph.`\n        );\n\n      // Iterating over the edges between source & target\n      return createEdgeIteratorForPath(type, direction, sourceData, target);\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.${name}: too many arguments (expecting 0, 1 or 2 and got ${arguments.length}).`\n    );\n  };\n}\n\n/**\n * Function attaching every edge iteration method to the Graph class.\n *\n * @param {function} Graph - Graph class.\n */\nexport default function attachEdgeIterationMethods(Graph) {\n  EDGES_ITERATION.forEach(description => {\n    attachEdgeArrayCreator(Graph, description);\n    attachForEachEdge(Graph, description);\n    attachFindEdge(Graph, description);\n    attachEdgeIteratorCreator(Graph, description);\n  });\n}\n","/**\n * Graphology Neighbor Iteration\n * ==============================\n *\n * Attaching some methods to the Graph class to be able to iterate over\n * neighbors.\n */\nimport Iterator from 'obliterator/iterator';\nimport chain from 'obliterator/chain';\n\nimport {NotFoundGraphError, InvalidArgumentsGraphError} from '../errors';\n\n/**\n * Definitions.\n */\nconst NEIGHBORS_ITERATION = [\n  {\n    name: 'neighbors',\n    type: 'mixed'\n  },\n  {\n    name: 'inNeighbors',\n    type: 'directed',\n    direction: 'in'\n  },\n  {\n    name: 'outNeighbors',\n    type: 'directed',\n    direction: 'out'\n  },\n  {\n    name: 'inboundNeighbors',\n    type: 'mixed',\n    direction: 'in'\n  },\n  {\n    name: 'outboundNeighbors',\n    type: 'mixed',\n    direction: 'out'\n  },\n  {\n    name: 'directedNeighbors',\n    type: 'directed'\n  },\n  {\n    name: 'undirectedNeighbors',\n    type: 'undirected'\n  }\n];\n\n/**\n * Helpers.\n */\nfunction CompositeSetWrapper() {\n  this.A = null;\n  this.B = null;\n}\n\nCompositeSetWrapper.prototype.wrap = function (set) {\n  if (this.A === null) this.A = set;\n  else if (this.B === null) this.B = set;\n};\n\nCompositeSetWrapper.prototype.has = function (key) {\n  if (this.A !== null && key in this.A) return true;\n  if (this.B !== null && key in this.B) return true;\n  return false;\n};\n\n/**\n * Function iterating over the given node's relevant neighbors to match\n * one of them using a predicated function.\n *\n * @param  {string}   type      - Type of neighbors.\n * @param  {string}   direction - Direction.\n * @param  {any}      nodeData  - Target node's data.\n * @param  {function} callback  - Callback to use.\n */\nfunction forEachInObjectOnce(breakable, visited, nodeData, object, callback) {\n  for (const k in object) {\n    const edgeData = object[k];\n\n    const sourceData = edgeData.source;\n    const targetData = edgeData.target;\n\n    const neighborData = sourceData === nodeData ? targetData : sourceData;\n\n    if (visited && visited.has(neighborData.key)) continue;\n\n    const shouldBreak = callback(neighborData.key, neighborData.attributes);\n\n    if (breakable && shouldBreak) return neighborData.key;\n  }\n\n  return;\n}\n\nfunction forEachNeighbor(breakable, type, direction, nodeData, callback) {\n  // If we want only undirected or in or out, we can roll some optimizations\n  if (type !== 'mixed') {\n    if (type === 'undirected')\n      return forEachInObjectOnce(\n        breakable,\n        null,\n        nodeData,\n        nodeData.undirected,\n        callback\n      );\n\n    if (typeof direction === 'string')\n      return forEachInObjectOnce(\n        breakable,\n        null,\n        nodeData,\n        nodeData[direction],\n        callback\n      );\n  }\n\n  // Else we need to keep a set of neighbors not to return duplicates\n  // We cheat by querying the other adjacencies\n  const visited = new CompositeSetWrapper();\n\n  let found;\n\n  if (type !== 'undirected') {\n    if (direction !== 'out') {\n      found = forEachInObjectOnce(\n        breakable,\n        null,\n        nodeData,\n        nodeData.in,\n        callback\n      );\n\n      if (breakable && found) return found;\n\n      visited.wrap(nodeData.in);\n    }\n    if (direction !== 'in') {\n      found = forEachInObjectOnce(\n        breakable,\n        visited,\n        nodeData,\n        nodeData.out,\n        callback\n      );\n\n      if (breakable && found) return found;\n\n      visited.wrap(nodeData.out);\n    }\n  }\n\n  if (type !== 'directed') {\n    found = forEachInObjectOnce(\n      breakable,\n      visited,\n      nodeData,\n      nodeData.undirected,\n      callback\n    );\n\n    if (breakable && found) return found;\n  }\n\n  return;\n}\n\n/**\n * Function creating an array of relevant neighbors for the given node.\n *\n * @param  {string}       type      - Type of neighbors.\n * @param  {string}       direction - Direction.\n * @param  {any}          nodeData  - Target node's data.\n * @return {Array}                  - The list of neighbors.\n */\nfunction createNeighborArrayForNode(type, direction, nodeData) {\n  // If we want only undirected or in or out, we can roll some optimizations\n  if (type !== 'mixed') {\n    if (type === 'undirected') return Object.keys(nodeData.undirected);\n\n    if (typeof direction === 'string') return Object.keys(nodeData[direction]);\n  }\n\n  const neighbors = [];\n\n  forEachNeighbor(false, type, direction, nodeData, function (key) {\n    neighbors.push(key);\n  });\n\n  return neighbors;\n}\n\n/**\n * Function returning an iterator over the given node's relevant neighbors.\n *\n * @param  {string}   type      - Type of neighbors.\n * @param  {string}   direction - Direction.\n * @param  {any}      nodeData  - Target node's data.\n * @return {Iterator}\n */\nfunction createDedupedObjectIterator(visited, nodeData, object) {\n  const keys = Object.keys(object);\n  const l = keys.length;\n\n  let i = 0;\n\n  return new Iterator(function next() {\n    let neighborData = null;\n\n    do {\n      if (i >= l) {\n        if (visited) visited.wrap(object);\n        return {done: true};\n      }\n\n      const edgeData = object[keys[i++]];\n\n      const sourceData = edgeData.source;\n      const targetData = edgeData.target;\n\n      neighborData = sourceData === nodeData ? targetData : sourceData;\n\n      if (visited && visited.has(neighborData.key)) {\n        neighborData = null;\n        continue;\n      }\n    } while (neighborData === null);\n\n    return {\n      done: false,\n      value: {neighbor: neighborData.key, attributes: neighborData.attributes}\n    };\n  });\n}\n\nfunction createNeighborIterator(type, direction, nodeData) {\n  // If we want only undirected or in or out, we can roll some optimizations\n  if (type !== 'mixed') {\n    if (type === 'undirected')\n      return createDedupedObjectIterator(null, nodeData, nodeData.undirected);\n\n    if (typeof direction === 'string')\n      return createDedupedObjectIterator(null, nodeData, nodeData[direction]);\n  }\n\n  let iterator = Iterator.empty();\n\n  // Else we need to keep a set of neighbors not to return duplicates\n  // We cheat by querying the other adjacencies\n  const visited = new CompositeSetWrapper();\n\n  if (type !== 'undirected') {\n    if (direction !== 'out') {\n      iterator = chain(\n        iterator,\n        createDedupedObjectIterator(visited, nodeData, nodeData.in)\n      );\n    }\n    if (direction !== 'in') {\n      iterator = chain(\n        iterator,\n        createDedupedObjectIterator(visited, nodeData, nodeData.out)\n      );\n    }\n  }\n\n  if (type !== 'directed') {\n    iterator = chain(\n      iterator,\n      createDedupedObjectIterator(visited, nodeData, nodeData.undirected)\n    );\n  }\n\n  return iterator;\n}\n\n/**\n * Function attaching a neighbors array creator method to the Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachNeighborArrayCreator(Class, description) {\n  const {name, type, direction} = description;\n\n  /**\n   * Function returning an array of certain neighbors.\n   *\n   * @param  {any}   node   - Target node.\n   * @return {array} - The neighbors of neighbors.\n   *\n   * @throws {Error} - Will throw if node is not found in the graph.\n   */\n  Class.prototype[name] = function (node) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type)\n      return [];\n\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (typeof nodeData === 'undefined')\n      throw new NotFoundGraphError(\n        `Graph.${name}: could not find the \"${node}\" node in the graph.`\n      );\n\n    // Here, we want to iterate over a node's relevant neighbors\n    return createNeighborArrayForNode(\n      type === 'mixed' ? this.type : type,\n      direction,\n      nodeData\n    );\n  };\n}\n\n/**\n * Function attaching a neighbors callback iterator method to the Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachForEachNeighbor(Class, description) {\n  const {name, type, direction} = description;\n\n  const forEachName = 'forEach' + name[0].toUpperCase() + name.slice(1, -1);\n\n  /**\n   * Function iterating over all the relevant neighbors using a callback.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[forEachName] = function (node, callback) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type) return;\n\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (typeof nodeData === 'undefined')\n      throw new NotFoundGraphError(\n        `Graph.${forEachName}: could not find the \"${node}\" node in the graph.`\n      );\n\n    // Here, we want to iterate over a node's relevant neighbors\n    forEachNeighbor(\n      false,\n      type === 'mixed' ? this.type : type,\n      direction,\n      nodeData,\n      callback\n    );\n  };\n\n  /**\n   * Function mapping the relevant neighbors using a callback.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const mapName = 'map' + name[0].toUpperCase() + name.slice(1);\n\n  Class.prototype[mapName] = function (node, callback) {\n    // TODO: optimize when size is known beforehand\n    const result = [];\n\n    this[forEachName](node, (n, a) => {\n      result.push(callback(n, a));\n    });\n\n    return result;\n  };\n\n  /**\n   * Function filtering the relevant neighbors using a callback.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const filterName = 'filter' + name[0].toUpperCase() + name.slice(1);\n\n  Class.prototype[filterName] = function (node, callback) {\n    const result = [];\n\n    this[forEachName](node, (n, a) => {\n      if (callback(n, a)) result.push(n);\n    });\n\n    return result;\n  };\n\n  /**\n   * Function reducing the relevant neighbors using a callback.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const reduceName = 'reduce' + name[0].toUpperCase() + name.slice(1);\n\n  Class.prototype[reduceName] = function (node, callback, initialValue) {\n    if (arguments.length < 3)\n      throw new InvalidArgumentsGraphError(\n        `Graph.${reduceName}: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.`\n      );\n\n    let accumulator = initialValue;\n\n    this[forEachName](node, (n, a) => {\n      accumulator = callback(accumulator, n, a);\n    });\n\n    return accumulator;\n  };\n}\n\n/**\n * Function attaching a breakable neighbors callback iterator method to the\n * Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachFindNeighbor(Class, description) {\n  const {name, type, direction} = description;\n\n  const capitalizedSingular = name[0].toUpperCase() + name.slice(1, -1);\n\n  const findName = 'find' + capitalizedSingular;\n\n  /**\n   * Function iterating over all the relevant neighbors using a callback.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[findName] = function (node, callback) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type) return;\n\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (typeof nodeData === 'undefined')\n      throw new NotFoundGraphError(\n        `Graph.${findName}: could not find the \"${node}\" node in the graph.`\n      );\n\n    // Here, we want to iterate over a node's relevant neighbors\n    return forEachNeighbor(\n      true,\n      type === 'mixed' ? this.type : type,\n      direction,\n      nodeData,\n      callback\n    );\n  };\n\n  /**\n   * Function iterating over all the relevant neighbors to find if any of them\n   * matches the given predicate.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const someName = 'some' + capitalizedSingular;\n\n  Class.prototype[someName] = function (node, callback) {\n    const found = this[findName](node, callback);\n\n    if (found) return true;\n\n    return false;\n  };\n\n  /**\n   * Function iterating over all the relevant neighbors to find if all of them\n   * matche the given predicate.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const everyName = 'every' + capitalizedSingular;\n\n  Class.prototype[everyName] = function (node, callback) {\n    const found = this[findName](node, (n, a) => {\n      return !callback(n, a);\n    });\n\n    if (found) return false;\n\n    return true;\n  };\n}\n\n/**\n * Function attaching a neighbors callback iterator method to the Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachNeighborIteratorCreator(Class, description) {\n  const {name, type, direction} = description;\n\n  const iteratorName = name.slice(0, -1) + 'Entries';\n\n  /**\n   * Function returning an iterator over all the relevant neighbors.\n   *\n   * @param  {any}      node     - Target node.\n   * @return {Iterator}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[iteratorName] = function (node) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type)\n      return Iterator.empty();\n\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (typeof nodeData === 'undefined')\n      throw new NotFoundGraphError(\n        `Graph.${iteratorName}: could not find the \"${node}\" node in the graph.`\n      );\n\n    // Here, we want to iterate over a node's relevant neighbors\n    return createNeighborIterator(\n      type === 'mixed' ? this.type : type,\n      direction,\n      nodeData\n    );\n  };\n}\n\n/**\n * Function attaching every neighbor iteration method to the Graph class.\n *\n * @param {function} Graph - Graph class.\n */\nexport default function attachNeighborIterationMethods(Graph) {\n  NEIGHBORS_ITERATION.forEach(description => {\n    attachNeighborArrayCreator(Graph, description);\n    attachForEachNeighbor(Graph, description);\n    attachFindNeighbor(Graph, description);\n    attachNeighborIteratorCreator(Graph, description);\n  });\n}\n","/**\n * Graphology Adjacency Iteration\n * ===============================\n *\n * Attaching some methods to the Graph class to be able to iterate over a\n * graph's adjacency.\n */\n\n/**\n * Function iterating over a simple graph's adjacency using a callback.\n *\n * @param {boolean}  breakable         - Can we break?\n * @param {boolean}  assymetric        - Whether to emit undirected edges only once.\n * @param {boolean}  disconnectedNodes - Whether to emit disconnected nodes.\n * @param {Graph}    graph             - Target Graph instance.\n * @param {callback} function          - Iteration callback.\n */\nexport function forEachAdjacency(\n  breakable,\n  assymetric,\n  disconnectedNodes,\n  graph,\n  callback\n) {\n  const iterator = graph._nodes.values();\n\n  const type = graph.type;\n\n  let step, sourceData, neighbor, adj, edgeData, targetData, shouldBreak;\n\n  while (((step = iterator.next()), step.done !== true)) {\n    let hasEdges = false;\n\n    sourceData = step.value;\n\n    if (type !== 'undirected') {\n      adj = sourceData.out;\n\n      for (neighbor in adj) {\n        edgeData = adj[neighbor];\n\n        do {\n          targetData = edgeData.target;\n\n          hasEdges = true;\n          shouldBreak = callback(\n            sourceData.key,\n            targetData.key,\n            sourceData.attributes,\n            targetData.attributes,\n            edgeData.key,\n            edgeData.attributes,\n            edgeData.undirected\n          );\n\n          if (breakable && shouldBreak) return edgeData;\n\n          edgeData = edgeData.next;\n        } while (edgeData);\n      }\n    }\n\n    if (type !== 'directed') {\n      adj = sourceData.undirected;\n\n      for (neighbor in adj) {\n        if (assymetric && sourceData.key > neighbor) continue;\n\n        edgeData = adj[neighbor];\n\n        do {\n          targetData = edgeData.target;\n\n          if (targetData.key !== neighbor) targetData = edgeData.source;\n\n          hasEdges = true;\n          shouldBreak = callback(\n            sourceData.key,\n            targetData.key,\n            sourceData.attributes,\n            targetData.attributes,\n            edgeData.key,\n            edgeData.attributes,\n            edgeData.undirected\n          );\n\n          if (breakable && shouldBreak) return edgeData;\n\n          edgeData = edgeData.next;\n        } while (edgeData);\n      }\n    }\n\n    if (disconnectedNodes && !hasEdges) {\n      shouldBreak = callback(\n        sourceData.key,\n        null,\n        sourceData.attributes,\n        null,\n        null,\n        null,\n        null\n      );\n\n      if (breakable && shouldBreak) return null;\n    }\n  }\n\n  return;\n}\n","/**\n * Graphology Serialization Utilities\n * ===================================\n *\n * Collection of functions used by the graph serialization schemes.\n */\nimport {InvalidArgumentsGraphError} from './errors';\nimport {assign, isPlainObject, isEmpty} from './utils';\n\n/**\n * Formats internal node data into a serialized node.\n *\n * @param  {any}    key  - The node's key.\n * @param  {object} data - Internal node's data.\n * @return {array}       - The serialized node.\n */\nexport function serializeNode(key, data) {\n  const serialized = {key};\n\n  if (!isEmpty(data.attributes))\n    serialized.attributes = assign({}, data.attributes);\n\n  return serialized;\n}\n\n/**\n * Formats internal edge data into a serialized edge.\n *\n * @param  {string} type - The graph's type.\n * @param  {any}    key  - The edge's key.\n * @param  {object} data - Internal edge's data.\n * @return {array}       - The serialized edge.\n */\nexport function serializeEdge(type, key, data) {\n  const serialized = {\n    key,\n    source: data.source.key,\n    target: data.target.key\n  };\n\n  if (!isEmpty(data.attributes))\n    serialized.attributes = assign({}, data.attributes);\n\n  if (type === 'mixed' && data.undirected) serialized.undirected = true;\n\n  return serialized;\n}\n\n/**\n * Checks whether the given value is a serialized node.\n *\n * @param  {mixed} value - Target value.\n * @return {string|null}\n */\nexport function validateSerializedNode(value) {\n  if (!isPlainObject(value))\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: invalid serialized node. A serialized node should be a plain object with at least a \"key\" property.'\n    );\n\n  if (!('key' in value))\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: serialized node is missing its key.'\n    );\n\n  if (\n    'attributes' in value &&\n    (!isPlainObject(value.attributes) || value.attributes === null)\n  )\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: invalid attributes. Attributes should be a plain object, null or omitted.'\n    );\n}\n\n/**\n * Checks whether the given value is a serialized edge.\n *\n * @param  {mixed} value - Target value.\n * @return {string|null}\n */\nexport function validateSerializedEdge(value) {\n  if (!isPlainObject(value))\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: invalid serialized edge. A serialized edge should be a plain object with at least a \"source\" & \"target\" property.'\n    );\n\n  if (!('source' in value))\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: serialized edge is missing its source.'\n    );\n\n  if (!('target' in value))\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: serialized edge is missing its target.'\n    );\n\n  if (\n    'attributes' in value &&\n    (!isPlainObject(value.attributes) || value.attributes === null)\n  )\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: invalid attributes. Attributes should be a plain object, null or omitted.'\n    );\n\n  if ('undirected' in value && typeof value.undirected !== 'boolean')\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: invalid undirectedness information. Undirected should be boolean or omitted.'\n    );\n}\n","/* eslint no-nested-ternary: 0 */\n/**\n * Graphology Reference Implementation\n * ====================================\n *\n * Reference implementation of the graphology specs.\n */\nimport {EventEmitter} from 'events';\nimport Iterator from 'obliterator/iterator';\nimport take from 'obliterator/take';\n\nimport {\n  InvalidArgumentsGraphError,\n  NotFoundGraphError,\n  UsageGraphError\n} from './errors';\n\nimport {\n  MixedNodeData,\n  DirectedNodeData,\n  UndirectedNodeData,\n  EdgeData\n} from './data';\n\nimport attachNodeAttributesMethods from './attributes/nodes';\nimport attachEdgeAttributesMethods from './attributes/edges';\nimport attachEdgeIterationMethods from './iteration/edges';\nimport attachNeighborIterationMethods from './iteration/neighbors';\nimport {forEachAdjacency} from './iteration/adjacency';\n\nimport {\n  serializeNode,\n  serializeEdge,\n  validateSerializedNode,\n  validateSerializedEdge\n} from './serialization';\n\nimport {\n  assign,\n  getMatchingEdge,\n  isPlainObject,\n  privateProperty,\n  readOnlyProperty,\n  incrementalIdStartingFromRandomByte,\n  validateHints\n} from './utils';\n\n/**\n * Constants.\n */\nconst INSTANCE_ID = incrementalIdStartingFromRandomByte();\n\n/**\n * Enums.\n */\nconst TYPES = new Set(['directed', 'undirected', 'mixed']);\n\nconst EMITTER_PROPS = new Set([\n  'domain',\n  '_events',\n  '_eventsCount',\n  '_maxListeners'\n]);\n\nconst EDGE_ADD_METHODS = [\n  {\n    name: verb => `${verb}Edge`,\n    generateKey: true\n  },\n  {\n    name: verb => `${verb}DirectedEdge`,\n    generateKey: true,\n    type: 'directed'\n  },\n  {\n    name: verb => `${verb}UndirectedEdge`,\n    generateKey: true,\n    type: 'undirected'\n  },\n  {\n    name: verb => `${verb}EdgeWithKey`\n  },\n  {\n    name: verb => `${verb}DirectedEdgeWithKey`,\n    type: 'directed'\n  },\n  {\n    name: verb => `${verb}UndirectedEdgeWithKey`,\n    type: 'undirected'\n  }\n];\n\n/**\n * Default options.\n */\nconst DEFAULTS = {\n  allowSelfLoops: true,\n  multi: false,\n  type: 'mixed'\n};\n\n/**\n * Abstract functions used by the Graph class for various methods.\n */\n\n/**\n * Internal method used to add a node to the given graph\n *\n * @param  {Graph}   graph           - Target graph.\n * @param  {any}     node            - The node's key.\n * @param  {object}  [attributes]    - Optional attributes.\n * @return {NodeData}                - Created node data.\n */\nfunction addNode(graph, node, attributes) {\n  if (attributes && !isPlainObject(attributes))\n    throw new InvalidArgumentsGraphError(\n      `Graph.addNode: invalid attributes. Expecting an object but got \"${attributes}\"`\n    );\n\n  // String coercion\n  node = '' + node;\n  attributes = attributes || {};\n\n  if (graph._nodes.has(node))\n    throw new UsageGraphError(\n      `Graph.addNode: the \"${node}\" node already exist in the graph.`\n    );\n\n  const data = new graph.NodeDataClass(node, attributes);\n\n  // Adding the node to internal register\n  graph._nodes.set(node, data);\n\n  // Emitting\n  graph.emit('nodeAdded', {\n    key: node,\n    attributes\n  });\n\n  return data;\n}\n\n/**\n * Same as the above but without sanity checks because we call this in contexts\n * where necessary checks were already done.\n */\nfunction unsafeAddNode(graph, node, attributes) {\n  const data = new graph.NodeDataClass(node, attributes);\n\n  graph._nodes.set(node, data);\n\n  graph.emit('nodeAdded', {\n    key: node,\n    attributes\n  });\n\n  return data;\n}\n\n/**\n * Internal method used to add an arbitrary edge to the given graph.\n *\n * @param  {Graph}   graph           - Target graph.\n * @param  {string}  name            - Name of the child method for errors.\n * @param  {boolean} mustGenerateKey - Should the graph generate an id?\n * @param  {boolean} undirected      - Whether the edge is undirected.\n * @param  {any}     edge            - The edge's key.\n * @param  {any}     source          - The source node.\n * @param  {any}     target          - The target node.\n * @param  {object}  [attributes]    - Optional attributes.\n * @return {any}                     - The edge.\n *\n * @throws {Error} - Will throw if the graph is of the wrong type.\n * @throws {Error} - Will throw if the given attributes are not an object.\n * @throws {Error} - Will throw if source or target doesn't exist.\n * @throws {Error} - Will throw if the edge already exist.\n */\nfunction addEdge(\n  graph,\n  name,\n  mustGenerateKey,\n  undirected,\n  edge,\n  source,\n  target,\n  attributes\n) {\n  // Checking validity of operation\n  if (!undirected && graph.type === 'undirected')\n    throw new UsageGraphError(\n      `Graph.${name}: you cannot add a directed edge to an undirected graph. Use the #.addEdge or #.addUndirectedEdge instead.`\n    );\n\n  if (undirected && graph.type === 'directed')\n    throw new UsageGraphError(\n      `Graph.${name}: you cannot add an undirected edge to a directed graph. Use the #.addEdge or #.addDirectedEdge instead.`\n    );\n\n  if (attributes && !isPlainObject(attributes))\n    throw new InvalidArgumentsGraphError(\n      `Graph.${name}: invalid attributes. Expecting an object but got \"${attributes}\"`\n    );\n\n  // Coercion of source & target:\n  source = '' + source;\n  target = '' + target;\n  attributes = attributes || {};\n\n  if (!graph.allowSelfLoops && source === target)\n    throw new UsageGraphError(\n      `Graph.${name}: source & target are the same (\"${source}\"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false.`\n    );\n\n  const sourceData = graph._nodes.get(source),\n    targetData = graph._nodes.get(target);\n\n  if (!sourceData)\n    throw new NotFoundGraphError(\n      `Graph.${name}: source node \"${source}\" not found.`\n    );\n\n  if (!targetData)\n    throw new NotFoundGraphError(\n      `Graph.${name}: target node \"${target}\" not found.`\n    );\n\n  // Must the graph generate an id for this edge?\n  const eventData = {\n    key: null,\n    undirected,\n    source,\n    target,\n    attributes\n  };\n\n  if (mustGenerateKey) {\n    // NOTE: in this case we can guarantee that the key does not already\n    // exist and is already correctly casted as a string\n    edge = graph._edgeKeyGenerator();\n  } else {\n    // Coercion of edge key\n    edge = '' + edge;\n\n    // Here, we have a key collision\n    if (graph._edges.has(edge))\n      throw new UsageGraphError(\n        `Graph.${name}: the \"${edge}\" edge already exists in the graph.`\n      );\n  }\n\n  // Here, we might have a source / target collision\n  if (\n    !graph.multi &&\n    (undirected\n      ? typeof sourceData.undirected[target] !== 'undefined'\n      : typeof sourceData.out[target] !== 'undefined')\n  ) {\n    throw new UsageGraphError(\n      `Graph.${name}: an edge linking \"${source}\" to \"${target}\" already exists. If you really want to add multiple edges linking those nodes, you should create a multi graph by using the 'multi' option.`\n    );\n  }\n\n  // Storing some data\n  const edgeData = new EdgeData(\n    undirected,\n    edge,\n    sourceData,\n    targetData,\n    attributes\n  );\n\n  // Adding the edge to the internal register\n  graph._edges.set(edge, edgeData);\n\n  // Incrementing node degree counters\n  const isSelfLoop = source === target;\n\n  if (undirected) {\n    sourceData.undirectedDegree++;\n    targetData.undirectedDegree++;\n\n    if (isSelfLoop) {\n      sourceData.undirectedLoops++;\n      graph._undirectedSelfLoopCount++;\n    }\n  } else {\n    sourceData.outDegree++;\n    targetData.inDegree++;\n\n    if (isSelfLoop) {\n      sourceData.directedLoops++;\n      graph._directedSelfLoopCount++;\n    }\n  }\n\n  // Updating relevant index\n  if (graph.multi) edgeData.attachMulti();\n  else edgeData.attach();\n\n  if (undirected) graph._undirectedSize++;\n  else graph._directedSize++;\n\n  // Emitting\n  eventData.key = edge;\n\n  graph.emit('edgeAdded', eventData);\n\n  return edge;\n}\n\n/**\n * Internal method used to add an arbitrary edge to the given graph.\n *\n * @param  {Graph}   graph           - Target graph.\n * @param  {string}  name            - Name of the child method for errors.\n * @param  {boolean} mustGenerateKey - Should the graph generate an id?\n * @param  {boolean} undirected      - Whether the edge is undirected.\n * @param  {any}     edge            - The edge's key.\n * @param  {any}     source          - The source node.\n * @param  {any}     target          - The target node.\n * @param  {object}  [attributes]    - Optional attributes.\n * @param  {boolean} [asUpdater]       - Are we updating or merging?\n * @return {any}                     - The edge.\n *\n * @throws {Error} - Will throw if the graph is of the wrong type.\n * @throws {Error} - Will throw if the given attributes are not an object.\n * @throws {Error} - Will throw if source or target doesn't exist.\n * @throws {Error} - Will throw if the edge already exist.\n */\nfunction mergeEdge(\n  graph,\n  name,\n  mustGenerateKey,\n  undirected,\n  edge,\n  source,\n  target,\n  attributes,\n  asUpdater\n) {\n  // Checking validity of operation\n  if (!undirected && graph.type === 'undirected')\n    throw new UsageGraphError(\n      `Graph.${name}: you cannot merge/update a directed edge to an undirected graph. Use the #.mergeEdge/#.updateEdge or #.addUndirectedEdge instead.`\n    );\n\n  if (undirected && graph.type === 'directed')\n    throw new UsageGraphError(\n      `Graph.${name}: you cannot merge/update an undirected edge to a directed graph. Use the #.mergeEdge/#.updateEdge or #.addDirectedEdge instead.`\n    );\n\n  if (attributes) {\n    if (asUpdater) {\n      if (typeof attributes !== 'function')\n        throw new InvalidArgumentsGraphError(\n          `Graph.${name}: invalid updater function. Expecting a function but got \"${attributes}\"`\n        );\n    } else {\n      if (!isPlainObject(attributes))\n        throw new InvalidArgumentsGraphError(\n          `Graph.${name}: invalid attributes. Expecting an object but got \"${attributes}\"`\n        );\n    }\n  }\n\n  // Coercion of source & target:\n  source = '' + source;\n  target = '' + target;\n\n  let updater;\n\n  if (asUpdater) {\n    updater = attributes;\n    attributes = undefined;\n  }\n\n  if (!graph.allowSelfLoops && source === target)\n    throw new UsageGraphError(\n      `Graph.${name}: source & target are the same (\"${source}\"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false.`\n    );\n\n  let sourceData = graph._nodes.get(source);\n  let targetData = graph._nodes.get(target);\n  let edgeData;\n\n  // Do we need to handle duplicate?\n  let alreadyExistingEdgeData;\n\n  if (!mustGenerateKey) {\n    edgeData = graph._edges.get(edge);\n\n    if (edgeData) {\n      // Here, we need to ensure, if the user gave a key, that source & target\n      // are consistent\n      if (edgeData.source.key !== source || edgeData.target.key !== target) {\n        // If source or target inconsistent\n        if (\n          !undirected ||\n          edgeData.source.key !== target ||\n          edgeData.target.key !== source\n        ) {\n          // If directed, or source/target aren't flipped\n          throw new UsageGraphError(\n            `Graph.${name}: inconsistency detected when attempting to merge the \"${edge}\" edge with \"${source}\" source & \"${target}\" target vs. (\"${edgeData.source.key}\", \"${edgeData.target.key}\").`\n          );\n        }\n      }\n\n      alreadyExistingEdgeData = edgeData;\n    }\n  }\n\n  // Here, we might have a source / target collision\n  if (!alreadyExistingEdgeData && !graph.multi && sourceData) {\n    alreadyExistingEdgeData = undirected\n      ? sourceData.undirected[target]\n      : sourceData.out[target];\n  }\n\n  // Handling duplicates\n  if (alreadyExistingEdgeData) {\n    const info = [alreadyExistingEdgeData.key, false, false, false];\n\n    // We can skip the attribute merging part if the user did not provide them\n    if (asUpdater ? !updater : !attributes) return info;\n\n    // Updating the attributes\n    if (asUpdater) {\n      const oldAttributes = alreadyExistingEdgeData.attributes;\n      alreadyExistingEdgeData.attributes = updater(oldAttributes);\n\n      graph.emit('edgeAttributesUpdated', {\n        type: 'replace',\n        key: alreadyExistingEdgeData.key,\n        attributes: alreadyExistingEdgeData.attributes\n      });\n    }\n\n    // Merging the attributes\n    else {\n      assign(alreadyExistingEdgeData.attributes, attributes);\n\n      graph.emit('edgeAttributesUpdated', {\n        type: 'merge',\n        key: alreadyExistingEdgeData.key,\n        attributes: alreadyExistingEdgeData.attributes,\n        data: attributes\n      });\n    }\n\n    return info;\n  }\n\n  attributes = attributes || {};\n\n  if (asUpdater && updater) attributes = updater(attributes);\n\n  // Must the graph generate an id for this edge?\n  const eventData = {\n    key: null,\n    undirected,\n    source,\n    target,\n    attributes\n  };\n\n  if (mustGenerateKey) {\n    // NOTE: in this case we can guarantee that the key does not already\n    // exist and is already correctly casted as a string\n    edge = graph._edgeKeyGenerator();\n  } else {\n    // Coercion of edge key\n    edge = '' + edge;\n\n    // Here, we have a key collision\n    if (graph._edges.has(edge))\n      throw new UsageGraphError(\n        `Graph.${name}: the \"${edge}\" edge already exists in the graph.`\n      );\n  }\n\n  let sourceWasAdded = false;\n  let targetWasAdded = false;\n\n  if (!sourceData) {\n    sourceData = unsafeAddNode(graph, source, {});\n    sourceWasAdded = true;\n\n    if (source === target) {\n      targetData = sourceData;\n      targetWasAdded = true;\n    }\n  }\n  if (!targetData) {\n    targetData = unsafeAddNode(graph, target, {});\n    targetWasAdded = true;\n  }\n\n  // Storing some data\n  edgeData = new EdgeData(undirected, edge, sourceData, targetData, attributes);\n\n  // Adding the edge to the internal register\n  graph._edges.set(edge, edgeData);\n\n  // Incrementing node degree counters\n  const isSelfLoop = source === target;\n\n  if (undirected) {\n    sourceData.undirectedDegree++;\n    targetData.undirectedDegree++;\n\n    if (isSelfLoop) {\n      sourceData.undirectedLoops++;\n      graph._undirectedSelfLoopCount++;\n    }\n  } else {\n    sourceData.outDegree++;\n    targetData.inDegree++;\n\n    if (isSelfLoop) {\n      sourceData.directedLoops++;\n      graph._directedSelfLoopCount++;\n    }\n  }\n\n  // Updating relevant index\n  if (graph.multi) edgeData.attachMulti();\n  else edgeData.attach();\n\n  if (undirected) graph._undirectedSize++;\n  else graph._directedSize++;\n\n  // Emitting\n  eventData.key = edge;\n\n  graph.emit('edgeAdded', eventData);\n\n  return [edge, true, sourceWasAdded, targetWasAdded];\n}\n\n/**\n * Internal method used to drop an edge.\n *\n * @param  {Graph}    graph    - Target graph.\n * @param  {EdgeData} edgeData - Data of the edge to drop.\n */\nfunction dropEdgeFromData(graph, edgeData) {\n  // Dropping the edge from the register\n  graph._edges.delete(edgeData.key);\n\n  // Updating related degrees\n  const {source: sourceData, target: targetData, attributes} = edgeData;\n\n  const undirected = edgeData.undirected;\n\n  const isSelfLoop = sourceData === targetData;\n\n  if (undirected) {\n    sourceData.undirectedDegree--;\n    targetData.undirectedDegree--;\n\n    if (isSelfLoop) {\n      sourceData.undirectedLoops--;\n      graph._undirectedSelfLoopCount--;\n    }\n  } else {\n    sourceData.outDegree--;\n    targetData.inDegree--;\n\n    if (isSelfLoop) {\n      sourceData.directedLoops--;\n      graph._directedSelfLoopCount--;\n    }\n  }\n\n  // Clearing index\n  if (graph.multi) edgeData.detachMulti();\n  else edgeData.detach();\n\n  if (undirected) graph._undirectedSize--;\n  else graph._directedSize--;\n\n  // Emitting\n  graph.emit('edgeDropped', {\n    key: edgeData.key,\n    attributes,\n    source: sourceData.key,\n    target: targetData.key,\n    undirected\n  });\n}\n\n/**\n * Graph class\n *\n * @constructor\n * @param  {object}  [options] - Options:\n * @param  {boolean}   [allowSelfLoops] - Allow self loops?\n * @param  {string}    [type]           - Type of the graph.\n * @param  {boolean}   [map]            - Allow references as keys?\n * @param  {boolean}   [multi]          - Allow parallel edges?\n *\n * @throws {Error} - Will throw if the arguments are not valid.\n */\nexport default class Graph extends EventEmitter {\n  constructor(options) {\n    super();\n\n    //-- Solving options\n    options = assign({}, DEFAULTS, options);\n\n    // Enforcing options validity\n    if (typeof options.multi !== 'boolean')\n      throw new InvalidArgumentsGraphError(\n        `Graph.constructor: invalid 'multi' option. Expecting a boolean but got \"${options.multi}\".`\n      );\n\n    if (!TYPES.has(options.type))\n      throw new InvalidArgumentsGraphError(\n        `Graph.constructor: invalid 'type' option. Should be one of \"mixed\", \"directed\" or \"undirected\" but got \"${options.type}\".`\n      );\n\n    if (typeof options.allowSelfLoops !== 'boolean')\n      throw new InvalidArgumentsGraphError(\n        `Graph.constructor: invalid 'allowSelfLoops' option. Expecting a boolean but got \"${options.allowSelfLoops}\".`\n      );\n\n    //-- Private properties\n\n    // Utilities\n    const NodeDataClass =\n      options.type === 'mixed'\n        ? MixedNodeData\n        : options.type === 'directed'\n        ? DirectedNodeData\n        : UndirectedNodeData;\n\n    privateProperty(this, 'NodeDataClass', NodeDataClass);\n\n    // Internal edge key generator\n\n    // NOTE: this internal generator produce keys that are strings\n    // composed of a weird prefix, an incremental instance id starting from\n    // a random byte and finally an internal instance incremental id.\n    // All this to avoid intra-frame and cross-frame adversarial inputs\n    // that can force a single #.addEdge call to degenerate into a O(n)\n    // available key search loop.\n\n    // It also ensures that automatically generated edge keys are unlikely\n    // to produce collisions with arbitrary keys given by users.\n    const instancePrefix = 'geid_' + INSTANCE_ID() + '_';\n    let edgeId = 0;\n\n    const edgeKeyGenerator = () => {\n      let availableEdgeKey;\n\n      do {\n        availableEdgeKey = instancePrefix + edgeId++;\n      } while (this._edges.has(availableEdgeKey));\n\n      return availableEdgeKey;\n    };\n\n    // Indexes\n    privateProperty(this, '_attributes', {});\n    privateProperty(this, '_nodes', new Map());\n    privateProperty(this, '_edges', new Map());\n    privateProperty(this, '_directedSize', 0);\n    privateProperty(this, '_undirectedSize', 0);\n    privateProperty(this, '_directedSelfLoopCount', 0);\n    privateProperty(this, '_undirectedSelfLoopCount', 0);\n    privateProperty(this, '_edgeKeyGenerator', edgeKeyGenerator);\n\n    // Options\n    privateProperty(this, '_options', options);\n\n    // Emitter properties\n    EMITTER_PROPS.forEach(prop => privateProperty(this, prop, this[prop]));\n\n    //-- Properties readers\n    readOnlyProperty(this, 'order', () => this._nodes.size);\n    readOnlyProperty(this, 'size', () => this._edges.size);\n    readOnlyProperty(this, 'directedSize', () => this._directedSize);\n    readOnlyProperty(this, 'undirectedSize', () => this._undirectedSize);\n    readOnlyProperty(\n      this,\n      'selfLoopCount',\n      () => this._directedSelfLoopCount + this._undirectedSelfLoopCount\n    );\n    readOnlyProperty(\n      this,\n      'directedSelfLoopCount',\n      () => this._directedSelfLoopCount\n    );\n    readOnlyProperty(\n      this,\n      'undirectedSelfLoopCount',\n      () => this._undirectedSelfLoopCount\n    );\n    readOnlyProperty(this, 'multi', this._options.multi);\n    readOnlyProperty(this, 'type', this._options.type);\n    readOnlyProperty(this, 'allowSelfLoops', this._options.allowSelfLoops);\n    readOnlyProperty(this, 'implementation', () => 'graphology');\n  }\n\n  _resetInstanceCounters() {\n    this._directedSize = 0;\n    this._undirectedSize = 0;\n    this._directedSelfLoopCount = 0;\n    this._undirectedSelfLoopCount = 0;\n  }\n\n  /**---------------------------------------------------------------------------\n   * Read\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method returning whether the given node is found in the graph.\n   *\n   * @param  {any}     node - The node.\n   * @return {boolean}\n   */\n  hasNode(node) {\n    return this._nodes.has('' + node);\n  }\n\n  /**\n   * Method returning whether the given directed edge is found in the graph.\n   *\n   * Arity 1:\n   * @param  {any}     edge - The edge's key.\n   *\n   * Arity 2:\n   * @param  {any}     source - The edge's source.\n   * @param  {any}     target - The edge's target.\n   *\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the arguments are invalid.\n   */\n  hasDirectedEdge(source, target) {\n    // Early termination\n    if (this.type === 'undirected') return false;\n\n    if (arguments.length === 1) {\n      const edge = '' + source;\n\n      const edgeData = this._edges.get(edge);\n\n      return !!edgeData && !edgeData.undirected;\n    } else if (arguments.length === 2) {\n      source = '' + source;\n      target = '' + target;\n\n      // If the node source or the target is not in the graph we break\n      const nodeData = this._nodes.get(source);\n\n      if (!nodeData) return false;\n\n      // Is there a directed edge pointing toward target?\n      return nodeData.out.hasOwnProperty(target);\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.hasDirectedEdge: invalid arity (${arguments.length}, instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.`\n    );\n  }\n\n  /**\n   * Method returning whether the given undirected edge is found in the graph.\n   *\n   * Arity 1:\n   * @param  {any}     edge - The edge's key.\n   *\n   * Arity 2:\n   * @param  {any}     source - The edge's source.\n   * @param  {any}     target - The edge's target.\n   *\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the arguments are invalid.\n   */\n  hasUndirectedEdge(source, target) {\n    // Early termination\n    if (this.type === 'directed') return false;\n\n    if (arguments.length === 1) {\n      const edge = '' + source;\n\n      const edgeData = this._edges.get(edge);\n\n      return !!edgeData && edgeData.undirected;\n    } else if (arguments.length === 2) {\n      source = '' + source;\n      target = '' + target;\n\n      // If the node source or the target is not in the graph we break\n      const nodeData = this._nodes.get(source);\n\n      if (!nodeData) return false;\n\n      // Is there a directed edge pointing toward target?\n      return nodeData.undirected.hasOwnProperty(target);\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.hasDirectedEdge: invalid arity (${arguments.length}, instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.`\n    );\n  }\n\n  /**\n   * Method returning whether the given edge is found in the graph.\n   *\n   * Arity 1:\n   * @param  {any}     edge - The edge's key.\n   *\n   * Arity 2:\n   * @param  {any}     source - The edge's source.\n   * @param  {any}     target - The edge's target.\n   *\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the arguments are invalid.\n   */\n  hasEdge(source, target) {\n    if (arguments.length === 1) {\n      const edge = '' + source;\n\n      return this._edges.has(edge);\n    } else if (arguments.length === 2) {\n      source = '' + source;\n      target = '' + target;\n\n      // If the node source or the target is not in the graph we break\n      const nodeData = this._nodes.get(source);\n\n      if (!nodeData) return false;\n\n      // Is there a directed edge pointing toward target?\n      return (\n        (typeof nodeData.out !== 'undefined' &&\n          nodeData.out.hasOwnProperty(target)) ||\n        (typeof nodeData.undirected !== 'undefined' &&\n          nodeData.undirected.hasOwnProperty(target))\n      );\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.hasEdge: invalid arity (${arguments.length}, instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.`\n    );\n  }\n\n  /**\n   * Method returning the edge matching source & target in a directed fashion.\n   *\n   * @param  {any} source - The edge's source.\n   * @param  {any} target - The edge's target.\n   *\n   * @return {any|undefined}\n   *\n   * @throws {Error} - Will throw if the graph is multi.\n   * @throws {Error} - Will throw if source or target doesn't exist.\n   */\n  directedEdge(source, target) {\n    if (this.type === 'undirected') return;\n\n    source = '' + source;\n    target = '' + target;\n\n    if (this.multi)\n      throw new UsageGraphError(\n        'Graph.directedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.directedEdges instead.'\n      );\n\n    const sourceData = this._nodes.get(source);\n\n    if (!sourceData)\n      throw new NotFoundGraphError(\n        `Graph.directedEdge: could not find the \"${source}\" source node in the graph.`\n      );\n\n    if (!this._nodes.has(target))\n      throw new NotFoundGraphError(\n        `Graph.directedEdge: could not find the \"${target}\" target node in the graph.`\n      );\n\n    const edgeData = (sourceData.out && sourceData.out[target]) || undefined;\n\n    if (edgeData) return edgeData.key;\n  }\n\n  /**\n   * Method returning the edge matching source & target in a undirected fashion.\n   *\n   * @param  {any} source - The edge's source.\n   * @param  {any} target - The edge's target.\n   *\n   * @return {any|undefined}\n   *\n   * @throws {Error} - Will throw if the graph is multi.\n   * @throws {Error} - Will throw if source or target doesn't exist.\n   */\n  undirectedEdge(source, target) {\n    if (this.type === 'directed') return;\n\n    source = '' + source;\n    target = '' + target;\n\n    if (this.multi)\n      throw new UsageGraphError(\n        'Graph.undirectedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.undirectedEdges instead.'\n      );\n\n    const sourceData = this._nodes.get(source);\n\n    if (!sourceData)\n      throw new NotFoundGraphError(\n        `Graph.undirectedEdge: could not find the \"${source}\" source node in the graph.`\n      );\n\n    if (!this._nodes.has(target))\n      throw new NotFoundGraphError(\n        `Graph.undirectedEdge: could not find the \"${target}\" target node in the graph.`\n      );\n\n    const edgeData =\n      (sourceData.undirected && sourceData.undirected[target]) || undefined;\n\n    if (edgeData) return edgeData.key;\n  }\n\n  /**\n   * Method returning the edge matching source & target in a mixed fashion.\n   *\n   * @param  {any} source - The edge's source.\n   * @param  {any} target - The edge's target.\n   *\n   * @return {any|undefined}\n   *\n   * @throws {Error} - Will throw if the graph is multi.\n   * @throws {Error} - Will throw if source or target doesn't exist.\n   */\n  edge(source, target) {\n    if (this.multi)\n      throw new UsageGraphError(\n        'Graph.edge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.edges instead.'\n      );\n\n    source = '' + source;\n    target = '' + target;\n\n    const sourceData = this._nodes.get(source);\n\n    if (!sourceData)\n      throw new NotFoundGraphError(\n        `Graph.edge: could not find the \"${source}\" source node in the graph.`\n      );\n\n    if (!this._nodes.has(target))\n      throw new NotFoundGraphError(\n        `Graph.edge: could not find the \"${target}\" target node in the graph.`\n      );\n\n    const edgeData =\n      (sourceData.out && sourceData.out[target]) ||\n      (sourceData.undirected && sourceData.undirected[target]) ||\n      undefined;\n\n    if (edgeData) return edgeData.key;\n  }\n\n  /**\n   * Method returning whether two nodes are directed neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areDirectedNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areDirectedNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return false;\n\n    return neighbor in nodeData.in || neighbor in nodeData.out;\n  }\n\n  /**\n   * Method returning whether two nodes are out neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areOutNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areOutNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return false;\n\n    return neighbor in nodeData.out;\n  }\n\n  /**\n   * Method returning whether two nodes are in neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areInNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areInNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return false;\n\n    return neighbor in nodeData.in;\n  }\n\n  /**\n   * Method returning whether two nodes are undirected neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areUndirectedNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areUndirectedNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'directed') return false;\n\n    return neighbor in nodeData.undirected;\n  }\n\n  /**\n   * Method returning whether two nodes are neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type !== 'undirected') {\n      if (neighbor in nodeData.in || neighbor in nodeData.out) return true;\n    }\n\n    if (this.type !== 'directed') {\n      if (neighbor in nodeData.undirected) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Method returning whether two nodes are inbound neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areInboundNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areInboundNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type !== 'undirected') {\n      if (neighbor in nodeData.in) return true;\n    }\n\n    if (this.type !== 'directed') {\n      if (neighbor in nodeData.undirected) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Method returning whether two nodes are outbound neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areOutboundNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areOutboundNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type !== 'undirected') {\n      if (neighbor in nodeData.out) return true;\n    }\n\n    if (this.type !== 'directed') {\n      if (neighbor in nodeData.undirected) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Method returning the given node's in degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  inDegree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.inDegree: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return 0;\n\n    return nodeData.inDegree;\n  }\n\n  /**\n   * Method returning the given node's out degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  outDegree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.outDegree: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return 0;\n\n    return nodeData.outDegree;\n  }\n\n  /**\n   * Method returning the given node's directed degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  directedDegree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.directedDegree: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return 0;\n\n    return nodeData.inDegree + nodeData.outDegree;\n  }\n\n  /**\n   * Method returning the given node's undirected degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  undirectedDegree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.undirectedDegree: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'directed') return 0;\n\n    return nodeData.undirectedDegree;\n  }\n\n  /**\n   * Method returning the given node's inbound degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's inbound degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  inboundDegree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.inboundDegree: could not find the \"${node}\" node in the graph.`\n      );\n\n    let degree = 0;\n\n    if (this.type !== 'directed') {\n      degree += nodeData.undirectedDegree;\n    }\n\n    if (this.type !== 'undirected') {\n      degree += nodeData.inDegree;\n    }\n\n    return degree;\n  }\n\n  /**\n   * Method returning the given node's outbound degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's outbound degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  outboundDegree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.outboundDegree: could not find the \"${node}\" node in the graph.`\n      );\n\n    let degree = 0;\n\n    if (this.type !== 'directed') {\n      degree += nodeData.undirectedDegree;\n    }\n\n    if (this.type !== 'undirected') {\n      degree += nodeData.outDegree;\n    }\n\n    return degree;\n  }\n\n  /**\n   * Method returning the given node's directed degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  degree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.degree: could not find the \"${node}\" node in the graph.`\n      );\n\n    let degree = 0;\n\n    if (this.type !== 'directed') {\n      degree += nodeData.undirectedDegree;\n    }\n\n    if (this.type !== 'undirected') {\n      degree += nodeData.inDegree + nodeData.outDegree;\n    }\n\n    return degree;\n  }\n\n  /**\n   * Method returning the given node's in degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  inDegreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.inDegreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return 0;\n\n    return nodeData.inDegree - nodeData.directedLoops;\n  }\n\n  /**\n   * Method returning the given node's out degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  outDegreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.outDegreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return 0;\n\n    return nodeData.outDegree - nodeData.directedLoops;\n  }\n\n  /**\n   * Method returning the given node's directed degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  directedDegreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.directedDegreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return 0;\n\n    return nodeData.inDegree + nodeData.outDegree - nodeData.directedLoops * 2;\n  }\n\n  /**\n   * Method returning the given node's undirected degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  undirectedDegreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.undirectedDegreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'directed') return 0;\n\n    return nodeData.undirectedDegree - nodeData.undirectedLoops * 2;\n  }\n\n  /**\n   * Method returning the given node's inbound degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's inbound degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  inboundDegreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.inboundDegreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    let degree = 0;\n    let loops = 0;\n\n    if (this.type !== 'directed') {\n      degree += nodeData.undirectedDegree;\n      loops += nodeData.undirectedLoops * 2;\n    }\n\n    if (this.type !== 'undirected') {\n      degree += nodeData.inDegree;\n      loops += nodeData.directedLoops;\n    }\n\n    return degree - loops;\n  }\n\n  /**\n   * Method returning the given node's outbound degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's outbound degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  outboundDegreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.outboundDegreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    let degree = 0;\n    let loops = 0;\n\n    if (this.type !== 'directed') {\n      degree += nodeData.undirectedDegree;\n      loops += nodeData.undirectedLoops * 2;\n    }\n\n    if (this.type !== 'undirected') {\n      degree += nodeData.outDegree;\n      loops += nodeData.directedLoops;\n    }\n\n    return degree - loops;\n  }\n\n  /**\n   * Method returning the given node's directed degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  degreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.degreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    let degree = 0;\n    let loops = 0;\n\n    if (this.type !== 'directed') {\n      degree += nodeData.undirectedDegree;\n      loops += nodeData.undirectedLoops * 2;\n    }\n\n    if (this.type !== 'undirected') {\n      degree += nodeData.inDegree + nodeData.outDegree;\n      loops += nodeData.directedLoops * 2;\n    }\n\n    return degree - loops;\n  }\n\n  /**\n   * Method returning the given edge's source.\n   *\n   * @param  {any} edge - The edge's key.\n   * @return {any}      - The edge's source.\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph.\n   */\n  source(edge) {\n    edge = '' + edge;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.source: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return data.source.key;\n  }\n\n  /**\n   * Method returning the given edge's target.\n   *\n   * @param  {any} edge - The edge's key.\n   * @return {any}      - The edge's target.\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph.\n   */\n  target(edge) {\n    edge = '' + edge;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.target: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return data.target.key;\n  }\n\n  /**\n   * Method returning the given edge's extremities.\n   *\n   * @param  {any}   edge - The edge's key.\n   * @return {array}      - The edge's extremities.\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph.\n   */\n  extremities(edge) {\n    edge = '' + edge;\n\n    const edgeData = this._edges.get(edge);\n\n    if (!edgeData)\n      throw new NotFoundGraphError(\n        `Graph.extremities: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return [edgeData.source.key, edgeData.target.key];\n  }\n\n  /**\n   * Given a node & an edge, returns the other extremity of the edge.\n   *\n   * @param  {any}   node - The node's key.\n   * @param  {any}   edge - The edge's key.\n   * @return {any}        - The related node.\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph or if the\n   *                   edge & node are not related.\n   */\n  opposite(node, edge) {\n    node = '' + node;\n    edge = '' + edge;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.opposite: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    const source = data.source.key;\n    const target = data.target.key;\n\n    if (node === source) return target;\n    if (node === target) return source;\n\n    throw new NotFoundGraphError(\n      `Graph.opposite: the \"${node}\" node is not attached to the \"${edge}\" edge (${source}, ${target}).`\n    );\n  }\n\n  /**\n   * Returns whether the given edge has the given node as extremity.\n   *\n   * @param  {any}     edge - The edge's key.\n   * @param  {any}     node - The node's key.\n   * @return {boolean}      - The related node.\n   *\n   * @throws {Error} - Will throw if either the node or the edge isn't in the graph.\n   */\n  hasExtremity(edge, node) {\n    edge = '' + edge;\n    node = '' + node;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.hasExtremity: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return data.source.key === node || data.target.key === node;\n  }\n\n  /**\n   * Method returning whether the given edge is undirected.\n   *\n   * @param  {any}     edge - The edge's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph.\n   */\n  isUndirected(edge) {\n    edge = '' + edge;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.isUndirected: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return data.undirected;\n  }\n\n  /**\n   * Method returning whether the given edge is directed.\n   *\n   * @param  {any}     edge - The edge's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph.\n   */\n  isDirected(edge) {\n    edge = '' + edge;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.isDirected: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return !data.undirected;\n  }\n\n  /**\n   * Method returning whether the given edge is a self loop.\n   *\n   * @param  {any}     edge - The edge's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph.\n   */\n  isSelfLoop(edge) {\n    edge = '' + edge;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.isSelfLoop: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return data.source === data.target;\n  }\n\n  /**---------------------------------------------------------------------------\n   * Mutation\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method used to add a node to the graph.\n   *\n   * @param  {any}    node         - The node.\n   * @param  {object} [attributes] - Optional attributes.\n   * @return {any}                 - The node.\n   *\n   * @throws {Error} - Will throw if the given node already exist.\n   * @throws {Error} - Will throw if the given attributes are not an object.\n   */\n  addNode(node, attributes) {\n    const nodeData = addNode(this, node, attributes);\n\n    return nodeData.key;\n  }\n\n  /**\n   * Method used to merge a node into the graph.\n   *\n   * @param  {any}    node         - The node.\n   * @param  {object} [attributes] - Optional attributes.\n   * @return {any}                 - The node.\n   */\n  mergeNode(node, attributes) {\n    if (attributes && !isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        `Graph.mergeNode: invalid attributes. Expecting an object but got \"${attributes}\"`\n      );\n\n    // String coercion\n    node = '' + node;\n    attributes = attributes || {};\n\n    // If the node already exists, we merge the attributes\n    let data = this._nodes.get(node);\n\n    if (data) {\n      if (attributes) {\n        assign(data.attributes, attributes);\n\n        this.emit('nodeAttributesUpdated', {\n          type: 'merge',\n          key: node,\n          attributes: data.attributes,\n          data: attributes\n        });\n      }\n      return [node, false];\n    }\n\n    data = new this.NodeDataClass(node, attributes);\n\n    // Adding the node to internal register\n    this._nodes.set(node, data);\n\n    // Emitting\n    this.emit('nodeAdded', {\n      key: node,\n      attributes\n    });\n\n    return [node, true];\n  }\n\n  /**\n   * Method used to add a node if it does not exist in the graph or else to\n   * update its attributes using a function.\n   *\n   * @param  {any}      node      - The node.\n   * @param  {function} [updater] - Optional updater function.\n   * @return {any}                - The node.\n   */\n  updateNode(node, updater) {\n    if (updater && typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        `Graph.updateNode: invalid updater function. Expecting a function but got \"${updater}\"`\n      );\n\n    // String coercion\n    node = '' + node;\n\n    // If the node already exists, we update the attributes\n    let data = this._nodes.get(node);\n\n    if (data) {\n      if (updater) {\n        const oldAttributes = data.attributes;\n        data.attributes = updater(oldAttributes);\n\n        this.emit('nodeAttributesUpdated', {\n          type: 'replace',\n          key: node,\n          attributes: data.attributes\n        });\n      }\n      return [node, false];\n    }\n\n    const attributes = updater ? updater({}) : {};\n\n    data = new this.NodeDataClass(node, attributes);\n\n    // Adding the node to internal register\n    this._nodes.set(node, data);\n\n    // Emitting\n    this.emit('nodeAdded', {\n      key: node,\n      attributes\n    });\n\n    return [node, true];\n  }\n\n  /**\n   * Method used to drop a single node & all its attached edges from the graph.\n   *\n   * @param  {any}    node - The node.\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if the node doesn't exist.\n   */\n  dropNode(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.dropNode: could not find the \"${node}\" node in the graph.`\n      );\n\n    let edgeData;\n\n    // Removing attached edges\n    // NOTE: we could be faster here, but this is such a pain to maintain\n    if (this.type !== 'undirected') {\n      for (const neighbor in nodeData.out) {\n        edgeData = nodeData.out[neighbor];\n\n        do {\n          dropEdgeFromData(this, edgeData);\n          edgeData = edgeData.next;\n        } while (edgeData);\n      }\n\n      for (const neighbor in nodeData.in) {\n        edgeData = nodeData.in[neighbor];\n\n        do {\n          dropEdgeFromData(this, edgeData);\n          edgeData = edgeData.next;\n        } while (edgeData);\n      }\n    }\n\n    if (this.type !== 'directed') {\n      for (const neighbor in nodeData.undirected) {\n        edgeData = nodeData.undirected[neighbor];\n\n        do {\n          dropEdgeFromData(this, edgeData);\n          edgeData = edgeData.next;\n        } while (edgeData);\n      }\n    }\n\n    // Dropping the node from the register\n    this._nodes.delete(node);\n\n    // Emitting\n    this.emit('nodeDropped', {\n      key: node,\n      attributes: nodeData.attributes\n    });\n  }\n\n  /**\n   * Method used to drop a single edge from the graph.\n   *\n   * Arity 1:\n   * @param  {any}    edge - The edge.\n   *\n   * Arity 2:\n   * @param  {any}    source - Source node.\n   * @param  {any}    target - Target node.\n   *\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if the edge doesn't exist.\n   */\n  dropEdge(edge) {\n    let edgeData;\n\n    if (arguments.length > 1) {\n      const source = '' + arguments[0];\n      const target = '' + arguments[1];\n\n      edgeData = getMatchingEdge(this, source, target, this.type);\n\n      if (!edgeData)\n        throw new NotFoundGraphError(\n          `Graph.dropEdge: could not find the \"${source}\" -> \"${target}\" edge in the graph.`\n        );\n    } else {\n      edge = '' + edge;\n\n      edgeData = this._edges.get(edge);\n\n      if (!edgeData)\n        throw new NotFoundGraphError(\n          `Graph.dropEdge: could not find the \"${edge}\" edge in the graph.`\n        );\n    }\n\n    dropEdgeFromData(this, edgeData);\n\n    return this;\n  }\n\n  /**\n   * Method used to drop a single directed edge from the graph.\n   *\n   * @param  {any}    source - Source node.\n   * @param  {any}    target - Target node.\n   *\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if the edge doesn't exist.\n   */\n  dropDirectedEdge(source, target) {\n    if (arguments.length < 2)\n      throw new UsageGraphError(\n        'Graph.dropDirectedEdge: it does not make sense to try and drop a directed edge by key. What if the edge with this key is undirected? Use #.dropEdge for this purpose instead.'\n      );\n\n    if (this.multi)\n      throw new UsageGraphError(\n        'Graph.dropDirectedEdge: cannot use a {source,target} combo when dropping an edge in a MultiGraph since we cannot infer the one you want to delete as there could be multiple ones.'\n      );\n\n    source = '' + source;\n    target = '' + target;\n\n    const edgeData = getMatchingEdge(this, source, target, 'directed');\n\n    if (!edgeData)\n      throw new NotFoundGraphError(\n        `Graph.dropDirectedEdge: could not find a \"${source}\" -> \"${target}\" edge in the graph.`\n      );\n\n    dropEdgeFromData(this, edgeData);\n\n    return this;\n  }\n\n  /**\n   * Method used to drop a single undirected edge from the graph.\n   *\n   * @param  {any}    source - Source node.\n   * @param  {any}    target - Target node.\n   *\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if the edge doesn't exist.\n   */\n  dropUndirectedEdge(source, target) {\n    if (arguments.length < 2)\n      throw new UsageGraphError(\n        'Graph.dropUndirectedEdge: it does not make sense to drop a directed edge by key. What if the edge with this key is undirected? Use #.dropEdge for this purpose instead.'\n      );\n\n    if (this.multi)\n      throw new UsageGraphError(\n        'Graph.dropUndirectedEdge: cannot use a {source,target} combo when dropping an edge in a MultiGraph since we cannot infer the one you want to delete as there could be multiple ones.'\n      );\n\n    const edgeData = getMatchingEdge(this, source, target, 'undirected');\n\n    if (!edgeData)\n      throw new NotFoundGraphError(\n        `Graph.dropUndirectedEdge: could not find a \"${source}\" -> \"${target}\" edge in the graph.`\n      );\n\n    dropEdgeFromData(this, edgeData);\n\n    return this;\n  }\n\n  /**\n   * Method used to remove every edge & every node from the graph.\n   *\n   * @return {Graph}\n   */\n  clear() {\n    // Clearing edges\n    this._edges.clear();\n\n    // Clearing nodes\n    this._nodes.clear();\n\n    // Reset counters\n    this._resetInstanceCounters();\n\n    // Emitting\n    this.emit('cleared');\n  }\n\n  /**\n   * Method used to remove every edge from the graph.\n   *\n   * @return {Graph}\n   */\n  clearEdges() {\n    // Clearing structure index\n    const iterator = this._nodes.values();\n\n    let step;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      step.value.clear();\n    }\n\n    // Clearing edges\n    this._edges.clear();\n\n    // Reset counters\n    this._resetInstanceCounters();\n\n    // Emitting\n    this.emit('edgesCleared');\n  }\n\n  /**---------------------------------------------------------------------------\n   * Attributes-related methods\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method returning the desired graph's attribute.\n   *\n   * @param  {string} name - Name of the attribute.\n   * @return {any}\n   */\n  getAttribute(name) {\n    return this._attributes[name];\n  }\n\n  /**\n   * Method returning the graph's attributes.\n   *\n   * @return {object}\n   */\n  getAttributes() {\n    return this._attributes;\n  }\n\n  /**\n   * Method returning whether the graph has the desired attribute.\n   *\n   * @param  {string}  name - Name of the attribute.\n   * @return {boolean}\n   */\n  hasAttribute(name) {\n    return this._attributes.hasOwnProperty(name);\n  }\n\n  /**\n   * Method setting a value for the desired graph's attribute.\n   *\n   * @param  {string}  name  - Name of the attribute.\n   * @param  {any}     value - Value for the attribute.\n   * @return {Graph}\n   */\n  setAttribute(name, value) {\n    this._attributes[name] = value;\n\n    // Emitting\n    this.emit('attributesUpdated', {\n      type: 'set',\n      attributes: this._attributes,\n      name\n    });\n\n    return this;\n  }\n\n  /**\n   * Method using a function to update the desired graph's attribute's value.\n   *\n   * @param  {string}   name    - Name of the attribute.\n   * @param  {function} updater - Function use to update the attribute's value.\n   * @return {Graph}\n   */\n  updateAttribute(name, updater) {\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.updateAttribute: updater should be a function.'\n      );\n\n    const value = this._attributes[name];\n\n    this._attributes[name] = updater(value);\n\n    // Emitting\n    this.emit('attributesUpdated', {\n      type: 'set',\n      attributes: this._attributes,\n      name\n    });\n\n    return this;\n  }\n\n  /**\n   * Method removing the desired graph's attribute.\n   *\n   * @param  {string} name  - Name of the attribute.\n   * @return {Graph}\n   */\n  removeAttribute(name) {\n    delete this._attributes[name];\n\n    // Emitting\n    this.emit('attributesUpdated', {\n      type: 'remove',\n      attributes: this._attributes,\n      name\n    });\n\n    return this;\n  }\n\n  /**\n   * Method replacing the graph's attributes.\n   *\n   * @param  {object} attributes - New attributes.\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if given attributes are not a plain object.\n   */\n  replaceAttributes(attributes) {\n    if (!isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        'Graph.replaceAttributes: provided attributes are not a plain object.'\n      );\n\n    this._attributes = attributes;\n\n    // Emitting\n    this.emit('attributesUpdated', {\n      type: 'replace',\n      attributes: this._attributes\n    });\n\n    return this;\n  }\n\n  /**\n   * Method merging the graph's attributes.\n   *\n   * @param  {object} attributes - Attributes to merge.\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if given attributes are not a plain object.\n   */\n  mergeAttributes(attributes) {\n    if (!isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        'Graph.mergeAttributes: provided attributes are not a plain object.'\n      );\n\n    assign(this._attributes, attributes);\n\n    // Emitting\n    this.emit('attributesUpdated', {\n      type: 'merge',\n      attributes: this._attributes,\n      data: attributes\n    });\n\n    return this;\n  }\n\n  /**\n   * Method updating the graph's attributes.\n   *\n   * @param  {function} updater - Function used to update the attributes.\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if given updater is not a function.\n   */\n  updateAttributes(updater) {\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.updateAttributes: provided updater is not a function.'\n      );\n\n    this._attributes = updater(this._attributes);\n\n    // Emitting\n    this.emit('attributesUpdated', {\n      type: 'update',\n      attributes: this._attributes\n    });\n\n    return this;\n  }\n\n  /**\n   * Method used to update each node's attributes using the given function.\n   *\n   * @param {function}  updater - Updater function to use.\n   * @param {object}    [hints] - Optional hints.\n   */\n  updateEachNodeAttributes(updater, hints) {\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.updateEachNodeAttributes: expecting an updater function.'\n      );\n\n    if (hints && !validateHints(hints))\n      throw new InvalidArgumentsGraphError(\n        'Graph.updateEachNodeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n      nodeData.attributes = updater(nodeData.key, nodeData.attributes);\n    }\n\n    this.emit('eachNodeAttributesUpdated', {\n      hints: hints ? hints : null\n    });\n  }\n\n  /**\n   * Method used to update each edge's attributes using the given function.\n   *\n   * @param {function}  updater - Updater function to use.\n   * @param {object}    [hints] - Optional hints.\n   */\n  updateEachEdgeAttributes(updater, hints) {\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.updateEachEdgeAttributes: expecting an updater function.'\n      );\n\n    if (hints && !validateHints(hints))\n      throw new InvalidArgumentsGraphError(\n        'Graph.updateEachEdgeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}'\n      );\n\n    const iterator = this._edges.values();\n\n    let step, edgeData, sourceData, targetData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      edgeData = step.value;\n      sourceData = edgeData.source;\n      targetData = edgeData.target;\n\n      edgeData.attributes = updater(\n        edgeData.key,\n        edgeData.attributes,\n        sourceData.key,\n        targetData.key,\n        sourceData.attributes,\n        targetData.attributes,\n        edgeData.undirected\n      );\n    }\n\n    this.emit('eachEdgeAttributesUpdated', {\n      hints: hints ? hints : null\n    });\n  }\n\n  /**---------------------------------------------------------------------------\n   * Iteration-related methods\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method iterating over the graph's adjacency using the given callback.\n   *\n   * @param  {function}  callback - Callback to use.\n   */\n  forEachAdjacencyEntry(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.forEachAdjacencyEntry: expecting a callback.'\n      );\n\n    forEachAdjacency(false, false, false, this, callback);\n  }\n  forEachAdjacencyEntryWithOrphans(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.forEachAdjacencyEntryWithOrphans: expecting a callback.'\n      );\n\n    forEachAdjacency(false, false, true, this, callback);\n  }\n\n  /**\n   * Method iterating over the graph's assymetric adjacency using the given callback.\n   *\n   * @param  {function}  callback - Callback to use.\n   */\n  forEachAssymetricAdjacencyEntry(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.forEachAssymetricAdjacencyEntry: expecting a callback.'\n      );\n\n    forEachAdjacency(false, true, false, this, callback);\n  }\n  forEachAssymetricAdjacencyEntryWithOrphans(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.forEachAssymetricAdjacencyEntryWithOrphans: expecting a callback.'\n      );\n\n    forEachAdjacency(false, true, true, this, callback);\n  }\n\n  /**\n   * Method returning the list of the graph's nodes.\n   *\n   * @return {array} - The nodes.\n   */\n  nodes() {\n    if (typeof Array.from === 'function') return Array.from(this._nodes.keys());\n\n    return take(this._nodes.keys(), this._nodes.size);\n  }\n\n  /**\n   * Method iterating over the graph's nodes using the given callback.\n   *\n   * @param  {function}  callback - Callback (key, attributes, index).\n   */\n  forEachNode(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.forEachNode: expecting a callback.'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n      callback(nodeData.key, nodeData.attributes);\n    }\n  }\n\n  /**\n   * Method iterating attempting to find a node matching the given predicate\n   * function.\n   *\n   * @param  {function}  callback - Callback (key, attributes).\n   */\n  findNode(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.findNode: expecting a callback.'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n\n      if (callback(nodeData.key, nodeData.attributes)) return nodeData.key;\n    }\n\n    return;\n  }\n\n  /**\n   * Method mapping nodes.\n   *\n   * @param  {function}  callback - Callback (key, attributes).\n   */\n  mapNodes(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.mapNode: expecting a callback.'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    const result = new Array(this.order);\n    let i = 0;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n      result[i++] = callback(nodeData.key, nodeData.attributes);\n    }\n\n    return result;\n  }\n\n  /**\n   * Method returning whether some node verify the given predicate.\n   *\n   * @param  {function}  callback - Callback (key, attributes).\n   */\n  someNode(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.someNode: expecting a callback.'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n\n      if (callback(nodeData.key, nodeData.attributes)) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Method returning whether all node verify the given predicate.\n   *\n   * @param  {function}  callback - Callback (key, attributes).\n   */\n  everyNode(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.everyNode: expecting a callback.'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n\n      if (!callback(nodeData.key, nodeData.attributes)) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Method filtering nodes.\n   *\n   * @param  {function}  callback - Callback (key, attributes).\n   */\n  filterNodes(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.filterNodes: expecting a callback.'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    const result = [];\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n\n      if (callback(nodeData.key, nodeData.attributes))\n        result.push(nodeData.key);\n    }\n\n    return result;\n  }\n\n  /**\n   * Method reducing nodes.\n   *\n   * @param  {function}  callback - Callback (accumulator, key, attributes).\n   */\n  reduceNodes(callback, initialValue) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.reduceNodes: expecting a callback.'\n      );\n\n    if (arguments.length < 2)\n      throw new InvalidArgumentsGraphError(\n        'Graph.reduceNodes: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.'\n      );\n\n    let accumulator = initialValue;\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n      accumulator = callback(accumulator, nodeData.key, nodeData.attributes);\n    }\n\n    return accumulator;\n  }\n\n  /**\n   * Method returning an iterator over the graph's node entries.\n   *\n   * @return {Iterator}\n   */\n  nodeEntries() {\n    const iterator = this._nodes.values();\n\n    return new Iterator(() => {\n      const step = iterator.next();\n\n      if (step.done) return step;\n\n      const data = step.value;\n\n      return {\n        value: {node: data.key, attributes: data.attributes},\n        done: false\n      };\n    });\n  }\n\n  /**---------------------------------------------------------------------------\n   * Serialization\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method used to export the whole graph.\n   *\n   * @return {object} - The serialized graph.\n   */\n  export() {\n    const nodes = new Array(this._nodes.size);\n\n    let i = 0;\n\n    this._nodes.forEach((data, key) => {\n      nodes[i++] = serializeNode(key, data);\n    });\n\n    const edges = new Array(this._edges.size);\n\n    i = 0;\n\n    this._edges.forEach((data, key) => {\n      edges[i++] = serializeEdge(this.type, key, data);\n    });\n\n    return {\n      options: {\n        type: this.type,\n        multi: this.multi,\n        allowSelfLoops: this.allowSelfLoops\n      },\n      attributes: this.getAttributes(),\n      nodes,\n      edges\n    };\n  }\n\n  /**\n   * Method used to import a serialized graph.\n   *\n   * @param  {object|Graph} data  - The serialized graph.\n   * @param  {boolean}      merge - Whether to merge data.\n   * @return {Graph}              - Returns itself for chaining.\n   */\n  import(data, merge = false) {\n    // Importing a Graph instance directly\n    if (data instanceof Graph) {\n      // Nodes\n      data.forEachNode((n, a) => {\n        if (merge) this.mergeNode(n, a);\n        else this.addNode(n, a);\n      });\n\n      // Edges\n      data.forEachEdge((e, a, s, t, _sa, _ta, u) => {\n        if (merge) {\n          if (u) this.mergeUndirectedEdgeWithKey(e, s, t, a);\n          else this.mergeDirectedEdgeWithKey(e, s, t, a);\n        } else {\n          if (u) this.addUndirectedEdgeWithKey(e, s, t, a);\n          else this.addDirectedEdgeWithKey(e, s, t, a);\n        }\n      });\n\n      return this;\n    }\n\n    // Importing a serialized graph\n    if (!isPlainObject(data))\n      throw new InvalidArgumentsGraphError(\n        'Graph.import: invalid argument. Expecting a serialized graph or, alternatively, a Graph instance.'\n      );\n\n    if (data.attributes) {\n      if (!isPlainObject(data.attributes))\n        throw new InvalidArgumentsGraphError(\n          'Graph.import: invalid attributes. Expecting a plain object.'\n        );\n\n      if (merge) this.mergeAttributes(data.attributes);\n      else this.replaceAttributes(data.attributes);\n    }\n\n    let i, l, list, node, edge;\n\n    if (data.nodes) {\n      list = data.nodes;\n\n      if (!Array.isArray(list))\n        throw new InvalidArgumentsGraphError(\n          'Graph.import: invalid nodes. Expecting an array.'\n        );\n\n      for (i = 0, l = list.length; i < l; i++) {\n        node = list[i];\n\n        // Validating\n        validateSerializedNode(node);\n\n        // Adding the node\n        const {key, attributes} = node;\n\n        if (merge) this.mergeNode(key, attributes);\n        else this.addNode(key, attributes);\n      }\n    }\n\n    if (data.edges) {\n      let undirectedByDefault = false;\n\n      if (this.type === 'undirected') {\n        undirectedByDefault = true;\n      }\n\n      list = data.edges;\n\n      if (!Array.isArray(list))\n        throw new InvalidArgumentsGraphError(\n          'Graph.import: invalid edges. Expecting an array.'\n        );\n\n      for (i = 0, l = list.length; i < l; i++) {\n        edge = list[i];\n\n        // Validating\n        validateSerializedEdge(edge);\n\n        // Adding the edge\n        const {\n          source,\n          target,\n          attributes,\n          undirected = undirectedByDefault\n        } = edge;\n\n        let method;\n\n        if ('key' in edge) {\n          method = merge\n            ? undirected\n              ? this.mergeUndirectedEdgeWithKey\n              : this.mergeDirectedEdgeWithKey\n            : undirected\n            ? this.addUndirectedEdgeWithKey\n            : this.addDirectedEdgeWithKey;\n\n          method.call(this, edge.key, source, target, attributes);\n        } else {\n          method = merge\n            ? undirected\n              ? this.mergeUndirectedEdge\n              : this.mergeDirectedEdge\n            : undirected\n            ? this.addUndirectedEdge\n            : this.addDirectedEdge;\n\n          method.call(this, source, target, attributes);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  /**---------------------------------------------------------------------------\n   * Utils\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method returning a null copy of the graph, i.e. a graph without nodes\n   * & edges but with the exact same options.\n   *\n   * @param  {object} options - Options to merge with the current ones.\n   * @return {Graph}          - The null copy.\n   */\n  nullCopy(options) {\n    const graph = new Graph(assign({}, this._options, options));\n    graph.replaceAttributes(assign({}, this.getAttributes()));\n    return graph;\n  }\n\n  /**\n   * Method returning an empty copy of the graph, i.e. a graph without edges but\n   * with the exact same options.\n   *\n   * @param  {object} options - Options to merge with the current ones.\n   * @return {Graph}          - The empty copy.\n   */\n  emptyCopy(options) {\n    const graph = this.nullCopy(options);\n\n    this._nodes.forEach((nodeData, key) => {\n      const attributes = assign({}, nodeData.attributes);\n\n      // NOTE: no need to emit events since user cannot access the instance yet\n      nodeData = new graph.NodeDataClass(key, attributes);\n      graph._nodes.set(key, nodeData);\n    });\n\n    return graph;\n  }\n\n  /**\n   * Method returning an exact copy of the graph.\n   *\n   * @param  {object} options - Upgrade options.\n   * @return {Graph}          - The copy.\n   */\n  copy(options) {\n    options = options || {};\n\n    if (\n      typeof options.type === 'string' &&\n      options.type !== this.type &&\n      options.type !== 'mixed'\n    )\n      throw new UsageGraphError(\n        `Graph.copy: cannot create an incompatible copy from \"${this.type}\" type to \"${options.type}\" because this would mean losing information about the current graph.`\n      );\n\n    if (\n      typeof options.multi === 'boolean' &&\n      options.multi !== this.multi &&\n      options.multi !== true\n    )\n      throw new UsageGraphError(\n        'Graph.copy: cannot create an incompatible copy by downgrading a multi graph to a simple one because this would mean losing information about the current graph.'\n      );\n\n    if (\n      typeof options.allowSelfLoops === 'boolean' &&\n      options.allowSelfLoops !== this.allowSelfLoops &&\n      options.allowSelfLoops !== true\n    )\n      throw new UsageGraphError(\n        'Graph.copy: cannot create an incompatible copy from a graph allowing self loops to one that does not because this would mean losing information about the current graph.'\n      );\n\n    const graph = this.emptyCopy(options);\n\n    const iterator = this._edges.values();\n\n    let step, edgeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      edgeData = step.value;\n\n      // NOTE: no need to emit events since user cannot access the instance yet\n      addEdge(\n        graph,\n        'copy',\n        false,\n        edgeData.undirected,\n        edgeData.key,\n        edgeData.source.key,\n        edgeData.target.key,\n        assign({}, edgeData.attributes)\n      );\n    }\n\n    return graph;\n  }\n\n  /**---------------------------------------------------------------------------\n   * Known methods\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method used by JavaScript to perform JSON serialization.\n   *\n   * @return {object} - The serialized graph.\n   */\n  toJSON() {\n    return this.export();\n  }\n\n  /**\n   * Method returning [object Graph].\n   */\n  toString() {\n    return '[object Graph]';\n  }\n\n  /**\n   * Method used internally by node's console to display a custom object.\n   *\n   * @return {object} - Formatted object representation of the graph.\n   */\n  inspect() {\n    const nodes = {};\n    this._nodes.forEach((data, key) => {\n      nodes[key] = data.attributes;\n    });\n\n    const edges = {},\n      multiIndex = {};\n\n    this._edges.forEach((data, key) => {\n      const direction = data.undirected ? '--' : '->';\n\n      let label = '';\n\n      let source = data.source.key;\n      let target = data.target.key;\n      let tmp;\n\n      if (data.undirected && source > target) {\n        tmp = source;\n        source = target;\n        target = tmp;\n      }\n\n      const desc = `(${source})${direction}(${target})`;\n\n      if (!key.startsWith('geid_')) {\n        label += `[${key}]: `;\n      } else if (this.multi) {\n        if (typeof multiIndex[desc] === 'undefined') {\n          multiIndex[desc] = 0;\n        } else {\n          multiIndex[desc]++;\n        }\n\n        label += `${multiIndex[desc]}. `;\n      }\n\n      label += desc;\n\n      edges[label] = data.attributes;\n    });\n\n    const dummy = {};\n\n    for (const k in this) {\n      if (\n        this.hasOwnProperty(k) &&\n        !EMITTER_PROPS.has(k) &&\n        typeof this[k] !== 'function' &&\n        typeof k !== 'symbol'\n      )\n        dummy[k] = this[k];\n    }\n\n    dummy.attributes = this._attributes;\n    dummy.nodes = nodes;\n    dummy.edges = edges;\n\n    privateProperty(dummy, 'constructor', this.constructor);\n\n    return dummy;\n  }\n}\n\n/**\n * Attaching methods to the prototype.\n *\n * Here, we are attaching a wide variety of methods to the Graph class'\n * prototype when those are very numerous and when their creation is\n * abstracted.\n */\n\n/**\n * Attaching custom inspect method for node >= 10.\n */\nif (typeof Symbol !== 'undefined')\n  Graph.prototype[Symbol.for('nodejs.util.inspect.custom')] =\n    Graph.prototype.inspect;\n\n/**\n * Related to edge addition.\n */\nEDGE_ADD_METHODS.forEach(method => {\n  ['add', 'merge', 'update'].forEach(verb => {\n    const name = method.name(verb);\n    const fn = verb === 'add' ? addEdge : mergeEdge;\n\n    if (method.generateKey) {\n      Graph.prototype[name] = function (source, target, attributes) {\n        return fn(\n          this,\n          name,\n          true,\n          (method.type || this.type) === 'undirected',\n          null,\n          source,\n          target,\n          attributes,\n          verb === 'update'\n        );\n      };\n    } else {\n      Graph.prototype[name] = function (edge, source, target, attributes) {\n        return fn(\n          this,\n          name,\n          false,\n          (method.type || this.type) === 'undirected',\n          edge,\n          source,\n          target,\n          attributes,\n          verb === 'update'\n        );\n      };\n    }\n  });\n});\n\n/**\n * Attributes-related.\n */\nattachNodeAttributesMethods(Graph);\nattachEdgeAttributesMethods(Graph);\n\n/**\n * Edge iteration-related.\n */\nattachEdgeIterationMethods(Graph);\n\n/**\n * Neighbor iteration-related.\n */\nattachNeighborIterationMethods(Graph);\n","/**\n * Graphology Helper Classes\n * ==========================\n *\n * Building some higher-order classes instantiating the graph with\n * predefinite options.\n */\nimport {assign} from './utils';\nimport Graph from './graph';\n\nimport {\n  InvalidArgumentsGraphError,\n  NotFoundGraphError,\n  UsageGraphError\n} from './errors';\n\n/**\n * Alternative constructors.\n */\nclass DirectedGraph extends Graph {\n  constructor(options) {\n    const finalOptions = assign({type: 'directed'}, options);\n\n    if ('multi' in finalOptions && finalOptions.multi !== false)\n      throw new InvalidArgumentsGraphError(\n        'DirectedGraph.from: inconsistent indication that the graph should be multi in given options!'\n      );\n\n    if (finalOptions.type !== 'directed')\n      throw new InvalidArgumentsGraphError(\n        'DirectedGraph.from: inconsistent \"' +\n          finalOptions.type +\n          '\" type in given options!'\n      );\n\n    super(finalOptions);\n  }\n}\nclass UndirectedGraph extends Graph {\n  constructor(options) {\n    const finalOptions = assign({type: 'undirected'}, options);\n\n    if ('multi' in finalOptions && finalOptions.multi !== false)\n      throw new InvalidArgumentsGraphError(\n        'UndirectedGraph.from: inconsistent indication that the graph should be multi in given options!'\n      );\n\n    if (finalOptions.type !== 'undirected')\n      throw new InvalidArgumentsGraphError(\n        'UndirectedGraph.from: inconsistent \"' +\n          finalOptions.type +\n          '\" type in given options!'\n      );\n\n    super(finalOptions);\n  }\n}\nclass MultiGraph extends Graph {\n  constructor(options) {\n    const finalOptions = assign({multi: true}, options);\n\n    if ('multi' in finalOptions && finalOptions.multi !== true)\n      throw new InvalidArgumentsGraphError(\n        'MultiGraph.from: inconsistent indication that the graph should be simple in given options!'\n      );\n\n    super(finalOptions);\n  }\n}\nclass MultiDirectedGraph extends Graph {\n  constructor(options) {\n    const finalOptions = assign({type: 'directed', multi: true}, options);\n\n    if ('multi' in finalOptions && finalOptions.multi !== true)\n      throw new InvalidArgumentsGraphError(\n        'MultiDirectedGraph.from: inconsistent indication that the graph should be simple in given options!'\n      );\n\n    if (finalOptions.type !== 'directed')\n      throw new InvalidArgumentsGraphError(\n        'MultiDirectedGraph.from: inconsistent \"' +\n          finalOptions.type +\n          '\" type in given options!'\n      );\n\n    super(finalOptions);\n  }\n}\nclass MultiUndirectedGraph extends Graph {\n  constructor(options) {\n    const finalOptions = assign({type: 'undirected', multi: true}, options);\n\n    if ('multi' in finalOptions && finalOptions.multi !== true)\n      throw new InvalidArgumentsGraphError(\n        'MultiUndirectedGraph.from: inconsistent indication that the graph should be simple in given options!'\n      );\n\n    if (finalOptions.type !== 'undirected')\n      throw new InvalidArgumentsGraphError(\n        'MultiUndirectedGraph.from: inconsistent \"' +\n          finalOptions.type +\n          '\" type in given options!'\n      );\n\n    super(finalOptions);\n  }\n}\n\n/**\n * Attaching static #.from method to each of the constructors.\n */\nfunction attachStaticFromMethod(Class) {\n  /**\n   * Builds a graph from serialized data or another graph's data.\n   *\n   * @param  {Graph|SerializedGraph} data      - Hydratation data.\n   * @param  {object}                [options] - Options.\n   * @return {Class}\n   */\n  Class.from = function (data, options) {\n    // Merging given options with serialized ones\n    const finalOptions = assign({}, data.options, options);\n\n    const instance = new Class(finalOptions);\n    instance.import(data);\n\n    return instance;\n  };\n}\n\nattachStaticFromMethod(Graph);\nattachStaticFromMethod(DirectedGraph);\nattachStaticFromMethod(UndirectedGraph);\nattachStaticFromMethod(MultiGraph);\nattachStaticFromMethod(MultiDirectedGraph);\nattachStaticFromMethod(MultiUndirectedGraph);\n\nGraph.Graph = Graph;\nGraph.DirectedGraph = DirectedGraph;\nGraph.UndirectedGraph = UndirectedGraph;\nGraph.MultiGraph = MultiGraph;\nGraph.MultiDirectedGraph = MultiDirectedGraph;\nGraph.MultiUndirectedGraph = MultiUndirectedGraph;\n\nGraph.InvalidArgumentsGraphError = InvalidArgumentsGraphError;\nGraph.NotFoundGraphError = NotFoundGraphError;\nGraph.UsageGraphError = UsageGraphError;\n\nexport {\n  Graph,\n  DirectedGraph,\n  UndirectedGraph,\n  MultiGraph,\n  MultiDirectedGraph,\n  MultiUndirectedGraph\n};\n","// src/precision.ts\nimport { Decimal } from 'decimal.js';\n\nDecimal.set({ precision: 60 });\n\nexport type PrecisionMode = 'high' | 'native';\n\nexport class PrecisionNumber {\n    private value: Decimal | number;\n    public readonly mode: PrecisionMode; \n\n    constructor(n: number | string | PrecisionNumber | Decimal, mode: PrecisionMode) {\n        this.mode = mode;\n        if (n instanceof PrecisionNumber) {\n            if (this.mode === 'high') {\n                this.value = n.toDecimal(); \n            } else {\n                this.value = n.toNumber(); \n            }\n        } else if (n instanceof Decimal) {\n            if (this.mode === 'high') {\n                this.value = new Decimal(n); \n            } else {\n                this.value = n.toNumber(); \n            }\n        } else { \n            if (this.mode === 'high') {\n                this.value = new Decimal(n);\n            } else {\n                this.value = Number(n); \n            }\n        }\n    }\n\n    public static from(n: number | string | PrecisionNumber | Decimal, mode: PrecisionMode): PrecisionNumber {\n        return new PrecisionNumber(n, mode);\n    }\n\n    public add(other: PrecisionNumber | number | string): PrecisionNumber {\n        if (this.mode === 'high' && this.value instanceof Decimal) {\n            const otherDecimal = (other instanceof PrecisionNumber) ? other.toDecimal() : new Decimal(other);\n            return new PrecisionNumber(this.value.add(otherDecimal), 'high');\n        } else {\n            const otherNumber = (other instanceof PrecisionNumber) ? other.toNumber() : Number(other);\n            return new PrecisionNumber((this.value as number) + otherNumber, 'native');\n        }\n    }\n\n    public subtract(other: PrecisionNumber | number | string): PrecisionNumber {\n        if (this.mode === 'high' && this.value instanceof Decimal) {\n            const otherDecimal = (other instanceof PrecisionNumber) ? other.toDecimal() : new Decimal(other);\n            return new PrecisionNumber(this.value.sub(otherDecimal), 'high');\n        } else {\n            const otherNumber = (other instanceof PrecisionNumber) ? other.toNumber() : Number(other);\n            return new PrecisionNumber((this.value as number) - otherNumber, 'native');\n        }\n    }\n\n    public multiply(other: PrecisionNumber | number | string): PrecisionNumber {\n        if (this.mode === 'high' && this.value instanceof Decimal) {\n            const otherDecimal = (other instanceof PrecisionNumber) ? other.toDecimal() : new Decimal(other);\n            return new PrecisionNumber(this.value.mul(otherDecimal), 'high');\n        } else {\n            const otherNumber = (other instanceof PrecisionNumber) ? other.toNumber() : Number(other);\n            return new PrecisionNumber((this.value as number) * otherNumber, 'native');\n        }\n    }\n    \n    public divide(other: PrecisionNumber | number | string): PrecisionNumber {\n        if (this.mode === 'high' && this.value instanceof Decimal) {\n            const otherDecimal = (other instanceof PrecisionNumber) ? other.toDecimal() : new Decimal(other);\n            if (otherDecimal.isZero()) return new PrecisionNumber(new Decimal(0), 'high'); \n            return new PrecisionNumber(this.value.dividedBy(otherDecimal), 'high');\n        } else {\n            const otherNumber = (other instanceof PrecisionNumber) ? other.toNumber() : Number(other);\n            if (otherNumber === 0) return new PrecisionNumber(this.value === 0 ? 0 : ((this.value as number) > 0 ? Infinity : -Infinity), 'native');\n            return new PrecisionNumber((this.value as number) / otherNumber, 'native');\n        }\n    }\n\n    public static divide(a: PrecisionNumber | number | string, b: PrecisionNumber | number | string, mode: PrecisionMode): PrecisionNumber {\n        const numA = new PrecisionNumber(a, mode); \n        const numB = new PrecisionNumber(b, mode); \n        return numA.divide(numB); \n    }\n\n    public compareTo(other: PrecisionNumber | number | string): -1 | 0 | 1 {\n        const otherPrecisionNumber = (other instanceof PrecisionNumber) ? other : new PrecisionNumber(other, this.mode);\n\n        if (this.mode === 'high' && this.value instanceof Decimal) {\n            return this.value.comparedTo(otherPrecisionNumber.toDecimal());\n        } else { \n            const thisNum = this.value as number;\n            const otherNum = otherPrecisionNumber.toNumber();\n            if (thisNum < otherNum) return -1;\n            if (thisNum > otherNum) return 1;\n            return 0;\n        }\n    }\n\n    public isEqualTo(other: PrecisionNumber | number | string): boolean {\n        return this.compareTo(other) === 0;\n    }\n    public isLessThan(other: PrecisionNumber | number | string): boolean {\n        return this.compareTo(other) === -1;\n    }\n    public isGreaterThan(other: PrecisionNumber | number | string): boolean {\n        return this.compareTo(other) === 1;\n    }\n    public isLessThanOrEqualTo(other: PrecisionNumber | number | string): boolean {\n        return this.compareTo(other) <= 0;\n    }\n    public isGreaterThanOrEqualTo(other: PrecisionNumber | number | string): boolean {\n        return this.compareTo(other) >= 0;\n    }\n\n    public isZero(): boolean {\n        if (this.value instanceof Decimal) {\n            return this.value.isZero();\n        }\n        return this.value === 0;\n    }\n\n    public isNegative(): boolean {\n        if (this.value instanceof Decimal) {\n            return this.value.isNegative();\n        }\n        return (this.value as number) < 0;\n    }\n\n    public isPositive(): boolean {\n        if (this.value instanceof Decimal) {\n            return this.value.isPositive();\n        }\n        return (this.value as number) > 0;\n    }\n\n    public abs(): PrecisionNumber {\n        if (this.value instanceof Decimal) {\n            return new PrecisionNumber(this.value.abs(), this.mode);\n        }\n        return new PrecisionNumber(Math.abs(this.value as number), this.mode);\n    }\n\n    public toNumber(): number {\n        if (this.value instanceof Decimal) {\n            return this.value.toNumber();\n        }\n        return this.value;\n    }\n\n    public toDecimal(): Decimal {\n        if (this.value instanceof Decimal) {\n            return new Decimal(this.value); \n        }\n        return new Decimal(this.value);\n    }\n\n    public toString(precision?: number): string {\n        if (this.value instanceof Decimal) {\n            return precision ? this.value.toPrecision(precision) : this.value.toString();\n        }\n        return precision ? (this.value as number).toPrecision(precision) : (this.value as number).toString();\n    }\n}",";(function (globalScope) {\r\n  'use strict';\r\n\r\n\r\n  /*!\r\n   *  decimal.js v10.5.0\r\n   *  An arbitrary-precision Decimal type for JavaScript.\r\n   *  https://github.com/MikeMcl/decimal.js\r\n   *  Copyright (c) 2025 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *  MIT Licence\r\n   */\r\n\r\n\r\n  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n    // The maximum exponent magnitude.\r\n    // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\r\n  var EXP_LIMIT = 9e15,                      // 0 to 9e15\r\n\r\n    // The limit on the value of `precision`, and on the value of the first argument to\r\n    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n    MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n    // Base conversion alphabet.\r\n    NUMERALS = '0123456789abcdef',\r\n\r\n    // The natural logarithm of 10 (1025 digits).\r\n    LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\r\n\r\n    // Pi (1025 digits).\r\n    PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\r\n\r\n\r\n    // The initial configuration properties of the Decimal constructor.\r\n    DEFAULTS = {\r\n\r\n      // These values must be integers within the stated ranges (inclusive).\r\n      // Most of these values can be changed at run-time using the `Decimal.config` method.\r\n\r\n      // The maximum number of significant digits of the result of a calculation or base conversion.\r\n      // E.g. `Decimal.config({ precision: 20 });`\r\n      precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n      // The rounding mode used when rounding to `precision`.\r\n      //\r\n      // ROUND_UP         0 Away from zero.\r\n      // ROUND_DOWN       1 Towards zero.\r\n      // ROUND_CEIL       2 Towards +Infinity.\r\n      // ROUND_FLOOR      3 Towards -Infinity.\r\n      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      //\r\n      // E.g.\r\n      // `Decimal.rounding = 4;`\r\n      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n      rounding: 4,                           // 0 to 8\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP         0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\r\n      // FLOOR      3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN  6 The IEEE 754 remainder function.\r\n      // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\r\n      //\r\n      // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\r\n      // division (9) are commonly used for the modulus operation. The other rounding modes can also\r\n      // be used, but they may not give useful results.\r\n      modulo: 1,                             // 0 to 9\r\n\r\n      // The exponent value at and beneath which `toString` returns exponential notation.\r\n      // JavaScript numbers: -7\r\n      toExpNeg: -7,                          // 0 to -EXP_LIMIT\r\n\r\n      // The exponent value at and above which `toString` returns exponential notation.\r\n      // JavaScript numbers: 21\r\n      toExpPos:  21,                         // 0 to EXP_LIMIT\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // JavaScript numbers: -324  (5e-324)\r\n      minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // JavaScript numbers: 308  (1.7976931348623157e+308)\r\n      maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      crypto: false                          // true/false\r\n    },\r\n\r\n\r\n  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n    Decimal, inexact, noConflict, quadrant,\r\n    external = true,\r\n\r\n    decimalError = '[DecimalError] ',\r\n    invalidArgument = decimalError + 'Invalid argument: ',\r\n    precisionLimitExceeded = decimalError + 'Precision limit exceeded',\r\n    cryptoUnavailable = decimalError + 'crypto unavailable',\r\n    tag = '[object Decimal]',\r\n\r\n    mathfloor = Math.floor,\r\n    mathpow = Math.pow,\r\n\r\n    isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\r\n    isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\r\n    isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\r\n    isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n    BASE = 1e7,\r\n    LOG_BASE = 7,\r\n    MAX_SAFE_INTEGER = 9007199254740991,\r\n\r\n    LN10_PRECISION = LN10.length - 1,\r\n    PI_PRECISION = PI.length - 1,\r\n\r\n    // Decimal.prototype object\r\n    P = { toStringTag: tag };\r\n\r\n\r\n  // Decimal prototype methods\r\n\r\n\r\n  /*\r\n   *  absoluteValue             abs\r\n   *  ceil\r\n   *  clampedTo                 clamp\r\n   *  comparedTo                cmp\r\n   *  cosine                    cos\r\n   *  cubeRoot                  cbrt\r\n   *  decimalPlaces             dp\r\n   *  dividedBy                 div\r\n   *  dividedToIntegerBy        divToInt\r\n   *  equals                    eq\r\n   *  floor\r\n   *  greaterThan               gt\r\n   *  greaterThanOrEqualTo      gte\r\n   *  hyperbolicCosine          cosh\r\n   *  hyperbolicSine            sinh\r\n   *  hyperbolicTangent         tanh\r\n   *  inverseCosine             acos\r\n   *  inverseHyperbolicCosine   acosh\r\n   *  inverseHyperbolicSine     asinh\r\n   *  inverseHyperbolicTangent  atanh\r\n   *  inverseSine               asin\r\n   *  inverseTangent            atan\r\n   *  isFinite\r\n   *  isInteger                 isInt\r\n   *  isNaN\r\n   *  isNegative                isNeg\r\n   *  isPositive                isPos\r\n   *  isZero\r\n   *  lessThan                  lt\r\n   *  lessThanOrEqualTo         lte\r\n   *  logarithm                 log\r\n   *  [maximum]                 [max]\r\n   *  [minimum]                 [min]\r\n   *  minus                     sub\r\n   *  modulo                    mod\r\n   *  naturalExponential        exp\r\n   *  naturalLogarithm          ln\r\n   *  negated                   neg\r\n   *  plus                      add\r\n   *  precision                 sd\r\n   *  round\r\n   *  sine                      sin\r\n   *  squareRoot                sqrt\r\n   *  tangent                   tan\r\n   *  times                     mul\r\n   *  toBinary\r\n   *  toDecimalPlaces           toDP\r\n   *  toExponential\r\n   *  toFixed\r\n   *  toFraction\r\n   *  toHexadecimal             toHex\r\n   *  toNearest\r\n   *  toNumber\r\n   *  toOctal\r\n   *  toPower                   pow\r\n   *  toPrecision\r\n   *  toSignificantDigits       toSD\r\n   *  toString\r\n   *  truncated                 trunc\r\n   *  valueOf                   toJSON\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of this Decimal.\r\n   *\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of positive Infinity.\r\n   *\r\n   */\r\n  P.ceil = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal clamped to the range\r\n   * delineated by `min` and `max`.\r\n   *\r\n   * min {number|string|bigint|Decimal}\r\n   * max {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  P.clampedTo = P.clamp = function (min, max) {\r\n    var k,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n    min = new Ctor(min);\r\n    max = new Ctor(max);\r\n    if (!min.s || !max.s) return new Ctor(NaN);\r\n    if (min.gt(max)) throw Error(invalidArgument + max);\r\n    k = x.cmp(min);\r\n    return k < 0 ? min : x.cmp(max) > 0 ? max : new Ctor(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if the value of this Decimal is greater than the value of `y`,\r\n   *  -1    if the value of this Decimal is less than the value of `y`,\r\n   *   0    if they have the same value,\r\n   *   NaN  if the value of either Decimal is NaN.\r\n   *\r\n   */\r\n  P.comparedTo = P.cmp = function (y) {\r\n    var i, j, xdL, ydL,\r\n      x = this,\r\n      xd = x.d,\r\n      yd = (y = new x.constructor(y)).d,\r\n      xs = x.s,\r\n      ys = y.s;\r\n\r\n    // Either NaN or ±Infinity?\r\n    if (!xd || !yd) {\r\n      return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Either zero?\r\n    if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\r\n\r\n    // Signs differ?\r\n    if (xs !== ys) return xs;\r\n\r\n    // Compare exponents.\r\n    if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\r\n\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n      if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * cos(0)         = 1\r\n   * cos(-0)        = 1\r\n   * cos(Infinity)  = NaN\r\n   * cos(-Infinity) = NaN\r\n   * cos(NaN)       = NaN\r\n   *\r\n   */\r\n  P.cosine = P.cos = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.d) return new Ctor(NaN);\r\n\r\n    // cos(0) = cos(-0) = 1\r\n    if (!x.d[0]) return new Ctor(1);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *\r\n   * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   *  cbrt(0)  =  0\r\n   *  cbrt(-0) = -0\r\n   *  cbrt(1)  =  1\r\n   *  cbrt(-1) = -1\r\n   *  cbrt(N)  =  N\r\n   *  cbrt(-I) = -I\r\n   *  cbrt(I)  =  I\r\n   *\r\n   * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\r\n   *\r\n   */\r\n  P.cubeRoot = P.cbrt = function () {\r\n    var e, m, n, r, rep, s, sd, t, t3, t3plusx,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = x.s * mathpow(x.s * x, 1 / 3);\r\n\r\n     // Math.cbrt underflow/overflow?\r\n     // Pass x to Math.pow as integer, then adjust the exponent of the result.\r\n    if (!s || Math.abs(s) == 1 / 0) {\r\n      n = digitsToString(x.d);\r\n      e = x.e;\r\n\r\n      // Adjust n exponent so it is a multiple of 3 away from x exponent.\r\n      if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\r\n      s = mathpow(n, 1 / 3);\r\n\r\n      // Rarely, e may be one less than the result exponent value.\r\n      e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n      r.s = x.s;\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Halley's method.\r\n    // TODO? Compare Newton's method.\r\n    for (;;) {\r\n      t = r;\r\n      t3 = t.times(t).times(t);\r\n      t3plusx = t3.plus(x);\r\n      r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\r\n        // , i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of decimal places of the value of this Decimal.\r\n   *\r\n   */\r\n  P.decimalPlaces = P.dp = function () {\r\n    var w,\r\n      d = this.d,\r\n      n = NaN;\r\n\r\n    if (d) {\r\n      w = d.length - 1;\r\n      n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      w = d[w];\r\n      if (w) for (; w % 10 == 0; w /= 10) n--;\r\n      if (n < 0) n = 0;\r\n    }\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedBy = P.div = function (y) {\r\n    return divide(this, new this.constructor(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n   * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedToIntegerBy = P.divToInt = function (y) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.equals = P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of negative Infinity.\r\n   *\r\n   */\r\n  P.floor = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 3);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n   * false.\r\n   *\r\n   */\r\n  P.greaterThan = P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  P.greaterThanOrEqualTo = P.gte = function (y) {\r\n    var k = this.cmp(y);\r\n    return k == 1 || k === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [1, Infinity]\r\n   *\r\n   * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\r\n   *\r\n   * cosh(0)         = 1\r\n   * cosh(-0)        = 1\r\n   * cosh(Infinity)  = Infinity\r\n   * cosh(-Infinity) = Infinity\r\n   * cosh(NaN)       = NaN\r\n   *\r\n   *  x        time taken (ms)   result\r\n   * 1000      9                 9.8503555700852349694e+433\r\n   * 10000     25                4.4034091128314607936e+4342\r\n   * 100000    171               1.4033316802130615897e+43429\r\n   * 1000000   3817              1.5166076984010437725e+434294\r\n   * 10000000  abandoned after 2 minute wait\r\n   *\r\n   * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicCosine = P.cosh = function () {\r\n    var k, n, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      one = new Ctor(1);\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\r\n    if (x.isZero()) return one;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\r\n    // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    // TODO? Estimation reused from cosine() and may not be optimal here.\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      n = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      n = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\r\n\r\n    // Reverse argument reduction\r\n    var cosh2_x,\r\n      i = k,\r\n      d8 = new Ctor(8);\r\n    for (; i--;) {\r\n      cosh2_x = x.times(x);\r\n      x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\r\n    }\r\n\r\n    return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\r\n   *\r\n   * sinh(0)         = 0\r\n   * sinh(-0)        = -0\r\n   * sinh(Infinity)  = Infinity\r\n   * sinh(-Infinity) = -Infinity\r\n   * sinh(NaN)       = NaN\r\n   *\r\n   * x        time taken (ms)\r\n   * 10       2 ms\r\n   * 100      5 ms\r\n   * 1000     14 ms\r\n   * 10000    82 ms\r\n   * 100000   886 ms            1.4033316802130615897e+43429\r\n   * 200000   2613 ms\r\n   * 300000   5407 ms\r\n   * 400000   8824 ms\r\n   * 500000   13026 ms          8.7080643612718084129e+217146\r\n   * 1000000  48543 ms\r\n   *\r\n   * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicSine = P.sinh = function () {\r\n    var k, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n    } else {\r\n\r\n      // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\r\n      // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\r\n      // 3 multiplications and 1 addition\r\n\r\n      // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\r\n      // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\r\n      // 4 multiplications and 2 additions\r\n\r\n      // Estimate the optimum number of times to use the argument reduction.\r\n      k = 1.4 * Math.sqrt(len);\r\n      k = k > 16 ? 16 : k | 0;\r\n\r\n      x = x.times(1 / tinyPow(5, k));\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n\r\n      // Reverse argument reduction\r\n      var sinh2_x,\r\n        d5 = new Ctor(5),\r\n        d16 = new Ctor(16),\r\n        d20 = new Ctor(20);\r\n      for (; k--;) {\r\n        sinh2_x = x.times(x);\r\n        x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\r\n      }\r\n    }\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * tanh(x) = sinh(x) / cosh(x)\r\n   *\r\n   * tanh(0)         = 0\r\n   * tanh(-0)        = -0\r\n   * tanh(Infinity)  = 1\r\n   * tanh(-Infinity) = -1\r\n   * tanh(NaN)       = NaN\r\n   *\r\n   */\r\n  P.hyperbolicTangent = P.tanh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 7;\r\n    Ctor.rounding = 1;\r\n\r\n    return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\r\n   * this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [0, pi]\r\n   *\r\n   * acos(x) = pi/2 - asin(x)\r\n   *\r\n   * acos(0)       = pi/2\r\n   * acos(-0)      = pi/2\r\n   * acos(1)       = 0\r\n   * acos(-1)      = pi\r\n   * acos(1/2)     = pi/3\r\n   * acos(-1/2)    = 2*pi/3\r\n   * acos(|x| > 1) = NaN\r\n   * acos(NaN)     = NaN\r\n   *\r\n   */\r\n  P.inverseCosine = P.acos = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      k = x.abs().cmp(1),\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n      return k === 0\r\n        // |x| is 1\r\n        ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\r\n        // |x| > 1 or x is NaN\r\n        : new Ctor(NaN);\r\n    }\r\n\r\n    if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    // See https://github.com/MikeMcl/decimal.js/pull/217\r\n    x = new Ctor(1).minus(x).div(x.plus(1)).sqrt().atan();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [1, Infinity]\r\n   * Range: [0, Infinity]\r\n   *\r\n   * acosh(x) = ln(x + sqrt(x^2 - 1))\r\n   *\r\n   * acosh(x < 1)     = NaN\r\n   * acosh(NaN)       = NaN\r\n   * acosh(Infinity)  = Infinity\r\n   * acosh(-Infinity) = NaN\r\n   * acosh(0)         = NaN\r\n   * acosh(-0)        = NaN\r\n   * acosh(1)         = 0\r\n   * acosh(-1)        = NaN\r\n   *\r\n   */\r\n  P.inverseHyperbolicCosine = P.acosh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\r\n    if (!x.isFinite()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).minus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * asinh(x) = ln(x + sqrt(x^2 + 1))\r\n   *\r\n   * asinh(NaN)       = NaN\r\n   * asinh(Infinity)  = Infinity\r\n   * asinh(-Infinity) = -Infinity\r\n   * asinh(0)         = 0\r\n   * asinh(-0)        = -0\r\n   *\r\n   */\r\n  P.inverseHyperbolicSine = P.asinh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).plus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\r\n   *\r\n   * atanh(|x| > 1)   = NaN\r\n   * atanh(NaN)       = NaN\r\n   * atanh(Infinity)  = NaN\r\n   * atanh(-Infinity) = NaN\r\n   * atanh(0)         = 0\r\n   * atanh(-0)        = -0\r\n   * atanh(1)         = Infinity\r\n   * atanh(-1)        = -Infinity\r\n   *\r\n   */\r\n  P.inverseHyperbolicTangent = P.atanh = function () {\r\n    var pr, rm, wpr, xsd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    xsd = x.sd();\r\n\r\n    if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\r\n\r\n    Ctor.precision = wpr = xsd - x.e;\r\n\r\n    x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\r\n\r\n    Ctor.precision = pr + 4;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.ln();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(0.5);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\r\n   *\r\n   * asin(0)       = 0\r\n   * asin(-0)      = -0\r\n   * asin(1/2)     = pi/6\r\n   * asin(-1/2)    = -pi/6\r\n   * asin(1)       = pi/2\r\n   * asin(-1)      = -pi/2\r\n   * asin(|x| > 1) = NaN\r\n   * asin(NaN)     = NaN\r\n   *\r\n   * TODO? Compare performance of Taylor series.\r\n   *\r\n   */\r\n  P.inverseSine = P.asin = function () {\r\n    var halfPi, k,\r\n      pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    k = x.abs().cmp(1);\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n\r\n      // |x| is 1\r\n      if (k === 0) {\r\n        halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        halfPi.s = x.s;\r\n        return halfPi;\r\n      }\r\n\r\n      // |x| > 1 or x is NaN\r\n      return new Ctor(NaN);\r\n    }\r\n\r\n    // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n   *\r\n   * atan(0)         = 0\r\n   * atan(-0)        = -0\r\n   * atan(1)         = pi/4\r\n   * atan(-1)        = -pi/4\r\n   * atan(Infinity)  = pi/2\r\n   * atan(-Infinity) = -pi/2\r\n   * atan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.inverseTangent = P.atan = function () {\r\n    var i, j, k, n, px, t, r, wpr, x2,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (!x.isFinite()) {\r\n      if (!x.s) return new Ctor(NaN);\r\n      if (pr + 4 <= PI_PRECISION) {\r\n        r = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        r.s = x.s;\r\n        return r;\r\n      }\r\n    } else if (x.isZero()) {\r\n      return new Ctor(x);\r\n    } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\r\n      r = getPi(Ctor, pr + 4, rm).times(0.25);\r\n      r.s = x.s;\r\n      return r;\r\n    }\r\n\r\n    Ctor.precision = wpr = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\r\n\r\n    // Argument reduction\r\n    // Ensure |x| < 0.42\r\n    // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\r\n\r\n    k = Math.min(28, wpr / LOG_BASE + 2 | 0);\r\n\r\n    for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\r\n\r\n    external = false;\r\n\r\n    j = Math.ceil(wpr / LOG_BASE);\r\n    n = 1;\r\n    x2 = x.times(x);\r\n    r = new Ctor(x);\r\n    px = x;\r\n\r\n    // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n    for (; i !== -1;) {\r\n      px = px.times(x2);\r\n      t = r.minus(px.div(n += 2));\r\n\r\n      px = px.times(x2);\r\n      r = t.plus(px.div(n += 2));\r\n\r\n      if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\r\n    }\r\n\r\n    if (k) r = r.times(2 << (k - 1));\r\n\r\n    external = true;\r\n\r\n    return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n   *\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.d;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is an integer, otherwise return false.\r\n   *\r\n   */\r\n  P.isInteger = P.isInt = function () {\r\n    return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is NaN, otherwise return false.\r\n   *\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is negative, otherwise return false.\r\n   *\r\n   */\r\n  P.isNegative = P.isNeg = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is positive, otherwise return false.\r\n   *\r\n   */\r\n  P.isPositive = P.isPos = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n   *\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.d && this.d[0] === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThan = P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThanOrEqualTo = P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * If no base is specified, return log[10](arg).\r\n   *\r\n   * log[base](arg) = ln(arg) / ln(base)\r\n   *\r\n   * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\r\n   * otherwise:\r\n   *\r\n   * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n   * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n   * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n   *\r\n   * log[-b](a)       = NaN\r\n   * log[0](a)        = NaN\r\n   * log[1](a)        = NaN\r\n   * log[NaN](a)      = NaN\r\n   * log[Infinity](a) = NaN\r\n   * log[b](0)        = -Infinity\r\n   * log[b](-0)       = -Infinity\r\n   * log[b](-a)       = NaN\r\n   * log[b](1)        = 0\r\n   * log[b](Infinity) = Infinity\r\n   * log[b](NaN)      = NaN\r\n   *\r\n   * [base] {number|string|bigint|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  P.logarithm = P.log = function (base) {\r\n    var isBase10, d, denominator, k, inf, num, sd, r,\r\n      arg = this,\r\n      Ctor = arg.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding,\r\n      guard = 5;\r\n\r\n    // Default base is 10.\r\n    if (base == null) {\r\n      base = new Ctor(10);\r\n      isBase10 = true;\r\n    } else {\r\n      base = new Ctor(base);\r\n      d = base.d;\r\n\r\n      // Return NaN if base is negative, or non-finite, or is 0 or 1.\r\n      if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\r\n\r\n      isBase10 = base.eq(10);\r\n    }\r\n\r\n    d = arg.d;\r\n\r\n    // Is arg negative, non-finite, 0 or 1?\r\n    if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\r\n      return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\r\n    }\r\n\r\n    // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\r\n    // integer power of 10.\r\n    if (isBase10) {\r\n      if (d.length > 1) {\r\n        inf = true;\r\n      } else {\r\n        for (k = d[0]; k % 10 === 0;) k /= 10;\r\n        inf = k !== 1;\r\n      }\r\n    }\r\n\r\n    external = false;\r\n    sd = pr + guard;\r\n    num = naturalLogarithm(arg, sd);\r\n    denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n\r\n    // The result will have 5 rounding digits.\r\n    r = divide(num, denominator, sd, 1);\r\n\r\n    // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\r\n    // calculate 10 further digits.\r\n    //\r\n    // If the result is known to have an infinite decimal expansion, repeat this until it is clear\r\n    // that the result is above or below the boundary. Otherwise, if after calculating the 10\r\n    // further digits, the last 14 are nines, round up and assume the result is exact.\r\n    // Also assume the result is exact if the last 14 are zero.\r\n    //\r\n    // Example of a result that will be incorrectly rounded:\r\n    // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\r\n    // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\r\n    // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\r\n    // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\r\n    // place is still 2.6.\r\n    if (checkRoundingDigits(r.d, k = pr, rm)) {\r\n\r\n      do {\r\n        sd += 10;\r\n        num = naturalLogarithm(arg, sd);\r\n        denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n        r = divide(num, denominator, sd, 1);\r\n\r\n        if (!inf) {\r\n\r\n          // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\r\n          if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\r\n            r = finalise(r, pr + 1, 0);\r\n          }\r\n\r\n          break;\r\n        }\r\n      } while (checkRoundingDigits(r.d, k += 10, rm));\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|bigint|Decimal}\r\n   *\r\n  P.max = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, -1);\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|bigint|Decimal}\r\n   *\r\n  P.min = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 1);\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return y negated if x is finite and y is ±Infinity.\r\n      else if (x.d) y.s = -y.s;\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with different signs.\r\n      // Return NaN if both are ±Infinity with the same sign.\r\n      else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n    // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.plus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return y negated if x is zero and y is non-zero.\r\n      if (yd[0]) y.s = -y.s;\r\n\r\n      // Return x if y is zero and x is non-zero.\r\n      else if (xd[0]) y = new Ctor(x);\r\n\r\n      // Return zero if both are zero.\r\n      // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\r\n      else return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    e = mathfloor(y.e / LOG_BASE);\r\n    xe = mathfloor(x.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    k = xe - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (k) {\r\n      xLTy = k < 0;\r\n\r\n      if (xLTy) {\r\n        d = xd;\r\n        k = -k;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = xe;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Numbers with massively different exponents would result in a very high number of\r\n      // zeros needing to be prepended, but this can be avoided while still ensuring correct\r\n      // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n      if (k > i) {\r\n        k = i;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      d.reverse();\r\n      for (i = k; i--;) d.push(0);\r\n      d.reverse();\r\n\r\n    // Base 1e7 exponents equal.\r\n    } else {\r\n\r\n      // Check digits to determine which is the bigger number.\r\n\r\n      i = xd.length;\r\n      len = yd.length;\r\n      xLTy = i < len;\r\n      if (xLTy) len = i;\r\n\r\n      for (i = 0; i < len; i++) {\r\n        if (xd[i] != yd[i]) {\r\n          xLTy = xd[i] < yd[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      k = 0;\r\n    }\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      xd = yd;\r\n      yd = d;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    len = xd.length;\r\n\r\n    // Append zeros to `xd` if shorter.\r\n    // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\r\n    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n    // Subtract yd from xd.\r\n    for (i = yd.length; i > k;) {\r\n\r\n      if (xd[--i] < yd[i]) {\r\n        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n        --xd[j];\r\n        xd[i] += BASE;\r\n      }\r\n\r\n      xd[i] -= yd[i];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] === 0;) xd.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n    // Zero?\r\n    if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * The result depends on the modulo mode.\r\n   *\r\n   */\r\n  P.modulo = P.mod = function (y) {\r\n    var q,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // Return NaN if x is ±Infinity or NaN, or y is NaN or ±0.\r\n    if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\r\n\r\n    // Return x if y is ±Infinity or x is ±0.\r\n    if (!y.d || x.d && !x.d[0]) {\r\n      return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\r\n    }\r\n\r\n    // Prevent rounding of intermediate calculations.\r\n    external = false;\r\n\r\n    if (Ctor.modulo == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // result = x - q * y    where  0 <= result < abs(y)\r\n      q = divide(x, y.abs(), 0, 3, 1);\r\n      q.s *= y.s;\r\n    } else {\r\n      q = divide(x, y, 0, Ctor.modulo, 1);\r\n    }\r\n\r\n    q = q.times(y);\r\n\r\n    external = true;\r\n\r\n    return x.minus(q);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n   * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalExponential = P.exp = function () {\r\n    return naturalExponential(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalLogarithm = P.ln = function () {\r\n    return naturalLogarithm(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n   * -1.\r\n   *\r\n   */\r\n  P.negated = P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var carry, d, e, i, k, len, pr, rm, xd, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with the same sign.\r\n      // Return NaN if both are ±Infinity with different signs.\r\n      // Return y if x is finite and y is ±Infinity.\r\n      else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n     // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return x if y is zero.\r\n      // Return y if y is non-zero.\r\n      if (!yd[0]) y = new Ctor(x);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    k = mathfloor(x.e / LOG_BASE);\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    i = k - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (i) {\r\n\r\n      if (i < 0) {\r\n        d = xd;\r\n        i = -i;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = k;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n      k = Math.ceil(pr / LOG_BASE);\r\n      len = k > len ? k + 1 : len + 1;\r\n\r\n      if (i > len) {\r\n        i = len;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n      d.reverse();\r\n      for (; i--;) d.push(0);\r\n      d.reverse();\r\n    }\r\n\r\n    len = xd.length;\r\n    i = yd.length;\r\n\r\n    // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n    if (len - i < 0) {\r\n      i = len;\r\n      d = yd;\r\n      yd = xd;\r\n      xd = d;\r\n    }\r\n\r\n    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n    for (carry = 0; i;) {\r\n      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n      xd[i] %= BASE;\r\n    }\r\n\r\n    if (carry) {\r\n      xd.unshift(carry);\r\n      ++e;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of significant digits of the value of this Decimal.\r\n   *\r\n   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n   *\r\n   */\r\n  P.precision = P.sd = function (z) {\r\n    var k,\r\n      x = this;\r\n\r\n    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n    if (x.d) {\r\n      k = getPrecision(x.d);\r\n      if (z && x.e + 1 > k) k = x.e + 1;\r\n    } else {\r\n      k = NaN;\r\n    }\r\n\r\n    return k;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n   * rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.round = function () {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   *\r\n   * sin(0)         = 0\r\n   * sin(-0)        = -0\r\n   * sin(Infinity)  = NaN\r\n   * sin(-Infinity) = NaN\r\n   * sin(NaN)       = NaN\r\n   *\r\n   */\r\n  P.sine = P.sin = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = sine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N)  =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I)  =  I\r\n   *  sqrt(0)  =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, sd, r, rep, t,\r\n      x = this,\r\n      d = x.d,\r\n      e = x.e,\r\n      s = x.s,\r\n      Ctor = x.constructor;\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !d || !d[0]) {\r\n      return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\r\n    }\r\n\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+x);\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = digitsToString(d);\r\n\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(n);\r\n      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Newton-Raphson iteration.\r\n    for (;;) {\r\n      t = r;\r\n      r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n        // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * tan(0)         = 0\r\n   * tan(-0)        = -0\r\n   * tan(Infinity)  = NaN\r\n   * tan(-Infinity) = NaN\r\n   * tan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.tangent = P.tan = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.sin();\r\n    x.s = 1;\r\n    x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var carry, e, i, k, r, rL, t, xdL, ydL,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      xd = x.d,\r\n      yd = (y = new Ctor(y)).d;\r\n\r\n    y.s *= x.s;\r\n\r\n     // If either is NaN, ±Infinity or ±0...\r\n    if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n      return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\r\n\r\n        // Return NaN if either is NaN.\r\n        // Return NaN if x is ±0 and y is ±Infinity, or y is ±0 and x is ±Infinity.\r\n        ? NaN\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        // Return ±0 if either is ±0.\r\n        : !xd || !yd ? y.s / 0 : y.s * 0);\r\n    }\r\n\r\n    e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Ensure xd points to the longer array.\r\n    if (xdL < ydL) {\r\n      r = xd;\r\n      xd = yd;\r\n      yd = r;\r\n      rL = xdL;\r\n      xdL = ydL;\r\n      ydL = rL;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    r = [];\r\n    rL = xdL + ydL;\r\n    for (i = rL; i--;) r.push(0);\r\n\r\n    // Multiply!\r\n    for (i = ydL; --i >= 0;) {\r\n      carry = 0;\r\n      for (k = xdL + i; k > i;) {\r\n        t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n        r[k--] = t % BASE | 0;\r\n        carry = t / BASE | 0;\r\n      }\r\n\r\n      r[k] = (r[k] + carry) % BASE | 0;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; !r[--rL];) r.pop();\r\n\r\n    if (carry) ++e;\r\n    else r.shift();\r\n\r\n    y.d = r;\r\n    y.e = getBase10Exponent(r, e);\r\n\r\n    return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 2, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toBinary = function (sd, rm) {\r\n    return toStringBinary(this, 2, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n   *\r\n   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toDecimalPlaces = P.toDP = function (dp, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n    if (dp === void 0) return x;\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    return finalise(x, dp + x.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in exponential notation rounded to\r\n   * `dp` fixed decimal places using rounding mode `rounding`.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x, true);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), dp + 1, rm);\r\n      str = finiteToString(x, true, dp + 1);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n   * omitted.\r\n   *\r\n   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   * (-0).toFixed(3) is '0.000'.\r\n   * (-0.5).toFixed(0) is '-0'.\r\n   *\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var str, y,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      y = finalise(new Ctor(x), dp + x.e + 1, rm);\r\n      str = finiteToString(y, false, dp + y.e + 1);\r\n    }\r\n\r\n    // To determine whether to add the minus sign look at the value before it was rounded,\r\n    // i.e. look at `x` rather than `y`.\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array representing the value of this Decimal as a simple fraction with an integer\r\n   * numerator and an integer denominator.\r\n   *\r\n   * The denominator will be a positive non-zero value less than or equal to the specified maximum\r\n   * denominator. If a maximum denominator is not specified, the denominator will be the lowest\r\n   * value necessary to represent the number exactly.\r\n   *\r\n   * [maxD] {number|string|bigint|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n   *\r\n   */\r\n  P.toFraction = function (maxD) {\r\n    var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\r\n      x = this,\r\n      xd = x.d,\r\n      Ctor = x.constructor;\r\n\r\n    if (!xd) return new Ctor(x);\r\n\r\n    n1 = d0 = new Ctor(1);\r\n    d1 = n0 = new Ctor(0);\r\n\r\n    d = new Ctor(d1);\r\n    e = d.e = getPrecision(xd) - x.e - 1;\r\n    k = e % LOG_BASE;\r\n    d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\r\n\r\n    if (maxD == null) {\r\n\r\n      // d is 10**e, the minimum max-denominator needed.\r\n      maxD = e > 0 ? d : n1;\r\n    } else {\r\n      n = new Ctor(maxD);\r\n      if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\r\n      maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\r\n    }\r\n\r\n    external = false;\r\n    n = new Ctor(digitsToString(xd));\r\n    pr = Ctor.precision;\r\n    Ctor.precision = e = xd.length * LOG_BASE * 2;\r\n\r\n    for (;;)  {\r\n      q = divide(n, d, 0, 1, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.cmp(maxD) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      d2 = n1;\r\n      n1 = n0.plus(q.times(d2));\r\n      n0 = d2;\r\n      d2 = d;\r\n      d = n.minus(q.times(d2));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1?\r\n    r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\r\n        ? [n1, d1] : [n0, d0];\r\n\r\n    Ctor.precision = pr;\r\n    external = true;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 16, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toHexadecimal = P.toHex = function (sd, rm) {\r\n    return toStringBinary(this, 16, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\r\n   * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\r\n   *\r\n   * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n   * or `y` is NaN, in which case the return value will be also be NaN.\r\n   *\r\n   * The return value is not affected by the value of `precision`.\r\n   *\r\n   * y {number|string|bigint|Decimal} The magnitude to round to a multiple of.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toNearest() rounding mode not an integer: {rm}'\r\n   * 'toNearest() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toNearest = function (y, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (y == null) {\r\n\r\n      // If x is not finite, return x.\r\n      if (!x.d) return x;\r\n\r\n      y = new Ctor(1);\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      y = new Ctor(y);\r\n      if (rm === void 0) {\r\n        rm = Ctor.rounding;\r\n      } else {\r\n        checkInt32(rm, 0, 8);\r\n      }\r\n\r\n      // If x is not finite, return x if y is not NaN, else NaN.\r\n      if (!x.d) return y.s ? x : y;\r\n\r\n      // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\r\n      if (!y.d) {\r\n        if (y.s) y.s = x.s;\r\n        return y;\r\n      }\r\n    }\r\n\r\n    // If y is not zero, calculate the nearest multiple of y to x.\r\n    if (y.d[0]) {\r\n      external = false;\r\n      x = divide(x, y, 0, rm, 1).times(y);\r\n      external = true;\r\n      finalise(x);\r\n\r\n    // If y is zero, return zero with the sign of x.\r\n    } else {\r\n      y.s = x.s;\r\n      x = y;\r\n    }\r\n\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Decimal converted to a number primitive.\r\n   * Zero keeps its sign.\r\n   *\r\n   */\r\n  P.toNumber = function () {\r\n    return +this;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 8, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toOctal = function (sd, rm) {\r\n    return toStringBinary(this, 8, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\r\n   * to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * ECMAScript compliant.\r\n   *\r\n   *   pow(x, NaN)                           = NaN\r\n   *   pow(x, ±0)                            = 1\r\n\r\n   *   pow(NaN, non-zero)                    = NaN\r\n   *   pow(abs(x) > 1, +Infinity)            = +Infinity\r\n   *   pow(abs(x) > 1, -Infinity)            = +0\r\n   *   pow(abs(x) == 1, ±Infinity)           = NaN\r\n   *   pow(abs(x) < 1, +Infinity)            = +0\r\n   *   pow(abs(x) < 1, -Infinity)            = +Infinity\r\n   *   pow(+Infinity, y > 0)                 = +Infinity\r\n   *   pow(+Infinity, y < 0)                 = +0\r\n   *   pow(-Infinity, odd integer > 0)       = -Infinity\r\n   *   pow(-Infinity, even integer > 0)      = +Infinity\r\n   *   pow(-Infinity, odd integer < 0)       = -0\r\n   *   pow(-Infinity, even integer < 0)      = +0\r\n   *   pow(+0, y > 0)                        = +0\r\n   *   pow(+0, y < 0)                        = +Infinity\r\n   *   pow(-0, odd integer > 0)              = -0\r\n   *   pow(-0, even integer > 0)             = +0\r\n   *   pow(-0, odd integer < 0)              = -Infinity\r\n   *   pow(-0, even integer < 0)             = +Infinity\r\n   *   pow(finite x < 0, finite non-integer) = NaN\r\n   *\r\n   * For non-integer or very large exponents pow(x, y) is calculated using\r\n   *\r\n   *   x^y = exp(y*ln(x))\r\n   *\r\n   * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n   * probability of an incorrectly rounded result\r\n   * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n   * i.e. 1 in 250,000,000,000,000\r\n   *\r\n   * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n   *\r\n   * y {number|string|bigint|Decimal} The power to which to raise this Decimal.\r\n   *\r\n   */\r\n  P.toPower = P.pow = function (y) {\r\n    var e, k, pr, r, rm, s,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      yn = +(y = new Ctor(y));\r\n\r\n    // Either ±Infinity, NaN or ±0?\r\n    if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (x.eq(1)) return x;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (y.eq(1)) return finalise(x, pr, rm);\r\n\r\n    // y exponent\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n    if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n      r = intPow(Ctor, x, k, pr);\r\n      return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\r\n    }\r\n\r\n    s = x.s;\r\n\r\n    // if x is negative\r\n    if (s < 0) {\r\n\r\n      // if y is not an integer\r\n      if (e < y.d.length - 1) return new Ctor(NaN);\r\n\r\n      // Result is positive if x is negative and the last digit of integer y is even.\r\n      if ((y.d[e] & 1) == 0) s = 1;\r\n\r\n      // if x.eq(-1)\r\n      if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\r\n        x.s = s;\r\n        return x;\r\n      }\r\n    }\r\n\r\n    // Estimate result exponent.\r\n    // x^y = 10^e,  where e = y * log10(x)\r\n    // log10(x) = log10(x_significand) + x_exponent\r\n    // log10(x_significand) = ln(x_significand) / ln(10)\r\n    k = mathpow(+x, yn);\r\n    e = k == 0 || !isFinite(k)\r\n      ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\r\n      : new Ctor(k + '').e;\r\n\r\n    // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\r\n\r\n    // Overflow/underflow?\r\n    if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\r\n\r\n    external = false;\r\n    Ctor.rounding = x.s = 1;\r\n\r\n    // Estimate the extra guard digits needed to ensure five correct rounding digits from\r\n    // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\r\n    // new Decimal(2.32456).pow('2087987436534566.46411')\r\n    // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\r\n    k = Math.min(12, (e + '').length);\r\n\r\n    // r = x^y = exp(y*ln(x))\r\n    r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\r\n\r\n    // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\r\n    if (r.d) {\r\n\r\n      // Truncate to the required precision plus five rounding digits.\r\n      r = finalise(r, pr + 5, 1);\r\n\r\n      // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\r\n      // the result.\r\n      if (checkRoundingDigits(r.d, pr, rm)) {\r\n        e = pr + 10;\r\n\r\n        // Truncate to the increased precision plus five rounding digits.\r\n        r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\r\n\r\n        // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\r\n        if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\r\n          r = finalise(r, pr + 1, 0);\r\n        }\r\n      }\r\n    }\r\n\r\n    r.s = s;\r\n    external = true;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), sd, rm);\r\n      str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n   * omitted.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toSD() digits out of range: {sd}'\r\n   * 'toSD() digits not an integer: {sd}'\r\n   * 'toSD() rounding mode not an integer: {rm}'\r\n   * 'toSD() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toSignificantDigits = P.toSD = function (sd, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    return finalise(new Ctor(x), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   *\r\n   * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n   *\r\n   */\r\n  P.toString = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n   *\r\n   */\r\n  P.truncated = P.trunc = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   * Unlike `toString`, negative zero will include the minus sign.\r\n   *\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n  /*\r\n   *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\r\n   *                           finiteToString, naturalExponential, naturalLogarithm\r\n   *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\r\n   *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\r\n   *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\r\n   *  convertBase              toStringBinary, parseOther\r\n   *  cos                      P.cos\r\n   *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\r\n   *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\r\n   *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\r\n   *                           taylorSeries, atan2, parseOther\r\n   *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\r\n   *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\r\n   *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\r\n   *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\r\n   *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\r\n   *                           P.truncated, divide, getLn10, getPi, naturalExponential,\r\n   *                           naturalLogarithm, ceil, floor, round, trunc\r\n   *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\r\n   *                           toStringBinary\r\n   *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\r\n   *  getLn10                  P.logarithm, naturalLogarithm\r\n   *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\r\n   *  getPrecision             P.precision, P.toFraction\r\n   *  getZeroString            digitsToString, finiteToString\r\n   *  intPow                   P.toPower, parseOther\r\n   *  isOdd                    toLessThanHalfPi\r\n   *  maxOrMin                 max, min\r\n   *  naturalExponential       P.naturalExponential, P.toPower\r\n   *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\r\n   *                           P.toPower, naturalExponential\r\n   *  nonFiniteToString        finiteToString, toStringBinary\r\n   *  parseDecimal             Decimal\r\n   *  parseOther               Decimal\r\n   *  sin                      P.sin\r\n   *  taylorSeries             P.cosh, P.sinh, cos, sin\r\n   *  toLessThanHalfPi         P.cos, P.sin\r\n   *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\r\n   *  truncate                 intPow\r\n   *\r\n   *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\r\n   *                           naturalLogarithm, config, parseOther, random, Decimal\r\n   */\r\n\r\n\r\n  function digitsToString(d) {\r\n    var i, k, ws,\r\n      indexOfLastWord = d.length - 1,\r\n      str = '',\r\n      w = d[0];\r\n\r\n    if (indexOfLastWord > 0) {\r\n      str += w;\r\n      for (i = 1; i < indexOfLastWord; i++) {\r\n        ws = d[i] + '';\r\n        k = LOG_BASE - ws.length;\r\n        if (k) str += getZeroString(k);\r\n        str += ws;\r\n      }\r\n\r\n      w = d[i];\r\n      ws = w + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n    } else if (w === 0) {\r\n      return '0';\r\n    }\r\n\r\n    // Remove trailing zeros of last w.\r\n    for (; w % 10 === 0;) w /= 10;\r\n\r\n    return str + w;\r\n  }\r\n\r\n\r\n  function checkInt32(i, min, max) {\r\n    if (i !== ~~i || i < min || i > max) {\r\n      throw Error(invalidArgument + i);\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Check 5 rounding digits if `repeating` is null, 4 otherwise.\r\n   * `repeating == null` if caller is `log` or `pow`,\r\n   * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\r\n   */\r\n  function checkRoundingDigits(d, i, rm, repeating) {\r\n    var di, k, r, rd;\r\n\r\n    // Get the length of the first word of the array d.\r\n    for (k = d[0]; k >= 10; k /= 10) --i;\r\n\r\n    // Is the rounding digit in the first word of d?\r\n    if (--i < 0) {\r\n      i += LOG_BASE;\r\n      di = 0;\r\n    } else {\r\n      di = Math.ceil((i + 1) / LOG_BASE);\r\n      i %= LOG_BASE;\r\n    }\r\n\r\n    // i is the index (0 - 6) of the rounding digit.\r\n    // E.g. if within the word 3487563 the first rounding digit is 5,\r\n    // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\r\n    k = mathpow(10, LOG_BASE - i);\r\n    rd = d[di] % k | 0;\r\n\r\n    if (repeating == null) {\r\n      if (i < 3) {\r\n        if (i == 0) rd = rd / 100 | 0;\r\n        else if (i == 1) rd = rd / 10 | 0;\r\n        r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\r\n      } else {\r\n        r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\r\n            (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\r\n      }\r\n    } else {\r\n      if (i < 4) {\r\n        if (i == 0) rd = rd / 1000 | 0;\r\n        else if (i == 1) rd = rd / 100 | 0;\r\n        else if (i == 2) rd = rd / 10 | 0;\r\n        r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\r\n      } else {\r\n        r = ((repeating || rm < 4) && rd + 1 == k ||\r\n        (!repeating && rm > 3) && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  // Convert string of `baseIn` to an array of numbers of `baseOut`.\r\n  // Eg. convertBase('255', 10, 16) returns [15, 15].\r\n  // Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\n  function convertBase(str, baseIn, baseOut) {\r\n    var j,\r\n      arr = [0],\r\n      arrL,\r\n      i = 0,\r\n      strL = str.length;\r\n\r\n    for (; i < strL;) {\r\n      for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\r\n      arr[0] += NUMERALS.indexOf(str.charAt(i++));\r\n      for (j = 0; j < arr.length; j++) {\r\n        if (arr[j] > baseOut - 1) {\r\n          if (arr[j + 1] === void 0) arr[j + 1] = 0;\r\n          arr[j + 1] += arr[j] / baseOut | 0;\r\n          arr[j] %= baseOut;\r\n        }\r\n      }\r\n    }\r\n\r\n    return arr.reverse();\r\n  }\r\n\r\n\r\n  /*\r\n   * cos(x) = 1 - x^2/2! + x^4/4! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function cosine(Ctor, x) {\r\n    var k, len, y;\r\n\r\n    if (x.isZero()) return x;\r\n\r\n    // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\r\n    // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    len = x.d.length;\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      y = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      y = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    Ctor.precision += k;\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\r\n\r\n    // Reverse argument reduction\r\n    for (var i = k; i--;) {\r\n      var cos2x = x.times(x);\r\n      x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\r\n    }\r\n\r\n    Ctor.precision -= k;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Perform division in the specified base.\r\n   */\r\n  var divide = (function () {\r\n\r\n    // Assumes non-zero x and k, and hence non-zero result.\r\n    function multiplyInteger(x, k, base) {\r\n      var temp,\r\n        carry = 0,\r\n        i = x.length;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        temp = x[i] * k + carry;\r\n        x[i] = temp % base | 0;\r\n        carry = temp / base | 0;\r\n      }\r\n\r\n      if (carry) x.unshift(carry);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, r;\r\n\r\n      if (aL != bL) {\r\n        r = aL > bL ? 1 : -1;\r\n      } else {\r\n        for (i = r = 0; i < aL; i++) {\r\n          if (a[i] != b[i]) {\r\n            r = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return r;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1;) a.shift();\r\n    }\r\n\r\n    return function (x, y, pr, rm, dp, base) {\r\n      var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\r\n        yL, yz,\r\n        Ctor = x.constructor,\r\n        sign = x.s == y.s ? 1 : -1,\r\n        xd = x.d,\r\n        yd = y.d;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n        return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\r\n          !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\r\n\r\n          // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.\r\n          xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\r\n      }\r\n\r\n      if (base) {\r\n        logBase = 1;\r\n        e = x.e - y.e;\r\n      } else {\r\n        base = BASE;\r\n        logBase = LOG_BASE;\r\n        e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\r\n      }\r\n\r\n      yL = yd.length;\r\n      xL = xd.length;\r\n      q = new Ctor(sign);\r\n      qd = q.d = [];\r\n\r\n      // Result exponent may be one less than e.\r\n      // The digit array of a Decimal from toStringBinary may have trailing zeros.\r\n      for (i = 0; yd[i] == (xd[i] || 0); i++);\r\n\r\n      if (yd[i] > (xd[i] || 0)) e--;\r\n\r\n      if (pr == null) {\r\n        sd = pr = Ctor.precision;\r\n        rm = Ctor.rounding;\r\n      } else if (dp) {\r\n        sd = pr + (x.e - y.e) + 1;\r\n      } else {\r\n        sd = pr;\r\n      }\r\n\r\n      if (sd < 0) {\r\n        qd.push(1);\r\n        more = true;\r\n      } else {\r\n\r\n        // Convert precision in number of base 10 digits to base 1e7 digits.\r\n        sd = sd / logBase + 2 | 0;\r\n        i = 0;\r\n\r\n        // divisor < 1e7\r\n        if (yL == 1) {\r\n          k = 0;\r\n          yd = yd[0];\r\n          sd++;\r\n\r\n          // k is the carry.\r\n          for (; (i < xL || k) && sd--; i++) {\r\n            t = k * base + (xd[i] || 0);\r\n            qd[i] = t / yd | 0;\r\n            k = t % yd | 0;\r\n          }\r\n\r\n          more = k || i < xL;\r\n\r\n        // divisor >= 1e7\r\n        } else {\r\n\r\n          // Normalise xd and yd so highest order digit of yd is >= base/2\r\n          k = base / (yd[0] + 1) | 0;\r\n\r\n          if (k > 1) {\r\n            yd = multiplyInteger(yd, k, base);\r\n            xd = multiplyInteger(xd, k, base);\r\n            yL = yd.length;\r\n            xL = xd.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xd.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL;) rem[remL++] = 0;\r\n\r\n          yz = yd.slice();\r\n          yz.unshift(0);\r\n          yd0 = yd[0];\r\n\r\n          if (yd[1] >= base / 2) ++yd0;\r\n\r\n          do {\r\n            k = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yd, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, k.\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // k will be how many times the divisor goes into the current remainder.\r\n              k = rem0 / yd0 | 0;\r\n\r\n              //  Algorithm:\r\n              //  1. product = divisor * trial digit (k)\r\n              //  2. if product > remainder: product -= divisor, k--\r\n              //  3. remainder -= product\r\n              //  4. if product was < remainder at 2:\r\n              //    5. compare new remainder and divisor\r\n              //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n              if (k > 1) {\r\n                if (k >= base) k = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiplyInteger(yd, k, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                cmp = compare(prod, rem, prodL, remL);\r\n\r\n                // product > remainder.\r\n                if (cmp == 1) {\r\n                  k--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yd, prodL, base);\r\n                }\r\n              } else {\r\n\r\n                // cmp is -1.\r\n                // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n                // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n                if (k == 0) cmp = k = 1;\r\n                prod = yd.slice();\r\n              }\r\n\r\n              prodL = prod.length;\r\n              if (prodL < remL) prod.unshift(0);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n\r\n              // If product was < previous remainder.\r\n              if (cmp == -1) {\r\n                remL = rem.length;\r\n\r\n                // Compare divisor and new remainder.\r\n                cmp = compare(yd, rem, yL, remL);\r\n\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                if (cmp < 1) {\r\n                  k++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yd, remL, base);\r\n                }\r\n              }\r\n\r\n              remL = rem.length;\r\n            } else if (cmp === 0) {\r\n              k++;\r\n              rem = [0];\r\n            }    // if cmp === 1, k will be 0\r\n\r\n            // Add the next digit, k, to the result array.\r\n            qd[i++] = k;\r\n\r\n            // Update the remainder.\r\n            if (cmp && rem[0]) {\r\n              rem[remL++] = xd[xi] || 0;\r\n            } else {\r\n              rem = [xd[xi]];\r\n              remL = 1;\r\n            }\r\n\r\n          } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n\r\n          more = rem[0] !== void 0;\r\n        }\r\n\r\n        // Leading zero?\r\n        if (!qd[0]) qd.shift();\r\n      }\r\n\r\n      // logBase is 1 when divide is being used for base conversion.\r\n      if (logBase == 1) {\r\n        q.e = e;\r\n        inexact = more;\r\n      } else {\r\n\r\n        // To calculate q.e, first get the number of digits of qd[0].\r\n        for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\r\n        q.e = i + e * logBase - 1;\r\n\r\n        finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round `x` to `sd` significant digits using rounding mode `rm`.\r\n   * Check for over/under-flow.\r\n   */\r\n   function finalise(x, sd, rm, isTruncated) {\r\n    var digits, i, j, k, rd, roundUp, w, xd, xdi,\r\n      Ctor = x.constructor;\r\n\r\n    // Don't round if sd is null or undefined.\r\n    out: if (sd != null) {\r\n      xd = x.d;\r\n\r\n      // Infinity/NaN.\r\n      if (!xd) return x;\r\n\r\n      // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // w: the word of xd containing rd, a base 1e7 number.\r\n      // xdi: the index of w within xd.\r\n      // digits: the number of digits of w.\r\n      // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n      // they had leading zeros)\r\n      // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n      // Get the length of the first word of the digits array xd.\r\n      for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\r\n      i = sd - digits;\r\n\r\n      // Is the rounding digit in the first word of xd?\r\n      if (i < 0) {\r\n        i += LOG_BASE;\r\n        j = sd;\r\n        w = xd[xdi = 0];\r\n\r\n        // Get the rounding digit at index j of w.\r\n        rd = w / mathpow(10, digits - j - 1) % 10 | 0;\r\n      } else {\r\n        xdi = Math.ceil((i + 1) / LOG_BASE);\r\n        k = xd.length;\r\n        if (xdi >= k) {\r\n          if (isTruncated) {\r\n\r\n            // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\r\n            for (; k++ <= xdi;) xd.push(0);\r\n            w = rd = 0;\r\n            digits = 1;\r\n            i %= LOG_BASE;\r\n            j = i - LOG_BASE + 1;\r\n          } else {\r\n            break out;\r\n          }\r\n        } else {\r\n          w = k = xd[xdi];\r\n\r\n          // Get the number of digits of w.\r\n          for (digits = 1; k >= 10; k /= 10) digits++;\r\n\r\n          // Get the index of rd within w.\r\n          i %= LOG_BASE;\r\n\r\n          // Get the index of rd within w, adjusted for leading zeros.\r\n          // The number of leading zeros of w is given by LOG_BASE - digits.\r\n          j = i - LOG_BASE + digits;\r\n\r\n          // Get the rounding digit at index j of w.\r\n          rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\r\n        }\r\n      }\r\n\r\n      // Are there any non-zero digits after the rounding digit?\r\n      isTruncated = isTruncated || sd < 0 ||\r\n        xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\r\n\r\n      // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\r\n      // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\r\n      // will give 714.\r\n\r\n      roundUp = rm < 4\r\n        ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n        : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n            rm == (x.s < 0 ? 8 : 7));\r\n\r\n      if (sd < 1 || !xd[0]) {\r\n        xd.length = 0;\r\n        if (roundUp) {\r\n\r\n          // Convert sd to decimal places.\r\n          sd -= x.e + 1;\r\n\r\n          // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n          xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n          x.e = -sd || 0;\r\n        } else {\r\n\r\n          // Zero.\r\n          xd[0] = x.e = 0;\r\n        }\r\n\r\n        return x;\r\n      }\r\n\r\n      // Remove excess digits.\r\n      if (i == 0) {\r\n        xd.length = xdi;\r\n        k = 1;\r\n        xdi--;\r\n      } else {\r\n        xd.length = xdi + 1;\r\n        k = mathpow(10, LOG_BASE - i);\r\n\r\n        // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n        // j > 0 means i > number of leading zeros of w.\r\n        xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\r\n      }\r\n\r\n      if (roundUp) {\r\n        for (;;) {\r\n\r\n          // Is the digit to be rounded up in the first word of xd?\r\n          if (xdi == 0) {\r\n\r\n            // i will be the length of xd[0] before k is added.\r\n            for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\r\n            j = xd[0] += k;\r\n            for (k = 1; j >= 10; j /= 10) k++;\r\n\r\n            // if i != k the length has increased.\r\n            if (i != k) {\r\n              x.e++;\r\n              if (xd[0] == BASE) xd[0] = 1;\r\n            }\r\n\r\n            break;\r\n          } else {\r\n            xd[xdi] += k;\r\n            if (xd[xdi] != BASE) break;\r\n            xd[xdi--] = 0;\r\n            k = 1;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n    }\r\n\r\n    if (external) {\r\n\r\n      // Overflow?\r\n      if (x.e > Ctor.maxE) {\r\n\r\n        // Infinity.\r\n        x.d = null;\r\n        x.e = NaN;\r\n\r\n      // Underflow?\r\n      } else if (x.e < Ctor.minE) {\r\n\r\n        // Zero.\r\n        x.e = 0;\r\n        x.d = [0];\r\n        // Ctor.underflow = true;\r\n      } // else Ctor.underflow = false;\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function finiteToString(x, isExp, sd) {\r\n    if (!x.isFinite()) return nonFiniteToString(x);\r\n    var k,\r\n      e = x.e,\r\n      str = digitsToString(x.d),\r\n      len = str.length;\r\n\r\n    if (isExp) {\r\n      if (sd && (k = sd - len) > 0) {\r\n        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n      } else if (len > 1) {\r\n        str = str.charAt(0) + '.' + str.slice(1);\r\n      }\r\n\r\n      str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\r\n    } else if (e < 0) {\r\n      str = '0.' + getZeroString(-e - 1) + str;\r\n      if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n    } else if (e >= len) {\r\n      str += getZeroString(e + 1 - len);\r\n      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n    } else {\r\n      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n      if (sd && (k = sd - len) > 0) {\r\n        if (e + 1 === len) str += '.';\r\n        str += getZeroString(k);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // Calculate the base 10 exponent from the base 1e7 exponent.\r\n  function getBase10Exponent(digits, e) {\r\n    var w = digits[0];\r\n\r\n    // Add the number of digits of the first word of the digits array.\r\n    for ( e *= LOG_BASE; w >= 10; w /= 10) e++;\r\n    return e;\r\n  }\r\n\r\n\r\n  function getLn10(Ctor, sd, pr) {\r\n    if (sd > LN10_PRECISION) {\r\n\r\n      // Reset global state in case the exception is caught.\r\n      external = true;\r\n      if (pr) Ctor.precision = pr;\r\n      throw Error(precisionLimitExceeded);\r\n    }\r\n    return finalise(new Ctor(LN10), sd, 1, true);\r\n  }\r\n\r\n\r\n  function getPi(Ctor, sd, rm) {\r\n    if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\r\n    return finalise(new Ctor(PI), sd, rm, true);\r\n  }\r\n\r\n\r\n  function getPrecision(digits) {\r\n    var w = digits.length - 1,\r\n      len = w * LOG_BASE + 1;\r\n\r\n    w = digits[w];\r\n\r\n    // If non-zero...\r\n    if (w) {\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      for (; w % 10 == 0; w /= 10) len--;\r\n\r\n      // Add the number of digits of the first word.\r\n      for (w = digits[0]; w >= 10; w /= 10) len++;\r\n    }\r\n\r\n    return len;\r\n  }\r\n\r\n\r\n  function getZeroString(k) {\r\n    var zs = '';\r\n    for (; k--;) zs += '0';\r\n    return zs;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\r\n   * integer of type number.\r\n   *\r\n   * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\r\n   *\r\n   */\r\n  function intPow(Ctor, x, n, pr) {\r\n    var isTruncated,\r\n      r = new Ctor(1),\r\n\r\n      // Max n of 9007199254740991 takes 53 loop iterations.\r\n      // Maximum digits array length; leaves [28, 34] guard digits.\r\n      k = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n    external = false;\r\n\r\n    for (;;) {\r\n      if (n % 2) {\r\n        r = r.times(x);\r\n        if (truncate(r.d, k)) isTruncated = true;\r\n      }\r\n\r\n      n = mathfloor(n / 2);\r\n      if (n === 0) {\r\n\r\n        // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\r\n        n = r.d.length - 1;\r\n        if (isTruncated && r.d[n] === 0) ++r.d[n];\r\n        break;\r\n      }\r\n\r\n      x = x.times(x);\r\n      truncate(x.d, k);\r\n    }\r\n\r\n    external = true;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  function isOdd(n) {\r\n    return n.d[n.d.length - 1] & 1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Handle `max` (`n` is -1) and `min` (`n` is 1).\r\n   */\r\n  function maxOrMin(Ctor, args, n) {\r\n    var k, y,\r\n      x = new Ctor(args[0]),\r\n      i = 0;\r\n\r\n    for (; ++i < args.length;) {\r\n      y = new Ctor(args[i]);\r\n\r\n      // NaN?\r\n      if (!y.s) {\r\n        x = y;\r\n        break;\r\n      }\r\n\r\n      k = x.cmp(y);\r\n\r\n      if (k === n || k === 0 && x.s === n) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   * Taylor/Maclaurin series.\r\n   *\r\n   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n   *\r\n   * Argument reduction:\r\n   *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n   *   exp(x) = exp(x / 2^k)^(2^k)\r\n   *\r\n   * Previously, the argument was initially reduced by\r\n   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n   * found to be slower than just dividing repeatedly by 32 as above.\r\n   *\r\n   * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n   * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n   *\r\n   *  exp(Infinity)  = Infinity\r\n   *  exp(-Infinity) = 0\r\n   *  exp(NaN)       = NaN\r\n   *  exp(±0)        = 1\r\n   *\r\n   *  exp(x) is non-terminating for any finite, non-zero x.\r\n   *\r\n   *  The result will always be correctly rounded.\r\n   *\r\n   */\r\n  function naturalExponential(x, sd) {\r\n    var denominator, guard, j, pow, sum, t, wpr,\r\n      rep = 0,\r\n      i = 0,\r\n      k = 0,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // 0/NaN/Infinity?\r\n    if (!x.d || !x.d[0] || x.e > 17) {\r\n\r\n      return new Ctor(x.d\r\n        ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\r\n        : x.s ? x.s < 0 ? 0 : x : 0 / 0);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    t = new Ctor(0.03125);\r\n\r\n    // while abs(x) >= 0.1\r\n    while (x.e > -2) {\r\n\r\n      // x = x / 2^5\r\n      x = x.times(t);\r\n      k += 5;\r\n    }\r\n\r\n    // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\r\n    // necessary to ensure the first 4 rounding digits are correct.\r\n    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n    wpr += guard;\r\n    denominator = pow = sum = new Ctor(1);\r\n    Ctor.precision = wpr;\r\n\r\n    for (;;) {\r\n      pow = finalise(pow.times(x), wpr, 1);\r\n      denominator = denominator.times(++i);\r\n      t = sum.plus(divide(pow, denominator, wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        j = k;\r\n        while (j--) sum = finalise(sum.times(sum), wpr, 1);\r\n\r\n        // Check to see if the first 4 rounding digits are [49]999.\r\n        // If so, repeat the summation with a higher precision, otherwise\r\n        // e.g. with precision: 18, rounding: 1\r\n        // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n\r\n          if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += 10;\r\n            denominator = pow = t = new Ctor(1);\r\n            i = 0;\r\n            rep++;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   *  ln(-n)        = NaN\r\n   *  ln(0)         = -Infinity\r\n   *  ln(-0)        = -Infinity\r\n   *  ln(1)         = 0\r\n   *  ln(Infinity)  = Infinity\r\n   *  ln(-Infinity) = NaN\r\n   *  ln(NaN)       = NaN\r\n   *\r\n   *  ln(n) (n != 1) is non-terminating.\r\n   *\r\n   */\r\n  function naturalLogarithm(y, sd) {\r\n    var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\r\n      n = 1,\r\n      guard = 10,\r\n      x = y,\r\n      xd = x.d,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // Is x negative or Infinity, NaN, 0 or 1?\r\n    if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\r\n      return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    Ctor.precision = wpr += guard;\r\n    c = digitsToString(xd);\r\n    c0 = c.charAt(0);\r\n\r\n    if (Math.abs(e = x.e) < 1.5e15) {\r\n\r\n      // Argument reduction.\r\n      // The series converges faster the closer the argument is to 1, so using\r\n      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n      // later be divided by this number, then separate out the power of 10 using\r\n      // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n      // max n is 6 (gives 0.7 - 1.3)\r\n      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n        x = x.times(y);\r\n        c = digitsToString(x.d);\r\n        c0 = c.charAt(0);\r\n        n++;\r\n      }\r\n\r\n      e = x.e;\r\n\r\n      if (c0 > 1) {\r\n        x = new Ctor('0.' + c);\r\n        e++;\r\n      } else {\r\n        x = new Ctor(c0 + '.' + c.slice(1));\r\n      }\r\n    } else {\r\n\r\n      // The argument reduction method above may result in overflow if the argument y is a massive\r\n      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n      // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n      t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n      x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n      Ctor.precision = pr;\r\n\r\n      return sd == null ? finalise(x, pr, rm, external = true) : x;\r\n    }\r\n\r\n    // x1 is x reduced to a value near 1.\r\n    x1 = x;\r\n\r\n    // Taylor series.\r\n    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n    // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n    sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\r\n    x2 = finalise(x.times(x), wpr, 1);\r\n    denominator = 3;\r\n\r\n    for (;;) {\r\n      numerator = finalise(numerator.times(x2), wpr, 1);\r\n      t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        sum = sum.times(2);\r\n\r\n        // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\r\n        // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\r\n        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n        sum = divide(sum, new Ctor(n), wpr, 1);\r\n\r\n        // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\r\n        // been repeated previously) and the first 4 rounding digits 9999?\r\n        // If so, restart the summation with a higher precision, otherwise\r\n        // e.g. with precision: 12, rounding: 1\r\n        // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n          if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += guard;\r\n            t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\r\n            x2 = finalise(x.times(x), wpr, 1);\r\n            denominator = rep = 1;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n      denominator += 2;\r\n    }\r\n  }\r\n\r\n\r\n  // ±Infinity, NaN.\r\n  function nonFiniteToString(x) {\r\n    // Unsigned.\r\n    return String(x.s * x.s / 0);\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from string `str`.\r\n   */\r\n  function parseDecimal(x, str) {\r\n    var e, i, len;\r\n\r\n    // TODO BigInt str: no need to check for decimal point, exponential form or leading zeros.\r\n\r\n    // Decimal point?\r\n    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = str.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +str.slice(i + 1);\r\n      str = str.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\r\n    str = str.slice(i, len);\r\n\r\n    if (str) {\r\n      len -= i;\r\n      x.e = e = e - i - 1;\r\n      x.d = [];\r\n\r\n      // Transform base\r\n\r\n      // e is the base 10 exponent.\r\n      // i is where to slice str to get the first word of the digits array.\r\n      i = (e + 1) % LOG_BASE;\r\n      if (e < 0) i += LOG_BASE;\r\n\r\n      if (i < len) {\r\n        if (i) x.d.push(+str.slice(0, i));\r\n        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n        str = str.slice(i);\r\n        i = LOG_BASE - str.length;\r\n      } else {\r\n        i -= len;\r\n      }\r\n\r\n      for (; i--;) str += '0';\r\n      x.d.push(+str);\r\n\r\n      if (external) {\r\n\r\n        // Overflow?\r\n        if (x.e > x.constructor.maxE) {\r\n\r\n          // Infinity.\r\n          x.d = null;\r\n          x.e = NaN;\r\n\r\n        // Underflow?\r\n        } else if (x.e < x.constructor.minE) {\r\n\r\n          // Zero.\r\n          x.e = 0;\r\n          x.d = [0];\r\n          // x.constructor.underflow = true;\r\n        } // else x.constructor.underflow = false;\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.e = 0;\r\n      x.d = [0];\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\r\n   */\r\n  function parseOther(x, str) {\r\n    var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\r\n\r\n    if (str.indexOf('_') > -1) {\r\n      str = str.replace(/(\\d)_(?=\\d)/g, '$1');\r\n      if (isDecimal.test(str)) return parseDecimal(x, str);\r\n    } else if (str === 'Infinity' || str === 'NaN') {\r\n      if (!+str) x.s = NaN;\r\n      x.e = NaN;\r\n      x.d = null;\r\n      return x;\r\n    }\r\n\r\n    if (isHex.test(str))  {\r\n      base = 16;\r\n      str = str.toLowerCase();\r\n    } else if (isBinary.test(str))  {\r\n      base = 2;\r\n    } else if (isOctal.test(str))  {\r\n      base = 8;\r\n    } else {\r\n      throw Error(invalidArgument + str);\r\n    }\r\n\r\n    // Is there a binary exponent part?\r\n    i = str.search(/p/i);\r\n\r\n    if (i > 0) {\r\n      p = +str.slice(i + 1);\r\n      str = str.substring(2, i);\r\n    } else {\r\n      str = str.slice(2);\r\n    }\r\n\r\n    // Convert `str` as an integer then divide the result by `base` raised to a power such that the\r\n    // fraction part will be restored.\r\n    i = str.indexOf('.');\r\n    isFloat = i >= 0;\r\n    Ctor = x.constructor;\r\n\r\n    if (isFloat) {\r\n      str = str.replace('.', '');\r\n      len = str.length;\r\n      i = len - i;\r\n\r\n      // log[10](16) = 1.2041... , log[10](88) = 1.9444....\r\n      divisor = intPow(Ctor, new Ctor(base), i, i * 2);\r\n    }\r\n\r\n    xd = convertBase(str, base, BASE);\r\n    xe = xd.length - 1;\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xe; xd[i] === 0; --i) xd.pop();\r\n    if (i < 0) return new Ctor(x.s * 0);\r\n    x.e = getBase10Exponent(xd, xe);\r\n    x.d = xd;\r\n    external = false;\r\n\r\n    // At what precision to perform the division to ensure exact conversion?\r\n    // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\r\n    // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\r\n    // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\r\n    // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\r\n    // Therefore using 4 * the number of digits of str will always be enough.\r\n    if (isFloat) x = divide(x, divisor, len * 4);\r\n\r\n    // Multiply by the binary exponent part if present.\r\n    if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\r\n    external = true;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function sine(Ctor, x) {\r\n    var k,\r\n      len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      return x.isZero() ? x : taylorSeries(Ctor, 2, x, x);\r\n    }\r\n\r\n    // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\r\n    // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\r\n    // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    k = 1.4 * Math.sqrt(len);\r\n    k = k > 16 ? 16 : k | 0;\r\n\r\n    x = x.times(1 / tinyPow(5, k));\r\n    x = taylorSeries(Ctor, 2, x, x);\r\n\r\n    // Reverse argument reduction\r\n    var sin2_x,\r\n      d5 = new Ctor(5),\r\n      d16 = new Ctor(16),\r\n      d20 = new Ctor(20);\r\n    for (; k--;) {\r\n      sin2_x = x.times(x);\r\n      x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  // Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\r\n  function taylorSeries(Ctor, n, x, y, isHyperbolic) {\r\n    var j, t, u, x2,\r\n      i = 1,\r\n      pr = Ctor.precision,\r\n      k = Math.ceil(pr / LOG_BASE);\r\n\r\n    external = false;\r\n    x2 = x.times(x);\r\n    u = new Ctor(y);\r\n\r\n    for (;;) {\r\n      t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      u = isHyperbolic ? y.plus(t) : y.minus(t);\r\n      y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      t = u.plus(y);\r\n\r\n      if (t.d[k] !== void 0) {\r\n        for (j = k; t.d[j] === u.d[j] && j--;);\r\n        if (j == -1) break;\r\n      }\r\n\r\n      j = u;\r\n      u = y;\r\n      y = t;\r\n      t = j;\r\n      i++;\r\n    }\r\n\r\n    external = true;\r\n    t.d.length = k + 1;\r\n\r\n    return t;\r\n  }\r\n\r\n\r\n  // Exponent e must be positive and non-zero.\r\n  function tinyPow(b, e) {\r\n    var n = b;\r\n    while (--e) n *= b;\r\n    return n;\r\n  }\r\n\r\n\r\n  // Return the absolute value of `x` reduced to less than or equal to half pi.\r\n  function toLessThanHalfPi(Ctor, x) {\r\n    var t,\r\n      isNeg = x.s < 0,\r\n      pi = getPi(Ctor, Ctor.precision, 1),\r\n      halfPi = pi.times(0.5);\r\n\r\n    x = x.abs();\r\n\r\n    if (x.lte(halfPi)) {\r\n      quadrant = isNeg ? 4 : 1;\r\n      return x;\r\n    }\r\n\r\n    t = x.divToInt(pi);\r\n\r\n    if (t.isZero()) {\r\n      quadrant = isNeg ? 3 : 2;\r\n    } else {\r\n      x = x.minus(t.times(pi));\r\n\r\n      // 0 <= x < pi\r\n      if (x.lte(halfPi)) {\r\n        quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\r\n        return x;\r\n      }\r\n\r\n      quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\r\n    }\r\n\r\n    return x.minus(pi).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return the value of Decimal `x` as a string in base `baseOut`.\r\n   *\r\n   * If the optional `sd` argument is present include a binary exponent suffix.\r\n   */\r\n  function toStringBinary(x, baseOut, sd, rm) {\r\n    var base, e, i, k, len, roundUp, str, xd, y,\r\n      Ctor = x.constructor,\r\n      isExp = sd !== void 0;\r\n\r\n    if (isExp) {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    } else {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    }\r\n\r\n    if (!x.isFinite()) {\r\n      str = nonFiniteToString(x);\r\n    } else {\r\n      str = finiteToString(x);\r\n      i = str.indexOf('.');\r\n\r\n      // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\r\n      // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\r\n      // minBinaryExponent = floor(decimalExponent * log[2](10))\r\n      // log[2](10) = 3.321928094887362347870319429489390175864\r\n\r\n      if (isExp) {\r\n        base = 2;\r\n        if (baseOut == 16) {\r\n          sd = sd * 4 - 3;\r\n        } else if (baseOut == 8) {\r\n          sd = sd * 3 - 2;\r\n        }\r\n      } else {\r\n        base = baseOut;\r\n      }\r\n\r\n      // Convert the number as an integer then divide the result by its base raised to a power such\r\n      // that the fraction part will be restored.\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        str = str.replace('.', '');\r\n        y = new Ctor(1);\r\n        y.e = str.length - i;\r\n        y.d = convertBase(finiteToString(y), 10, base);\r\n        y.e = y.d.length;\r\n      }\r\n\r\n      xd = convertBase(str, 10, base);\r\n      e = len = xd.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xd[--len] == 0;) xd.pop();\r\n\r\n      if (!xd[0]) {\r\n        str = isExp ? '0p+0' : '0';\r\n      } else {\r\n        if (i < 0) {\r\n          e--;\r\n        } else {\r\n          x = new Ctor(x);\r\n          x.d = xd;\r\n          x.e = e;\r\n          x = divide(x, y, sd, rm, 0, base);\r\n          xd = x.d;\r\n          e = x.e;\r\n          roundUp = inexact;\r\n        }\r\n\r\n        // The rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        i = xd[sd];\r\n        k = base / 2;\r\n        roundUp = roundUp || xd[sd + 1] !== void 0;\r\n\r\n        roundUp = rm < 4\r\n          ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\r\n          : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\r\n            rm === (x.s < 0 ? 8 : 7));\r\n\r\n        xd.length = sd;\r\n\r\n        if (roundUp) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (; ++xd[--sd] > base - 1;) {\r\n            xd[sd] = 0;\r\n            if (!sd) {\r\n              ++e;\r\n              xd.unshift(1);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n\r\n        // Add binary exponent suffix?\r\n        if (isExp) {\r\n          if (len > 1) {\r\n            if (baseOut == 16 || baseOut == 8) {\r\n              i = baseOut == 16 ? 4 : 3;\r\n              for (--len; len % i; len++) str += '0';\r\n              xd = convertBase(str, base, baseOut);\r\n              for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n              // xd[0] will always be be 1\r\n              for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n            } else {\r\n              str = str.charAt(0) + '.' + str.slice(1);\r\n            }\r\n          }\r\n\r\n          str =  str + (e < 0 ? 'p' : 'p+') + e;\r\n        } else if (e < 0) {\r\n          for (; ++e;) str = '0' + str;\r\n          str = '0.' + str;\r\n        } else {\r\n          if (++e > len) for (e -= len; e-- ;) str += '0';\r\n          else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\r\n        }\r\n      }\r\n\r\n      str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\r\n    }\r\n\r\n    return x.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Does not strip trailing zeros.\r\n  function truncate(arr, len) {\r\n    if (arr.length > len) {\r\n      arr.length = len;\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  // Decimal methods\r\n\r\n\r\n  /*\r\n   *  abs\r\n   *  acos\r\n   *  acosh\r\n   *  add\r\n   *  asin\r\n   *  asinh\r\n   *  atan\r\n   *  atanh\r\n   *  atan2\r\n   *  cbrt\r\n   *  ceil\r\n   *  clamp\r\n   *  clone\r\n   *  config\r\n   *  cos\r\n   *  cosh\r\n   *  div\r\n   *  exp\r\n   *  floor\r\n   *  hypot\r\n   *  ln\r\n   *  log\r\n   *  log2\r\n   *  log10\r\n   *  max\r\n   *  min\r\n   *  mod\r\n   *  mul\r\n   *  pow\r\n   *  random\r\n   *  round\r\n   *  set\r\n   *  sign\r\n   *  sin\r\n   *  sinh\r\n   *  sqrt\r\n   *  sub\r\n   *  sum\r\n   *  tan\r\n   *  tanh\r\n   *  trunc\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of `x`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function abs(x) {\r\n    return new this(x).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine in radians of `x`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function acos(x) {\r\n    return new this(x).acos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function acosh(x) {\r\n    return new this(x).acosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   * y {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function add(x, y) {\r\n    return new this(x).plus(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function asin(x) {\r\n    return new this(x).asin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function asinh(x) {\r\n    return new this(x).asinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function atan(x) {\r\n    return new this(x).atan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function atanh(x) {\r\n    return new this(x).atanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\r\n   * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi, pi]\r\n   *\r\n   * y {number|string|bigint|Decimal} The y-coordinate.\r\n   * x {number|string|bigint|Decimal} The x-coordinate.\r\n   *\r\n   * atan2(±0, -0)               = ±pi\r\n   * atan2(±0, +0)               = ±0\r\n   * atan2(±0, -x)               = ±pi for x > 0\r\n   * atan2(±0, x)                = ±0 for x > 0\r\n   * atan2(-y, ±0)               = -pi/2 for y > 0\r\n   * atan2(y, ±0)                = pi/2 for y > 0\r\n   * atan2(±y, -Infinity)        = ±pi for finite y > 0\r\n   * atan2(±y, +Infinity)        = ±0 for finite y > 0\r\n   * atan2(±Infinity, x)         = ±pi/2 for finite x\r\n   * atan2(±Infinity, -Infinity) = ±3*pi/4\r\n   * atan2(±Infinity, +Infinity) = ±pi/4\r\n   * atan2(NaN, x) = NaN\r\n   * atan2(y, NaN) = NaN\r\n   *\r\n   */\r\n  function atan2(y, x) {\r\n    y = new this(y);\r\n    x = new this(x);\r\n    var r,\r\n      pr = this.precision,\r\n      rm = this.rounding,\r\n      wpr = pr + 4;\r\n\r\n    // Either NaN\r\n    if (!y.s || !x.s) {\r\n      r = new this(NaN);\r\n\r\n    // Both ±Infinity\r\n    } else if (!y.d && !x.d) {\r\n      r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\r\n      r.s = y.s;\r\n\r\n    // x is ±Infinity or y is ±0\r\n    } else if (!x.d || y.isZero()) {\r\n      r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\r\n      r.s = y.s;\r\n\r\n    // y is ±Infinity or x is ±0\r\n    } else if (!y.d || x.isZero()) {\r\n      r = getPi(this, wpr, 1).times(0.5);\r\n      r.s = y.s;\r\n\r\n    // Both non-zero and finite\r\n    } else if (x.s < 0) {\r\n      this.precision = wpr;\r\n      this.rounding = 1;\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n      x = getPi(this, wpr, 1);\r\n      this.precision = pr;\r\n      this.rounding = rm;\r\n      r = y.s < 0 ? r.minus(x) : r.plus(x);\r\n    } else {\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function cbrt(x) {\r\n    return new this(x).cbrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function ceil(x) {\r\n    return finalise(x = new this(x), x.e + 1, 2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` clamped to the range delineated by `min` and `max`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   * min {number|string|bigint|Decimal}\r\n   * max {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function clamp(x, min, max) {\r\n    return new this(x).clamp(min, max);\r\n  }\r\n\r\n\r\n  /*\r\n   * Configure global settings for a Decimal constructor.\r\n   *\r\n   * `obj` is an object with one or more of the following properties,\r\n   *\r\n   *   precision  {number}\r\n   *   rounding   {number}\r\n   *   toExpNeg   {number}\r\n   *   toExpPos   {number}\r\n   *   maxE       {number}\r\n   *   minE       {number}\r\n   *   modulo     {number}\r\n   *   crypto     {boolean|number}\r\n   *   defaults   {true}\r\n   *\r\n   * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n   *\r\n   */\r\n  function config(obj) {\r\n    if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\r\n    var i, p, v,\r\n      useDefaults = obj.defaults === true,\r\n      ps = [\r\n        'precision', 1, MAX_DIGITS,\r\n        'rounding', 0, 8,\r\n        'toExpNeg', -EXP_LIMIT, 0,\r\n        'toExpPos', 0, EXP_LIMIT,\r\n        'maxE', 0, EXP_LIMIT,\r\n        'minE', -EXP_LIMIT, 0,\r\n        'modulo', 0, 9\r\n      ];\r\n\r\n    for (i = 0; i < ps.length; i += 3) {\r\n      if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\r\n      if ((v = obj[p]) !== void 0) {\r\n        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\r\n    if ((v = obj[p]) !== void 0) {\r\n      if (v === true || v === false || v === 0 || v === 1) {\r\n        if (v) {\r\n          if (typeof crypto != 'undefined' && crypto &&\r\n            (crypto.getRandomValues || crypto.randomBytes)) {\r\n            this[p] = true;\r\n          } else {\r\n            throw Error(cryptoUnavailable);\r\n          }\r\n        } else {\r\n          this[p] = false;\r\n        }\r\n      } else {\r\n        throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cos(x) {\r\n    return new this(x).cos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cosh(x) {\r\n    return new this(x).cosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n   * constructor.\r\n   *\r\n   */\r\n  function clone(obj) {\r\n    var i, p, ps;\r\n\r\n    /*\r\n     * The Decimal constructor and exported function.\r\n     * Return a new Decimal instance.\r\n     *\r\n     * v {number|string|bigint|Decimal} A numeric value.\r\n     *\r\n     */\r\n    function Decimal(v) {\r\n      var e, i, t,\r\n        x = this;\r\n\r\n      // Decimal called without new.\r\n      if (!(x instanceof Decimal)) return new Decimal(v);\r\n\r\n      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n      // which points to Object.\r\n      x.constructor = Decimal;\r\n\r\n      if (isDecimalInstance(v)) {\r\n        x.s = v.s;\r\n\r\n        if (external) {\r\n          if (!v.d || v.e > Decimal.maxE) {\r\n\r\n            // Infinity.\r\n            x.e = NaN;\r\n            x.d = null;\r\n          } else if (v.e < Decimal.minE) {\r\n\r\n            // Zero.\r\n            x.e = 0;\r\n            x.d = [0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.d = v.d.slice();\r\n          }\r\n        } else {\r\n          x.e = v.e;\r\n          x.d = v.d ? v.d.slice() : v.d;\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      t = typeof v;\r\n\r\n      if (t === 'number') {\r\n        if (v === 0) {\r\n          x.s = 1 / v < 0 ? -1 : 1;\r\n          x.e = 0;\r\n          x.d = [0];\r\n          return;\r\n        }\r\n\r\n        if (v < 0) {\r\n          v = -v;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 1;\r\n        }\r\n\r\n        // Fast path for small integers.\r\n        if (v === ~~v && v < 1e7) {\r\n          for (e = 0, i = v; i >= 10; i /= 10) e++;\r\n\r\n          if (external) {\r\n            if (e > Decimal.maxE) {\r\n              x.e = NaN;\r\n              x.d = null;\r\n            } else if (e < Decimal.minE) {\r\n              x.e = 0;\r\n              x.d = [0];\r\n            } else {\r\n              x.e = e;\r\n              x.d = [v];\r\n            }\r\n          } else {\r\n            x.e = e;\r\n            x.d = [v];\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        // Infinity or NaN?\r\n        if (v * 0 !== 0) {\r\n          if (!v) x.s = NaN;\r\n          x.e = NaN;\r\n          x.d = null;\r\n          return;\r\n        }\r\n\r\n        return parseDecimal(x, v.toString());\r\n      }\r\n\r\n      if (t === 'string') {\r\n        if ((i = v.charCodeAt(0)) === 45) {  // minus sign\r\n          v = v.slice(1);\r\n          x.s = -1;\r\n        } else {\r\n          if (i === 43) v = v.slice(1);  // plus sign\r\n          x.s = 1;\r\n        }\r\n\r\n        return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\r\n      }\r\n\r\n      if (t === 'bigint') {\r\n        if (v < 0) {\r\n          v = -v;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 1;\r\n        }\r\n\r\n        return parseDecimal(x, v.toString());\r\n      }\r\n\r\n      throw Error(invalidArgument + v);\r\n    }\r\n\r\n    Decimal.prototype = P;\r\n\r\n    Decimal.ROUND_UP = 0;\r\n    Decimal.ROUND_DOWN = 1;\r\n    Decimal.ROUND_CEIL = 2;\r\n    Decimal.ROUND_FLOOR = 3;\r\n    Decimal.ROUND_HALF_UP = 4;\r\n    Decimal.ROUND_HALF_DOWN = 5;\r\n    Decimal.ROUND_HALF_EVEN = 6;\r\n    Decimal.ROUND_HALF_CEIL = 7;\r\n    Decimal.ROUND_HALF_FLOOR = 8;\r\n    Decimal.EUCLID = 9;\r\n\r\n    Decimal.config = Decimal.set = config;\r\n    Decimal.clone = clone;\r\n    Decimal.isDecimal = isDecimalInstance;\r\n\r\n    Decimal.abs = abs;\r\n    Decimal.acos = acos;\r\n    Decimal.acosh = acosh;        // ES6\r\n    Decimal.add = add;\r\n    Decimal.asin = asin;\r\n    Decimal.asinh = asinh;        // ES6\r\n    Decimal.atan = atan;\r\n    Decimal.atanh = atanh;        // ES6\r\n    Decimal.atan2 = atan2;\r\n    Decimal.cbrt = cbrt;          // ES6\r\n    Decimal.ceil = ceil;\r\n    Decimal.clamp = clamp;\r\n    Decimal.cos = cos;\r\n    Decimal.cosh = cosh;          // ES6\r\n    Decimal.div = div;\r\n    Decimal.exp = exp;\r\n    Decimal.floor = floor;\r\n    Decimal.hypot = hypot;        // ES6\r\n    Decimal.ln = ln;\r\n    Decimal.log = log;\r\n    Decimal.log10 = log10;        // ES6\r\n    Decimal.log2 = log2;          // ES6\r\n    Decimal.max = max;\r\n    Decimal.min = min;\r\n    Decimal.mod = mod;\r\n    Decimal.mul = mul;\r\n    Decimal.pow = pow;\r\n    Decimal.random = random;\r\n    Decimal.round = round;\r\n    Decimal.sign = sign;          // ES6\r\n    Decimal.sin = sin;\r\n    Decimal.sinh = sinh;          // ES6\r\n    Decimal.sqrt = sqrt;\r\n    Decimal.sub = sub;\r\n    Decimal.sum = sum;\r\n    Decimal.tan = tan;\r\n    Decimal.tanh = tanh;          // ES6\r\n    Decimal.trunc = trunc;        // ES6\r\n\r\n    if (obj === void 0) obj = {};\r\n    if (obj) {\r\n      if (obj.defaults !== true) {\r\n        ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\r\n        for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n      }\r\n    }\r\n\r\n    Decimal.config(obj);\r\n\r\n    return Decimal;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   * y {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function div(x, y) {\r\n    return new this(x).div(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} The power to which to raise the base of the natural log.\r\n   *\r\n   */\r\n  function exp(x) {\r\n    return new this(x).exp();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function floor(x) {\r\n    return finalise(x = new this(x), x.e + 1, 3);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\r\n   *\r\n   * arguments {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function hypot() {\r\n    var i, n,\r\n      t = new this(0);\r\n\r\n    external = false;\r\n\r\n    for (i = 0; i < arguments.length;) {\r\n      n = new this(arguments[i++]);\r\n      if (!n.d) {\r\n        if (n.s) {\r\n          external = true;\r\n          return new this(1 / 0);\r\n        }\r\n        t = n;\r\n      } else if (t.d) {\r\n        t = t.plus(n.times(n));\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return t.sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  function isDecimalInstance(obj) {\r\n    return obj instanceof Decimal || obj && obj.toStringTag === tag || false;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function ln(x) {\r\n    return new this(x).ln();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\r\n   * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * log[y](x)\r\n   *\r\n   * x {number|string|bigint|Decimal} The argument of the logarithm.\r\n   * y {number|string|bigint|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  function log(x, y) {\r\n    return new this(x).log(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function log2(x) {\r\n    return new this(x).log(2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function log10(x) {\r\n    return new this(x).log(10);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function max() {\r\n    return maxOrMin(this, arguments, -1);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function min() {\r\n    return maxOrMin(this, arguments, 1);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   * y {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function mod(x, y) {\r\n    return new this(x).mod(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   * y {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function mul(x, y) {\r\n    return new this(x).mul(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} The base.\r\n   * y {number|string|bigint|Decimal} The exponent.\r\n   *\r\n   */\r\n  function pow(x, y) {\r\n    return new this(x).pow(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\r\n   * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\r\n   * are produced).\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\r\n   *\r\n   */\r\n  function random(sd) {\r\n    var d, e, k, n,\r\n      i = 0,\r\n      r = new this(1),\r\n      rd = [];\r\n\r\n    if (sd === void 0) sd = this.precision;\r\n    else checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    k = Math.ceil(sd / LOG_BASE);\r\n\r\n    if (!this.crypto) {\r\n      for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\r\n\r\n    // Browsers supporting crypto.getRandomValues.\r\n    } else if (crypto.getRandomValues) {\r\n      d = crypto.getRandomValues(new Uint32Array(k));\r\n\r\n      for (; i < k;) {\r\n        n = d[i];\r\n\r\n        // 0 <= n < 4294967296\r\n        // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\r\n        if (n >= 4.29e9) {\r\n          d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\r\n        } else {\r\n\r\n          // 0 <= n <= 4289999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd[i++] = n % 1e7;\r\n        }\r\n      }\r\n\r\n    // Node.js supporting crypto.randomBytes.\r\n    } else if (crypto.randomBytes) {\r\n\r\n      // buffer\r\n      d = crypto.randomBytes(k *= 4);\r\n\r\n      for (; i < k;) {\r\n\r\n        // 0 <= n < 2147483648\r\n        n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\r\n\r\n        // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\r\n        if (n >= 2.14e9) {\r\n          crypto.randomBytes(4).copy(d, i);\r\n        } else {\r\n\r\n          // 0 <= n <= 2139999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd.push(n % 1e7);\r\n          i += 4;\r\n        }\r\n      }\r\n\r\n      i = k / 4;\r\n    } else {\r\n      throw Error(cryptoUnavailable);\r\n    }\r\n\r\n    k = rd[--i];\r\n    sd %= LOG_BASE;\r\n\r\n    // Convert trailing digits to zeros according to sd.\r\n    if (k && sd) {\r\n      n = mathpow(10, LOG_BASE - sd);\r\n      rd[i] = (k / n | 0) * n;\r\n    }\r\n\r\n    // Remove trailing words which are zero.\r\n    for (; rd[i] === 0; i--) rd.pop();\r\n\r\n    // Zero?\r\n    if (i < 0) {\r\n      e = 0;\r\n      rd = [0];\r\n    } else {\r\n      e = -1;\r\n\r\n      // Remove leading words which are zero and adjust exponent accordingly.\r\n      for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\r\n\r\n      // Count the digits of the first word of rd to determine leading zeros.\r\n      for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\r\n\r\n      // Adjust the exponent for leading zeros of the first word of rd.\r\n      if (k < LOG_BASE) e -= LOG_BASE - k;\r\n    }\r\n\r\n    r.e = e;\r\n    r.d = rd;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\r\n   *\r\n   * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function round(x) {\r\n    return finalise(x = new this(x), x.e + 1, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if x > 0,\r\n   *  -1    if x < 0,\r\n   *   0    if x is 0,\r\n   *  -0    if x is -0,\r\n   *   NaN  otherwise\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function sign(x) {\r\n    x = new this(x);\r\n    return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sin(x) {\r\n    return new this(x).sin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sinh(x) {\r\n    return new this(x).sinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function sqrt(x) {\r\n    return new this(x).sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   * y {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function sub(x, y) {\r\n    return new this(x).sub(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of the arguments, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * Only the result is rounded, not the intermediate calculations.\r\n   *\r\n   * arguments {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function sum() {\r\n    var i = 0,\r\n      args = arguments,\r\n      x = new this(args[i]);\r\n\r\n    external = false;\r\n    for (; x.s && ++i < args.length;) x = x.plus(args[i]);\r\n    external = true;\r\n\r\n    return finalise(x, this.precision, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tan(x) {\r\n    return new this(x).tan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|bigint|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tanh(x) {\r\n    return new this(x).tanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` truncated to an integer.\r\n   *\r\n   * x {number|string|bigint|Decimal}\r\n   *\r\n   */\r\n  function trunc(x) {\r\n    return finalise(x = new this(x), x.e + 1, 1);\r\n  }\r\n\r\n\r\n  // Create and configure initial Decimal constructor.\r\n  Decimal = clone(DEFAULTS);\r\n  Decimal.prototype.constructor = Decimal;\r\n  Decimal['default'] = Decimal.Decimal = Decimal;\r\n\r\n  // Create the internal constants from their string values.\r\n  LN10 = new Decimal(LN10);\r\n  PI = new Decimal(PI);\r\n\r\n\r\n  // Export.\r\n\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () {\r\n      return Decimal;\r\n    });\r\n\r\n  // Node and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    if (typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol') {\r\n      P[Symbol['for']('nodejs.util.inspect.custom')] = P.toString;\r\n      P[Symbol.toStringTag] = 'Decimal';\r\n    }\r\n\r\n    module.exports = Decimal;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalScope) {\r\n      globalScope = typeof self != 'undefined' && self && self.self == self ? self : window;\r\n    }\r\n\r\n    noConflict = globalScope.Decimal;\r\n    Decimal.noConflict = function () {\r\n      globalScope.Decimal = noConflict;\r\n      return Decimal;\r\n    };\r\n\r\n    globalScope.Decimal = Decimal;\r\n  }\r\n})(this);\r\n","// src/shared_types.ts\nimport Graph, { EdgeAttributes, NodeAttributes } from 'graphology';\nimport { PrecisionNumber, PrecisionMode } from './precision'; \nimport type { MVU_Simulator } from './simulator_core'; // Type-only import for Rule interface\n\n// --- Enums ---\nexport enum S_Level { \n    S0_Vacuum = 0, \n    S1_SimpleFixedPoint = 1, \n    S2_RecursiveStructure = 2, \n    S3_DynamicEquilibrium = 3, \n    S4_CompositeStability = 4 \n}\n\nexport enum ProtoType { \n    Standard = 0, \n    Leptonic = 1, \n    Quarkic = 2 \n}\nexport const PROTO_TYPE_COUNT = Object.keys(ProtoType).length / 2;\n\nexport enum SymmetryBias { \n    None = 0, \n    Rotational = 1, \n    Reflectional = 2 \n}\n\nexport enum InteractionChannelType { \n    Generic = 0, \n    EM_Like = 1, \n    Strong_Like = 2, \n    Weak_Like = 3 \n}\n\n// --- Core Interfaces ---\nexport interface DistinctionAttrs extends NodeAttributes {\n    id: string;\n    polarity: 1 | -1;\n    protoType: ProtoType;\n    protoValence: number;       // Inherent capacity\n    valence: number;            // Current adaptive capacity\n    stress: PrecisionNumber;\n    sLevel: S_Level;            // Intrinsic stability\n    // Conceptual Proto-Properties\n    symmetryBias?: SymmetryBias;\n    coherencePotential?: PrecisionNumber;\n    aestheticValue?: PrecisionNumber;\n}\n\nexport interface RelationAttrs extends EdgeAttributes {\n    flowResistance: PrecisionNumber;\n    interactionChannelType: InteractionChannelType; // Now mandatory\n    // Conceptual Proto-Properties\n    coherencePotential?: PrecisionNumber;\n    aestheticValue?: PrecisionNumber;\n}\n\nexport interface PatternDescriptor {\n    C: PrecisionNumber; \n    S: { level: S_Level; robustness: PrecisionNumber }; \n    T_fingerprint?: string; \n    totalStress: PrecisionNumber; \n    totalRelationFlowResistance: PrecisionNumber;\n    s2_score?: PrecisionNumber;\n    s4_components?: string[];\n }\n\nexport interface DescriptorDelta {\n    s_level: number;\n    robustness: number;\n    complexity: number;\n    totalStress: number;\n}\n\nexport interface MoveRecord {\n    rule_name: string;\n    nodes_involved: string[];\n    cost: PrecisionNumber; \n    step_number: number;\n    delta_descriptor: DescriptorDelta;\n}\n\nexport interface PotentialFuture {\n    move_name:string;\n    nodes_involved: string[];\n    cost: PrecisionNumber; \n    resulting_graph: Graph<DistinctionAttrs, RelationAttrs>;\n    descriptor: PatternDescriptor;\n    origin_rule_weight?: PrecisionNumber;\n}\n\nexport interface SimConfig {\n    precision: PrecisionMode;\n    seed?: number;\n    initial_proto_valence?: number;\n    initial_valence_adaptation_ratio?: number;\n    enable_adaptation_valence?: boolean;\n    enable_adaptation_polarity?: boolean;\n    enable_adaptation_prototype?: boolean;\n    enable_transformation_prototype?: boolean;\n    enable_collapse?: boolean;\n    enable_dynamic_rule_weighting?: boolean;\n    max_valence_factor?: number; \n    min_valence?: number;\n    absolute_max_valence?: number; \n    enable_stress_propagation?: boolean; \n    stress_propagation_factor?: number;  \n    stress_penalty_homogeneous_env?: number; \n}\n\nexport const DEFAULT_SIM_CONFIG: Required<SimConfig> = {\n    precision: 'high', seed: Date.now(), initial_proto_valence: 2, initial_valence_adaptation_ratio: 1.0,\n    enable_adaptation_valence: true, enable_adaptation_polarity: true, enable_adaptation_prototype: true,\n    enable_transformation_prototype: true, enable_collapse: true, enable_dynamic_rule_weighting: true,\n    max_valence_factor: 1.5, min_valence: 1, absolute_max_valence: 7,\n    enable_stress_propagation: true, stress_propagation_factor: 0.1,\n    stress_penalty_homogeneous_env: 0.75,\n};\n\nexport interface Rule {\n    name: string;\n    description: string;\n    base_cost: PrecisionNumber;\n    isApplicable: (graph: Graph<DistinctionAttrs, RelationAttrs>, sim: MVU_Simulator) => boolean; \n    apply: (graph: Graph<DistinctionAttrs, RelationAttrs>, sim: MVU_Simulator) => PotentialFuture[];\n}\n\nexport const protoTypeCompatibility: { [key in ProtoType]?: { [key in ProtoType]?: boolean | { channel: InteractionChannelType, resistanceMod: number } } } = {\n    [ProtoType.Standard]: { \n        [ProtoType.Standard]: true, \n        [ProtoType.Leptonic]: { channel: InteractionChannelType.EM_Like, resistanceMod: 1.2 }, \n        [ProtoType.Quarkic]: false, \n    },\n    [ProtoType.Leptonic]: { \n        [ProtoType.Standard]: { channel: InteractionChannelType.EM_Like, resistanceMod: 1.2 }, \n        [ProtoType.Leptonic]: true, \n        [ProtoType.Quarkic]: false, \n    },\n    [ProtoType.Quarkic]: { \n        [ProtoType.Standard]: false, \n        [ProtoType.Leptonic]: false, \n        [ProtoType.Quarkic]: { channel: InteractionChannelType.Strong_Like, resistanceMod: 0.8 }, \n    },\n};","// src/rule_genesis.ts\nimport Graph from 'graphology';\nimport { PrecisionNumber } from './precision';\nimport { \n    DistinctionAttrs, \n    RelationAttrs, \n    PotentialFuture, \n    Rule,\n    ProtoType\n} from './shared_types';\nimport { getRuleBaseCost } from './rule_utils';\nimport { deepCopyGraph } from './graph_utils';\nimport type { MVU_Simulator } from './simulator_core';\n\nexport const GenesisRule: Rule = {\n    name: 'genesis', \n    description: 'Create a new distinction, with a small chance of being a non-standard type.',\n    base_cost: PrecisionNumber.from(1.0, 'high'), \n    isApplicable: (graph, sim) => graph.order < sim['UNBOUNDED_NODE_LIMIT'],\n    apply: (graph, sim) => {\n        const futureGraph = deepCopyGraph(graph);\n        const newNodeId = sim.getNextNodeId();\n        \n        // --- REFACTOR BASED ON AUDIT ---\n        // Introduce variety from the start, as per framework principles.\n        let newProtoType = ProtoType.Standard;\n        const randomProtoType = sim.random();\n        if (randomProtoType < 0.025) { // 2.5% chance for Leptonic\n            newProtoType = ProtoType.Leptonic;\n        } else if (randomProtoType < 0.05) { // 2.5% chance for Quarkic\n            newProtoType = ProtoType.Quarkic;\n        }\n        // --- END REFACTOR ---\n\n        sim.createDistinction(futureGraph, newNodeId, (sim.random() < 0.5) ? 1 : -1, undefined, newProtoType);\n        \n        sim.updateAllNodeStresses(futureGraph);\n        const descriptor = sim.calculatePatternDescriptor(futureGraph);\n\n        return [{ \n            move_name: 'genesis', \n            nodes_involved: [newNodeId], \n            cost: getRuleBaseCost('genesis', sim), \n            resulting_graph: futureGraph, \n            descriptor \n        }];\n    }\n};","// src/rule_utils.ts\nimport { PrecisionNumber } from './precision';\nimport { Rule } from './shared_types';\nimport type { MVU_Simulator } from './simulator_core';\n\n/**\n * Helper function to get the base cost of a rule by its name.\n * It extracts the base name (e.g., \"adaptation\" from \"adaptation_valence_up\")\n * to find the corresponding rule object in the simulator's rule list.\n * @param ruleName The full name of the move (e.g., \"adaptation_valence_up\").\n * @param sim The simulator instance.\n * @returns The base cost of the rule as a PrecisionNumber.\n */\nexport function getRuleBaseCost(ruleName: string, sim: MVU_Simulator): PrecisionNumber {\n    const baseRuleKey = ruleName.split('_')[0];\n    const rule = sim.rules.find(r => r.name === baseRuleKey); \n    return rule ? rule.base_cost : PrecisionNumber.from(1, sim.config.precision); // Default cost if rule not found\n}","// src/graph_utils.ts\nimport Graph from 'graphology';\nimport { PrecisionNumber } from './precision';\nimport { \n    DistinctionAttrs, \n    RelationAttrs,\n    S_Level,\n    ProtoType,\n    SymmetryBias,\n    InteractionChannelType\n} from './shared_types';\n\n/**\n * Creates a robust deep copy of the graph, ensuring all node and edge attributes are explicitly\n * reconstructed to prevent corruption or loss of properties.\n * This replaces graph.copy() and previous shallow spread-operator copies.\n * @param originalGraph The graph to copy.\n * @returns A new Graph instance that is a deep copy of the original.\n */\nexport function deepCopyGraph(originalGraph: Graph<DistinctionAttrs, RelationAttrs>): Graph<DistinctionAttrs, RelationAttrs> {\n    const newGraph = new Graph<DistinctionAttrs, RelationAttrs>({ multi: false, allowSelfLoops: false });\n    \n    originalGraph.forEachNode((node, attrs) => {\n        // Manually and defensively construct the new attribute object.\n        // Provide default values from a known good source if a property is missing.\n        const newAttrs: DistinctionAttrs = {\n            id: attrs.id ?? node, // Fallback to node id if 'id' attribute is missing\n            polarity: attrs.polarity ?? 1,\n            protoType: attrs.protoType ?? ProtoType.Standard,\n            protoValence: attrs.protoValence ?? 2, // Default to 2 if missing\n            valence: attrs.valence ?? 2, // Default to 2 if missing\n            stress: attrs.stress ? PrecisionNumber.from(attrs.stress, attrs.stress.mode) : PrecisionNumber.from(2, 'high'), // Default high stress if missing\n            sLevel: attrs.sLevel ?? S_Level.S1_SimpleFixedPoint,\n            symmetryBias: attrs.symmetryBias ?? SymmetryBias.None,\n            coherencePotential: attrs.coherencePotential ? PrecisionNumber.from(attrs.coherencePotential, attrs.coherencePotential.mode) : undefined,\n            aestheticValue: attrs.aestheticValue ? PrecisionNumber.from(attrs.aestheticValue, attrs.aestheticValue.mode) : undefined,\n        };\n        newGraph.addNode(node, newAttrs);\n    });\n\n    originalGraph.forEachEdge((edgeKey, attrs, source, target) => {\n        if (newGraph.hasNode(source) && newGraph.hasNode(target)) {\n            // Manually and defensively construct the new edge attribute object.\n            const newEdgeAttrs: RelationAttrs = {\n                flowResistance: attrs.flowResistance ? PrecisionNumber.from(attrs.flowResistance, attrs.flowResistance.mode) : PrecisionNumber.from(1, 'high'),\n                interactionChannelType: attrs.interactionChannelType ?? InteractionChannelType.Generic,\n                coherencePotential: attrs.coherencePotential ? PrecisionNumber.from(attrs.coherencePotential, attrs.coherencePotential.mode) : undefined,\n                aestheticValue: attrs.aestheticValue ? PrecisionNumber.from(attrs.aestheticValue, attrs.aestheticValue.mode) : undefined,\n            };\n            newGraph.addEdgeWithKey(edgeKey, source, target, newEdgeAttrs);\n        }\n    });\n    return newGraph;\n}","// src/rule_bonding.ts\nimport Graph from 'graphology';\nimport { PrecisionNumber } from './precision';\nimport { \n    DistinctionAttrs, \n    RelationAttrs, \n    PotentialFuture, \n    Rule,\n    InteractionChannelType,\n    protoTypeCompatibility\n} from './shared_types';\nimport { getRuleBaseCost } from './rule_utils';\nimport { deepCopyGraph } from './graph_utils';\nimport type { MVU_Simulator } from './simulator_core';\n\nexport const BondingRule: Rule = { \n    name: 'bonding', \n    description: 'Form a relation (bond) based on compatibility.',\n    base_cost: PrecisionNumber.from(0.3, 'high'), // REFACTORED: Lowered base_cost to make it more attractive\n    isApplicable: (graph) => graph.order >= 2,\n    apply: (graph, sim) => {\n        const futures: PotentialFuture[] = [];\n        const nodes = graph.nodes();\n        for (let i = 0; i < nodes.length; i++) {\n            for (let j = i + 1; j < nodes.length; j++) {\n                const n1_id = nodes[i], n2_id = nodes[j];\n                const n1_attrs = graph.getNodeAttributes(n1_id) as DistinctionAttrs;\n                const n2_attrs = graph.getNodeAttributes(n2_id) as DistinctionAttrs;\n\n                // Guard against corrupted attributes\n                if (typeof n1_attrs.valence !== 'number' || typeof n2_attrs.valence !== 'number') {\n                    continue;\n                }\n\n                const type1Compatibility = protoTypeCompatibility[n1_attrs.protoType];\n                const compatibilityInfo = type1Compatibility ? type1Compatibility[n2_attrs.protoType] : undefined;\n\n                if (compatibilityInfo === undefined || compatibilityInfo === false) {\n                    continue; \n                }\n\n                let assignedChannel = InteractionChannelType.Generic;\n                let resistanceModifier = 1.0; \n                if (typeof compatibilityInfo === 'object') {\n                    assignedChannel = compatibilityInfo.channel;\n                    resistanceModifier = compatibilityInfo.resistanceMod;\n                }\n                \n                if (n1_attrs.polarity !== n2_attrs.polarity &&\n                    !graph.hasEdge(n1_id, n2_id) &&\n                    graph.degree(n1_id) < n1_attrs.valence &&\n                    graph.degree(n2_id) < n2_attrs.valence) {\n                    \n                    const futureGraph = deepCopyGraph(graph);\n                    const baseFlowResistanceForNewBond = 1.0; \n                    const flowResistance = PrecisionNumber.from(baseFlowResistanceForNewBond * resistanceModifier, sim.config.precision); \n                    \n                    futureGraph.addEdge(n1_id, n2_id, { \n                        flowResistance, \n                        interactionChannelType: assignedChannel \n                    });\n                    sim.updateAllNodeStresses(futureGraph);\n                    const descriptor = sim.calculatePatternDescriptor(futureGraph);\n                    futures.push({\n                        move_name: 'bonding', \n                        nodes_involved: [n1_id, n2_id].sort(),\n                        cost: getRuleBaseCost('bonding', sim),\n                        resulting_graph: futureGraph, \n                        descriptor\n                    });\n                }\n            }\n        }\n        return futures;\n    }\n};","// src/rule_annihilation.ts\nimport Graph from 'graphology';\nimport { PrecisionNumber } from './precision';\nimport { \n    DistinctionAttrs, \n    RelationAttrs, \n    PotentialFuture, \n    Rule\n} from './shared_types';\nimport { getRuleBaseCost } from './rule_utils';\nimport { deepCopyGraph } from './graph_utils';\nimport type { MVU_Simulator } from './simulator_core';\n\nexport const AnnihilationRule: Rule = {\n    name:'annihilation',\n    description:'Remove terminally bonded pair.',\n    base_cost:PrecisionNumber.from(0.2,'high'),\n    isApplicable:(g)=>g.size>0,\n    apply:(g,s)=>{ \n        const fut:PotentialFuture[]=[];\n        g.forEachEdge((_e,_a,n1,n2)=>{\n            const n1a=g.getNodeAttributes(n1)as DistinctionAttrs;\n            const n2a=g.getNodeAttributes(n2)as DistinctionAttrs;\n            \n            // Guard against corrupted attributes\n            if (!n1a || !n2a) return;\n\n            if(n1a.polarity!==n2a.polarity&&g.degree(n1)===1&&g.degree(n2)===1){\n                const fG = deepCopyGraph(g); // Use robust deep copy\n                fG.dropNode(n1);\n                fG.dropNode(n2);\n                s.updateAllNodeStresses(fG);\n                const d=s.calculatePatternDescriptor(fG);\n                fut.push({\n                    move_name:'annihilation',\n                    nodes_involved:[n1,n2].sort(),\n                    cost:getRuleBaseCost('annihilation',s),\n                    resulting_graph:fG,\n                    descriptor:d\n                });\n            }\n        });\n        return fut;\n    }\n};","// src/rule_adaptation.ts\nimport Graph from 'graphology';\nimport { PrecisionNumber } from './precision';\nimport { \n    DistinctionAttrs, \n    RelationAttrs, \n    PotentialFuture, \n    Rule,\n    ProtoType,\n    PROTO_TYPE_COUNT\n} from './shared_types';\nimport { getRuleBaseCost } from './rule_utils';\nimport { deepCopyGraph } from './graph_utils';\nimport type { MVU_Simulator } from './simulator_core';\n\nexport const AdaptationRule: Rule = {\n    name:'adaptation',\n    description:'Distinction fine-tunes properties based on stress and stagnation.',\n    base_cost:PrecisionNumber.from(0.6,'high'),\n    isApplicable:(g,s)=>g.order>0&&(s.config.enable_adaptation_valence||s.config.enable_adaptation_polarity||s.config.enable_adaptation_prototype),\n    apply:(g,s)=>{ \n        const fut:PotentialFuture[]=[];\n        \n        g.forEachNode((nId,a)=>{ \n            try { \n                if (typeof a.valence !== 'number' || isNaN(a.valence) || typeof a.protoValence !== 'number' || isNaN(a.protoValence)) {\n                    console.warn(`[AdaptationRule] Skipping node ${nId} due to invalid valence/protoValence attributes.`);\n                    return; \n                }\n\n                const cS=a.stress.toNumber();\n                const cV=a.valence;\n                const cPV=a.protoValence;\n                let maxAV=Math.floor(cPV*s.config.max_valence_factor);\n                maxAV=Math.min(maxAV,s.config.absolute_max_valence);\n                maxAV=Math.max(s.config.min_valence,maxAV);\n                const deg=g.degree(nId);\n                let mC=getRuleBaseCost('adaptation',s);\n                \n                // --- Valence Adaptation (based on simple stress) ---\n                if(s.config.enable_adaptation_valence){\n                    // **REFACTOR:** Condition restored to be more principled.\n                    // Increase valence if stressed from being \"full\" or over-full.\n                    const conditionValenceUp = cS > 0.5 && deg >= cV && cV < maxAV; \n                    if(conditionValenceUp){ \n                        const fG=deepCopyGraph(g);\n                        fG.setNodeAttribute(nId,'valence',cV+1);\n                        s.updateAllNodeStresses(fG);\n                        const d=s.calculatePatternDescriptor(fG);\n                        fut.push({move_name:'adaptation_valence_up',nodes_involved:[nId],cost:mC.add(0.1),resulting_graph:fG,descriptor:d});\n                    }\n                    \n                    // Decrease valence if low stress and over-provisioned\n                    const conditionValenceDown = cS < 0.3 && cV > s.config.min_valence && deg < cV;\n                    if(conditionValenceDown){\n                        const fG=deepCopyGraph(g);\n                        fG.setNodeAttribute(nId,'valence',Math.max(s.config.min_valence,cV-1));\n                        s.updateAllNodeStresses(fG);\n                        const d=s.calculatePatternDescriptor(fG);\n                        fut.push({move_name:'adaptation_valence_down',nodes_involved:[nId],cost:mC.add(0.1),resulting_graph:fG,descriptor:d});\n                    }\n                }\n\n                // --- Drastic Adaptations (based on persistent stagnation) ---\n                const stagnation = s.getNodeStagnation(nId);\n\n                if(s.config.enable_adaptation_polarity && stagnation > s.config.polarity_flip_stagnation_threshold){ \n                    const fG=deepCopyGraph(g);\n                    fG.setNodeAttribute(nId,'polarity',a.polarity*-1 as(1|-1));\n                    s.updateAllNodeStresses(fG);\n                    const d=s.calculatePatternDescriptor(fG);\n                    fut.push({move_name:'adaptation_polarity_flip',nodes_involved:[nId],cost:mC.add(0.4),resulting_graph:fG,descriptor:d});\n                }\n                if(s.config.enable_adaptation_prototype && stagnation > s.config.prototype_adapt_stagnation_threshold){ \n                    const fG=deepCopyGraph(g);\n                    const nPT=(a.protoType+1)%PROTO_TYPE_COUNT as ProtoType;\n                    fG.setNodeAttribute(nId,'protoType',nPT);\n                    s.updateAllNodeStresses(fG);\n                    const d=s.calculatePatternDescriptor(fG);\n                    fut.push({move_name:`adaptation_prototype_${ProtoType[nPT].toLowerCase()}`,nodes_involved:[nId],cost:mC.add(0.5),resulting_graph:fG,descriptor:d});\n                }\n            } catch (error) {\n                console.error(`  [AdaptationRule] ERROR processing node ${nId}:`, error); \n            }\n        });\n        return fut;\n    }\n};","// src/rule_transformation.ts\nimport Graph from 'graphology';\nimport { PrecisionNumber } from './precision';\nimport { \n    DistinctionAttrs, \n    RelationAttrs, \n    PotentialFuture, \n    Rule,\n    ProtoType,\n    S_Level,\n    PROTO_TYPE_COUNT\n} from './shared_types';\nimport { getRuleBaseCost } from './rule_utils';\nimport { deepCopyGraph } from './graph_utils';\nimport type { MVU_Simulator } from './simulator_core';\n\nexport const TransformationRule: Rule = {\n    name:'transformation',\n    description:'A distinction undergoes a fundamental change in ProtoType due to persistent stagnation.',\n    base_cost:PrecisionNumber.from(0.8,'high'),\n    isApplicable:(g,s)=>g.order>0&&s.config.enable_transformation_prototype,\n    apply:(g,s)=>{\n        const fut:PotentialFuture[]=[];\n        \n        g.forEachNode((nId,a)=>{ \n            try { \n                // Guard against corrupted attributes\n                if (typeof a.sLevel !== 'number' || typeof a.stress?.toNumber() !== 'number') {\n                    return; \n                }\n\n                const stagnation = s.getNodeStagnation(nId);\n                const randomCheck = s.random();\n\n                // REFACTOR: Condition is now based on stagnation, not an arbitrary stress threshold.\n                // Transformation is a drastic, probabilistic move for nodes that are not complex (S1)\n                // and have been stuck in a high-stress state for a long time.\n                const conditionMet = a.sLevel <= S_Level.S1_SimpleFixedPoint && \n                                   stagnation > s.config.transformation_stagnation_threshold && \n                                   randomCheck < 0.25; // Increased chance slightly for more dynamic behavior\n                \n                if(conditionMet){\n                    const fG=deepCopyGraph(g);\n                    // Choose a new ProtoType that is different from the current one\n                    const nPT=(a.protoType + Math.floor(s.random() * (PROTO_TYPE_COUNT - 1)) + 1) % PROTO_TYPE_COUNT as ProtoType;\n                    \n                    if(nPT !== a.protoType){\n                        fG.setNodeAttribute(nId,'protoType',nPT);\n                        // A transformation could also reset adaptive valence, but for now, we let adaptation handle it.\n                        s.updateAllNodeStresses(fG);\n                        const d=s.calculatePatternDescriptor(fG);\n                        fut.push({\n                            move_name:`transformation_prototype_to_${ProtoType[nPT].toLowerCase()}`,\n                            nodes_involved:[nId],\n                            cost:getRuleBaseCost('transformation',s),\n                            resulting_graph:fG,\n                            descriptor:d\n                        });\n                    }\n                }\n            } catch (error) {\n                 console.error(`  [TransformationRule] ERROR processing node ${nId}:`, error); \n            }\n        });\n        return fut;\n    }\n};","// src/rule_collapse.ts\nimport Graph from 'graphology';\nimport { PrecisionNumber } from './precision';\nimport { \n    DistinctionAttrs, \n    RelationAttrs, \n    PotentialFuture, \n    Rule\n} from './shared_types';\nimport { getRuleBaseCost } from './rule_utils';\nimport { deepCopyGraph } from './graph_utils';\nimport type { MVU_Simulator } from './simulator_core';\n\nexport const CollapseRule: Rule = {\n    name:'collapse',\n    description:'Simplify redundant linear structures.',\n    base_cost:PrecisionNumber.from(0.4,'high'),\n    isApplicable:(g,s)=>g.order>=3&&s.config.enable_collapse,\n    apply:(g,s)=>{\n        const fut:PotentialFuture[]=[];\n        g.forEachNode((nodeB_id)=>{\n            // This rule applies to nodes that are simple bridges between two other nodes\n            if(g.degree(nodeB_id)===2){\n                const neighbors=g.neighbors(nodeB_id);\n                if(neighbors.length===2){\n                    const nodeA_id=neighbors[0];\n                    const nodeC_id=neighbors[1];\n                    \n                    // Ensure it's a linear chain (A-B-C) and not a triangle (A-B, B-C, C-A)\n                    // Also ensures we don't have a weird case of a node connected to itself twice via B\n                    if(nodeA_id !== nodeC_id && !g.hasEdge(nodeA_id, nodeC_id)){ \n                        const fG = deepCopyGraph(g); // Use robust deep copy\n                        \n                        // Dropping the node also removes its incident edges (A-B and B-C)\n                        fG.dropNode(nodeB_id);\n                        \n                        // After collapse, recalculate stresses for the now-affected nodes A and C\n                        s.updateAllNodeStresses(fG);\n                        \n                        const d=s.calculatePatternDescriptor(fG);\n                        \n                        fut.push({\n                            move_name:'collapse_linear_trim',\n                            nodes_involved:[nodeA_id,nodeB_id,nodeC_id].sort(),\n                            cost:getRuleBaseCost('collapse',s),\n                            resulting_graph:fG,\n                            descriptor:d\n                        });\n                    }\n                }\n            }\n        });\n        return fut;\n    }\n};","// src/simulator_step.ts\nimport { PrecisionNumber } from './precision';\nimport { \n    S_Level, \n    PatternDescriptor, \n    DescriptorDelta,\n    MoveRecord, \n    PotentialFuture\n} from './shared_types';\nimport { MVU_Simulator } from './simulator_state';\nimport { \n    updateAllNodeStresses, \n    calculatePatternDescriptor,\n    getGraphHash\n} from './simulator_analysis';\n\nfunction compareDescriptors(d1: PatternDescriptor, d2: PatternDescriptor): -1 | 0 | 1 {\n    if(d1.S.level > d2.S.level) return 1;\n    if(d1.S.level < d2.S.level) return -1;\n    \n    if(d1.S.level === S_Level.S2_RecursiveStructure && d1.s2_score && d2.s2_score){\n        const s2Comp = d1.s2_score.compareTo(d2.s2_score);\n        if(s2Comp !== 0) return s2Comp;\n    }\n    \n    const robComp = d1.S.robustness.compareTo(d2.S.robustness);\n    if(robComp !== 0) return robComp;\n    \n    const cComp = d2.C.compareTo(d1.C);\n    if(cComp !== 0) return cComp;\n    \n    const stressComp = d2.totalStress.compareTo(d1.totalStress);\n    if(stressComp !== 0) return stressComp;\n    \n    const flowComp = d2.totalRelationFlowResistance.compareTo(d1.totalRelationFlowResistance);\n    if(flowComp !== 0) return flowComp;\n    \n    return 0;\n}\n\nexport function selectBestFuture(sim: MVU_Simulator, futures: PotentialFuture[], currentDescriptor: PatternDescriptor): PotentialFuture | null {\n    if(futures.length===0)return null;\n    futures.sort((a,b)=>{\n        const descComp = compareDescriptors(a.descriptor, b.descriptor);\n        if (descComp !== 0) return -descComp;\n\n        if (a.move_name === 'bonding' && b.move_name !== 'bonding') return -1;\n        if (b.move_name === 'bonding' && a.move_name !== 'bonding') return 1;\n\n        if (sim.config.enable_dynamic_rule_weighting && a.origin_rule_weight && b.origin_rule_weight) {\n            const weightComp = a.origin_rule_weight.compareTo(b.origin_rule_weight);\n            if (weightComp !== 0) return -weightComp;\n        }\n        \n        const costComp = a.cost.compareTo(b.cost);\n        if (costComp !== 0) return costComp;\n\n        if (a.move_name < b.move_name) return -1; \n        if (a.move_name > b.move_name) return 1;\n\n        const nodesA = a.nodes_involved.slice().sort().join(',');\n        const nodesB = b.nodes_involved.slice().sort().join(',');\n        if (nodesA < nodesB) return -1; \n        if (nodesA > nodesB) return 1;\n        \n        return 0;\n    });\n\n    const bestBySort = futures[0];\n    const comparisonToCurrent = compareDescriptors(bestBySort.descriptor,currentDescriptor);\n    if(comparisonToCurrent > 0){return bestBySort;}else{if(sim.graph.order < 5 && sim.step_counter < 15){const gF=futures.find(f=>f.move_name==='genesis');if(gF){if(gF.descriptor.S.level>=currentDescriptor.S.level||futures.length===1){if(gF.descriptor.C.compareTo(currentDescriptor.C.add(2))<=0){return gF;}}}}return bestBySort;}\n}\n\nfunction calculateDescriptorDelta(newDesc: PatternDescriptor, oldDesc: PatternDescriptor | null): DescriptorDelta {\n    if(!oldDesc){return{s_level:newDesc.S.level,robustness:newDesc.S.robustness.toNumber(),complexity:newDesc.C.toNumber(),totalStress:newDesc.totalStress.toNumber()};}\n    return{s_level:newDesc.S.level-oldDesc.S.level,robustness:newDesc.S.robustness.subtract(oldDesc.S.robustness).toNumber(),complexity:newDesc.C.subtract(oldDesc.C).toNumber(),totalStress:newDesc.totalStress.subtract(oldDesc.totalStress).toNumber()};\n}\n\nfunction adjustRuleWeight(sim: MVU_Simulator, ruleName: string, delta: DescriptorDelta): void {\n    if(!sim.config.enable_dynamic_rule_weighting)return;\n    const baseRuleName=sim.rules.find(r=>ruleName.startsWith(r.name))?.name;\n    if(!baseRuleName)return;\n    const cW=sim.rule_weights.get(baseRuleName); if(!cW) return; \n    let aF=PrecisionNumber.from(0,sim.config.precision);\n    if(delta.s_level>0)aF=aF.add(sim['RULE_WEIGHT_ADJUSTMENT_FACTOR'].multiply(2));\n    else if(delta.s_level===0){\n        if(delta.robustness>0.001)aF=aF.add(sim['RULE_WEIGHT_ADJUSTMENT_FACTOR']);\n        if(delta.complexity<0&&Math.abs(delta.robustness)<0.001)aF=aF.add(sim['RULE_WEIGHT_ADJUSTMENT_FACTOR'].multiply(0.5));\n        if(delta.totalStress<-0.01)aF=aF.add(sim['RULE_WEIGHT_ADJUSTMENT_FACTOR'].multiply(0.25));\n    } else {\n        aF=aF.subtract(sim['RULE_WEIGHT_ADJUSTMENT_FACTOR'].multiply(1.5));\n    }\n    let nW=cW.add(aF);if(nW.isNegative()||nW.isZero())nW=PrecisionNumber.from(0.01,sim.config.precision);\n    sim.rule_weights.set(baseRuleName,nW);\n}\n\nfunction normalizeRuleWeights(sim: MVU_Simulator): void {\n    if(!sim.config.enable_dynamic_rule_weighting||sim.rules.length===0)return;\n    let sOW=new PrecisionNumber(0,sim.config.precision);\n    sim.rule_weights.forEach(w=>sOW=sOW.add(w));\n    if(sOW.isZero()||sOW.isNegative()){sim.rules.forEach(r=>sim.rule_weights.set(r.name,new PrecisionNumber(1.0,sim.config.precision)));return;}\n    const nR=new PrecisionNumber(sim.rules.length,sim.config.precision);\n    sim.rule_weights.forEach((w,rN)=>{sim.rule_weights.set(rN,w.divide(sOW).multiply(nR));});\n}\n\nfunction updateStagnationCounters(sim: MVU_Simulator): void {\n    const toRemove: string[] = [];\n    sim.node_stagnation_counter.forEach((_count, nodeId) => {\n        if (!sim.graph.hasNode(nodeId)) {\n            toRemove.push(nodeId);\n        }\n    });\n    toRemove.forEach(nodeId => {\n        sim.node_stagnation_counter.delete(nodeId);\n        sim.node_last_stress.delete(nodeId);\n    });\n\n    sim.graph.forEachNode((nodeId, attrs) => {\n        const lastStress = sim.node_last_stress.get(nodeId);\n        const currentStress = attrs.stress;\n        if (lastStress && currentStress.isGreaterThanOrEqualTo(lastStress)) {\n            const currentCount = sim.node_stagnation_counter.get(nodeId) || 0;\n            sim.node_stagnation_counter.set(nodeId, currentCount + 1);\n        } else {\n            sim.node_stagnation_counter.set(nodeId, 0);\n        }\n        sim.node_last_stress.set(nodeId, currentStress);\n    });\n}\n\nexport function step(sim: MVU_Simulator): { halt: boolean, reason?: string, descriptor?: PatternDescriptor, move_record?: MoveRecord } {\n    if(sim.graph.order > sim['UNBOUNDED_NODE_LIMIT'] || sim.step_counter >= sim['MAX_STEPS_PER_SIM']){\n        const r=sim.graph.order > sim['UNBOUNDED_NODE_LIMIT'] ? 'UNBOUNDED_GROWTH' : 'MAX_STEPS_REACHED';\n        updateAllNodeStresses(sim);\n        return {halt:true,reason:r,descriptor:calculatePatternDescriptor(sim)};\n    }\n\n    updateAllNodeStresses(sim);\n    updateStagnationCounters(sim);\n    \n    const currentDescriptor = calculatePatternDescriptor(sim);\n    const currentGraphHash = getGraphHash(sim.graph);\n\n    if(sim.graph.order > 0 && sim.graph_state_history.has(currentGraphHash) && sim.graph_state_history.get(currentGraphHash)!.step < sim.step_counter){\n        return {halt:true,reason:'LIMIT_CYCLE',descriptor:currentDescriptor};\n    }\n    \n    if(sim.graph.order === 0){ \n        const nId=sim.getNextNodeId();\n        sim.createDistinction(sim.graph,nId,(sim.random()<0.5)?1:-1);\n        updateAllNodeStresses(sim); \n        sim.step_counter++;\n        const dAI=calculatePatternDescriptor(sim);\n        sim.node_last_stress.set(nId, dAI.totalStress); \n        const dlt=calculateDescriptorDelta(dAI,null);\n        const mR:MoveRecord={rule_name:'genesis_ignition',nodes_involved:[nId],cost:PrecisionNumber.from(0,sim.config.precision),step_number:sim.step_counter,delta_descriptor:dlt};\n        sim.simulation_history.push(mR);\n        if(sim.graph.order > 0) sim.graph_state_history.set(getGraphHash(sim.graph),{step:sim.step_counter,descriptor:dAI});\n        sim.last_descriptor=dAI;\n        return {halt:false,descriptor:dAI,move_record:mR};\n    }\n    \n    sim.last_descriptor=currentDescriptor; \n    sim.graph_state_history.set(currentGraphHash,{step:sim.step_counter,descriptor:currentDescriptor});\n\n    const pF:PotentialFuture[]=[];\n    sim.rules.forEach(r=>{\n        if(r.isApplicable(sim.graph,sim)){\n            const fFR=r.apply(sim.graph,sim);\n            fFR.forEach(f=>{\n                const bRN=sim.rules.find(rl=>f.move_name.startsWith(rl.name))?.name;\n                f.origin_rule_weight=bRN?sim.rule_weights.get(bRN):undefined;\n            });\n            pF.push(...fFR);\n        }\n    });\n    \n    if(pF.length===0){\n        console.error(`HALT @ Step ${sim.step_counter}: NO_APPLICABLE_MOVES. Current Descriptor:`, JSON.parse(JSON.stringify(currentDescriptor)));\n        return{halt:true,reason:'NO_APPLICABLE_MOVES',descriptor:currentDescriptor};\n    }\n    \n    const cF=selectBestFuture(sim, pF,currentDescriptor);\n    if(!cF){\n        console.error(`HALT @ Step ${sim.step_counter}: STUCK_NO_VIABLE_FUTURE despite ${pF.length} options. Current Descriptor:`, JSON.parse(JSON.stringify(currentDescriptor)));\n        return{halt:true,reason:'STUCK_NO_VIABLE_FUTURE',descriptor:currentDescriptor};\n    }\n    \n    sim.graph=cF.resulting_graph;\n    sim.step_counter++;\n    const finD=calculatePatternDescriptor(sim);\n    const dlt=calculateDescriptorDelta(finD,sim.last_descriptor);\n    const mR:MoveRecord={rule_name:cF.move_name,nodes_involved:cF.nodes_involved,cost:cF.cost,step_number:sim.step_counter,delta_descriptor:dlt};\n    sim.simulation_history.push(mR);\n    if(sim.config.enable_dynamic_rule_weighting){adjustRuleWeight(sim, cF.move_name,dlt);if(sim.step_counter%sim['RULE_WEIGHT_NORMALIZATION_INTERVAL']===0){normalizeRuleWeights(sim);}}\n    sim.last_descriptor=finD;\n    return{halt:false,descriptor:finD,move_record:mR};\n}","// src/simulator_analysis.ts\nimport Graph from 'graphology';\nimport { PrecisionNumber } from './precision';\nimport { \n    S_Level, \n    DistinctionAttrs, \n    RelationAttrs, \n    PatternDescriptor, \n    InteractionChannelType\n} from './shared_types';\nimport type { MVU_Simulator } from './simulator_state';\n\n// --- Stress Calculation ---\n\nexport function calculateIntrinsicNodeStress(nodeId: string, graph: Graph<DistinctionAttrs, RelationAttrs>, sim: MVU_Simulator): PrecisionNumber {\n    const attrs = graph.getNodeAttributes(nodeId) as DistinctionAttrs;\n    const degree = graph.degree(nodeId);\n    let stress = 0;\n\n    if (typeof attrs.valence !== 'number' || isNaN(attrs.valence) || \n        typeof attrs.protoValence !== 'number' || isNaN(attrs.protoValence) ) {\n        console.error(`[calculateIntrinsicNodeStress] Node ${nodeId} has invalid valence/protoValence: V=${attrs.valence}, PV=${attrs.protoValence}. Assigning high stress.`);\n        return new PrecisionNumber(10, sim.config.precision);\n    }\n\n    const unmetAdaptiveValence = attrs.valence - degree;\n    if (unmetAdaptiveValence > 0) stress += unmetAdaptiveValence;\n    if (degree > attrs.valence) stress += (degree - attrs.valence) * 0.5;\n\n    const maxAllowedAdaptiveValence = Math.min( Math.floor(attrs.protoValence * sim.config.max_valence_factor), sim.config.absolute_max_valence );\n    if (attrs.valence > maxAllowedAdaptiveValence) {\n        stress += (attrs.valence - maxAllowedAdaptiveValence) * 0.5; \n    } else if (attrs.valence > attrs.protoValence) {\n         stress += (attrs.valence - attrs.protoValence) * 0.25;\n    }\n    \n    if (degree > 0) {\n        let samePolarityNeighbors = 0;\n        graph.forEachNeighbor(nodeId, (_n, na) => { if (na.polarity === attrs.polarity) samePolarityNeighbors++; });\n        if (samePolarityNeighbors === degree) {\n            stress += sim.config.stress_penalty_homogeneous_env;\n        }\n    }\n    return new PrecisionNumber(stress, sim.config.precision);\n}\n\nexport function updateAllNodeStresses(sim: MVU_Simulator): void {\n    const graph = sim.graph;\n    const intrinsicStresses: Map<string, PrecisionNumber> = new Map();\n    graph.forEachNode(nodeId => {\n        intrinsicStresses.set(nodeId, calculateIntrinsicNodeStress(nodeId, graph, sim));\n    });\n\n    if (sim.config.enable_stress_propagation && sim.config.stress_propagation_factor > 0 && graph.size > 0) {\n        const propagatedStressContributions: Map<string, PrecisionNumber> = new Map();\n        graph.forEachNode(nodeId => propagatedStressContributions.set(nodeId, PrecisionNumber.from(0, sim.config.precision)));\n\n        graph.forEachNode(sourceNodeId => {\n            const sourceIntrinsicStress = intrinsicStresses.get(sourceNodeId)!;\n            if (sourceIntrinsicStress.isGreaterThan(sim['HIGH_STRESS_THRESHOLD_FOR_PROPAGATION'])) {\n                graph.forEachNeighbor(sourceNodeId, (neighborNodeId, edgeAttributes) => {\n                    const relationAttrs = edgeAttributes as RelationAttrs;\n                    const resistanceFactor = PrecisionNumber.from(1, sim.config.precision).divide(relationAttrs.flowResistance.add(1)); \n                    const stressToPropagateToNeighbor = sourceIntrinsicStress.multiply(sim.config.stress_propagation_factor).multiply(resistanceFactor);\n                    const currentPropStress = propagatedStressContributions.get(neighborNodeId)!;\n                    propagatedStressContributions.set(neighborNodeId, currentPropStress.add(stressToPropagateToNeighbor));\n                });\n            }\n        });\n        graph.forEachNode(nodeId => { \n            const finalStress = intrinsicStresses.get(nodeId)!.add(propagatedStressContributions.get(nodeId)!); \n            graph.setNodeAttribute(nodeId, 'stress', finalStress); \n        });\n    } else { \n        graph.forEachNode(nodeId => { \n            graph.setNodeAttribute(nodeId, 'stress', intrinsicStresses.get(nodeId)!); \n        });\n    }\n}\n\n// --- S-Level Detection ---\n\nfunction detectS2Recursive(g: Graph<DistinctionAttrs, RelationAttrs>, sim: MVU_Simulator): { isS2: boolean, score: PrecisionNumber } {\n    if(g.order<3)return{isS2:false,score:new PrecisionNumber(0,sim.config.precision)};\n    let hS2S=new PrecisionNumber(0,sim.config.precision);\n    let fS2=false;\n    for(const sN of g.nodes()){\n        const neigh=g.neighbors(sN);\n        for(const n1 of neigh){\n            if(n1===sN)continue;\n            for(const n2 of g.neighbors(n1)){\n                if(n2===sN||n2===n1)continue;\n                if(g.hasEdge(n2,sN)){\n                    const cN=[sN,n1,n2];\n                    const fNA=g.getNodeAttributes(sN)as DistinctionAttrs;\n                    const iCC=cN.every(cn=>{\n                        const a=g.getNodeAttributes(cn)as DistinctionAttrs;\n                        return a.protoType===fNA.protoType&&a.polarity===fNA.polarity&&(g.degree(cn)===2);\n                    });\n                    if(iCC){\n                        fS2=true;\n                        const cS=new PrecisionNumber(1.0/(3*2),sim.config.precision);\n                        if(cS.compareTo(hS2S)>0)hS2S=cS;\n                    }\n                }\n            }\n        }\n    }\n    return{isS2:fS2,score:hS2S};\n}\n\nfunction detectS4Composite(g: Graph<DistinctionAttrs, RelationAttrs>): { isS4: boolean, components: string[] } { \n    return { isS4: false, components: [] }; \n}\n\n// --- Descriptor Calculation ---\n\nexport function calculatePatternDescriptor(sim: MVU_Simulator): PatternDescriptor {\n    const g = sim.graph;\n    const o=g.order;const sz=g.size;const C=new PrecisionNumber(o+sz,sim.config.precision);\n    let hPB=0;\n    g.forEachEdge((_e,_a,s,t)=>{\n        const sAttrs = g.getNodeAttributes(s); \n        const tAttrs = g.getNodeAttributes(t); \n        if(sAttrs && tAttrs && sAttrs.polarity !== tAttrs.polarity)hPB++;\n    });\n    const r=PrecisionNumber.divide(hPB,C.isZero()?1:C.toNumber(),sim.config.precision);\n    let sL:S_Level=S_Level.S0_Vacuum;\n    let s2i={isS2:false,score:new PrecisionNumber(0,sim.config.precision)};\n    \n    if(o>0){\n        sL=S_Level.S1_SimpleFixedPoint;\n        const cH=getGraphHash(g);\n        if(sim.graph_state_history.has(cH) && sim.graph_state_history.get(cH)!.step < sim.step_counter){\n            sL=S_Level.S3_DynamicEquilibrium;\n        } else {\n            s2i=detectS2Recursive(g, sim);\n            if(s2i.isS2)sL=S_Level.S2_RecursiveStructure;\n        }\n    }\n    let tS=PrecisionNumber.from(0,sim.config.precision);\n    g.forEachNode(nId=>{\n        const sA=g.getNodeAttribute(nId,'stress')as PrecisionNumber|undefined;\n        if(sA)tS=tS.add(sA);\n    });\n    let tRFR=PrecisionNumber.from(0,sim.config.precision);\n    g.forEachEdge((_e,a)=>{\n        const frA=a.flowResistance as PrecisionNumber|undefined; \n        if(frA)tRFR=tRFR.add(frA);\n    });\n    return{C,S:{level:sL,robustness:r},totalStress:tS,totalRelationFlowResistance:tRFR,s2_score:s2i.score};\n}\n\nexport function getGraphHash(g: Graph<DistinctionAttrs, RelationAttrs>): string {\n    const nodeStrings = g.nodes().sort((a,b)=>parseInt(a.split('_')[1])-parseInt(b.split('_')[1])).map(nId=>{const a=g.getNodeAttributes(nId)as DistinctionAttrs;return`${a.id}:${a.polarity}:${a.protoType}:${a.protoValence}:${a.valence}:${a.sLevel.toString()}`;});\n    const edgeStrings = g.edges().map(e=>{const[u,v]=g.extremities(e).sort();const ea=g.getEdgeAttributes(e)as RelationAttrs;const r=ea.flowResistance?ea.flowResistance.toNumber().toFixed(2):\"N/A\";const c=ea.interactionChannelType!==undefined?InteractionChannelType[ea.interactionChannelType]:\"N/A\";return`${u}-[${c}](${r})-${v}`;}).sort();\n    return`${nodeStrings.join('|')};${edgeStrings.join('|')}`;\n}","// src/visualizer_graph.ts\nimport Graph from 'graphology';\nimport { DistinctionAttrs, RelationAttrs, ProtoType, S_Level } from './shared_types';\nimport forceAtlas2 from 'graphology-layout-forceatlas2';\n\nfunction circularLayout(graph: Graph<DistinctionAttrs, RelationAttrs>, positions: { [key: string]: { x: number, y: number } }, width: number, height: number) {\n    const nodes = graph.nodes();\n    const order = nodes.length;\n    if (order === 0) return;\n\n    const angleStep = (2 * Math.PI) / order;\n    const radiusFactor = order === 1 ? 0 : (order < 10 ? 0.25 : 0.4);\n    const layoutRadius = Math.min(width, height) * radiusFactor;\n\n    nodes.forEach((node, i) => {\n        positions[node] = {\n            x: width / 2 + (order > 1 ? layoutRadius * Math.cos(i * angleStep) : 0),\n            y: height / 2 + (order > 1 ? layoutRadius * Math.sin(i * angleStep) : 0),\n        };\n    });\n}\n\nexport function drawGraph(graph: Graph<DistinctionAttrs, RelationAttrs>, canvas: HTMLCanvasElement) {\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n        console.error(\"Failed to get 2D context from canvas for drawGraph\");\n        return;\n    }\n\n    const width = canvas.width;\n    const height = canvas.height;\n    ctx.clearRect(0, 0, width, height);\n\n    if (graph.order === 0) return;\n\n    const positions: { [key: string]: { x: number, y: number } } = {};\n\n    if (graph.order > 0) { \n        const layoutGraph = new Graph();\n        graph.forEachNode((node, attrs) => {\n            layoutGraph.addNode(node, { ...attrs }); \n            if (!Object.prototype.hasOwnProperty.call(attrs, 'x')) {\n                layoutGraph.setNodeAttribute(node, 'x', (Math.random() - 0.5) * width * 0.1); \n            }\n            if (!Object.prototype.hasOwnProperty.call(attrs, 'y')) {\n                layoutGraph.setNodeAttribute(node, 'y', (Math.random() - 0.5) * height * 0.1);\n            }\n        });\n        graph.forEachEdge((edgeKey, attrs, source, target) => { \n            if(layoutGraph.hasNode(source) && layoutGraph.hasNode(target)) {\n                 if (!layoutGraph.hasEdge(source,target)) { \n                    layoutGraph.addEdgeWithKey(edgeKey, source, target, {...attrs});\n                 } else { \n                    layoutGraph.mergeEdgeAttributes(edgeKey, {...attrs});\n                 }\n            }\n        });\n\n        if (graph.order > 2 && graph.order < 300) { \n            try {\n                 forceAtlas2.assign(layoutGraph, { \n                    iterations: Math.max(30, Math.min(150, graph.order * 3)), \n                    settings: { \n                        gravity: 1.2, \n                        edgeWeightInfluence: 0.1,\n                        scalingRatio: 20.0,\n                        barnesHutOptimize: graph.order > 75, \n                        barnesHutTheta: 0.7,\n                        slowDown: 1 + Math.log(graph.order + 1),\n                        adjustSizes: true, \n                        linLogMode: true,\n                    } \n                });\n                layoutGraph.forEachNode((node, attrs) => {\n                    const scaleFactor = Math.min(width, height) / (Math.max(10, Math.sqrt(graph.order) * 25)); \n                    positions[node] = {\n                        x: attrs.x * scaleFactor + width / 2,\n                        y: attrs.y * scaleFactor + height / 2,\n                    };\n                });\n            } catch (e) {\n                console.error(\"ForceAtlas2 layout failed, falling back to circular:\", e);\n                circularLayout(graph, positions, width, height);\n            }\n        } else { \n            circularLayout(graph, positions, width, height);\n        }\n    }\n\n    // Draw Edges\n    ctx.strokeStyle = 'rgba(255, 255, 255, 0.3)';\n    graph.forEachEdge((_edge, attrs, source, target) => {\n        const posSrc = positions[source];\n        const posTgt = positions[target];\n        if (posSrc && posTgt) {\n            ctx.beginPath();\n            ctx.moveTo(posSrc.x, posSrc.y);\n            ctx.lineTo(posTgt.x, posTgt.y);\n            const resistance = attrs.flowResistance.toNumber();\n            ctx.lineWidth = Math.max(0.3, 2.0 - resistance * 0.4); \n            ctx.stroke();\n        }\n    });\n    ctx.lineWidth = 1; \n\n    // Draw Nodes\n    graph.forEachNode((node, attrs) => {\n        const pos = positions[node];\n        if (!pos) {\n            positions[node] = { x: Math.random() * width, y: Math.random() * height };\n            console.warn(`No position calculated for node ${node}, placed randomly.`);\n        }\n\n        const baseRadius = attrs.protoType === ProtoType.Quarkic ? 4.5 : (attrs.protoType === ProtoType.Leptonic ? 5 : 5.5);\n        const stressVal = attrs.stress ? attrs.stress.toNumber() : 0;\n        const stressFactor = Math.min(2.0, 1 + stressVal * 0.1); \n        const radius = Math.max(2.5, baseRadius * stressFactor);\n\n        ctx.beginPath();\n        ctx.arc(positions[node].x, positions[node].y, radius, 0, 2 * Math.PI);\n        \n        ctx.fillStyle = attrs.polarity === 1 ? '#00aaff' : '#ffaa00'; \n        if (attrs.protoType === ProtoType.Leptonic) ctx.fillStyle = '#33cc33'; \n        else if (attrs.protoType === ProtoType.Quarkic) ctx.fillStyle = '#ff6666'; \n        \n        ctx.fill();\n\n        if (attrs.sLevel >= S_Level.S2_RecursiveStructure) {\n            ctx.strokeStyle = attrs.sLevel === S_Level.S3_DynamicEquilibrium ? '#FFD700' : (attrs.sLevel === S_Level.S2_RecursiveStructure ? '#FFFFFF' : '#DDDDDD');\n            ctx.lineWidth = attrs.sLevel === S_Level.S3_DynamicEquilibrium ? 1.5 : 1;\n            ctx.stroke();\n        }\n    });\n}","/**\n * Graphology ForceAtlas2 Layout\n * ==============================\n *\n * Library endpoint.\n */\nvar isGraph = require('graphology-utils/is-graph');\nvar createEdgeWeightGetter =\n  require('graphology-utils/getters').createEdgeWeightGetter;\nvar iterate = require('./iterate.js');\nvar helpers = require('./helpers.js');\n\nvar DEFAULT_SETTINGS = require('./defaults.js');\n\n/**\n * Asbtract function used to run a certain number of iterations.\n *\n * @param  {boolean}       assign          - Whether to assign positions.\n * @param  {Graph}         graph           - Target graph.\n * @param  {object|number} params          - If number, params.iterations, else:\n * @param  {function}        getWeight     - Edge weight getter function.\n * @param  {number}          iterations    - Number of iterations.\n * @param  {function|null}   outputReducer - A node reducer\n * @param  {object}          [settings]    - Settings.\n * @return {object|undefined}\n */\nfunction abstractSynchronousLayout(assign, graph, params) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-layout-forceatlas2: the given graph is not a valid graphology instance.'\n    );\n\n  if (typeof params === 'number') params = {iterations: params};\n\n  var iterations = params.iterations;\n\n  if (typeof iterations !== 'number')\n    throw new Error(\n      'graphology-layout-forceatlas2: invalid number of iterations.'\n    );\n\n  if (iterations <= 0)\n    throw new Error(\n      'graphology-layout-forceatlas2: you should provide a positive number of iterations.'\n    );\n\n  var getEdgeWeight = createEdgeWeightGetter(\n    'getEdgeWeight' in params ? params.getEdgeWeight : 'weight'\n  ).fromEntry;\n\n  var outputReducer =\n    typeof params.outputReducer === 'function' ? params.outputReducer : null;\n\n  // Validating settings\n  var settings = helpers.assign({}, DEFAULT_SETTINGS, params.settings);\n  var validationError = helpers.validateSettings(settings);\n\n  if (validationError)\n    throw new Error(\n      'graphology-layout-forceatlas2: ' + validationError.message\n    );\n\n  // Building matrices\n  var matrices = helpers.graphToByteArrays(graph, getEdgeWeight);\n\n  var i;\n\n  // Iterating\n  for (i = 0; i < iterations; i++)\n    iterate(settings, matrices.nodes, matrices.edges);\n\n  // Applying\n  if (assign) {\n    helpers.assignLayoutChanges(graph, matrices.nodes, outputReducer);\n    return;\n  }\n\n  return helpers.collectLayoutChanges(graph, matrices.nodes);\n}\n\n/**\n * Function returning sane layout settings for the given graph.\n *\n * @param  {Graph|number} graph - Target graph or graph order.\n * @return {object}\n */\nfunction inferSettings(graph) {\n  var order = typeof graph === 'number' ? graph : graph.order;\n\n  return {\n    barnesHutOptimize: order > 2000,\n    strongGravityMode: true,\n    gravity: 0.05,\n    scalingRatio: 10,\n    slowDown: 1 + Math.log(order)\n  };\n}\n\n/**\n * Exporting.\n */\nvar synchronousLayout = abstractSynchronousLayout.bind(null, false);\nsynchronousLayout.assign = abstractSynchronousLayout.bind(null, true);\nsynchronousLayout.inferSettings = inferSettings;\n\nmodule.exports = synchronousLayout;\n","/**\n * Graphology isGraph\n * ===================\n *\n * Very simple function aiming at ensuring the given variable is a\n * graphology instance.\n */\n\n/**\n * Checking the value is a graphology instance.\n *\n * @param  {any}     value - Target value.\n * @return {boolean}\n */\nmodule.exports = function isGraph(value) {\n  return (\n    value !== null &&\n    typeof value === 'object' &&\n    typeof value.addUndirectedEdgeWithKey === 'function' &&\n    typeof value.dropNode === 'function' &&\n    typeof value.multi === 'boolean'\n  );\n};\n","/**\n * Graphology Weight Getter\n * =========================\n *\n * Function creating weight getters.\n */\nfunction coerceWeight(value) {\n  // Ensuring target value is a correct number\n  if (typeof value !== 'number' || isNaN(value)) return 1;\n\n  return value;\n}\n\nfunction createNodeValueGetter(nameOrFunction, defaultValue) {\n  var getter = {};\n\n  var coerceToDefault = function (v) {\n    if (typeof v === 'undefined') return defaultValue;\n\n    return v;\n  };\n\n  if (typeof defaultValue === 'function') coerceToDefault = defaultValue;\n\n  var get = function (attributes) {\n    return coerceToDefault(attributes[nameOrFunction]);\n  };\n\n  var returnDefault = function () {\n    return coerceToDefault(undefined);\n  };\n\n  if (typeof nameOrFunction === 'string') {\n    getter.fromAttributes = get;\n    getter.fromGraph = function (graph, node) {\n      return get(graph.getNodeAttributes(node));\n    };\n    getter.fromEntry = function (node, attributes) {\n      return get(attributes);\n    };\n  } else if (typeof nameOrFunction === 'function') {\n    getter.fromAttributes = function () {\n      throw new Error(\n        'graphology-utils/getters/createNodeValueGetter: irrelevant usage.'\n      );\n    };\n    getter.fromGraph = function (graph, node) {\n      return coerceToDefault(\n        nameOrFunction(node, graph.getNodeAttributes(node))\n      );\n    };\n    getter.fromEntry = function (node, attributes) {\n      return coerceToDefault(nameOrFunction(node, attributes));\n    };\n  } else {\n    getter.fromAttributes = returnDefault;\n    getter.fromGraph = returnDefault;\n    getter.fromEntry = returnDefault;\n  }\n\n  return getter;\n}\n\nfunction createEdgeValueGetter(nameOrFunction, defaultValue) {\n  var getter = {};\n\n  var coerceToDefault = function (v) {\n    if (typeof v === 'undefined') return defaultValue;\n\n    return v;\n  };\n\n  if (typeof defaultValue === 'function') coerceToDefault = defaultValue;\n\n  var get = function (attributes) {\n    return coerceToDefault(attributes[nameOrFunction]);\n  };\n\n  var returnDefault = function () {\n    return coerceToDefault(undefined);\n  };\n\n  if (typeof nameOrFunction === 'string') {\n    getter.fromAttributes = get;\n    getter.fromGraph = function (graph, edge) {\n      return get(graph.getEdgeAttributes(edge));\n    };\n    getter.fromEntry = function (edge, attributes) {\n      return get(attributes);\n    };\n    getter.fromPartialEntry = getter.fromEntry;\n    getter.fromMinimalEntry = getter.fromEntry;\n  } else if (typeof nameOrFunction === 'function') {\n    getter.fromAttributes = function () {\n      throw new Error(\n        'graphology-utils/getters/createEdgeValueGetter: irrelevant usage.'\n      );\n    };\n    getter.fromGraph = function (graph, edge) {\n      // TODO: we can do better, check #310\n      var extremities = graph.extremities(edge);\n      return coerceToDefault(\n        nameOrFunction(\n          edge,\n          graph.getEdgeAttributes(edge),\n          extremities[0],\n          extremities[1],\n          graph.getNodeAttributes(extremities[0]),\n          graph.getNodeAttributes(extremities[1]),\n          graph.isUndirected(edge)\n        )\n      );\n    };\n    getter.fromEntry = function (e, a, s, t, sa, ta, u) {\n      return coerceToDefault(nameOrFunction(e, a, s, t, sa, ta, u));\n    };\n    getter.fromPartialEntry = function (e, a, s, t) {\n      return coerceToDefault(nameOrFunction(e, a, s, t));\n    };\n    getter.fromMinimalEntry = function (e, a) {\n      return coerceToDefault(nameOrFunction(e, a));\n    };\n  } else {\n    getter.fromAttributes = returnDefault;\n    getter.fromGraph = returnDefault;\n    getter.fromEntry = returnDefault;\n    getter.fromMinimalEntry = returnDefault;\n  }\n\n  return getter;\n}\n\nexports.createNodeValueGetter = createNodeValueGetter;\nexports.createEdgeValueGetter = createEdgeValueGetter;\nexports.createEdgeWeightGetter = function (name) {\n  return createEdgeValueGetter(name, coerceWeight);\n};\n","/* eslint no-constant-condition: 0 */\n/**\n * Graphology ForceAtlas2 Iteration\n * =================================\n *\n * Function used to perform a single iteration of the algorithm.\n */\n\n/**\n * Matrices properties accessors.\n */\nvar NODE_X = 0;\nvar NODE_Y = 1;\nvar NODE_DX = 2;\nvar NODE_DY = 3;\nvar NODE_OLD_DX = 4;\nvar NODE_OLD_DY = 5;\nvar NODE_MASS = 6;\nvar NODE_CONVERGENCE = 7;\nvar NODE_SIZE = 8;\nvar NODE_FIXED = 9;\n\nvar EDGE_SOURCE = 0;\nvar EDGE_TARGET = 1;\nvar EDGE_WEIGHT = 2;\n\nvar REGION_NODE = 0;\nvar REGION_CENTER_X = 1;\nvar REGION_CENTER_Y = 2;\nvar REGION_SIZE = 3;\nvar REGION_NEXT_SIBLING = 4;\nvar REGION_FIRST_CHILD = 5;\nvar REGION_MASS = 6;\nvar REGION_MASS_CENTER_X = 7;\nvar REGION_MASS_CENTER_Y = 8;\n\nvar SUBDIVISION_ATTEMPTS = 3;\n\n/**\n * Constants.\n */\nvar PPN = 10;\nvar PPE = 3;\nvar PPR = 9;\n\nvar MAX_FORCE = 10;\n\n/**\n * Function used to perform a single interation of the algorithm.\n *\n * @param  {object}       options    - Layout options.\n * @param  {Float32Array} NodeMatrix - Node data.\n * @param  {Float32Array} EdgeMatrix - Edge data.\n * @return {object}                  - Some metadata.\n */\nmodule.exports = function iterate(options, NodeMatrix, EdgeMatrix) {\n  // Initializing variables\n  var l, r, n, n1, n2, rn, e, w, g, s;\n\n  var order = NodeMatrix.length,\n    size = EdgeMatrix.length;\n\n  var adjustSizes = options.adjustSizes;\n\n  var thetaSquared = options.barnesHutTheta * options.barnesHutTheta;\n\n  var outboundAttCompensation, coefficient, xDist, yDist, ewc, distance, factor;\n\n  var RegionMatrix = [];\n\n  // 1) Initializing layout data\n  //-----------------------------\n\n  // Resetting positions & computing max values\n  for (n = 0; n < order; n += PPN) {\n    NodeMatrix[n + NODE_OLD_DX] = NodeMatrix[n + NODE_DX];\n    NodeMatrix[n + NODE_OLD_DY] = NodeMatrix[n + NODE_DY];\n    NodeMatrix[n + NODE_DX] = 0;\n    NodeMatrix[n + NODE_DY] = 0;\n  }\n\n  // If outbound attraction distribution, compensate\n  if (options.outboundAttractionDistribution) {\n    outboundAttCompensation = 0;\n    for (n = 0; n < order; n += PPN) {\n      outboundAttCompensation += NodeMatrix[n + NODE_MASS];\n    }\n\n    outboundAttCompensation /= order / PPN;\n  }\n\n  // 1.bis) Barnes-Hut computation\n  //------------------------------\n\n  if (options.barnesHutOptimize) {\n    // Setting up\n    var minX = Infinity,\n      maxX = -Infinity,\n      minY = Infinity,\n      maxY = -Infinity,\n      q,\n      q2,\n      subdivisionAttempts;\n\n    // Computing min and max values\n    for (n = 0; n < order; n += PPN) {\n      minX = Math.min(minX, NodeMatrix[n + NODE_X]);\n      maxX = Math.max(maxX, NodeMatrix[n + NODE_X]);\n      minY = Math.min(minY, NodeMatrix[n + NODE_Y]);\n      maxY = Math.max(maxY, NodeMatrix[n + NODE_Y]);\n    }\n\n    // squarify bounds, it's a quadtree\n    var dx = maxX - minX,\n      dy = maxY - minY;\n    if (dx > dy) {\n      minY -= (dx - dy) / 2;\n      maxY = minY + dx;\n    } else {\n      minX -= (dy - dx) / 2;\n      maxX = minX + dy;\n    }\n\n    // Build the Barnes Hut root region\n    RegionMatrix[0 + REGION_NODE] = -1;\n    RegionMatrix[0 + REGION_CENTER_X] = (minX + maxX) / 2;\n    RegionMatrix[0 + REGION_CENTER_Y] = (minY + maxY) / 2;\n    RegionMatrix[0 + REGION_SIZE] = Math.max(maxX - minX, maxY - minY);\n    RegionMatrix[0 + REGION_NEXT_SIBLING] = -1;\n    RegionMatrix[0 + REGION_FIRST_CHILD] = -1;\n    RegionMatrix[0 + REGION_MASS] = 0;\n    RegionMatrix[0 + REGION_MASS_CENTER_X] = 0;\n    RegionMatrix[0 + REGION_MASS_CENTER_Y] = 0;\n\n    // Add each node in the tree\n    l = 1;\n    for (n = 0; n < order; n += PPN) {\n      // Current region, starting with root\n      r = 0;\n      subdivisionAttempts = SUBDIVISION_ATTEMPTS;\n\n      while (true) {\n        // Are there sub-regions?\n\n        // We look at first child index\n        if (RegionMatrix[r + REGION_FIRST_CHILD] >= 0) {\n          // There are sub-regions\n\n          // We just iterate to find a \"leaf\" of the tree\n          // that is an empty region or a region with a single node\n          // (see next case)\n\n          // Find the quadrant of n\n          if (NodeMatrix[n + NODE_X] < RegionMatrix[r + REGION_CENTER_X]) {\n            if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n              // Top Left quarter\n              q = RegionMatrix[r + REGION_FIRST_CHILD];\n            } else {\n              // Bottom Left quarter\n              q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR;\n            }\n          } else {\n            if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n              // Top Right quarter\n              q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 2;\n            } else {\n              // Bottom Right quarter\n              q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 3;\n            }\n          }\n\n          // Update center of mass and mass (we only do it for non-leave regions)\n          RegionMatrix[r + REGION_MASS_CENTER_X] =\n            (RegionMatrix[r + REGION_MASS_CENTER_X] *\n              RegionMatrix[r + REGION_MASS] +\n              NodeMatrix[n + NODE_X] * NodeMatrix[n + NODE_MASS]) /\n            (RegionMatrix[r + REGION_MASS] + NodeMatrix[n + NODE_MASS]);\n\n          RegionMatrix[r + REGION_MASS_CENTER_Y] =\n            (RegionMatrix[r + REGION_MASS_CENTER_Y] *\n              RegionMatrix[r + REGION_MASS] +\n              NodeMatrix[n + NODE_Y] * NodeMatrix[n + NODE_MASS]) /\n            (RegionMatrix[r + REGION_MASS] + NodeMatrix[n + NODE_MASS]);\n\n          RegionMatrix[r + REGION_MASS] += NodeMatrix[n + NODE_MASS];\n\n          // Iterate on the right quadrant\n          r = q;\n          continue;\n        } else {\n          // There are no sub-regions: we are in a \"leaf\"\n\n          // Is there a node in this leave?\n          if (RegionMatrix[r + REGION_NODE] < 0) {\n            // There is no node in region:\n            // we record node n and go on\n            RegionMatrix[r + REGION_NODE] = n;\n            break;\n          } else {\n            // There is a node in this region\n\n            // We will need to create sub-regions, stick the two\n            // nodes (the old one r[0] and the new one n) in two\n            // subregions. If they fall in the same quadrant,\n            // we will iterate.\n\n            // Create sub-regions\n            RegionMatrix[r + REGION_FIRST_CHILD] = l * PPR;\n            w = RegionMatrix[r + REGION_SIZE] / 2; // new size (half)\n\n            // NOTE: we use screen coordinates\n            // from Top Left to Bottom Right\n\n            // Top Left sub-region\n            g = RegionMatrix[r + REGION_FIRST_CHILD];\n\n            RegionMatrix[g + REGION_NODE] = -1;\n            RegionMatrix[g + REGION_CENTER_X] =\n              RegionMatrix[r + REGION_CENTER_X] - w;\n            RegionMatrix[g + REGION_CENTER_Y] =\n              RegionMatrix[r + REGION_CENTER_Y] - w;\n            RegionMatrix[g + REGION_SIZE] = w;\n            RegionMatrix[g + REGION_NEXT_SIBLING] = g + PPR;\n            RegionMatrix[g + REGION_FIRST_CHILD] = -1;\n            RegionMatrix[g + REGION_MASS] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_X] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;\n\n            // Bottom Left sub-region\n            g += PPR;\n            RegionMatrix[g + REGION_NODE] = -1;\n            RegionMatrix[g + REGION_CENTER_X] =\n              RegionMatrix[r + REGION_CENTER_X] - w;\n            RegionMatrix[g + REGION_CENTER_Y] =\n              RegionMatrix[r + REGION_CENTER_Y] + w;\n            RegionMatrix[g + REGION_SIZE] = w;\n            RegionMatrix[g + REGION_NEXT_SIBLING] = g + PPR;\n            RegionMatrix[g + REGION_FIRST_CHILD] = -1;\n            RegionMatrix[g + REGION_MASS] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_X] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;\n\n            // Top Right sub-region\n            g += PPR;\n            RegionMatrix[g + REGION_NODE] = -1;\n            RegionMatrix[g + REGION_CENTER_X] =\n              RegionMatrix[r + REGION_CENTER_X] + w;\n            RegionMatrix[g + REGION_CENTER_Y] =\n              RegionMatrix[r + REGION_CENTER_Y] - w;\n            RegionMatrix[g + REGION_SIZE] = w;\n            RegionMatrix[g + REGION_NEXT_SIBLING] = g + PPR;\n            RegionMatrix[g + REGION_FIRST_CHILD] = -1;\n            RegionMatrix[g + REGION_MASS] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_X] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;\n\n            // Bottom Right sub-region\n            g += PPR;\n            RegionMatrix[g + REGION_NODE] = -1;\n            RegionMatrix[g + REGION_CENTER_X] =\n              RegionMatrix[r + REGION_CENTER_X] + w;\n            RegionMatrix[g + REGION_CENTER_Y] =\n              RegionMatrix[r + REGION_CENTER_Y] + w;\n            RegionMatrix[g + REGION_SIZE] = w;\n            RegionMatrix[g + REGION_NEXT_SIBLING] =\n              RegionMatrix[r + REGION_NEXT_SIBLING];\n            RegionMatrix[g + REGION_FIRST_CHILD] = -1;\n            RegionMatrix[g + REGION_MASS] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_X] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;\n\n            l += 4;\n\n            // Now the goal is to find two different sub-regions\n            // for the two nodes: the one previously recorded (r[0])\n            // and the one we want to add (n)\n\n            // Find the quadrant of the old node\n            if (\n              NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_X] <\n              RegionMatrix[r + REGION_CENTER_X]\n            ) {\n              if (\n                NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_Y] <\n                RegionMatrix[r + REGION_CENTER_Y]\n              ) {\n                // Top Left quarter\n                q = RegionMatrix[r + REGION_FIRST_CHILD];\n              } else {\n                // Bottom Left quarter\n                q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR;\n              }\n            } else {\n              if (\n                NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_Y] <\n                RegionMatrix[r + REGION_CENTER_Y]\n              ) {\n                // Top Right quarter\n                q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 2;\n              } else {\n                // Bottom Right quarter\n                q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 3;\n              }\n            }\n\n            // We remove r[0] from the region r, add its mass to r and record it in q\n            RegionMatrix[r + REGION_MASS] =\n              NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_MASS];\n            RegionMatrix[r + REGION_MASS_CENTER_X] =\n              NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_X];\n            RegionMatrix[r + REGION_MASS_CENTER_Y] =\n              NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_Y];\n\n            RegionMatrix[q + REGION_NODE] = RegionMatrix[r + REGION_NODE];\n            RegionMatrix[r + REGION_NODE] = -1;\n\n            // Find the quadrant of n\n            if (NodeMatrix[n + NODE_X] < RegionMatrix[r + REGION_CENTER_X]) {\n              if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n                // Top Left quarter\n                q2 = RegionMatrix[r + REGION_FIRST_CHILD];\n              } else {\n                // Bottom Left quarter\n                q2 = RegionMatrix[r + REGION_FIRST_CHILD] + PPR;\n              }\n            } else {\n              if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n                // Top Right quarter\n                q2 = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 2;\n              } else {\n                // Bottom Right quarter\n                q2 = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 3;\n              }\n            }\n\n            if (q === q2) {\n              // If both nodes are in the same quadrant,\n              // we have to try it again on this quadrant\n              if (subdivisionAttempts--) {\n                r = q;\n                continue; // while\n              } else {\n                // we are out of precision here, and we cannot subdivide anymore\n                // but we have to break the loop anyway\n                subdivisionAttempts = SUBDIVISION_ATTEMPTS;\n                break; // while\n              }\n            }\n\n            // If both quadrants are different, we record n\n            // in its quadrant\n            RegionMatrix[q2 + REGION_NODE] = n;\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  // 2) Repulsion\n  //--------------\n  // NOTES: adjustSizes = antiCollision & scalingRatio = coefficient\n\n  if (options.barnesHutOptimize) {\n    coefficient = options.scalingRatio;\n\n    // Applying repulsion through regions\n    for (n = 0; n < order; n += PPN) {\n      // Computing leaf quad nodes iteration\n\n      r = 0; // Starting with root region\n      while (true) {\n        if (RegionMatrix[r + REGION_FIRST_CHILD] >= 0) {\n          // The region has sub-regions\n\n          // We run the Barnes Hut test to see if we are at the right distance\n          distance =\n            Math.pow(\n              NodeMatrix[n + NODE_X] - RegionMatrix[r + REGION_MASS_CENTER_X],\n              2\n            ) +\n            Math.pow(\n              NodeMatrix[n + NODE_Y] - RegionMatrix[r + REGION_MASS_CENTER_Y],\n              2\n            );\n\n          s = RegionMatrix[r + REGION_SIZE];\n\n          if ((4 * s * s) / distance < thetaSquared) {\n            // We treat the region as a single body, and we repulse\n\n            xDist =\n              NodeMatrix[n + NODE_X] - RegionMatrix[r + REGION_MASS_CENTER_X];\n            yDist =\n              NodeMatrix[n + NODE_Y] - RegionMatrix[r + REGION_MASS_CENTER_Y];\n\n            if (adjustSizes === true) {\n              //-- Linear Anti-collision Repulsion\n              if (distance > 0) {\n                factor =\n                  (coefficient *\n                    NodeMatrix[n + NODE_MASS] *\n                    RegionMatrix[r + REGION_MASS]) /\n                  distance;\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              } else if (distance < 0) {\n                factor =\n                  (-coefficient *\n                    NodeMatrix[n + NODE_MASS] *\n                    RegionMatrix[r + REGION_MASS]) /\n                  Math.sqrt(distance);\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              }\n            } else {\n              //-- Linear Repulsion\n              if (distance > 0) {\n                factor =\n                  (coefficient *\n                    NodeMatrix[n + NODE_MASS] *\n                    RegionMatrix[r + REGION_MASS]) /\n                  distance;\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              }\n            }\n\n            // When this is done, we iterate. We have to look at the next sibling.\n            r = RegionMatrix[r + REGION_NEXT_SIBLING];\n            if (r < 0) break; // No next sibling: we have finished the tree\n\n            continue;\n          } else {\n            // The region is too close and we have to look at sub-regions\n            r = RegionMatrix[r + REGION_FIRST_CHILD];\n            continue;\n          }\n        } else {\n          // The region has no sub-region\n          // If there is a node r[0] and it is not n, then repulse\n          rn = RegionMatrix[r + REGION_NODE];\n\n          if (rn >= 0 && rn !== n) {\n            xDist = NodeMatrix[n + NODE_X] - NodeMatrix[rn + NODE_X];\n            yDist = NodeMatrix[n + NODE_Y] - NodeMatrix[rn + NODE_Y];\n\n            distance = xDist * xDist + yDist * yDist;\n\n            if (adjustSizes === true) {\n              //-- Linear Anti-collision Repulsion\n              if (distance > 0) {\n                factor =\n                  (coefficient *\n                    NodeMatrix[n + NODE_MASS] *\n                    NodeMatrix[rn + NODE_MASS]) /\n                  distance;\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              } else if (distance < 0) {\n                factor =\n                  (-coefficient *\n                    NodeMatrix[n + NODE_MASS] *\n                    NodeMatrix[rn + NODE_MASS]) /\n                  Math.sqrt(distance);\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              }\n            } else {\n              //-- Linear Repulsion\n              if (distance > 0) {\n                factor =\n                  (coefficient *\n                    NodeMatrix[n + NODE_MASS] *\n                    NodeMatrix[rn + NODE_MASS]) /\n                  distance;\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              }\n            }\n          }\n\n          // When this is done, we iterate. We have to look at the next sibling.\n          r = RegionMatrix[r + REGION_NEXT_SIBLING];\n\n          if (r < 0) break; // No next sibling: we have finished the tree\n\n          continue;\n        }\n      }\n    }\n  } else {\n    coefficient = options.scalingRatio;\n\n    // Square iteration\n    for (n1 = 0; n1 < order; n1 += PPN) {\n      for (n2 = 0; n2 < n1; n2 += PPN) {\n        // Common to both methods\n        xDist = NodeMatrix[n1 + NODE_X] - NodeMatrix[n2 + NODE_X];\n        yDist = NodeMatrix[n1 + NODE_Y] - NodeMatrix[n2 + NODE_Y];\n\n        if (adjustSizes === true) {\n          //-- Anticollision Linear Repulsion\n          distance =\n            Math.sqrt(xDist * xDist + yDist * yDist) -\n            NodeMatrix[n1 + NODE_SIZE] -\n            NodeMatrix[n2 + NODE_SIZE];\n\n          if (distance > 0) {\n            factor =\n              (coefficient *\n                NodeMatrix[n1 + NODE_MASS] *\n                NodeMatrix[n2 + NODE_MASS]) /\n              distance /\n              distance;\n\n            // Updating nodes' dx and dy\n            NodeMatrix[n1 + NODE_DX] += xDist * factor;\n            NodeMatrix[n1 + NODE_DY] += yDist * factor;\n\n            NodeMatrix[n2 + NODE_DX] -= xDist * factor;\n            NodeMatrix[n2 + NODE_DY] -= yDist * factor;\n          } else if (distance < 0) {\n            factor =\n              100 *\n              coefficient *\n              NodeMatrix[n1 + NODE_MASS] *\n              NodeMatrix[n2 + NODE_MASS];\n\n            // Updating nodes' dx and dy\n            NodeMatrix[n1 + NODE_DX] += xDist * factor;\n            NodeMatrix[n1 + NODE_DY] += yDist * factor;\n\n            NodeMatrix[n2 + NODE_DX] -= xDist * factor;\n            NodeMatrix[n2 + NODE_DY] -= yDist * factor;\n          }\n        } else {\n          //-- Linear Repulsion\n          distance = Math.sqrt(xDist * xDist + yDist * yDist);\n\n          if (distance > 0) {\n            factor =\n              (coefficient *\n                NodeMatrix[n1 + NODE_MASS] *\n                NodeMatrix[n2 + NODE_MASS]) /\n              distance /\n              distance;\n\n            // Updating nodes' dx and dy\n            NodeMatrix[n1 + NODE_DX] += xDist * factor;\n            NodeMatrix[n1 + NODE_DY] += yDist * factor;\n\n            NodeMatrix[n2 + NODE_DX] -= xDist * factor;\n            NodeMatrix[n2 + NODE_DY] -= yDist * factor;\n          }\n        }\n      }\n    }\n  }\n\n  // 3) Gravity\n  //------------\n  g = options.gravity / options.scalingRatio;\n  coefficient = options.scalingRatio;\n  for (n = 0; n < order; n += PPN) {\n    factor = 0;\n\n    // Common to both methods\n    xDist = NodeMatrix[n + NODE_X];\n    yDist = NodeMatrix[n + NODE_Y];\n    distance = Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2));\n\n    if (options.strongGravityMode) {\n      //-- Strong gravity\n      if (distance > 0) factor = coefficient * NodeMatrix[n + NODE_MASS] * g;\n    } else {\n      //-- Linear Anti-collision Repulsion n\n      if (distance > 0)\n        factor = (coefficient * NodeMatrix[n + NODE_MASS] * g) / distance;\n    }\n\n    // Updating node's dx and dy\n    NodeMatrix[n + NODE_DX] -= xDist * factor;\n    NodeMatrix[n + NODE_DY] -= yDist * factor;\n  }\n\n  // 4) Attraction\n  //---------------\n  coefficient =\n    1 * (options.outboundAttractionDistribution ? outboundAttCompensation : 1);\n\n  // TODO: simplify distance\n  // TODO: coefficient is always used as -c --> optimize?\n  for (e = 0; e < size; e += PPE) {\n    n1 = EdgeMatrix[e + EDGE_SOURCE];\n    n2 = EdgeMatrix[e + EDGE_TARGET];\n    w = EdgeMatrix[e + EDGE_WEIGHT];\n\n    // Edge weight influence\n    ewc = Math.pow(w, options.edgeWeightInfluence);\n\n    // Common measures\n    xDist = NodeMatrix[n1 + NODE_X] - NodeMatrix[n2 + NODE_X];\n    yDist = NodeMatrix[n1 + NODE_Y] - NodeMatrix[n2 + NODE_Y];\n\n    // Applying attraction to nodes\n    if (adjustSizes === true) {\n      distance =\n        Math.sqrt(xDist * xDist + yDist * yDist) -\n        NodeMatrix[n1 + NODE_SIZE] -\n        NodeMatrix[n2 + NODE_SIZE];\n\n      if (options.linLogMode) {\n        if (options.outboundAttractionDistribution) {\n          //-- LinLog Degree Distributed Anti-collision Attraction\n          if (distance > 0) {\n            factor =\n              (-coefficient * ewc * Math.log(1 + distance)) /\n              distance /\n              NodeMatrix[n1 + NODE_MASS];\n          }\n        } else {\n          //-- LinLog Anti-collision Attraction\n          if (distance > 0) {\n            factor = (-coefficient * ewc * Math.log(1 + distance)) / distance;\n          }\n        }\n      } else {\n        if (options.outboundAttractionDistribution) {\n          //-- Linear Degree Distributed Anti-collision Attraction\n          if (distance > 0) {\n            factor = (-coefficient * ewc) / NodeMatrix[n1 + NODE_MASS];\n          }\n        } else {\n          //-- Linear Anti-collision Attraction\n          if (distance > 0) {\n            factor = -coefficient * ewc;\n          }\n        }\n      }\n    } else {\n      distance = Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2));\n\n      if (options.linLogMode) {\n        if (options.outboundAttractionDistribution) {\n          //-- LinLog Degree Distributed Attraction\n          if (distance > 0) {\n            factor =\n              (-coefficient * ewc * Math.log(1 + distance)) /\n              distance /\n              NodeMatrix[n1 + NODE_MASS];\n          }\n        } else {\n          //-- LinLog Attraction\n          if (distance > 0)\n            factor = (-coefficient * ewc * Math.log(1 + distance)) / distance;\n        }\n      } else {\n        if (options.outboundAttractionDistribution) {\n          //-- Linear Attraction Mass Distributed\n          // NOTE: Distance is set to 1 to override next condition\n          distance = 1;\n          factor = (-coefficient * ewc) / NodeMatrix[n1 + NODE_MASS];\n        } else {\n          //-- Linear Attraction\n          // NOTE: Distance is set to 1 to override next condition\n          distance = 1;\n          factor = -coefficient * ewc;\n        }\n      }\n    }\n\n    // Updating nodes' dx and dy\n    // TODO: if condition or factor = 1?\n    if (distance > 0) {\n      // Updating nodes' dx and dy\n      NodeMatrix[n1 + NODE_DX] += xDist * factor;\n      NodeMatrix[n1 + NODE_DY] += yDist * factor;\n\n      NodeMatrix[n2 + NODE_DX] -= xDist * factor;\n      NodeMatrix[n2 + NODE_DY] -= yDist * factor;\n    }\n  }\n\n  // 5) Apply Forces\n  //-----------------\n  var force, swinging, traction, nodespeed, newX, newY;\n\n  // MATH: sqrt and square distances\n  if (adjustSizes === true) {\n    for (n = 0; n < order; n += PPN) {\n      if (NodeMatrix[n + NODE_FIXED] !== 1) {\n        force = Math.sqrt(\n          Math.pow(NodeMatrix[n + NODE_DX], 2) +\n            Math.pow(NodeMatrix[n + NODE_DY], 2)\n        );\n\n        if (force > MAX_FORCE) {\n          NodeMatrix[n + NODE_DX] =\n            (NodeMatrix[n + NODE_DX] * MAX_FORCE) / force;\n          NodeMatrix[n + NODE_DY] =\n            (NodeMatrix[n + NODE_DY] * MAX_FORCE) / force;\n        }\n\n        swinging =\n          NodeMatrix[n + NODE_MASS] *\n          Math.sqrt(\n            (NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) *\n              (NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) +\n              (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY]) *\n                (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY])\n          );\n\n        traction =\n          Math.sqrt(\n            (NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) *\n              (NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) +\n              (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY]) *\n                (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY])\n          ) / 2;\n\n        nodespeed = (0.1 * Math.log(1 + traction)) / (1 + Math.sqrt(swinging));\n\n        // Updating node's positon\n        newX =\n          NodeMatrix[n + NODE_X] +\n          NodeMatrix[n + NODE_DX] * (nodespeed / options.slowDown);\n        NodeMatrix[n + NODE_X] = newX;\n\n        newY =\n          NodeMatrix[n + NODE_Y] +\n          NodeMatrix[n + NODE_DY] * (nodespeed / options.slowDown);\n        NodeMatrix[n + NODE_Y] = newY;\n      }\n    }\n  } else {\n    for (n = 0; n < order; n += PPN) {\n      if (NodeMatrix[n + NODE_FIXED] !== 1) {\n        swinging =\n          NodeMatrix[n + NODE_MASS] *\n          Math.sqrt(\n            (NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) *\n              (NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) +\n              (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY]) *\n                (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY])\n          );\n\n        traction =\n          Math.sqrt(\n            (NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) *\n              (NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) +\n              (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY]) *\n                (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY])\n          ) / 2;\n\n        nodespeed =\n          (NodeMatrix[n + NODE_CONVERGENCE] * Math.log(1 + traction)) /\n          (1 + Math.sqrt(swinging));\n\n        // Updating node convergence\n        NodeMatrix[n + NODE_CONVERGENCE] = Math.min(\n          1,\n          Math.sqrt(\n            (nodespeed *\n              (Math.pow(NodeMatrix[n + NODE_DX], 2) +\n                Math.pow(NodeMatrix[n + NODE_DY], 2))) /\n              (1 + Math.sqrt(swinging))\n          )\n        );\n\n        // Updating node's positon\n        newX =\n          NodeMatrix[n + NODE_X] +\n          NodeMatrix[n + NODE_DX] * (nodespeed / options.slowDown);\n        NodeMatrix[n + NODE_X] = newX;\n\n        newY =\n          NodeMatrix[n + NODE_Y] +\n          NodeMatrix[n + NODE_DY] * (nodespeed / options.slowDown);\n        NodeMatrix[n + NODE_Y] = newY;\n      }\n    }\n  }\n\n  // We return the information about the layout (no need to return the matrices)\n  return {};\n};\n","/**\n * Graphology ForceAtlas2 Helpers\n * ===============================\n *\n * Miscellaneous helper functions.\n */\n\n/**\n * Constants.\n */\nvar PPN = 10;\nvar PPE = 3;\n\n/**\n * Very simple Object.assign-like function.\n *\n * @param  {object} target       - First object.\n * @param  {object} [...objects] - Objects to merge.\n * @return {object}\n */\nexports.assign = function (target) {\n  target = target || {};\n\n  var objects = Array.prototype.slice.call(arguments).slice(1),\n    i,\n    k,\n    l;\n\n  for (i = 0, l = objects.length; i < l; i++) {\n    if (!objects[i]) continue;\n\n    for (k in objects[i]) target[k] = objects[i][k];\n  }\n\n  return target;\n};\n\n/**\n * Function used to validate the given settings.\n *\n * @param  {object}      settings - Settings to validate.\n * @return {object|null}\n */\nexports.validateSettings = function (settings) {\n  if ('linLogMode' in settings && typeof settings.linLogMode !== 'boolean')\n    return {message: 'the `linLogMode` setting should be a boolean.'};\n\n  if (\n    'outboundAttractionDistribution' in settings &&\n    typeof settings.outboundAttractionDistribution !== 'boolean'\n  )\n    return {\n      message:\n        'the `outboundAttractionDistribution` setting should be a boolean.'\n    };\n\n  if ('adjustSizes' in settings && typeof settings.adjustSizes !== 'boolean')\n    return {message: 'the `adjustSizes` setting should be a boolean.'};\n\n  if (\n    'edgeWeightInfluence' in settings &&\n    typeof settings.edgeWeightInfluence !== 'number'\n  )\n    return {\n      message: 'the `edgeWeightInfluence` setting should be a number.'\n    };\n\n  if (\n    'scalingRatio' in settings &&\n    !(typeof settings.scalingRatio === 'number' && settings.scalingRatio >= 0)\n  )\n    return {message: 'the `scalingRatio` setting should be a number >= 0.'};\n\n  if (\n    'strongGravityMode' in settings &&\n    typeof settings.strongGravityMode !== 'boolean'\n  )\n    return {message: 'the `strongGravityMode` setting should be a boolean.'};\n\n  if (\n    'gravity' in settings &&\n    !(typeof settings.gravity === 'number' && settings.gravity >= 0)\n  )\n    return {message: 'the `gravity` setting should be a number >= 0.'};\n\n  if (\n    'slowDown' in settings &&\n    !(typeof settings.slowDown === 'number' || settings.slowDown >= 0)\n  )\n    return {message: 'the `slowDown` setting should be a number >= 0.'};\n\n  if (\n    'barnesHutOptimize' in settings &&\n    typeof settings.barnesHutOptimize !== 'boolean'\n  )\n    return {message: 'the `barnesHutOptimize` setting should be a boolean.'};\n\n  if (\n    'barnesHutTheta' in settings &&\n    !(\n      typeof settings.barnesHutTheta === 'number' &&\n      settings.barnesHutTheta >= 0\n    )\n  )\n    return {message: 'the `barnesHutTheta` setting should be a number >= 0.'};\n\n  return null;\n};\n\n/**\n * Function generating a flat matrix for both nodes & edges of the given graph.\n *\n * @param  {Graph}    graph         - Target graph.\n * @param  {function} getEdgeWeight - Edge weight getter function.\n * @return {object}                 - Both matrices.\n */\nexports.graphToByteArrays = function (graph, getEdgeWeight) {\n  var order = graph.order;\n  var size = graph.size;\n  var index = {};\n  var j;\n\n  // NOTE: float32 could lead to issues if edge array needs to index large\n  // number of nodes.\n  var NodeMatrix = new Float32Array(order * PPN);\n  var EdgeMatrix = new Float32Array(size * PPE);\n\n  // Iterate through nodes\n  j = 0;\n  graph.forEachNode(function (node, attr) {\n    // Node index\n    index[node] = j;\n\n    // Populating byte array\n    NodeMatrix[j] = attr.x;\n    NodeMatrix[j + 1] = attr.y;\n    NodeMatrix[j + 2] = 0; // dx\n    NodeMatrix[j + 3] = 0; // dy\n    NodeMatrix[j + 4] = 0; // old_dx\n    NodeMatrix[j + 5] = 0; // old_dy\n    NodeMatrix[j + 6] = 1; // mass\n    NodeMatrix[j + 7] = 1; // convergence\n    NodeMatrix[j + 8] = attr.size || 1;\n    NodeMatrix[j + 9] = attr.fixed ? 1 : 0;\n    j += PPN;\n  });\n\n  // Iterate through edges\n  j = 0;\n  graph.forEachEdge(function (edge, attr, source, target, sa, ta, u) {\n    var sj = index[source];\n    var tj = index[target];\n\n    var weight = getEdgeWeight(edge, attr, source, target, sa, ta, u);\n\n    // Incrementing mass to be a node's weighted degree\n    NodeMatrix[sj + 6] += weight;\n    NodeMatrix[tj + 6] += weight;\n\n    // Populating byte array\n    EdgeMatrix[j] = sj;\n    EdgeMatrix[j + 1] = tj;\n    EdgeMatrix[j + 2] = weight;\n    j += PPE;\n  });\n\n  return {\n    nodes: NodeMatrix,\n    edges: EdgeMatrix\n  };\n};\n\n/**\n * Function applying the layout back to the graph.\n *\n * @param {Graph}         graph         - Target graph.\n * @param {Float32Array}  NodeMatrix    - Node matrix.\n * @param {function|null} outputReducer - A node reducer.\n */\nexports.assignLayoutChanges = function (graph, NodeMatrix, outputReducer) {\n  var i = 0;\n\n  graph.updateEachNodeAttributes(function (node, attr) {\n    attr.x = NodeMatrix[i];\n    attr.y = NodeMatrix[i + 1];\n\n    i += PPN;\n\n    return outputReducer ? outputReducer(node, attr) : attr;\n  });\n};\n\n/**\n * Function reading the positions (only) from the graph, to write them in the matrix.\n *\n * @param {Graph}        graph      - Target graph.\n * @param {Float32Array} NodeMatrix - Node matrix.\n */\nexports.readGraphPositions = function (graph, NodeMatrix) {\n  var i = 0;\n\n  graph.forEachNode(function (node, attr) {\n    NodeMatrix[i] = attr.x;\n    NodeMatrix[i + 1] = attr.y;\n\n    i += PPN;\n  });\n};\n\n/**\n * Function collecting the layout positions.\n *\n * @param  {Graph}         graph         - Target graph.\n * @param  {Float32Array}  NodeMatrix    - Node matrix.\n * @param  {function|null} outputReducer - A nodes reducer.\n * @return {object}                      - Map to node positions.\n */\nexports.collectLayoutChanges = function (graph, NodeMatrix, outputReducer) {\n  var nodes = graph.nodes(),\n    positions = {};\n\n  for (var i = 0, j = 0, l = NodeMatrix.length; i < l; i += PPN) {\n    if (outputReducer) {\n      var newAttr = Object.assign({}, graph.getNodeAttributes(nodes[j]));\n      newAttr.x = NodeMatrix[i];\n      newAttr.y = NodeMatrix[i + 1];\n      newAttr = outputReducer(nodes[j], newAttr);\n      positions[nodes[j]] = {\n        x: newAttr.x,\n        y: newAttr.y\n      };\n    } else {\n      positions[nodes[j]] = {\n        x: NodeMatrix[i],\n        y: NodeMatrix[i + 1]\n      };\n    }\n\n    j++;\n  }\n\n  return positions;\n};\n\n/**\n * Function returning a web worker from the given function.\n *\n * @param  {function}  fn - Function for the worker.\n * @return {DOMString}\n */\nexports.createWorker = function createWorker(fn) {\n  var xURL = window.URL || window.webkitURL;\n  var code = fn.toString();\n  var objectUrl = xURL.createObjectURL(\n    new Blob(['(' + code + ').call(this);'], {type: 'text/javascript'})\n  );\n  var worker = new Worker(objectUrl);\n  xURL.revokeObjectURL(objectUrl);\n\n  return worker;\n};\n","/**\n * Graphology ForceAtlas2 Layout Default Settings\n * ===============================================\n */\nmodule.exports = {\n  linLogMode: false,\n  outboundAttractionDistribution: false,\n  adjustSizes: false,\n  edgeWeightInfluence: 1,\n  scalingRatio: 1,\n  strongGravityMode: false,\n  gravity: 1,\n  slowDown: 1,\n  barnesHutOptimize: false,\n  barnesHutTheta: 0.5\n};\n","// src/visualizer_multiverse.ts\nimport Graph from 'graphology';\nimport { PatternDescriptor, S_Level } from './shared_types';\nimport forceAtlas2 from 'graphology-layout-forceatlas2';\n\nfunction getSLevelColor(level: S_Level): string {\n    switch (level) {\n        case S_Level.S0_Vacuum: return '#495057'; \n        case S_Level.S1_SimpleFixedPoint: return '#6c757d'; \n        case S_Level.S2_RecursiveStructure: return '#007bff'; \n        case S_Level.S3_DynamicEquilibrium: return '#ffc107'; \n        case S_Level.S4_CompositeStability: return '#28a745'; \n        default: return '#ced4da'; \n    }\n}\n\nexport function drawMultiverse(universes: { descriptor: PatternDescriptor, graphJson: string }[], canvas: HTMLCanvasElement) {\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n        console.error(\"Failed to get 2D context from canvas for drawMultiverse\");\n        return;\n    }\n\n    const width = canvas.width;\n    const height = canvas.height;\n    ctx.clearRect(0, 0, width, height);\n\n    if (universes.length === 0) return;\n\n    const multiverseGraph = new Graph(); \n    universes.forEach((uni, i) => {\n        const complexity = uni.descriptor.C.toNumber();\n        const size = Math.max(3, Math.log(complexity + 1) * 2.5 + 3); \n        const color = getSLevelColor(uni.descriptor.S.level);\n        \n        multiverseGraph.addNode(i.toString(), { \n            size: size,\n            color: color,\n            x: (Math.random() - 0.5) * width * 0.4, \n            y: (Math.random() - 0.5) * height * 0.4,\n            originalDescriptor: uni.descriptor \n        });\n    });\n\n    if (multiverseGraph.order > 1) {\n        try {\n            forceAtlas2.assign(multiverseGraph, { \n                iterations: Math.max(50, Math.min(150, multiverseGraph.order * 2)), \n                settings: { \n                    gravity: Math.max(1.0, multiverseGraph.order * 0.05), \n                    scalingRatio: Math.min(width, height) / Math.max(10, Math.sqrt(multiverseGraph.order) * 15), \n                    barnesHutOptimize: multiverseGraph.order > 75,\n                    barnesHutTheta: 0.8,\n                    strongGravityMode: true, \n                    slowDown: 1 + Math.log10(multiverseGraph.order +1),\n                    adjustSizes: true,\n                } \n            });\n        } catch (e) {\n            console.error(\"Multiverse ForceAtlas2 layout failed:\", e);\n        }\n    }\n\n    multiverseGraph.forEachNode((_node, attrs) => {\n        const x = attrs.x + width / 2; \n        const y = attrs.y + height / 2;\n        \n        ctx.beginPath();\n        ctx.arc(x, y, attrs.size, 0, 2 * Math.PI);\n        ctx.fillStyle = attrs.color;\n        ctx.globalAlpha = 0.75; \n        ctx.fill();\n        ctx.strokeStyle = 'rgba(255, 255, 255, 0.4)'; \n        ctx.lineWidth = 0.5;\n        ctx.stroke();\n    });\n    ctx.globalAlpha = 1.0;\n}","/* @license\nPapa Parse\nv5.5.3\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\n((e,t)=>{\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof module&&\"undefined\"!=typeof exports?module.exports=t():e.Papa=t()})(this,function r(){var n=\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:void 0!==n?n:{};var d,s=!n.document&&!!n.postMessage,a=n.IS_PAPA_WORKER||!1,o={},h=0,v={};function u(e){this._handle=null,this._finished=!1,this._completed=!1,this._halted=!1,this._input=null,this._baseIndex=0,this._partialLine=\"\",this._rowCount=0,this._start=0,this._nextChunk=null,this.isFirstChunk=!0,this._completeResults={data:[],errors:[],meta:{}},function(e){var t=b(e);t.chunkSize=parseInt(t.chunkSize),e.step||e.chunk||(t.chunkSize=null);this._handle=new i(t),(this._handle.streamer=this)._config=t}.call(this,e),this.parseChunk=function(t,e){var i=parseInt(this._config.skipFirstNLines)||0;if(this.isFirstChunk&&0<i){let e=this._config.newline;e||(r=this._config.quoteChar||'\"',e=this._handle.guessLineEndings(t,r)),t=[...t.split(e).slice(i)].join(e)}this.isFirstChunk&&U(this._config.beforeFirstChunk)&&void 0!==(r=this._config.beforeFirstChunk(t))&&(t=r),this.isFirstChunk=!1,this._halted=!1;var i=this._partialLine+t,r=(this._partialLine=\"\",this._handle.parse(i,this._baseIndex,!this._finished));if(!this._handle.paused()&&!this._handle.aborted()){t=r.meta.cursor,i=(this._finished||(this._partialLine=i.substring(t-this._baseIndex),this._baseIndex=t),r&&r.data&&(this._rowCount+=r.data.length),this._finished||this._config.preview&&this._rowCount>=this._config.preview);if(a)n.postMessage({results:r,workerId:v.WORKER_ID,finished:i});else if(U(this._config.chunk)&&!e){if(this._config.chunk(r,this._handle),this._handle.paused()||this._handle.aborted())return void(this._halted=!0);this._completeResults=r=void 0}return this._config.step||this._config.chunk||(this._completeResults.data=this._completeResults.data.concat(r.data),this._completeResults.errors=this._completeResults.errors.concat(r.errors),this._completeResults.meta=r.meta),this._completed||!i||!U(this._config.complete)||r&&r.meta.aborted||(this._config.complete(this._completeResults,this._input),this._completed=!0),i||r&&r.meta.paused||this._nextChunk(),r}this._halted=!0},this._sendError=function(e){U(this._config.error)?this._config.error(e):a&&this._config.error&&n.postMessage({workerId:v.WORKER_ID,error:e,finished:!1})}}function f(e){var r;(e=e||{}).chunkSize||(e.chunkSize=v.RemoteChunkSize),u.call(this,e),this._nextChunk=s?function(){this._readChunk(),this._chunkLoaded()}:function(){this._readChunk()},this.stream=function(e){this._input=e,this._nextChunk()},this._readChunk=function(){if(this._finished)this._chunkLoaded();else{if(r=new XMLHttpRequest,this._config.withCredentials&&(r.withCredentials=this._config.withCredentials),s||(r.onload=y(this._chunkLoaded,this),r.onerror=y(this._chunkError,this)),r.open(this._config.downloadRequestBody?\"POST\":\"GET\",this._input,!s),this._config.downloadRequestHeaders){var e,t=this._config.downloadRequestHeaders;for(e in t)r.setRequestHeader(e,t[e])}var i;this._config.chunkSize&&(i=this._start+this._config.chunkSize-1,r.setRequestHeader(\"Range\",\"bytes=\"+this._start+\"-\"+i));try{r.send(this._config.downloadRequestBody)}catch(e){this._chunkError(e.message)}s&&0===r.status&&this._chunkError()}},this._chunkLoaded=function(){4===r.readyState&&(r.status<200||400<=r.status?this._chunkError():(this._start+=this._config.chunkSize||r.responseText.length,this._finished=!this._config.chunkSize||this._start>=(e=>null!==(e=e.getResponseHeader(\"Content-Range\"))?parseInt(e.substring(e.lastIndexOf(\"/\")+1)):-1)(r),this.parseChunk(r.responseText)))},this._chunkError=function(e){e=r.statusText||e;this._sendError(new Error(e))}}function l(e){(e=e||{}).chunkSize||(e.chunkSize=v.LocalChunkSize),u.call(this,e);var i,r,n=\"undefined\"!=typeof FileReader;this.stream=function(e){this._input=e,r=e.slice||e.webkitSlice||e.mozSlice,n?((i=new FileReader).onload=y(this._chunkLoaded,this),i.onerror=y(this._chunkError,this)):i=new FileReaderSync,this._nextChunk()},this._nextChunk=function(){this._finished||this._config.preview&&!(this._rowCount<this._config.preview)||this._readChunk()},this._readChunk=function(){var e=this._input,t=(this._config.chunkSize&&(t=Math.min(this._start+this._config.chunkSize,this._input.size),e=r.call(e,this._start,t)),i.readAsText(e,this._config.encoding));n||this._chunkLoaded({target:{result:t}})},this._chunkLoaded=function(e){this._start+=this._config.chunkSize,this._finished=!this._config.chunkSize||this._start>=this._input.size,this.parseChunk(e.target.result)},this._chunkError=function(){this._sendError(i.error)}}function c(e){var i;u.call(this,e=e||{}),this.stream=function(e){return i=e,this._nextChunk()},this._nextChunk=function(){var e,t;if(!this._finished)return e=this._config.chunkSize,i=e?(t=i.substring(0,e),i.substring(e)):(t=i,\"\"),this._finished=!i,this.parseChunk(t)}}function p(e){u.call(this,e=e||{});var t=[],i=!0,r=!1;this.pause=function(){u.prototype.pause.apply(this,arguments),this._input.pause()},this.resume=function(){u.prototype.resume.apply(this,arguments),this._input.resume()},this.stream=function(e){this._input=e,this._input.on(\"data\",this._streamData),this._input.on(\"end\",this._streamEnd),this._input.on(\"error\",this._streamError)},this._checkIsFinished=function(){r&&1===t.length&&(this._finished=!0)},this._nextChunk=function(){this._checkIsFinished(),t.length?this.parseChunk(t.shift()):i=!0},this._streamData=y(function(e){try{t.push(\"string\"==typeof e?e:e.toString(this._config.encoding)),i&&(i=!1,this._checkIsFinished(),this.parseChunk(t.shift()))}catch(e){this._streamError(e)}},this),this._streamError=y(function(e){this._streamCleanUp(),this._sendError(e)},this),this._streamEnd=y(function(){this._streamCleanUp(),r=!0,this._streamData(\"\")},this),this._streamCleanUp=y(function(){this._input.removeListener(\"data\",this._streamData),this._input.removeListener(\"end\",this._streamEnd),this._input.removeListener(\"error\",this._streamError)},this)}function i(m){var n,s,a,t,o=Math.pow(2,53),h=-o,u=/^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)([eE][-+]?\\d+)?\\s*$/,d=/^((\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z)))$/,i=this,r=0,f=0,l=!1,e=!1,c=[],p={data:[],errors:[],meta:{}};function y(e){return\"greedy\"===m.skipEmptyLines?\"\"===e.join(\"\").trim():1===e.length&&0===e[0].length}function g(){if(p&&a&&(k(\"Delimiter\",\"UndetectableDelimiter\",\"Unable to auto-detect delimiting character; defaulted to '\"+v.DefaultDelimiter+\"'\"),a=!1),m.skipEmptyLines&&(p.data=p.data.filter(function(e){return!y(e)})),_()){if(p)if(Array.isArray(p.data[0])){for(var e=0;_()&&e<p.data.length;e++)p.data[e].forEach(t);p.data.splice(0,1)}else p.data.forEach(t);function t(e,t){U(m.transformHeader)&&(e=m.transformHeader(e,t)),c.push(e)}}function i(e,t){for(var i=m.header?{}:[],r=0;r<e.length;r++){var n=r,s=e[r],s=((e,t)=>(e=>(m.dynamicTypingFunction&&void 0===m.dynamicTyping[e]&&(m.dynamicTyping[e]=m.dynamicTypingFunction(e)),!0===(m.dynamicTyping[e]||m.dynamicTyping)))(e)?\"true\"===t||\"TRUE\"===t||\"false\"!==t&&\"FALSE\"!==t&&((e=>{if(u.test(e)){e=parseFloat(e);if(h<e&&e<o)return 1}})(t)?parseFloat(t):d.test(t)?new Date(t):\"\"===t?null:t):t)(n=m.header?r>=c.length?\"__parsed_extra\":c[r]:n,s=m.transform?m.transform(s,n):s);\"__parsed_extra\"===n?(i[n]=i[n]||[],i[n].push(s)):i[n]=s}return m.header&&(r>c.length?k(\"FieldMismatch\",\"TooManyFields\",\"Too many fields: expected \"+c.length+\" fields but parsed \"+r,f+t):r<c.length&&k(\"FieldMismatch\",\"TooFewFields\",\"Too few fields: expected \"+c.length+\" fields but parsed \"+r,f+t)),i}var r;p&&(m.header||m.dynamicTyping||m.transform)&&(r=1,!p.data.length||Array.isArray(p.data[0])?(p.data=p.data.map(i),r=p.data.length):p.data=i(p.data,0),m.header&&p.meta&&(p.meta.fields=c),f+=r)}function _(){return m.header&&0===c.length}function k(e,t,i,r){e={type:e,code:t,message:i};void 0!==r&&(e.row=r),p.errors.push(e)}U(m.step)&&(t=m.step,m.step=function(e){p=e,_()?g():(g(),0!==p.data.length&&(r+=e.data.length,m.preview&&r>m.preview?s.abort():(p.data=p.data[0],t(p,i))))}),this.parse=function(e,t,i){var r=m.quoteChar||'\"',r=(m.newline||(m.newline=this.guessLineEndings(e,r)),a=!1,m.delimiter?U(m.delimiter)&&(m.delimiter=m.delimiter(e),p.meta.delimiter=m.delimiter):((r=((e,t,i,r,n)=>{var s,a,o,h;n=n||[\",\",\"\\t\",\"|\",\";\",v.RECORD_SEP,v.UNIT_SEP];for(var u=0;u<n.length;u++){for(var d,f=n[u],l=0,c=0,p=0,g=(o=void 0,new E({comments:r,delimiter:f,newline:t,preview:10}).parse(e)),_=0;_<g.data.length;_++)i&&y(g.data[_])?p++:(d=g.data[_].length,c+=d,void 0===o?o=d:0<d&&(l+=Math.abs(d-o),o=d));0<g.data.length&&(c/=g.data.length-p),(void 0===a||l<=a)&&(void 0===h||h<c)&&1.99<c&&(a=l,s=f,h=c)}return{successful:!!(m.delimiter=s),bestDelimiter:s}})(e,m.newline,m.skipEmptyLines,m.comments,m.delimitersToGuess)).successful?m.delimiter=r.bestDelimiter:(a=!0,m.delimiter=v.DefaultDelimiter),p.meta.delimiter=m.delimiter),b(m));return m.preview&&m.header&&r.preview++,n=e,s=new E(r),p=s.parse(n,t,i),g(),l?{meta:{paused:!0}}:p||{meta:{paused:!1}}},this.paused=function(){return l},this.pause=function(){l=!0,s.abort(),n=U(m.chunk)?\"\":n.substring(s.getCharIndex())},this.resume=function(){i.streamer._halted?(l=!1,i.streamer.parseChunk(n,!0)):setTimeout(i.resume,3)},this.aborted=function(){return e},this.abort=function(){e=!0,s.abort(),p.meta.aborted=!0,U(m.complete)&&m.complete(p),n=\"\"},this.guessLineEndings=function(e,t){e=e.substring(0,1048576);var t=new RegExp(P(t)+\"([^]*?)\"+P(t),\"gm\"),i=(e=e.replace(t,\"\")).split(\"\\r\"),t=e.split(\"\\n\"),e=1<t.length&&t[0].length<i[0].length;if(1===i.length||e)return\"\\n\";for(var r=0,n=0;n<i.length;n++)\"\\n\"===i[n][0]&&r++;return r>=i.length/2?\"\\r\\n\":\"\\r\"}}function P(e){return e.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\")}function E(C){var S=(C=C||{}).delimiter,O=C.newline,x=C.comments,I=C.step,A=C.preview,T=C.fastMode,D=null,L=!1,F=null==C.quoteChar?'\"':C.quoteChar,j=F;if(void 0!==C.escapeChar&&(j=C.escapeChar),(\"string\"!=typeof S||-1<v.BAD_DELIMITERS.indexOf(S))&&(S=\",\"),x===S)throw new Error(\"Comment character same as delimiter\");!0===x?x=\"#\":(\"string\"!=typeof x||-1<v.BAD_DELIMITERS.indexOf(x))&&(x=!1),\"\\n\"!==O&&\"\\r\"!==O&&\"\\r\\n\"!==O&&(O=\"\\n\");var z=0,M=!1;this.parse=function(i,t,r){if(\"string\"!=typeof i)throw new Error(\"Input must be a string\");var n=i.length,e=S.length,s=O.length,a=x.length,o=U(I),h=[],u=[],d=[],f=z=0;if(!i)return w();if(T||!1!==T&&-1===i.indexOf(F)){for(var l=i.split(O),c=0;c<l.length;c++){if(d=l[c],z+=d.length,c!==l.length-1)z+=O.length;else if(r)return w();if(!x||d.substring(0,a)!==x){if(o){if(h=[],k(d.split(S)),R(),M)return w()}else k(d.split(S));if(A&&A<=c)return h=h.slice(0,A),w(!0)}}return w()}for(var p=i.indexOf(S,z),g=i.indexOf(O,z),_=new RegExp(P(j)+P(F),\"g\"),m=i.indexOf(F,z);;)if(i[z]===F)for(m=z,z++;;){if(-1===(m=i.indexOf(F,m+1)))return r||u.push({type:\"Quotes\",code:\"MissingQuotes\",message:\"Quoted field unterminated\",row:h.length,index:z}),E();if(m===n-1)return E(i.substring(z,m).replace(_,F));if(F===j&&i[m+1]===j)m++;else if(F===j||0===m||i[m-1]!==j){-1!==p&&p<m+1&&(p=i.indexOf(S,m+1));var y=v(-1===(g=-1!==g&&g<m+1?i.indexOf(O,m+1):g)?p:Math.min(p,g));if(i.substr(m+1+y,e)===S){d.push(i.substring(z,m).replace(_,F)),i[z=m+1+y+e]!==F&&(m=i.indexOf(F,z)),p=i.indexOf(S,z),g=i.indexOf(O,z);break}y=v(g);if(i.substring(m+1+y,m+1+y+s)===O){if(d.push(i.substring(z,m).replace(_,F)),b(m+1+y+s),p=i.indexOf(S,z),m=i.indexOf(F,z),o&&(R(),M))return w();if(A&&h.length>=A)return w(!0);break}u.push({type:\"Quotes\",code:\"InvalidQuotes\",message:\"Trailing quote on quoted field is malformed\",row:h.length,index:z}),m++}}else if(x&&0===d.length&&i.substring(z,z+a)===x){if(-1===g)return w();z=g+s,g=i.indexOf(O,z),p=i.indexOf(S,z)}else if(-1!==p&&(p<g||-1===g))d.push(i.substring(z,p)),z=p+e,p=i.indexOf(S,z);else{if(-1===g)break;if(d.push(i.substring(z,g)),b(g+s),o&&(R(),M))return w();if(A&&h.length>=A)return w(!0)}return E();function k(e){h.push(e),f=z}function v(e){var t=0;return t=-1!==e&&(e=i.substring(m+1,e))&&\"\"===e.trim()?e.length:t}function E(e){return r||(void 0===e&&(e=i.substring(z)),d.push(e),z=n,k(d),o&&R()),w()}function b(e){z=e,k(d),d=[],g=i.indexOf(O,z)}function w(e){if(C.header&&!t&&h.length&&!L){var s=h[0],a=Object.create(null),o=new Set(s);let n=!1;for(let r=0;r<s.length;r++){let i=s[r];if(a[i=U(C.transformHeader)?C.transformHeader(i,r):i]){let e,t=a[i];for(;e=i+\"_\"+t,t++,o.has(e););o.add(e),s[r]=e,a[i]++,n=!0,(D=null===D?{}:D)[e]=i}else a[i]=1,s[r]=i;o.add(i)}n&&console.warn(\"Duplicate headers found and renamed.\"),L=!0}return{data:h,errors:u,meta:{delimiter:S,linebreak:O,aborted:M,truncated:!!e,cursor:f+(t||0),renamedHeaders:D}}}function R(){I(w()),h=[],u=[]}},this.abort=function(){M=!0},this.getCharIndex=function(){return z}}function g(e){var t=e.data,i=o[t.workerId],r=!1;if(t.error)i.userError(t.error,t.file);else if(t.results&&t.results.data){var n={abort:function(){r=!0,_(t.workerId,{data:[],errors:[],meta:{aborted:!0}})},pause:m,resume:m};if(U(i.userStep)){for(var s=0;s<t.results.data.length&&(i.userStep({data:t.results.data[s],errors:t.results.errors,meta:t.results.meta},n),!r);s++);delete t.results}else U(i.userChunk)&&(i.userChunk(t.results,n,t.file),delete t.results)}t.finished&&!r&&_(t.workerId,t.results)}function _(e,t){var i=o[e];U(i.userComplete)&&i.userComplete(t),i.terminate(),delete o[e]}function m(){throw new Error(\"Not implemented.\")}function b(e){if(\"object\"!=typeof e||null===e)return e;var t,i=Array.isArray(e)?[]:{};for(t in e)i[t]=b(e[t]);return i}function y(e,t){return function(){e.apply(t,arguments)}}function U(e){return\"function\"==typeof e}return v.parse=function(e,t){var i=(t=t||{}).dynamicTyping||!1;U(i)&&(t.dynamicTypingFunction=i,i={});if(t.dynamicTyping=i,t.transform=!!U(t.transform)&&t.transform,!t.worker||!v.WORKERS_SUPPORTED)return i=null,v.NODE_STREAM_INPUT,\"string\"==typeof e?(e=(e=>65279!==e.charCodeAt(0)?e:e.slice(1))(e),i=new(t.download?f:c)(t)):!0===e.readable&&U(e.read)&&U(e.on)?i=new p(t):(n.File&&e instanceof File||e instanceof Object)&&(i=new l(t)),i.stream(e);(i=(()=>{var e;return!!v.WORKERS_SUPPORTED&&(e=(()=>{var e=n.URL||n.webkitURL||null,t=r.toString();return v.BLOB_URL||(v.BLOB_URL=e.createObjectURL(new Blob([\"var global = (function() { if (typeof self !== 'undefined') { return self; } if (typeof window !== 'undefined') { return window; } if (typeof global !== 'undefined') { return global; } return {}; })(); global.IS_PAPA_WORKER=true; \",\"(\",t,\")();\"],{type:\"text/javascript\"})))})(),(e=new n.Worker(e)).onmessage=g,e.id=h++,o[e.id]=e)})()).userStep=t.step,i.userChunk=t.chunk,i.userComplete=t.complete,i.userError=t.error,t.step=U(t.step),t.chunk=U(t.chunk),t.complete=U(t.complete),t.error=U(t.error),delete t.worker,i.postMessage({input:e,config:t,workerId:i.id})},v.unparse=function(e,t){var n=!1,_=!0,m=\",\",y=\"\\r\\n\",s='\"',a=s+s,i=!1,r=null,o=!1,h=((()=>{if(\"object\"==typeof t){if(\"string\"!=typeof t.delimiter||v.BAD_DELIMITERS.filter(function(e){return-1!==t.delimiter.indexOf(e)}).length||(m=t.delimiter),\"boolean\"!=typeof t.quotes&&\"function\"!=typeof t.quotes&&!Array.isArray(t.quotes)||(n=t.quotes),\"boolean\"!=typeof t.skipEmptyLines&&\"string\"!=typeof t.skipEmptyLines||(i=t.skipEmptyLines),\"string\"==typeof t.newline&&(y=t.newline),\"string\"==typeof t.quoteChar&&(s=t.quoteChar),\"boolean\"==typeof t.header&&(_=t.header),Array.isArray(t.columns)){if(0===t.columns.length)throw new Error(\"Option columns is empty\");r=t.columns}void 0!==t.escapeChar&&(a=t.escapeChar+s),t.escapeFormulae instanceof RegExp?o=t.escapeFormulae:\"boolean\"==typeof t.escapeFormulae&&t.escapeFormulae&&(o=/^[=+\\-@\\t\\r].*$/)}})(),new RegExp(P(s),\"g\"));\"string\"==typeof e&&(e=JSON.parse(e));if(Array.isArray(e)){if(!e.length||Array.isArray(e[0]))return u(null,e,i);if(\"object\"==typeof e[0])return u(r||Object.keys(e[0]),e,i)}else if(\"object\"==typeof e)return\"string\"==typeof e.data&&(e.data=JSON.parse(e.data)),Array.isArray(e.data)&&(e.fields||(e.fields=e.meta&&e.meta.fields||r),e.fields||(e.fields=Array.isArray(e.data[0])?e.fields:\"object\"==typeof e.data[0]?Object.keys(e.data[0]):[]),Array.isArray(e.data[0])||\"object\"==typeof e.data[0]||(e.data=[e.data])),u(e.fields||[],e.data||[],i);throw new Error(\"Unable to serialize unrecognized input\");function u(e,t,i){var r=\"\",n=(\"string\"==typeof e&&(e=JSON.parse(e)),\"string\"==typeof t&&(t=JSON.parse(t)),Array.isArray(e)&&0<e.length),s=!Array.isArray(t[0]);if(n&&_){for(var a=0;a<e.length;a++)0<a&&(r+=m),r+=k(e[a],a);0<t.length&&(r+=y)}for(var o=0;o<t.length;o++){var h=(n?e:t[o]).length,u=!1,d=n?0===Object.keys(t[o]).length:0===t[o].length;if(i&&!n&&(u=\"greedy\"===i?\"\"===t[o].join(\"\").trim():1===t[o].length&&0===t[o][0].length),\"greedy\"===i&&n){for(var f=[],l=0;l<h;l++){var c=s?e[l]:l;f.push(t[o][c])}u=\"\"===f.join(\"\").trim()}if(!u){for(var p=0;p<h;p++){0<p&&!d&&(r+=m);var g=n&&s?e[p]:p;r+=k(t[o][g],p)}o<t.length-1&&(!i||0<h&&!d)&&(r+=y)}}return r}function k(e,t){var i,r;return null==e?\"\":e.constructor===Date?JSON.stringify(e).slice(1,25):(r=!1,o&&\"string\"==typeof e&&o.test(e)&&(e=\"'\"+e,r=!0),i=e.toString().replace(h,a),(r=r||!0===n||\"function\"==typeof n&&n(e,t)||Array.isArray(n)&&n[t]||((e,t)=>{for(var i=0;i<t.length;i++)if(-1<e.indexOf(t[i]))return!0;return!1})(i,v.BAD_DELIMITERS)||-1<i.indexOf(m)||\" \"===i.charAt(0)||\" \"===i.charAt(i.length-1))?s+i+s:i)}},v.RECORD_SEP=String.fromCharCode(30),v.UNIT_SEP=String.fromCharCode(31),v.BYTE_ORDER_MARK=\"\\ufeff\",v.BAD_DELIMITERS=[\"\\r\",\"\\n\",'\"',v.BYTE_ORDER_MARK],v.WORKERS_SUPPORTED=!s&&!!n.Worker,v.NODE_STREAM_INPUT=1,v.LocalChunkSize=10485760,v.RemoteChunkSize=5242880,v.DefaultDelimiter=\",\",v.Parser=E,v.ParserHandle=i,v.NetworkStreamer=f,v.FileStreamer=l,v.StringStreamer=c,v.ReadableStreamStreamer=p,n.jQuery&&((d=n.jQuery).fn.parse=function(o){var i=o.config||{},h=[];return this.each(function(e){if(!(\"INPUT\"===d(this).prop(\"tagName\").toUpperCase()&&\"file\"===d(this).attr(\"type\").toLowerCase()&&n.FileReader)||!this.files||0===this.files.length)return!0;for(var t=0;t<this.files.length;t++)h.push({file:this.files[t],inputElem:this,instanceConfig:d.extend({},i)})}),e(),this;function e(){if(0===h.length)U(o.complete)&&o.complete();else{var e,t,i,r,n=h[0];if(U(o.before)){var s=o.before(n.file,n.inputElem);if(\"object\"==typeof s){if(\"abort\"===s.action)return e=\"AbortError\",t=n.file,i=n.inputElem,r=s.reason,void(U(o.error)&&o.error({name:e},t,i,r));if(\"skip\"===s.action)return void u();\"object\"==typeof s.config&&(n.instanceConfig=d.extend(n.instanceConfig,s.config))}else if(\"skip\"===s)return void u()}var a=n.instanceConfig.complete;n.instanceConfig.complete=function(e){U(a)&&a(e,n.file,n.inputElem),u()},v.parse(n.file,n.instanceConfig)}}function u(){h.splice(0,1),e()}}),a&&(n.onmessage=function(e){e=e.data;void 0===v.WORKER_ID&&e&&(v.WORKER_ID=e.workerId);\"string\"==typeof e.input?n.postMessage({workerId:v.WORKER_ID,results:v.parse(e.input,e.config),finished:!0}):(n.File&&e.input instanceof File||e.input instanceof Object)&&(e=v.parse(e.input,e.config))&&n.postMessage({workerId:v.WORKER_ID,results:e,finished:!0})}),(f.prototype=Object.create(u.prototype)).constructor=f,(l.prototype=Object.create(u.prototype)).constructor=l,(c.prototype=Object.create(c.prototype)).constructor=c,(p.prototype=Object.create(u.prototype)).constructor=p,v});"],"names":["assign","target","arguments","i","l","length","k","getMatchingEdge","graph","source","type","sourceData","_nodes","get","edge","out","undirected","isPlainObject","value","_typeof","isEmpty","o","privateProperty","name","Object","defineProperty","enumerable","configurable","writable","readOnlyProperty","descriptor","validateHints","hints","attributes","Array","isArray","ReflectOwnKeys","R","Reflect","ReflectApply","apply","receiver","args","Function","prototype","call","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","Number","isNaN","EventEmitter","init","this","eventsModule","exports","events","once","emitter","Promise","resolve","reject","errorListener","err","removeListener","resolver","slice","eventTargetAgnosticAddListener","handler","flags","on","addErrorHandlerIfEventEmitter","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","_getMaxListeners","that","_addListener","prepend","m","existing","warning","create","newListener","emit","unshift","push","warned","w","Error","String","count","console","warn","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","arr","ret","unwrapListeners","arrayClone","listenerCount","n","copy","addEventListener","wrapListener","arg","removeEventListener","Iterator","next","set","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","message","context","len","listeners","addListener","prependListener","prependOnceListener","list","position","originalListener","shift","index","pop","spliceOne","off","removeAllListeners","key","keys","rawListeners","eventNames","Symbol","iterator","Iterator$2","of","done","empty","fromSequence","sequence","is","support","ARRAY_BUFFER_SUPPORT","ArrayBuffer","SYMBOL_SUPPORT","require$$0","require$$1","iter","isView","iterOrNull","take","iterable","step","Infinity","array","GraphError","_Error","_this","_inheritsLoose","_wrapNativeSuper","InvalidArgumentsGraphError","_GraphError","_this2","captureStackTrace","constructor","NotFoundGraphError","_GraphError2","_this3","UsageGraphError","_GraphError3","_this4","MixedNodeData","clear","DirectedNodeData","UndirectedNodeData","EdgeData","inDegree","outDegree","undirectedDegree","undirectedLoops","directedLoops","attach","outKey","inKey","attachMulti","adj","head","previous","detach","detachMulti","findRelevantNodeData","method","mode","nodeOrEdge","nameOrEdge","add1","add2","nodeData","edgeData","arg1","arg2","_edges","NODE_ATTRIBUTES_METHODS","element","attacher","Class","_findRelevantNodeData","data","_findRelevantNodeData3","hasOwnProperty","_findRelevantNodeData4","_findRelevantNodeData5","updater","_findRelevantNodeData6","_findRelevantNodeData7","_findRelevantNodeData8","_findRelevantNodeData9","EDGE_ATTRIBUTES_METHODS","multi","chain","iterables","current","EDGES_ITERATION","direction","forEachSimple","breakable","object","callback","avoid","shouldBreak","forEachMulti","createIterator","sourceAttributes","targetAttributes","forEachForKeySimple","targetData","forEachForKeyMulti","createIteratorForKey","createEdgeArray","size","from","undirectedSize","directedSize","mask","values","forEachEdge","shouldFilter","_data","createEdgeIterator","forEachEdgeForNode","found","fn","createEdgeArrayForNode","edges","createEdgeIteratorForNode","forEachEdgeForPath","createEdgeArrayForPath","createEdgeIteratorForPath","NEIGHBORS_ITERATION","CompositeSetWrapper","A","B","forEachInObjectOnce","visited","neighborData","has","forEachNeighbor","wrap","createDedupedObjectIterator","neighbor","attachNeighborArrayCreator","description","node","neighbors","createNeighborArrayForNode","attachNeighborIteratorCreator","iteratorName","createNeighborIterator","forEachAdjacency","assymetric","disconnectedNodes","hasEdges","validateSerializedNode","validateSerializedEdge","INSTANCE_ID","Math","floor","random","TYPES","Set","EMITTER_PROPS","DEFAULTS","allowSelfLoops","unsafeAddNode","NodeDataClass","addEdge","mustGenerateKey","eventData","_edgeKeyGenerator","isSelfLoop","_undirectedSelfLoopCount","_directedSelfLoopCount","_undirectedSize","_directedSize","mergeEdge","asUpdater","alreadyExistingEdgeData","info","oldAttributes","sourceWasAdded","targetWasAdded","dropEdgeFromData","Graph","_EventEmitter","options","_assertThisInitialized","instancePrefix","edgeId","Map","availableEdgeKey","forEach","prop","_options","_proto","_resetInstanceCounters","hasNode","hasDirectedEdge","hasUndirectedEdge","hasEdge","directedEdge","undirectedEdge","areDirectedNeighbors","areOutNeighbors","areInNeighbors","areUndirectedNeighbors","areNeighbors","areInboundNeighbors","areOutboundNeighbors","directedDegree","inboundDegree","degree","outboundDegree","inDegreeWithoutSelfLoops","outDegreeWithoutSelfLoops","directedDegreeWithoutSelfLoops","undirectedDegreeWithoutSelfLoops","inboundDegreeWithoutSelfLoops","loops","outboundDegreeWithoutSelfLoops","degreeWithoutSelfLoops","extremities","opposite","hasExtremity","isUndirected","isDirected","addNode","mergeNode","updateNode","dropNode","dropEdge","dropDirectedEdge","dropUndirectedEdge","clearEdges","getAttribute","_attributes","getAttributes","hasAttribute","setAttribute","updateAttribute","removeAttribute","replaceAttributes","mergeAttributes","updateAttributes","updateEachNodeAttributes","updateEachEdgeAttributes","forEachAdjacencyEntry","forEachAdjacencyEntryWithOrphans","forEachAssymetricAdjacencyEntry","forEachAssymetricAdjacencyEntryWithOrphans","nodes","forEachNode","findNode","mapNodes","result","order","someNode","everyNode","filterNodes","reduceNodes","initialValue","accumulator","nodeEntries","serialized","serializeNode","serializeEdge","merge","a","e","s","t","_sa","_ta","u","mergeUndirectedEdgeWithKey","mergeDirectedEdgeWithKey","addUndirectedEdgeWithKey","addDirectedEdgeWithKey","_node","undirectedByDefault","_edge","_edge$undirected","mergeUndirectedEdge","mergeDirectedEdge","addUndirectedEdge","addDirectedEdge","nullCopy","emptyCopy","toJSON","toString","inspect","multiIndex","tmp","label","desc","startsWith","dummy","verb","generateKey","_ref","attachNodeAttributesMethods","attachEdgeAttributesMethods","attachEdgeArrayCreator","forEachName","toUpperCase","mapName","ea","sa","ta","filterName","reduceName","attachForEachEdge","findEdgeName","someName","everyName","attachFindEdge","originalName","attachEdgeIteratorCreator","attachEdgeIterationMethods","attachForEachNeighbor","capitalizedSingular","findName","attachFindNeighbor","attachNeighborIterationMethods","DirectedGraph","_Graph","finalOptions","UndirectedGraph","_Graph2","MultiGraph","_Graph3","MultiDirectedGraph","_Graph4","MultiUndirectedGraph","_Graph5","attachStaticFromMethod","instance"],"version":3,"file":"mvu2-sim.0f289648.js.map","sourceRoot":"/__parcel_source_root/"}